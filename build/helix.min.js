!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define("HX",["exports"],e):e(t.HX=t.HX||{})}(this,function(t){"use strict";function e(){this._listeners=[],this._lookUp={}}function i(){this._isRunning=!1,this._dt=0,this._currentTime=0,this._tickFunc=this._tick.bind(this),this.onTick=new e}function n(t,e,i,n){this.r=0,this.g=0,this.b=0,this.a=1,this.set(t,e,i,n)}function r(){this._blurShader=null,this._numBlurPasses=1,this._cullMode=jn.FRONT}function o(){r.call(this)}function s(t,e){this.x=t||0,this.y=e||0}function a(t,e,i,n){this._mode=void 0===t?a.CIRCULAR:t,this._initialDistance=e||1,this._decayFactor=i||.99,this._maxTests=n||2e4,this._currentDistance=0,this._points=null,this.reset()}function h(t,e,i,n){this.x=t||0,this.y=e||0,this.z=i||0,this.w=void 0===n?1:n}function _(t,e,i,n){this._mode=void 0===t?_.SPHERICAL:t,this._initialDistance=e||1,this._decayFactor=i||.99,this._maxTests=n||2e4,this._currentDistance=0,this._points=null,this.reset()}function l(t,e,i,n){this.x=t||0,this.y=e||0,this.z=i||0,this.w=void 0===n?1:n}function c(){this._enabled=!0,this.onChange=new e,this._targets=[]}function u(){this._position=new h(0,0,0,1),this._rotation=new l,this._scale=new h(1,1,1,1),this._matrix=new f,this._changeListener=new c,this._changeListener.add(this._position,"x"),this._changeListener.add(this._position,"y"),this._changeListener.add(this._position,"z"),this._changeListener.add(this._rotation,"x"),this._changeListener.add(this._rotation,"y"),this._changeListener.add(this._rotation,"z"),this._changeListener.add(this._rotation,"w"),this._changeListener.add(this._scale,"x"),this._changeListener.add(this._scale,"y"),this._changeListener.add(this._scale,"z"),this._changeListener.onChange.bind(this._invalidateMatrix,this)}function f(t,e,i,n,r,o,s,a,h,_,l,c,u,f,d,p){if(void 0!==t&&isNaN(t))this._m=new Float32Array(t);else{var m=this._m=new Float32Array(16);m[0]=void 0===t?1:0,m[1]=r||0,m[2]=h||0,m[3]=u||0,m[4]=e||0,m[5]=void 0===o?1:0,m[6]=_||0,m[7]=f||0,m[8]=i||0,m[9]=s||0,m[10]=void 0===l?1:0,m[11]=d||0,m[12]=n||0,m[13]=a||0,m[14]=c||0,m[15]=void 0===p?1:0}}function d(){}function p(){}function m(){}function g(){}function x(){}function v(){}function S(){}function T(){this._matrix=new f}function E(){}function y(){}function w(){}function A(){}function M(){}function P(){}function b(){}function L(){}function R(){}function O(){}function D(){}function I(){}function N(){}function C(){}function F(){}function U(){this._data=new Float32Array(12*On.OPTIONS.maxSkeletonJoints)}function B(){}function H(t,e){this._ready=!1,this._vertexShader=null,this._fragmentShader=null,this._program=null,this._uniformSettersInstance=null,this._uniformSettersPass=null,t&&e&&this.init(t,e)}function X(t){H.call(this),this.init(on.get("copy_vertex.glsl"),t);var e=vn.gl,i=e.getUniformLocation(this._program,"sampler");this._positionAttributeLocation=e.getAttribLocation(this._program,"hx_position"),this._texCoordAttributeLocation=e.getAttribLocation(this._program,"hx_texCoord"),e.useProgram(this._program),e.uniform1i(i,0)}function j(t,e){t=t||"xyzw",e=void 0===e||e;var i="#define extractChannels(src) ((src)."+t+")\n";e&&(i+="#define COPY_ALPHA\n"),X.call(this,i+on.get("copy_fragment.glsl"))}function z(){X.call(this,on.get("copy_to_gamma_fragment.glsl"))}function V(){this._buffer=vn.gl.createBuffer()}function G(){this._buffer=vn.gl.createBuffer()}function k(t,i){this.onLayoutChanged=new e,this._model=null,this._vertexBuffers=[],this._vertexStrides=[],this._vertexData=[],this._indexData=void 0,this._vertexUsage=t||Kn.STATIC_DRAW,this._indexUsage=i||Kn.STATIC_DRAW,this._numStreams=0,this._numVertices=0,this._vertexAttributes=[],this._vertexAttributesLookUp={},this._indexBuffer=new V,this._defaultMorphTarget=null,this._hasMorphNormals=!1,this._renderOrderHint=++Pn}function Y(){this._name=null,this._default=Y.DEFAULT,this._texture=vn.gl.createTexture(),this._width=0,this._height=0,this._format=null,this._dataType=null,this.bind(),this.maxAnisotropy=Un.DEFAULT_TEXTURE_MAX_ANISOTROPY,this.filter=Hn.DEFAULT,this.wrapMode=Xn.DEFAULT,this._isReady=!1,vn.gl.bindTexture(vn.gl.TEXTURE_2D,null)}function W(){this._name=null,this._default=W.DEFAULT,this._texture=vn.gl.createTexture(),this._size=0,this._format=null,this._dataType=null,this.bind(),this.filter=Hn.DEFAULT,this.maxAnisotropy=Un.DEFAULT_TEXTURE_MAX_ANISOTROPY,this._isReady=!1}function Z(t,e,i,n){this.enabled=!0,this.srcFactor=t||kn.ONE,this.dstFactor=e||kn.ZERO,this.operator=i||Yn.ADD,this.alphaSrcFactor=null,this.alphaDstFactor=null,this.alphaOperator=null,this.color=n||null}function q(t,e,i){if(t&&void 0===t[0]&&(t=[t]),this._cubeFace=i,this._colorTextures=t,this._numColorTextures=this._colorTextures?this._colorTextures.length:0,this._depthBuffer=e,this._colorTextures&&this._numColorTextures>1){this._drawBuffers=new Array(this._numColorTextures);for(var n=0;n<this._numColorTextures;++n)this._drawBuffers[n]=Un.EXT_DRAW_BUFFERS.COLOR_ATTACHMENT0_WEBGL+n}else this._drawBuffers=null;this._fbo=vn.gl.createFramebuffer()}function K(t){this.textures=[],this.fbos=[];for(var e=0;e<3;++e){var i=new Y;i.filter=Hn.BILINEAR_NOMIP,i.wrapMode=Xn.CLAMP,this.textures[e]=i,this.fbos[e]=new q(i,t)}Un.GBUFFER_MRT&&(this.mrt=new q(this.textures,t))}function J(){}function Q(){}function $(){}function tt(){}function et(){}function it(){}function nt(){}function rt(){}function ot(){this.location=-1,this.texture=null,this.name=null,this.index=-1}function st(t){this._shader=t,this._textureSlots=[],this._uniforms={},this._elementType=Gn.TRIANGLES,this._cullMode=jn.BACK,this._writeColor=!0,this._depthTest=Vn.LESS_EQUAL,this._writeDepth=!0,this._blendState=null,this._storeUniforms(),this._textureSettersPass=Rn.getSettersPerPass(this),this._textureSettersInstance=Rn.getSettersPerInstance(this),this._useSkinning=!1,this.setTexture("hx_dither2D",Fn.DEFAULT_2D_DITHER_TEXTURE)}function at(){r.call(this)}function ht(){r.call(this)}function _t(){this.maxSkeletonJoints=64,this.ambientOcclusion=null,this.useSkinningTexture=!0,this.hdr=!1,this.useGammaCorrection=!0,this.usePreciseGammaCorrection=!1,this.defaultLightingModel=Sn.Unlit,this.deferredLightingModel=null,this.numShadowCascades=1,this.debug=!1,this.ignoreAllExtensions=!1,this.ignoreDrawBuffersExtension=!1,this.ignoreDepthTexturesExtension=!1,this.ignoreTextureLODExtension=!1,this.ignoreHalfFloatTextureExtension=!1,this.ignoreFloatTextureExtension=!1,this.throwOnShaderError=!1,this.directionalShadowFilter=new o,this.spotShadowFilter=new at,this.pointShadowFilter=new ht,this.transparentBackground=!1}function lt(t,e){function i(t){return s.indexOf(t)>=0?o.getExtension(t):null}if(On.INITIALIZED)throw new Error("Can only initialize Helix once!");On.TARGET_CANVAS=t,t.width=t.clientWidth,t.height=t.clientHeight,On.OPTIONS=e||new _t;var r={antialias:!1,alpha:On.OPTIONS.transparentBackground,depth:!1,stencil:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1},o=t.getContext("webgl",r)||t.getContext("experimental-webgl",r);if(!o)throw new Error("WebGL not supported");vn._setGL(o),On.INITIALIZED=!0;var s=o.getSupportedExtensions();gt();var e=On.OPTIONS,h="";e.useGammaCorrection!==!1&&(h+=On.OPTIONS.usePreciseGammaCorrection?"#define HX_GAMMA_CORRECTION_PRECISE\n":"#define HX_GAMMA_CORRECTION_FAST\n"),h+="#define HX_NUM_SHADOW_CASCADES "+On.OPTIONS.numShadowCascades+"\n",h+="#define HX_MAX_SKELETON_JOINTS "+On.OPTIONS.maxSkeletonJoints+"\n",e.ignoreDrawBuffersExtension=e.ignoreDrawBuffersExtension||e.ignoreAllExtensions,e.ignoreDepthTexturesExtension=e.ignoreDepthTexturesExtension||e.ignoreAllExtensions,e.ignoreTextureLODExtension=e.ignoreTextureLODExtension||e.ignoreAllExtensions,e.ignoreHalfFloatTextureExtension=e.ignoreHalfFloatTextureExtension||e.ignoreAllExtensions,e.ignoreFloatTextureExtension=e.ignoreHalfFloatTextureExtension||e.ignoreAllExtensions,e.ignoreDrawBuffersExtension||(Un.EXT_DRAW_BUFFERS=i("WEBGL_draw_buffers")),Un.EXT_DRAW_BUFFERS&&Un.EXT_DRAW_BUFFERS.MAX_DRAW_BUFFERS_WEBGL>=3&&(Un.GBUFFER_MRT=!0,--st.NUM_PASS_TYPES),e.ignoreFloatTextureExtension||(Un.EXT_FLOAT_TEXTURES=i("OES_texture_float")),Un.EXT_FLOAT_TEXTURES?h+="#define HX_FLOAT_TEXTURES\n":(console.warn("OES_texture_float extension not supported!"),e.useSkinningTexture=!1),e.ignoreHalfFloatTextureExtension||(Un.EXT_HALF_FLOAT_TEXTURES=i("OES_texture_half_float")),Un.EXT_HALF_FLOAT_TEXTURES?h+="#define HX_HALF_FLOAT_TEXTURES\n":console.warn("OES_texture_half_float extension not supported!"),Un.EXT_FLOAT_TEXTURES&&(Un.EXT_FLOAT_TEXTURES_LINEAR=i("OES_texture_float_linear"),Un.EXT_FLOAT_TEXTURES_LINEAR?h+="#define HX_FLOAT_TEXTURES_LINEAR\n":console.warn("OES_texture_float_linear extension not supported!")),Un.EXT_HALF_FLOAT_TEXTURES&&(Un.EXT_HALF_FLOAT_TEXTURES_LINEAR=i("OES_texture_half_float_linear"),Un.EXT_HALF_FLOAT_TEXTURES_LINEAR?(h+="#define HX_HALF_FLOAT_TEXTURES_LINEAR\n",qn.HALF_FLOAT=Un.EXT_HALF_FLOAT_TEXTURES.HALF_FLOAT_OES):console.warn("OES_texture_half_float_linear extension not supported!")),e.ignoreDepthTexturesExtension||(Un.EXT_DEPTH_TEXTURE=i("WEBGL_depth_texture")),Un.EXT_DEPTH_TEXTURE||(console.warn("WEBGL_depth_texture extension not supported!"),h+="#define HX_NO_DEPTH_TEXTURES\n"),Un.EXT_STANDARD_DERIVATIVES=i("OES_standard_derivatives"),Un.EXT_STANDARD_DERIVATIVES||console.warn("OES_standard_derivatives extension not supported!"),e.ignoreTextureLODExtension||(Un.EXT_SHADER_TEXTURE_LOD=i("EXT_shader_texture_lod")),Un.EXT_SHADER_TEXTURE_LOD?h+="#define HX_TEXTURE_LOD\n":console.warn("EXT_shader_texture_lod extension not supported!"),Un.EXT_TEXTURE_FILTER_ANISOTROPIC=i("EXT_texture_filter_anisotropic"),Un.EXT_TEXTURE_FILTER_ANISOTROPIC||console.warn("EXT_texture_filter_anisotropic extension not supported!"),Un.EXT_ELEMENT_INDEX_UINT=i("OES_element_index_uint"),Un.EXT_ELEMENT_INDEX_UINT||console.warn("OES_element_index_uint extension not supported!"),Un.DEFAULT_TEXTURE_MAX_ANISOTROPY=Un.EXT_TEXTURE_FILTER_ANISOTROPIC?o.getParameter(Un.EXT_TEXTURE_FILTER_ANISOTROPIC.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,Un.EXT_HALF_FLOAT_TEXTURES_LINEAR&&Un.EXT_HALF_FLOAT_TEXTURES||(e.hdr=!1),Un.EXT_HALF_FLOAT_TEXTURES&&xt(Un.EXT_HALF_FLOAT_TEXTURES.HALF_FLOAT_OES)?Un.HALF_FLOAT_FBO=!0:(e.hdr=!1,Un.HALF_FLOAT_FBO=!1,console.warn("Half float FBOs not supported")),Un.EXT_FLOAT_TEXTURES&&xt(HX.FLOAT)?Un.FLOAT_FBO=!0:(Un.FLOAT_FBO=!1,console.warn("Half float FBOs not supported")),Un.HDR_FORMAT=e.hdr?Un.EXT_HALF_FLOAT_TEXTURES.HALF_FLOAT_OES:o.UNSIGNED_BYTE,e.useSkinningTexture&&(h+="#define HX_USE_SKINNING_TEXTURE\n",pt()),Y._initDefault(),W._initDefault(),Z._initDefaults(),bn._initDefault(),a._initDefault(),_._initDefault(),Fn.COPY_SHADER=new j,mt(32,32),e.ambientOcclusion&&(h+="#define HX_SSAO\n",e.ambientOcclusion.init()),Tn.GENERAL=h+Tn.GENERAL,vn.setClearColor(n.BLACK),ft()}function ct(t){var e=(performance||Date).now();Dn.dispatch(t),gn(),In.dispatch(t),Nn=(performance||Date).now()-e}function ut(){dt(),On.INITIALIZED=!1,In.unbindAll(),Dn.unbindAll(),vn._setGL(null)}function ft(){Cn.start()}function dt(){Cn.stop()}function pt(){var t=vn.gl;Fn.DEFAULT_SKINNING_TEXTURE=new Y;for(var e=[],i=0;i<On.OPTIONS.maxSkeletonJoints;++i)e.push(1,0,0,0);for(i=0;i<On.OPTIONS.maxSkeletonJoints;++i)e.push(0,1,0,0);for(i=0;i<On.OPTIONS.maxSkeletonJoints;++i)e.push(0,0,1,0);Fn.DEFAULT_SKINNING_TEXTURE.uploadData(new Float32Array(e),On.OPTIONS.maxSkeletonJoints,3,!1,t.RGBA,t.FLOAT),Fn.DEFAULT_SKINNING_TEXTURE.filter=Hn.NEAREST_NOMIP,Fn.DEFAULT_SKINNING_TEXTURE.wrapMode=Xn.CLAMP}function mt(t,e){var i,n=vn.gl,r=t*e,o=1/r,s=[],a=0,h=[];for(i=0;i<r;++i)h.push(i/r);for(sn.shuffle(h),i=0;i<r;++i){var _=h[i]*Math.PI*2,l=Math.cos(_),c=Math.sin(_);s[a++]=l,s[a++]=c,s[a++]=o+h[i],s[a++]=1}if(Fn.DEFAULT_2D_DITHER_TEXTURE=new Y,Fn.DEFAULT_2D_DITHER_TEXTURE.filter=Hn.NEAREST_NOMIP,Fn.DEFAULT_2D_DITHER_TEXTURE.wrapMode=Xn.REPEAT,Un.EXT_FLOAT_TEXTURES)Fn.DEFAULT_2D_DITHER_TEXTURE.uploadData(new Float32Array(s),t,e,!1,n.RGBA,n.FLOAT);else{for(r=s.length,i=0;i<r;++i)s[i]=Math.round(255*(.5*s[i]+.5));Fn.DEFAULT_2D_DITHER_TEXTURE.uploadData(new Uint8Array(s),t,e,!1,n.RGBA,n.UNSIGNED_BYTE)}Fn.DARK_CUBE_TEXTURE=new W;var s=new Uint8Array([0,0,0,0]);s=[s,s,s,s,s,s],Fn.DARK_CUBE_TEXTURE.uploadData(s,1,!0)}function gt(){var t=vn.gl;Hn.NEAREST={min:t.NEAREST_MIPMAP_NEAREST,mag:t.NEAREST},Hn.BILINEAR={min:t.LINEAR_MIPMAP_NEAREST,mag:t.LINEAR},Hn.TRILINEAR={min:t.LINEAR_MIPMAP_LINEAR,mag:t.LINEAR},Un.EXT_TEXTURE_FILTER_ANISOTROPIC&&(Hn.TRILINEAR_ANISOTROPIC={min:t.LINEAR_MIPMAP_LINEAR,mag:t.LINEAR}),Hn.NEAREST_NOMIP={min:t.NEAREST,mag:t.NEAREST},Hn.BILINEAR_NOMIP={min:t.LINEAR,mag:t.LINEAR},Xn.REPEAT={s:t.REPEAT,t:t.REPEAT},Xn.CLAMP={s:t.CLAMP_TO_EDGE,t:t.CLAMP_TO_EDGE},Xn.DEFAULT=Xn.REPEAT,Hn.DEFAULT=Hn.TRILINEAR,zn.KEEP=t.KEEP,zn.ZERO=t.ZERO,zn.REPLACE=t.REPLACE,zn.INCREMENT=t.INCR,zn.INCREMENT_WRAP=t.INCR_WRAP,zn.DECREMENT=t.DECR,zn.DECREMENT_WRAP=t.DECR_WRAP,zn.INVERT=t.INVERT,Vn.DISABLED=null,Vn.ALWAYS=t.ALWAYS,Vn.NEVER=t.NEVER,Vn.LESS=t.LESS,Vn.EQUAL=t.EQUAL,Vn.LESS_EQUAL=t.LEQUAL,Vn.GREATER=t.GREATER,Vn.NOT_EQUAL=t.NOTEQUAL,Vn.GREATER_EQUAL=t.GEQUAL,Gn.POINTS=t.POINTS,Gn.LINES=t.LINES,Gn.LINE_STRIP=t.LINE_STRIP,Gn.LINE_LOOP=t.LINE_LOOP,Gn.TRIANGLES=t.TRIANGLES,Gn.TRIANGLE_STRIP=t.TRIANGLE_STRIP,Gn.TRIANGLE_FAN=t.TRIANGLE_FAN,kn.ZERO=t.ZERO,kn.ONE=t.ONE,kn.SOURCE_COLOR=t.SRC_COLOR,kn.ONE_MINUS_SOURCE_COLOR=t.ONE_MINUS_SRC_COLOR,kn.DESTINATION_COLOR=t.DST_COLOR,kn.ONE_MINUS_DESTINATION_COLOR=t.ONE_MINUS_DST_COLOR,kn.SOURCE_ALPHA=t.SRC_ALPHA,kn.ONE_MINUS_SOURCE_ALPHA=t.ONE_MINUS_SRC_ALPHA,kn.DESTINATION_ALPHA=t.DST_ALPHA,kn.ONE_MINUS_DESTINATION_ALPHA=t.ONE_MINUS_DST_ALPHA,kn.SOURCE_ALPHA_SATURATE=t.SRC_ALPHA_SATURATE,kn.CONSTANT_ALPHA=t.CONSTANT_ALPHA,kn.ONE_MINUS_CONSTANT_ALPHA=t.ONE_MINUS_CONSTANT_ALPHA,Yn.ADD=t.FUNC_ADD,Yn.SUBTRACT=t.FUNC_SUBTRACT,Yn.REVERSE_SUBTRACT=t.FUNC_REVERSE_SUBTRACT,Wn.COLOR=t.COLOR_BUFFER_BIT,Wn.STENCIL=t.STENCIL_BUFFER_BIT,Wn.DEPTH=t.DEPTH_BUFFER_BIT,Wn.COMPLETE=t.COLOR_BUFFER_BIT|t.DEPTH_BUFFER_BIT|t.STENCIL_BUFFER_BIT,Zn.RGBA=t.RGBA,Zn.RGB=t.RGB,qn.UNSIGNED_BYTE=t.UNSIGNED_BYTE,qn.UNSIGNED_SHORT=t.UNSIGNED_SHORT,qn.UNSIGNED_INT=t.UNSIGNED_INT,qn.FLOAT=t.FLOAT,qn.HALF_FLOAT=void 0,Kn.STATIC_DRAW=t.STATIC_DRAW,Kn.DYNAMIC_DRAW=t.DYNAMIC_DRAW,Jn.POSITIVE_X=t.TEXTURE_CUBE_MAP_POSITIVE_X,Jn.NEGATIVE_X=t.TEXTURE_CUBE_MAP_NEGATIVE_X,Jn.POSITIVE_Y=t.TEXTURE_CUBE_MAP_POSITIVE_Z,Jn.NEGATIVE_Y=t.TEXTURE_CUBE_MAP_NEGATIVE_Z,Jn.POSITIVE_Z=t.TEXTURE_CUBE_MAP_POSITIVE_Y,Jn.NEGATIVE_Z=t.TEXTURE_CUBE_MAP_NEGATIVE_Y}function xt(t){var e=new Y;e.initEmpty(8,8,null,t);var i=new q(e);return i.init(!0)}function vt(t){this._amplitude=1/Math.sqrt(2*t*Math.PI),this._expScale=-1/(2*t)}function St(){this.origin=new h(0,0,0,1),this.direction=new h(0,0,0,0)}function Tt(t){this._type=t,this._expanse=Tt.EXPANSE_EMPTY,this._minimumX=0,this._minimumY=0,this._minimumZ=0,this._maximumX=0,this._maximumY=0,this._maximumZ=0,this._halfExtentX=0,this._halfExtentY=0,this._halfExtentZ=0,this._center=new h}function Et(t){if(this._name=null,this._localBounds=new Mt,this._localBoundsInvalid=!0,this._skeleton=null,this.onMeshesChange=new e,this.onSkeletonChange=new e,this._meshes=[],t)if(t instanceof Array)for(var i=0;i<t.length;++i)this.addMesh(t[i]);else t instanceof k&&this.addMesh(t)}function yt(){this._flip=!1,this._mesh=null,this._mode=0,this._faceNormals=null,this._faceTangents=null,this._faceBitangents=null}function wt(t){t=t||{},Et.call(this,this._createMesh(t)),this.localBounds=this._getBounds()}function At(t){wt.call(this,t)}function Mt(){Tt.call(this,Mt)}function Pt(t,e){var i=e.getShader();this.attributes=[],this.morphPositionAttributes=[],this.morphNormalAttributes=[],this._numAttributes=-1;for(var n=0;n<t.numVertexAttributes;++n){var r=t.getVertexAttributeByIndex(n),o=i.getAttributeLocation(r.name);if(o>=0){var s=t.getVertexStride(r.streamIndex),a={index:o,offset:4*r.offset,external:!1,numComponents:r.numComponents,stride:4*s,streamIndex:r.streamIndex};0===r.name.indexOf("hx_morphPosition")&&(this.morphPositionAttributes.push(a),a.external=!0),0===r.name.indexOf("hx_morphNormal")&&(this.morphNormalAttributes.push(a),a.external=!0),this.attributes[o]=a,this._numAttributes=Math.max(this._numAttributes,o+1)}}}function bt(t,e){if(this._mesh=t,this._meshMaterialLinkInvalid=!1,this._vertexLayouts=null,this._visible=!0,t.onLayoutChanged.bind(this._onMaterialOrMeshChange,this),t.hasMorphData){this._morphPositions=[];var i=8;t.hasMorphNormals&&(this._morphNormals=[],i=4),this._morphWeights=new Float32Array(i);for(var n=0;n<i;++n)this._morphWeights[n]=0}this.material=e}function Lt(){}function Rt(t){Lt.call(this),this._materialName=t}function Ot(){u.call(this),this._name=null,this._worldMatrix=new f,this._worldBoundsInvalid=!0,this._matrixInvalid=!0,this._worldMatrixInvalid=!0,this._parent=null,this._scene=null,this._worldBounds=this._createBoundingVolume(),this._debugBounds=null,this._visible=!0,this._children=[],this.onWorldBoundsInvalid=new HX.Signal,this._renderOrderHint=0}function Dt(){this._hash=[]}function It(){Ot.call(this),this._componentHash=new Dt,this._components=null,this._requiresUpdates=!1,this._onComponentsChange=new e,this._effects=null}function Nt(){this.position=new h,this.rotation=new l,this.scale=new h(1,1,1),this.skeletonPose=null}function Ct(){this._jointPoses=[],this._skinningTexture=null,this._globalMatrices=null,this._bindMatrices=null,this._skeletonMatricesInvalid=!0}function Ft(t,e){It.call(this),this._meshBounds=new Mt,this._model=null,this._meshInstances=[],this._castShadows=!0,this._skeletonMatrices=null,this._morphPose=null,this._meshInstancesInvalid=!1,this._skeletonPose=null,this.init(t,e)}function Ut(t){wt.call(this,t)}function Bt(t,e){st.call(this,this._generateShader(t,e))}function Ht(t,e){st.call(this,this._generateShader(t,e))}function Xt(t,e){st.call(this,this._generateShader(t,e))}function jt(){It.call(this),this._intensity=3.1415,this._color=new n(1,1,1),this._scaledIrradiance=new n,this._castShadows=!1,this._updateScaledIrradiance()}function zt(t){var e=null,i=null;this.getItem=function(){var n;return e?(n=e,e=e.next):(n=new t,n.next=i,i=n),n},this.reset=function(){e=i}}function Vt(){this.worldMatrix=null,this.meshInstance=null,this.skeleton=null,this.skeletonMatrices=null,this.material=null,this.camera=null,this.renderOrderHint=0,this.worldBounds=null,this.next=null}function Gt(){Lt.call(this),this._renderCameras=null,this._cameraYAxis=new h,this._bounds=new Mt,this._cullPlanes=null,this._numCullPlanes=0,this._renderList=[],this._renderItemPool=new zt(Vt)}function kt(){this._planes=new Array(6),this._corners=new Array(8);for(var t=0;t<6;++t)this._planes[t]=new h;for(t=0;t<8;++t)this._corners[t]=new h}function Yt(){It.call(this),this._renderTargetWidth=0,this._renderTargetHeight=0,this._viewProjectionMatrixInvalid=!0,this._viewProjectionMatrix=new f,this._inverseProjectionMatrix=new f,this._inverseViewProjectionMatrix=new f,this._projectionMatrix=new f,this._viewMatrix=new f,this._projectionMatrixDirty=!0,this._nearDistance=.1,this._farDistance=1e3,this._frustum=new kt,this.position.set(0,-1,0)}function Wt(){Yt.call(this),this._left=-1,this._right=1,this._top=1,this._bottom=-1}function Zt(){this._renderBuffer=vn.gl.createRenderbuffer(),this._format=null}function qt(t,e,i,n){this.x=t||0,this.y=e||0,this.width=i||0,this.height=n||0}function Kt(t,e){this._light=t,this._shadowMapSize=e||1024,this._shadowMapInvalid=!0,this._fboFront=null,this._fboFrontNoDepth=null,this._fboBack=null,this._depthBuffer=null,this._shadowMap=this._createShadowBuffer(),this._blurShader=On.OPTIONS.directionalShadowFilter.blurShader,this._shadowBackBuffer=this._blurShader?this._createShadowBuffer():null,this._softness=On.OPTIONS.directionalShadowFilter.softness?On.OPTIONS.directionalShadowFilter.softness:.002,this._shadowMatrices=[new f,new f,new f,new f],this._transformToUV=[new f,new f,new f,new f],this._inverseLightMatrix=new f,this._splitRatios=null,this._splitDistances=null,this._shadowMapCameras=null,this._collectorCamera=new Wt,this._maxY=0,this._numCullPlanes=0,this._cullPlanes=[],this._localBounds=new Mt,this._casterCollector=new Gt,this._initSplitProperties(),this._initCameras(),this._viewports=[]}function Jt(t){H.call(this);var e={};t&&(e.HX_SHADOW_MAP=1);var i=on.get("deferred_dir_light_vertex.glsl",e),n=on.get("snippets_geometry.glsl",e)+"\n"+On.OPTIONS.deferredLightingModel+"\n\n\n"+On.OPTIONS.directionalShadowFilter.getGLSL()+"\n"+on.get("directional_light.glsl")+"\n"+on.get("deferred_dir_light_fragment.glsl");this.init(i,n);var r=vn.gl,o=this._program;r.useProgram(o),this._colorLocation=r.getUniformLocation(o,"hx_directionalLight.color"),this._dirLocation=r.getUniformLocation(o,"hx_directionalLight.direction"),this._positionAttributeLocation=r.getAttribLocation(o,"hx_position"),this._texCoordAttributeLocation=r.getAttribLocation(o,"hx_texCoord");var s=r.getUniformLocation(o,"hx_gbufferAlbedo"),a=r.getUniformLocation(o,"hx_gbufferNormalDepth"),h=r.getUniformLocation(o,"hx_gbufferSpecular");if(r.uniform1i(s,0),r.uniform1i(a,1),r.uniform1i(h,2),t){this._shadowMatricesLocation=r.getUniformLocation(o,"hx_directionalLight.shadowMapMatrices[0]"),this._shadowSplitsLocation=r.getUniformLocation(o,"hx_directionalLight.splitDistances"),this._depthBiasLocation=r.getUniformLocation(o,"hx_directionalLight.depthBias"),this._maxShadowDistanceLocation=r.getUniformLocation(o,"hx_directionalLight.maxShadowDistance");var _=r.getUniformLocation(o,"hx_shadowMap"),l=r.getUniformLocation(o,"hx_dither2D");r.uniform1i(_,3),r.uniform1i(l,4)}}function Qt(){jt.call(this),!Qt._deferredShader&&On.OPTIONS.deferredLightingModel&&Qt._initDeferredShaders(),this.depthBias=0,this._shadowMapSize=1024,this._shadowMapRenderer=null,this.direction=new h((-1),(-1),(-1),0),this._direction=new h}function $t(t,e,i,n){st.call(this,this._generateShader(t,e,i,n)),this._colorLocation=this.getUniformLocation("hx_directionalLight.color"),this._dirLocation=this.getUniformLocation("hx_directionalLight.direction"),n&&(this._shadowMatricesLocation=this.getUniformLocation("hx_directionalLight.shadowMapMatrices[0]"),this._shadowSplitsLocation=this.getUniformLocation("hx_directionalLight.splitDistances"),this._depthBiasLocation=this.getUniformLocation("hx_directionalLight.depthBias"),this._maxShadowDistanceLocation=this.getUniformLocation("hx_directionalLight.maxShadowDistance"),this._shadowMapSlot=this.getTextureSlot("hx_shadowMap"))}function te(t,e,i,n){st.call(this,this._generateShader(t,e,i,n)),this._colorLocation=this.getUniformLocation("hx_pointLight.color"),this._posLocation=this.getUniformLocation("hx_pointLight.position"),this._radiusLocation=this.getUniformLocation("hx_pointLight.radius"),this._rcpRadiusLocation=this.getUniformLocation("hx_pointLight.rcpRadius"),n&&(this._depthBiasLocation=this.getUniformLocation("hx_pointLight.depthBias"),this._shadowMatrixLocation=this.getUniformLocation("hx_pointLight.shadowMapMatrix"),this._shadowMapSlot=this.getTextureSlot("hx_shadowMap"))}function ee(t,e,i,n){st.call(this,this._generateShader(t,e,i,n)),this._colorLocation=this.getUniformLocation("hx_spotLight.color"),this._posLocation=this.getUniformLocation("hx_spotLight.position"),this._radiusLocation=this.getUniformLocation("hx_spotLight.radius"),this._anglesLocation=this.getUniformLocation("hx_spotLight.angleData"),this._dirLocation=this.getUniformLocation("hx_spotLight.direction"),this._rcpRadiusLocation=this.getUniformLocation("hx_spotLight.rcpRadius"),n&&(this._depthBiasLocation=this.getUniformLocation("hx_spotLight.depthBias"),this._shadowMatrixLocation=this.getUniformLocation("hx_spotLight.shadowMapMatrix"),this._shadowMapSlot=this.getTextureSlot("hx_shadowMap"))}function ie(t,e,i){st.call(this,this._generateShader(t,e,i)),this._diffuseSlot=this.getTextureSlot("hx_diffuseProbeMap"),this._specularSlot=this.getTextureSlot("hx_specularProbeMap"),this._numMipsLocation=this.getUniformLocation("hx_specularProbeNumMips"),this._localLocation=this.getUniformLocation("hx_probeLocal"),this._sizeLocation=this.getUniformLocation("hx_probeSize"),this._positionLocation=this.getUniformLocation("hx_probePosition")}function ne(t){wt.call(this,t)}function re(){Tt.call(this,re)}function oe(t,e){H.call(this),this._useSphere=t;var i={};if(e&&(i.HX_SHADOW_MAP=1),t){var n=new ne({radius:1.1});this._mesh=n.getMesh(0),i.HX_SPHERE_MESH=1}var r=on.get("snippets_geometry.glsl")+"\n"+On.OPTIONS.deferredLightingModel+"\n\n\n"+On.OPTIONS.pointShadowFilter.getGLSL()+"\n"+on.get("point_light.glsl")+"\n"+on.get("deferred_point_light_vertex.glsl",i),o=on.get("snippets_geometry.glsl")+"\n"+On.OPTIONS.deferredLightingModel+"\n\n\n"+On.OPTIONS.pointShadowFilter.getGLSL()+"\n"+on.get("point_light.glsl")+"\n"+on.get("deferred_point_light_fragment.glsl",i);this.init(r,o);var s=vn.gl,a=this._program;s.useProgram(a),this._colorLocation=s.getUniformLocation(a,"hx_pointLight.color"),this._posLocation=s.getUniformLocation(a,"hx_pointLight.position"),this._radiusLocation=s.getUniformLocation(a,"hx_pointLight.radius"),this._rcpRadiusLocation=s.getUniformLocation(a,"hx_pointLight.rcpRadius"),this._positionAttributeLocation=s.getAttribLocation(a,"hx_position"),this._texCoordAttributeLocation=s.getAttribLocation(a,"hx_texCoord");var h=s.getUniformLocation(a,"hx_gbufferAlbedo"),_=s.getUniformLocation(a,"hx_gbufferNormalDepth"),l=s.getUniformLocation(a,"hx_gbufferSpecular");if(s.uniform1i(h,0),s.uniform1i(_,1),s.uniform1i(l,2),e){this._shadowMatrixLocation=s.getUniformLocation(a,"hx_pointLight.shadowMapMatrix"),this._depthBiasLocation=s.getUniformLocation(a,"hx_pointLight.depthBias");var c=s.getUniformLocation(a,"hx_shadowMap"),u=s.getUniformLocation(a,"hx_dither2D");s.uniform1i(c,3),s.uniform1i(u,4)}}function se(){Yt.call(this),this._vFOV=1.047198,this._aspectRatio=1}function ae(){Lt.call(this),this._lightBounds=null,this._renderLists=[],this._renderItemPool=new zt(Vt),this._octantPlanes=[],this._cameraPos=new h,this._octantPlanes[0]=new h(0,1,(-1),0),this._octantPlanes[1]=new h(1,0,(-1),0),this._octantPlanes[2]=new h((-1),0,(-1),0),this._octantPlanes[3]=new h(0,(-1),(-1),0),this._octantPlanes[4]=new h(1,1,0,0),this._octantPlanes[5]=new h((-1),1,0,0);for(var t=0;t<6;++t)this._octantPlanes[t].normalize()}function he(t,e){this._light=t,this._shadowMapSize=e||256,this._shadowMapInvalid=!0,this._fbos=[],this._depthBuffer=new Zt,this._shadowMap=this._createShadowBuffer(),this._softness=On.OPTIONS.spotShadowFilter.softness?On.OPTIONS.spotShadowFilter.softness:.002,this._casterCollector=new ae,this._scene=null,this._initFaces()}function _e(){jt.call(this),!_e._deferredShaderSphere&&On.OPTIONS.deferredLightingModel&&(_e._deferredShaderSphere=new oe((!0),(!1)),_e._deferredShaderRect=new oe((!1),(!1)),_e._deferredShaderSphereShadows=new oe((!0),(!0)),_e._deferredShaderRectShadows=new oe((!1),(!0))),this._radius=100,this.intensity=3.1415,this.depthBias=0,this._shadowMapSize=256,this._shadowMapRenderer=null}function le(t){H.call(this);var e={},i="";Un.EXT_SHADER_TEXTURE_LOD&&(i+="#texturelod\n"),t.size&&(e.HX_LOCAL_PROBE=1),this._probe=t,t.diffuseTexture&&(e.HX_DIFFUSE_PROBE=1),t.specularTexture&&(e.HX_SPECULAR_PROBE=1);var n=on.get("deferred_probe_vertex.glsl",e),r=i+on.get("snippets_geometry.glsl",e)+"\n"+On.OPTIONS.deferredLightingModel+"\n\n\n"+on.get("light_probe.glsl")+"\n"+on.get("deferred_probe_fragment.glsl");this.init(n,r);var o=vn.gl,s=this._program;o.useProgram(s),t.size&&(this._sizeLocation=o.getUniformLocation(s,"hx_probeSize"),this._positionLocation=o.getUniformLocation(s,"hx_probePosition")),this._positionAttributeLocation=o.getAttribLocation(s,"hx_position"),this._texCoordAttributeLocation=o.getAttribLocation(s,"hx_texCoord");var a=o.getUniformLocation(s,"hx_gbufferAlbedo"),h=o.getUniformLocation(s,"hx_gbufferNormalDepth"),_=o.getUniformLocation(s,"hx_gbufferSpecular"),l=o.getUniformLocation(s,"hx_specularProbeMap"),c=o.getUniformLocation(s,"hx_diffuseProbeMap"),u=o.getUniformLocation(s,"hx_ssao");this._numMipsLocation=this.getUniformLocation("hx_specularProbeNumMips"),o.uniform1i(a,0),o.uniform1i(h,1),o.uniform1i(_,2),o.uniform1i(u,3),o.uniform1i(l,4),o.uniform1i(c,5)}function ce(t,e){It.call(this),this._specularTexture=e,this._diffuseTexture=t,this._size=void 0,On.OPTIONS.deferredLightingModel&&(this._deferredShader=new le(this))}function ue(t){wt.call(this,t)}function fe(t,e){H.call(this),this._useCone=t;var i={};if(e&&(i.HX_SHADOW_MAP=1),t){var n=new ue({radius:1.1,numSegmentsH:1,alignment:ue.ALIGN_Y});this._mesh=n.getMesh(0),i.HX_CONE_MESH=1}var r=on.get("snippets_geometry.glsl")+"\n"+On.OPTIONS.deferredLightingModel+"\n\n\n"+On.OPTIONS.spotShadowFilter.getGLSL()+"\n"+on.get("spot_light.glsl")+"\n"+on.get("deferred_spot_light_vertex.glsl",i),o=on.get("snippets_geometry.glsl")+"\n"+On.OPTIONS.deferredLightingModel+"\n\n\n"+On.OPTIONS.spotShadowFilter.getGLSL()+"\n"+on.get("spot_light.glsl")+"\n"+on.get("deferred_spot_light_fragment.glsl",i);this.init(r,o);var s=vn.gl,a=this._program;s.useProgram(a),this._colorLocation=s.getUniformLocation(a,"hx_spotLight.color"),this._posLocation=s.getUniformLocation(a,"hx_spotLight.position"),this._radiusLocation=s.getUniformLocation(a,"hx_spotLight.radius"),this._dirLocation=s.getUniformLocation(a,"hx_spotLight.direction"),this._rcpRadiusLocation=s.getUniformLocation(a,"hx_spotLight.rcpRadius"),this._anglesLocation=s.getUniformLocation(a,"hx_spotLight.angleData"),t&&(this._sinOuterAngleLocation=s.getUniformLocation(a,"hx_spotLight.sinOuterAngle"),this._worldMatrixLocation=s.getUniformLocation(a,"hx_spotLightWorldMatrix")),this._positionAttributeLocation=s.getAttribLocation(a,"hx_position"),this._texCoordAttributeLocation=s.getAttribLocation(a,"hx_texCoord");var h=s.getUniformLocation(a,"hx_gbufferAlbedo"),_=s.getUniformLocation(a,"hx_gbufferNormalDepth"),l=s.getUniformLocation(a,"hx_gbufferSpecular");if(s.uniform1i(h,0),s.uniform1i(_,1),s.uniform1i(l,2),e){this._shadowMatrixLocation=s.getUniformLocation(a,"hx_spotLight.shadowMapMatrix"),this._depthBiasLocation=s.getUniformLocation(a,"hx_spotLight.depthBias");var c=s.getUniformLocation(a,"hx_shadowMap"),u=s.getUniformLocation(a,"hx_dither2D");s.uniform1i(c,3),s.uniform1i(u,4)}}function de(){Lt.call(this),this._renderItemPool=new zt(Vt),this._opaques=[],this._transparents=null,this._camera=null,this._cameraYAxis=new h,this._frustumPlanes=null,this._lights=null,this._ambientColor=new n,this._shadowCasters=null,this._effects=null,this._needsNormalDepth=!1,this._needsForwardPath=!1,this._needsBackbuffer=!1}function pe(){H.call(this);var t={},e=on.get("copy_vertex.glsl",t),i=on.get("snippets_geometry.glsl",t)+"\n"+on.get("deferred_ambient_light_fragment.glsl");this.init(e,i);var n=vn.gl,r=this._program;n.useProgram(r),this._positionAttributeLocation=n.getAttribLocation(r,"hx_position"),this._texCoordAttributeLocation=n.getAttribLocation(r,"hx_texCoord");var o=n.getUniformLocation(r,"hx_gbufferAlbedo"),s=n.getUniformLocation(r,"hx_gbufferNormalDepth"),a=n.getUniformLocation(r,"hx_gbufferSpecular"),h=n.getUniformLocation(r,"hx_ssao");n.uniform1i(o,0),n.uniform1i(s,1),n.uniform1i(a,2),n.uniform1i(h,3)}function me(){Lt.call(this),this._frustumPlanes=null,this._renderList=[],this._renderItemPool=new zt(Vt),this._cameraYAxis=new h}function ge(t,e){this._light=t,this._shadowMapSize=e||256,this._shadowMapInvalid=!0,this._fboFront=null,this._fboBack=null,this._depthBuffer=null,this._shadowMap=this._createShadowBuffer(),this._blurShader=On.OPTIONS.spotShadowFilter.blurShader,this._shadowBackBuffer=this._blurShader?this._createShadowBuffer():null,this._softness=On.OPTIONS.spotShadowFilter.softness?On.OPTIONS.spotShadowFilter.softness:.002,this._casterCollector=new me,this._camera=new se,this._camera.near=.01,this._scene=null}function xe(){jt.call(this),!xe._deferredShaderSphere&&On.OPTIONS.deferredLightingModel&&(xe._deferredShaderCone=new fe((!0),(!1)),xe._deferredShaderRect=new fe((!1),(!1)),xe._deferredShaderConeShadows=new fe((!0),(!0)),xe._deferredShaderRectShadows=new fe((!1),(!0))),
this._localBounds=new Mt,this._radius=50,this._innerAngle=1.2,this._outerAngle=1.3,this._cosInner=Math.cos(.5*this._innerAngle),this._cosOuter=Math.cos(.5*this._outerAngle),this._sinOuter=Math.sin(.5*this._outerAngle),this.intensity=3.1415,this.lookAt(new h(0,0,(-1))),this._localBoundsInvalid=!0,this.depthBias=0,this._shadowMapSize=256,this._shadowMapRenderer=null}function ve(t,e,i,n){this._dirLights=null,this._dirLightCasters=null,this._pointLights=null,this._pointLightCasters=null,this._spotLights=null,this._spotLightCasters=null,this._diffuseLightProbes=null,this._specularLightProbes=null,st.call(this,this._generateShader(t,e,i,n)),this._getUniformLocations(),this._assignShadowMaps(),this._assignLightProbes()}function Se(t,e){st.call(this,this._generateShader(t,e))}function Te(t,e){st.call(this,this._generateShader(t,e))}function Ee(t,e){st.call(this,this._generateShader(t,e))}function ye(t,e){st.call(this,this._generateShader(t,e))}function we(t,e){st.call(this,this._generateShader(t,e))}function Ae(t,e){st.call(this,this._generateShader(t,e))}function Me(t,e){st.call(this,this._generateShader(t,e)),this._rcpRadiusLocation=this.getUniformLocation("hx_rcpRadius")}function Pe(t,i,n){this.onChange=new e,this._elementType=Gn.TRIANGLES,this._cullMode=jn.BACK,this._writeDepth=!0,this._writeColor=!0,this._passes=new Array(Pe.NUM_PASS_TYPES),this._renderOrderHint=++ir,this._renderPath=null,this._renderOrder=0,this._textures={},this._uniforms={},this._fixedLights=null,this._useMorphing=!1,this._useNormalMorphing=!1,this._useSkinning=!1,this._name=null,this._geometryVertexShader=t,this._geometryFragmentShader=i,this._lightingModel=n||On.OPTIONS.defaultLightingModel,this._initialized=!1,this._blendState=null,this._additiveBlendState=Z.ADD,this._needsNormalDepth=!1,this._needsBackbuffer=!1}function be(t){Pe.call(this),t=t||{},this._color=t.color||new n(1,1,1,1),this._emissiveColor=t.emissiveColor||new n(0,0,0,1),this._colorMap=t.colorMap||null,this._doubleSided=!!t.doubleSided,this._normalMap=t.normalMap||null,this._specularMap=t.specularMap||null,this._maskMap=t.maskMap||null,this._specularMapMode=t.specularMapMode||be.SPECULAR_MAP_ROUGHNESS_ONLY,this._metallicness=void 0===t.metallicness?0:t.metallicness,this._alpha=void 0===t.alpha?1:t.alpha,this._roughness=void 0===t.roughness?.5:t.roughness,this._roughnessRange=void 0===t.roughnessRange?.5:t.roughnessRange,this._normalSpecularReflectance=void 0===t.normalSpecularReflectance?.027:t.normalSpecularReflectance,this._alphaThreshold=void 0===t.alphaThreshold?1:t.alphaThreshold,this._useVertexColors=!!t.useVertexColors,this.color=this._color,this.emissiveColor=this._emissiveColor,this.alpha=this._alpha,this.metallicness=this._metallicness,this.roughness=this._roughness,this.normalSpecularReflectance=this._normalSpecularReflectance,void 0!==t.lightingModel&&(this.lightingModel=t.lightingModel)}function Le(){Ot.call(this);var t=new Ut({height:1,radius:.01,alignment:Ut.ALIGN_X}),e=new Ut({height:1,radius:.01,alignment:Ut.ALIGN_Y}),i=new Ut({height:1,radius:.01,alignment:Ut.ALIGN_Z}),n=new be({color:16711680,lightingModel:Sn.Unlit}),r=new be({color:65280,lightingModel:Sn.Unlit}),o=new be({color:255,lightingModel:Sn.Unlit}),s=new Ft(t,n),a=new Ft(e,r),h=new Ft(i,o);s.position.x=.5,a.position.y=.5,h.position.z=.5,this.attach(s),this.attach(a),this.attach(h)}function Re(){this._entity=null}function Oe(t){wt.call(this,t)}function De(t,e){Ft.call(this,t,e)}function Ie(t){Re.call(this),this._initModelInstance(),t&&(this._material.color=t)}function Ne(t){Re.call(this),this._color=void 0===t?new HX.Color(1,0,1):t}function Ce(t){this.onEntityAdded=new e,this.onEntityRemoved=new e,this.onDisposed=new e,this._hash=t,this._entities=[],this._usageCount=0}function Fe(){this._updateableEntities=[],this._entities=[],this._entitySets={},this._systems=[],Dn.bind(this._update,this)}function Ue(t){this._rootNode=t||new Ot,this._rootNode._setScene(this),this._skybox=null,this._entityEngine=new Fe}function Be(t){Pe.call(this);var e=on.get("default_skybox_vertex.glsl"),i=on.get("default_skybox_fragment.glsl");this.writeDepth=!1,this.cullMode=jn.NONE;var n=new Bt(e,i);this.setPass(st.BASE_PASS,n),this._renderPath=er.FORWARD_FIXED,this._initialized=!0,this._renderOrder=Number.POSITIVE_INFINITY,this.setTexture("hx_skybox",t)}function He(t){t instanceof Pe||(t=new Be(t));var e=new At({width:1,invert:!0});e.localBounds.clear(Tt.EXPANSE_INFINITE),this._modelInstance=new Ft(e,t)}function Xe(t,e,i,n,r,o){Ot.call(this),this._terrainSize=t||512,this._minElevation=e,this._maxElevation=i,this._numLevels=n||4,o=o||32;var s=2*Math.ceil(.5*o);this._snapSize=this._terrainSize/o/Math.pow(2,this._numLevels),this._material=r,r.setUniform("hx_elevationOffset",e),r.setUniform("hx_elevationScale",i-e),this._initModels(s),this._initTree()}function je(){this._entityEngine=null,this._sets=[]}function ze(){Re.call(this),this._subs=[]}function Ve(t,e){this.time=t||0,this.value=e}function Ge(){this._name=null,this._keyFrames=[],this._duration=0,this._looping=!0}function ke(t){this._clip=t,this._time=0,this._timeScale=1,this._isPlaying=!0,this._currentFrameIndex=0,this._timeChanged=!0,this._looping=t.looping,this.wraps=0,this.frame1=0,this.frame2=0,this.ratio=0}function Ye(){this._layers=[],this._time=0,this._timeScale=1,this._name=null,this._looping=!0}function We(t,e,i){this._name=null,this._clip=i,this._playhead=new ke(i),this._targetObject=t,this._propertyName=e}function Ze(t,e,i){An.assert(t[e]instanceof h,"Type mismatch!"),We.call(this,t,e,i),this._skeletonPose=t instanceof Nt?t.skeletonPose:null}function qe(t,e,i){An.assert(t[e]instanceof l,"Type mismatch!"),We.call(this,t,e,i),this._skeletonPose=t instanceof Nt?t.skeletonPose:null}function Ke(t,e,i){We.call(this,t,e,i)}function Je(){this._targets=[],this._weights={},this._stateInvalid=!0,this.onChange=new e}function Qe(t){if(Re.call(this),t){this._hasOwn=!0,this._morphPose=new Je;for(var e=0;e<t.length;++e)this._morphPose.addMorphTarget(t[e])}else this._hasOwn=!1}function $e(){this.name=null,this._positionBuffers=[],this._normalBuffers=null,this._numVertices=[]}function ti(){this._applyInverseBindPose=!0,this._joints=[],this._name=""}function ei(){this._rootJointDeltaPosition=new h,this._pose=new Ct,this._name=null}function ii(t){ei.call(this),this._playhead=new ke(t),this._rootPosition=new h,this._name=t.name,this._numJoints=t.getKeyFrame(0).value._jointPoses.length;var e=t.getKeyFrame(t.numKeyFrames-1).value._jointPoses[0].position,i=t.getKeyFrame(0).value._jointPoses[0].position;this._clipRootDelta=h.subtract(e,i)}function ni(t,e){this._skeleton=e,this._rootNode=t,this._transferRootJoint=!1,e&&(this.skeleton=e)}function ri(t){Re.call(this),t instanceof Ge&&(t=new ii(t)),this._blendTree=new ni(t)}function oi(){ei.call(this),this._value=0,this._child1=null,this._child2=null,this._minValue=0,this._maxValue=1,this._numJoints=0,this._t=0,this._valueChanged=!1}function si(t){ei.call(this),this._skeleton=t,this._poseInvalid=!0,this._pose.copyBindPose(t),this._poseLookUp={};for(var e=0;e<t.numJoints;++e){var i=t.getJoint(e);this._poseLookUp[i.name]=this._pose._jointPoses[e]}}function ai(){this.name=null,this.parentIndex=-1,this.inverseBindPose=new f}function hi(){ei.call(this),this._children=[],this._numJoints=0,this._clips={}}function _i(){Re.call(this),this._speed=1,this._speedMultiplier=2,this._localVelocity=new h(0,0,0,0),this._localAcceleration=new h(0,0,0,0),this._pitch=0,this._yaw=0,this._mouseX=0,this._mouseY=0,this._friction=5,this._maxAcceleration=this._speed,this._maxVelocity=this._speed,this._onKeyDown=null,this._onKeyUp=null}function li(t){Re.call(this),this._coords=new h(.5*-Math.PI,.4*Math.PI,1,0),this._localAcceleration=new h(0,0,0,0),this._localVelocity=new h(0,0,0,0),this.touchZoomSpeed=.01,this.zoomSpeed=1,this.maxRadius=4,this.minRadius=.1,this.dampen=.9,this.lookAtTarget=t||new h(0,0,0,1),this._oldMouseX=0,this._oldMouseY=0,this._isDown=!1}function ci(t){this._dataView=t,this._offset=0,this._endian=ci.LITTLE_ENDIAN}function ui(t,e){t=t||on.get("default_post_vertex.glsl");var i=new H(t,e);st.call(this,i),this._vertexLayout=null,this._cullMode=jn.NONE,this._depthTest=Vn.DISABLED,this._writeDepth=!1,this.setMesh(bn.DEFAULT),this.setTexture("hx_dither2D",Fn.DEFAULT_2D_DITHER_TEXTURE)}function fi(t){t=Math.floor(t),this._initWeights(t);var e={RADIUS:t,NUM_WEIGHTS:t+1},i=on.get("gaussian_blur_vertex.glsl",e),n=on.get("gaussian_blur_fragment.glsl",e);ui.call(this,i,n),this.setUniformArray("gaussianWeights",new Float32Array(this._weights))}function di(){Re.call(this),this._isSupported=!0,this._mesh=null,this._outputsGamma=!1,this._needsNormalDepth=!1}function pi(t,e,i,n){di.call(this),this._downScale=i||4,this._targetWidth=-1,this._targetHeight=-1,t=t||100,t/=this._downScale,this._thresholdPass=new ui(null,on.get("bloom_threshold_fragment.glsl")),this._compositePass=new ui(on.get("bloom_composite_vertex.glsl"),on.get("bloom_composite_fragment.glsl")),this._blurPass=new fi(t),this._blurSourceSlot=this._blurPass.getTextureSlot("sourceTexture"),this._thresholdWidth=-1,this._thresholdHeight=-1,this._thresholdMaps=[],this._smallFBOs=[];for(var r=0;r<2;++r)this._thresholdMaps[r]=new Y,this._thresholdMaps[r].filter=Hn.BILINEAR_NOMIP,this._thresholdMaps[r].wrapMode=Xn.CLAMP,this._smallFBOs[r]=new q([this._thresholdMaps[r]]);this._anisotropy=n||1,this._strength=void 0===e?1:e,Un.EXT_HALF_FLOAT_TEXTURES_LINEAR&&Un.EXT_HALF_FLOAT_TEXTURES?this.thresholdLuminance=On.OPTIONS.hdr:this.thresholdLuminance=.9,this._compositePass.setTexture("bloomTexture",this._thresholdMaps[0]),this.strength=this._strength}function mi(t,e){e||(e=t),di.call(this),this._blurPass=new fi(e),this._blurSourceSlot=this._blurPass.getTextureSlot("sourceTexture"),this._radius=e,this._numSamples=t}function gi(){ui.call(this,null,on.get("copy_fragment.glsl"))}function xi(t){return this._adaptive=void 0!==t&&t,!this._adaptive||Un.EXT_SHADER_TEXTURE_LOD&&Un.HALF_FLOAT_FBO?(di.call(this),this._toneMapPass=this._createToneMapPass(),this._adaptive&&(this._extractLuminancePass=new ui(null,on.get("tonemap_reference_fragment.glsl")),this._extractLuminancePass.blendState=new Z(kn.CONSTANT_ALPHA,kn.ONE_MINUS_CONSTANT_ALPHA,Yn.ADD,new n(1,1,1,1)),this._luminanceMap=new Y,this._luminanceMap.initEmpty(256,256,Zn.RGBA,Un.EXT_HALF_FLOAT_TEXTURES.HALF_FLOAT_OES),this._luminanceFBO=new q(this._luminanceMap),this._luminanceFBO.init(),this._adaptationRate=500,this._toneMapPass.setTexture("hx_luminanceMap",this._luminanceMap),this._toneMapPass.setUniform("hx_luminanceMipLevel",yn.log2(this._luminanceMap._width))),this.key=.25,void(this.exposure=0)):(console.log("Warning: adaptive tone mapping not supported, using non-adaptive"),void(this._adaptive=!1))}function vi(t){xi.call(this,t),this._outputsGamma=!0}function Si(t){xi.call(this,t),this._outputsGamma=!0}function Ti(t,e,i,r){di.call(this),this._fogPass=new ui(on.get("fog_vertex.glsl"),on.get("fog_fragment.glsl")),this.needsNormalDepth=!0,this.density=void 0===t?.001:t,this._tint=new n(1,1,1,1),void 0!==e&&(this.tint=e),this.startDistance=void 0===r?0:r,this.heightFallOff=void 0===i?.01:i}function Ei(){di.call(this),this._pass=new ui(null,on.get("fxaa_fragment.glsl")),this._pass.setUniform("edgeThreshold",.25),this._pass.setUniform("edgeThresholdMin",1/16),this._pass.setUniform("edgeSharpness",100)}function yi(t,e){t=t||4,e=e||4,t>32&&(t=32),e>32&&(e=32),this._numRays=t,this._numSamplesPerRay=e,this._strength=1,this._bias=.1,this._fallOffDistance=1,this._radius=.5,this._scale=.5,this._sampleDirTexture=null,this._ditherTexture=null,di.call(this)}function wi(t){t=t||16,t>64&&(t=64),this._numSamples=t,this._strength=1,this._fallOffDistance=1,this._radius=.5,this._scale=.5,this._ditherTexture=null,di.call(this)}function Ai(t){xi.call(this,t)}function Mi(t){this._params=void 0,this._data=null,this._timeout=0,this._method="GET",this._type=Mi.DATA_TEXT,this._headers=t||{}}function Pi(t,e){this._dataType=void 0===e?Mi.DATA_TEXT:e,this._containerType=t,this.onComplete=null,this.onProgress=null,this.onFail=null,this.fileMap=null,this.options={},this.path="",this.filename=""}function bi(t){this.onComplete=new e,this.onProgress=new e,this.onFail=new e,this.fileMap={},this.options={},this._headers={},this._importerType=t,this.crossOrigin=void 0}function Li(t,i){this.fileMap={},this._numLoaded=0,this._queue=[],this._assets={},t&&"/"!==t.charAt(t.length-1)&&(t+="/"),this._basePath=t||"",this._onComplete=new e,this._onProgress=new e,this._crossOrigin=i}function Ri(){Pi.call(this,Ge,Mi.DATA_BINARY)}function Oi(){Pi.call(this,W)}function Di(){Pi.call(this,Y,Pi.TYPE_IMAGE)}function Ii(){Pi.call(this,Pe),Ii._initPropertyMap()}function Ni(){Pi.call(this,Et,Mi.DATA_BINARY)}function Ci(){Pi.call(this,W,Pi.TYPE_IMAGE)}function Fi(){Pi.call(this,Y,Pi.TYPE_IMAGE)}function Ui(){It.call(this),this._scaledIrradiance=new n,this._intensity=.2,this.color=new n(1,1,1),this._scaledIrradiance=new n,this._updateScaledIrradiance()}function Bi(){this._width=0,this._height=0,this._gammaApplied=!1,this._copyTextureShader=new j("xyzw",(!0)),this._applyGamma=new z,this._camera=null,this._scene=null,this._depthBuffer=this._createDepthBuffer(),this._hdrBack=new Bi.HDRBuffers(this._depthBuffer),this._hdrFront=new Bi.HDRBuffers(this._depthBuffer),this._renderCollector=new de,this._gbuffer=new K(this._depthBuffer),this._backgroundColor=n.BLACK.clone(),this._debugMode=Bi.DebugMode.NONE,this._renderAmbientShader=new pe,this._ssaoTexture=null}function Hi(t,e,i,n){var r=new W,o=new W;e=e||qn.UNSIGNED_BYTE,r.initEmpty(4,null,e),o.initEmpty(t,null,e),i=i||.1,n=n||1e3,ce.call(this,r,o),this._cameras=[],this._specularFBOs=[],this._diffuseFBOs=[];var s=new Zt;s.init(t,t,!1);for(var a=[],_=0;_<6;++_)a[_]=new l;a[0].fromAxisAngle(h.Y_AXIS,.5*Math.PI),a[1].fromAxisAngle(h.Y_AXIS,.5*-Math.PI),a[2].fromAxisAngle(h.X_AXIS,.5*-Math.PI),a[3].fromAxisAngle(h.X_AXIS,.5*Math.PI),a[4].fromAxisAngle(h.Y_AXIS,0),a[5].fromAxisAngle(h.Y_AXIS,Math.PI),this._diffuseScene=new Ue,this._diffuseScene.skybox=new He(o);for(var c=[Jn.POSITIVE_X,Jn.NEGATIVE_X,Jn.POSITIVE_Y,Jn.NEGATIVE_Y,Jn.POSITIVE_Z,Jn.NEGATIVE_Z],_=0;_<6;++_){var u=new se;u.nearDistance=i,u.farDistance=n,u.verticalFOV=.5*Math.PI,u.rotation.copyFrom(a[_]),u.scale.set(1,-1,1),this._cameras.push(u);var f=new q(o,s,c[_]);f.init(),this._specularFBOs.push(f),f=new q(r,null,c[_]),f.init(),this._diffuseFBOs.push(f)}this._renderer=new Bi}function Xi(t){H.call(this);var e=vn.gl,i={RADIUS:t,RCP_NUM_SAMPLES:"float("+1/(1+2*t)+")"},n=on.get("copy_vertex.glsl",i),r=on.get("esm_blur_fragment.glsl",i);this.init(n,r),this._textureLocation=e.getUniformLocation(this._program,"source"),this._directionLocation=e.getUniformLocation(this._program,"direction"),this._positionAttributeLocation=e.getAttribLocation(this._program,"hx_position"),this._texCoordAttributeLocation=e.getAttribLocation(this._program,"hx_texCoord"),e.useProgram(this._program),e.uniform1i(this._textureLocation,0)}function ji(){r.call(this),this._expScaleFactor=80,this._blurRadius=1,this._darkeningFactor=.35}function zi(){r.call(this),this._softness=.001,this._numShadowSamples=6,this._dither=!1}function Vi(t){var e=vn.gl;H.call(this);var i={RADIUS:t,RCP_NUM_SAMPLES:"float("+1/(1+2*t)+")"},n=on.get("copy_vertex.glsl",i),r=on.get("vsm_blur_fragment.glsl",i);this.init(n,r),this._textureLocation=e.getUniformLocation(this._program,"source"),this._directionLocation=e.getUniformLocation(this._program,"direction"),this._positionAttributeLocation=e.getAttribLocation(this._program,"hx_position"),this._texCoordAttributeLocation=e.getAttribLocation(this._program,"hx_texCoord"),e.useProgram(this._program),e.uniform1i(this._textureLocation,0)}function Gi(){r.call(this),this._blurRadius=2,this._lightBleedReduction=.5,this._minVariance=.001,this._useHalfFloat=!0,this._cullMode=jn.BACK}function ki(){r.call(this),this._softness=.003,this._numShadowSamples=6,this._dither=!1}function Yi(){r.call(this),this._softness=.005,this._numShadowSamples=6,this._dither=!1}function Wi(t){wt.call(this,t)}function Zi(t){wt.call(this,t)}function qi(t,e,i,n,r,o){this.scene=t,this.camera=e,this._renderer=null,this._texture=null,this._fbo=null,this.xRatio=i||0,this.yRatio=n||0,this.widthRatio=r||1,this.heightRatio=o||1}function Ki(){this._views=[]}function Ji(t,e,i,n,r,o,s){this.enabled=!0,this.reference=t||0,this.comparison=e||Vn.ALWAYS,this.onStencilFail=i||zn.KEEP,this.onDepthFail=n||zn.KEEP,this.onPass=r||zn.KEEP,this.readMask=void 0===o||null===o?4294967295:o,this.writeMask=void 0===s||null===s?4294967295:s}function Qi(){this.onComplete=new e,this.onProgress=new e,this._queue=[],this._childQueues=[],this._currentIndex=0,this._isRunning=!1}function $i(){this.object=null,this.point=new h,this.t=1/0}function tn(){this.modelInstance=null,this.closestDistanceSqr=0,this.objectMatrix=new f,this.next=null}function en(){Lt.call(this),this._potentials=null,this._potentialPool=new zt(tn),this._localRay=new St}function nn(t){this._numFrames=t||1,this._frames=[],this._maxFPS=void 0,this._minFPS=void 0,this._currentFPS=0,this._averageFPS=0,this._runningSum=0;for(var e=0;e<this._numFrames;++e)this._frames[e]=0;this._index=0}function rn(t){this._fpsCounter=new nn(30),this._width=100,this._height=95,this._dpr=window.devicePixelRatio||1,this._elm=document.createElement("canvas"),this._elm.style.position="fixed",this._elm.style.left="5px",this._elm.style.top="5px",this._elm.style.width=this._width+"px",this._elm.style.height=this._height+"px",this._elm.width=this._pixelWidth=this._width*this._dpr,this._elm.height=this._pixelHeight=this._height*this._dpr;var e=10*this._dpr;this._context=this._elm.getContext("2d"),this._context.font=e+'px "Lucida Console",Monaco,monospace',t=t||document.getElementsByTagName("body")[0],t.appendChild(this._elm),Dn.bind(this._update,this)}var on={_files:{},get:function(t,e){var i="";for(var n in e)e.hasOwnProperty(n)&&(i+="#define "+n+" "+e[n]+"\n");return i+on._files[t]}};on._files["debug_bounds_fragment.glsl"]="uniform vec4 color;\n\nvoid main()\n{\n    gl_FragColor = color;\n}",on._files["debug_bounds_vertex.glsl"]="attribute vec4 hx_position;\n\nuniform mat4 hx_wvpMatrix;\n\nvoid main()\n{\n    gl_Position = hx_wvpMatrix * hx_position;\n}",on._files["deferred_ambient_light_fragment.glsl"]="varying vec2 uv;\n\nuniform sampler2D hx_gbufferAlbedo;\nuniform sampler2D hx_gbufferNormalDepth;\nuniform sampler2D hx_gbufferSpecular;\n\n#ifdef HX_SSAO\nuniform sampler2D hx_ssao;\n#endif\n\nuniform vec3 hx_ambientColor;\n\n\nvoid main()\n{\n// TODO: move this to snippets_deferred file, along with the hx_decodeGBufferSpecular method\n    HX_GBufferData data = hx_parseGBuffer(hx_gbufferAlbedo, hx_gbufferNormalDepth, hx_gbufferSpecular, uv);\n\n    gl_FragColor.xyz = hx_ambientColor * data.geometry.color.xyz * data.geometry.occlusion;\n\n#ifdef HX_SSAO\n    gl_FragColor.xyz *= texture2D(hx_ssao, uv).x;\n#endif\n\n    gl_FragColor.w = 1.0;\n\n    #ifdef HX_GAMMA_CORRECT_LIGHTS\n        gl_FragColor = hx_linearToGamma(gl_FragColor);\n    #endif\n}",on._files["deferred_dir_light_fragment.glsl"]="varying vec2 uv;\nvarying vec3 viewDir;\n\nuniform HX_DirectionalLight hx_directionalLight;\n\nuniform sampler2D hx_gbufferAlbedo;\nuniform sampler2D hx_gbufferNormalDepth;\nuniform sampler2D hx_gbufferSpecular;\n\n#ifdef HX_SHADOW_MAP\nuniform sampler2D hx_shadowMap;\n#endif\n\nuniform float hx_cameraNearPlaneDistance;\nuniform float hx_cameraFrustumRange;\n\n\nvoid main()\n{\n// TODO: move this to snippets_deferred file, along with the hx_decodeGBufferSpecular method\n    HX_GBufferData data = hx_parseGBuffer(hx_gbufferAlbedo, hx_gbufferNormalDepth, hx_gbufferSpecular, uv);\n\n    float absViewY = hx_cameraNearPlaneDistance + data.linearDepth * hx_cameraFrustumRange;\n\tvec3 viewPosition = viewDir * absViewY;\n    vec3 viewVector = normalize(viewPosition);\n    vec3 diffuse, specular;\n\n    hx_calculateLight(hx_directionalLight, data.geometry, viewVector, viewPosition, data.normalSpecularReflectance, diffuse, specular);\n\n    gl_FragColor.xyz = diffuse * data.geometry.color.xyz + specular;\n    gl_FragColor.w = 1.0;\n\n    #ifdef HX_SHADOW_MAP\n        gl_FragColor.xyz *= hx_calculateShadows(hx_directionalLight, hx_shadowMap, viewPosition);\n    #endif\n\n    #ifdef HX_GAMMA_CORRECT_LIGHTS\n        gl_FragColor = hx_linearToGamma(gl_FragColor);\n    #endif\n}",on._files["deferred_dir_light_vertex.glsl"]="attribute vec4 hx_position;\nattribute vec2 hx_texCoord;\n\nvarying vec2 uv;\nvarying vec3 viewDir;\n\nuniform mat4 hx_inverseProjectionMatrix;\n\nvoid main()\n{\n    uv = hx_texCoord;\n    viewDir = hx_getLinearDepthViewVector(hx_position.xy, hx_inverseProjectionMatrix);\n    gl_Position = hx_position;\n}",on._files["deferred_point_light_fragment.glsl"]="varying vec2 uv;\nvarying vec3 viewDir;\n\nuniform HX_PointLight hx_pointLight;\n\nuniform sampler2D hx_gbufferAlbedo;\nuniform sampler2D hx_gbufferNormalDepth;\nuniform sampler2D hx_gbufferSpecular;\n\nuniform float hx_cameraNearPlaneDistance;\nuniform float hx_cameraFrustumRange;\n\n#ifdef HX_SHADOW_MAP\nuniform samplerCube hx_shadowMap;\n#endif\n\nvoid main()\n{\n    HX_GBufferData data = hx_parseGBuffer(hx_gbufferAlbedo, hx_gbufferNormalDepth, hx_gbufferSpecular, uv);\n\n    float absViewY = hx_cameraNearPlaneDistance + data.linearDepth * hx_cameraFrustumRange;\n\n\tvec3 viewPosition = viewDir * absViewY;\n    vec3 viewVector = normalize(viewPosition);\n    vec3 diffuse, specular;\n\n    hx_calculateLight(hx_pointLight, data.geometry, viewVector, viewPosition, data.normalSpecularReflectance, diffuse, specular);\n\n    gl_FragColor.xyz = diffuse * data.geometry.color.xyz + specular;\n    gl_FragColor.w = 1.0;\n\n    #ifdef HX_SHADOW_MAP\n        gl_FragColor.xyz *= hx_calculateShadows(hx_pointLight, hx_shadowMap, viewPosition);\n    #endif\n\n    #ifdef HX_GAMMA_CORRECT_LIGHTS\n        gl_FragColor = hx_linearToGamma(gl_FragColor);\n    #endif\n}",on._files["deferred_point_light_vertex.glsl"]="attribute vec4 hx_position;\n\n\n#ifdef HX_SPHERE_MESH\nuniform HX_PointLight hx_pointLight;\nuniform mat4 hx_projectionMatrix;\n\n#else\n\nattribute vec2 hx_texCoord;\n#endif\n\nvarying vec2 uv;\nvarying vec3 viewDir;\n\nuniform mat4 hx_inverseProjectionMatrix;\n\nvoid main()\n{\n#ifdef HX_SPHERE_MESH\n    vec4 viewPos = vec4(hx_position.xyz * hx_pointLight.radius + hx_pointLight.position, 1.0);\n\n    gl_Position = hx_projectionMatrix * viewPos;\n    uv = gl_Position.xy / gl_Position.w * .5 + .5;\n    viewDir = hx_getLinearDepthViewVector(gl_Position.xy / gl_Position.w, hx_inverseProjectionMatrix);\n#else\n    uv = hx_texCoord;\n    gl_Position = hx_position;\n    viewDir = hx_getLinearDepthViewVector(hx_position.xy, hx_inverseProjectionMatrix);\n#endif\n}",on._files["deferred_probe_fragment.glsl"]="varying vec2 uv;\nvarying vec3 viewDir;\n\nuniform sampler2D hx_gbufferAlbedo;\nuniform sampler2D hx_gbufferNormalDepth;\nuniform sampler2D hx_gbufferSpecular;\n\n#ifdef HX_SSAO\nuniform sampler2D hx_ssao;\n#endif\n\nuniform samplerCube hx_diffuseProbeMap;\nuniform samplerCube hx_specularProbeMap;\n\nuniform float hx_specularProbeNumMips;\nuniform mat4 hx_cameraWorldMatrix;\n\n#ifdef HX_LOCAL_PROBE\nuniform float hx_cameraNearPlaneDistance;\nuniform float hx_cameraFrustumRange;\n\nuniform float hx_probeSize;\nuniform vec3 hx_probePosition;\n#endif\n\nvoid main()\n{\n    HX_GBufferData data = hx_parseGBuffer(hx_gbufferAlbedo, hx_gbufferNormalDepth, hx_gbufferSpecular, uv);\n\n    vec3 worldNormal = mat3(hx_cameraWorldMatrix) * data.geometry.normal;\n\n    vec3 viewVector = normalize(viewDir);\n    vec3 reflectedViewDir = reflect(viewVector, data.geometry.normal);\n    vec3 fresnel = hx_fresnelProbe(data.normalSpecularReflectance, reflectedViewDir, data.geometry.normal, data.geometry.roughness);\n    reflectedViewDir = mat3(hx_cameraWorldMatrix) * reflectedViewDir;\n\n#ifdef HX_LOCAL_PROBE\n    float absViewY = hx_cameraNearPlaneDistance + data.linearDepth * hx_cameraFrustumRange;\n    vec3 viewPosition = viewDir * absViewY;\n    vec3 worldPosition = mat3(hx_cameraWorldMatrix) * viewPosition;\n#endif\n\n    vec3 diffuse = vec3(0.0);\n    vec3 specular = vec3(0.0);\n\n#ifdef HX_DIFFUSE_PROBE\n    vec3 diffRay = worldNormal;\n    #ifdef HX_LOCAL_PROBE\n        diffRay = hx_intersectCubeMap(worldPosition, hx_probePosition, diffRay, hx_probeSize);\n    #endif\n    diffuse = hx_calculateDiffuseProbeLight(hx_diffuseProbeMap, diffRay);\n#endif\n#ifdef HX_SPECULAR_PROBE\n    vec3 specRay = reflectedViewDir;\n    #ifdef HX_LOCAL_PROBE\n        specRay = hx_intersectCubeMap(worldPosition, hx_probePosition, specRay, hx_probeSize);\n    #endif\n    specular = hx_calculateSpecularProbeLight(hx_specularProbeMap, hx_specularProbeNumMips, specRay, fresnel, data.geometry.roughness);\n#endif\n\n    gl_FragColor.xyz = diffuse * data.geometry.color.xyz + specular;\n\n    gl_FragColor.xyz *= data.geometry.occlusion;\n\n    #ifdef HX_SSAO\n    gl_FragColor.xyz *= texture2D(hx_ssao, uv).x;\n    #endif\n\n    gl_FragColor.w = 1.0;\n\n    #ifdef HX_GAMMA_CORRECT_LIGHTS\n        gl_FragColor = hx_linearToGamma(gl_FragColor);\n    #endif\n}",on._files["deferred_probe_vertex.glsl"]="attribute vec4 hx_position;\nattribute vec2 hx_texCoord;\n\nvarying vec2 uv;\nvarying vec3 viewDir;\n\nuniform mat4 hx_inverseProjectionMatrix;\n\nvoid main()\n{\n    uv = hx_texCoord;\n    viewDir = hx_getLinearDepthViewVector(hx_position.xy, hx_inverseProjectionMatrix);\n    gl_Position = hx_position;\n}",on._files["deferred_spot_light_fragment.glsl"]="varying vec2 uv;\nvarying vec3 viewDir;\n\nuniform HX_SpotLight hx_spotLight;\n\nuniform sampler2D hx_gbufferAlbedo;\nuniform sampler2D hx_gbufferNormalDepth;\nuniform sampler2D hx_gbufferSpecular;\n\nuniform float hx_cameraNearPlaneDistance;\nuniform float hx_cameraFrustumRange;\n\n#ifdef HX_SHADOW_MAP\nuniform sampler2D hx_shadowMap;\n#endif\n\nvoid main()\n{\n    HX_GBufferData data = hx_parseGBuffer(hx_gbufferAlbedo, hx_gbufferNormalDepth, hx_gbufferSpecular, uv);\n\n    float absViewY = hx_cameraNearPlaneDistance + data.linearDepth * hx_cameraFrustumRange;\n\n\tvec3 viewPosition = viewDir * absViewY;\n    vec3 viewVector = normalize(viewPosition);\n    vec3 diffuse, specular;\n\n    hx_calculateLight(hx_spotLight, data.geometry, viewVector, viewPosition, data.normalSpecularReflectance, diffuse, specular);\n\n    gl_FragColor.xyz = diffuse * data.geometry.color.xyz + specular;\n    gl_FragColor.w = 1.0;\n\n    #ifdef HX_SHADOW_MAP\n        gl_FragColor.xyz *= hx_calculateShadows(hx_spotLight, hx_shadowMap, viewPosition);\n//        gl_FragColor.xyz = vec3(hx_calculateShadows(hx_spotLight, hx_shadowMap, viewPosition));\n    #endif\n\n    #ifdef HX_GAMMA_CORRECT_LIGHTS\n        gl_FragColor = hx_linearToGamma(gl_FragColor);\n    #endif\n}",on._files["deferred_spot_light_vertex.glsl"]="attribute vec4 hx_position;\n\n#ifdef HX_CONE_MESH\nuniform HX_SpotLight hx_spotLight;\nuniform mat4 hx_viewProjectionMatrix;\nuniform mat4 hx_projectionMatrix;\nuniform mat4 hx_spotLightWorldMatrix;\n#else\n\nattribute vec2 hx_texCoord;\n#endif\n\nvarying vec2 uv;\nvarying vec3 viewDir;\n\nuniform mat4 hx_inverseProjectionMatrix;\n\nvoid main()\n{\n#ifdef HX_CONE_MESH\n    vec3 localPos = hx_position.xyz;\n    // need to flip y, but also another axis to keep windedness\n    localPos.xy = -localPos.xy;\n    // align to origin, with height 1\n    localPos.y += .5;\n    // adapt to correct radius\n    localPos.xyz *= hx_spotLight.radius;\n    // make sure the base is correctly sized\n    localPos.xy *= hx_spotLight.sinOuterAngle;\n\n    // this just rotates, it does not translate\n    vec4 worldPos = hx_spotLightWorldMatrix * vec4(localPos, 1.0);\n    gl_Position = hx_viewProjectionMatrix * worldPos;\n    gl_Position /= gl_Position.w;\n    uv = gl_Position.xy / gl_Position.w * .5 + .5;\n    viewDir = hx_getLinearDepthViewVector(gl_Position.xy / gl_Position.w, hx_inverseProjectionMatrix);\n#else\n    uv = hx_texCoord;\n    gl_Position = hx_position;\n    viewDir = hx_getLinearDepthViewVector(hx_position.xy, hx_inverseProjectionMatrix);\n#endif\n}",on._files["lighting_blinn_phong.glsl"]="/*// schlick-beckman\nfloat hx_lightVisibility(vec3 normal, vec3 viewDir, float roughness, float nDotL)\n{\n\tfloat nDotV = max(-dot(normal, viewDir), 0.0);\n\tfloat r = roughness * roughness * 0.797896;\n\tfloat g1 = nDotV * (1.0 - r) + r;\n\tfloat g2 = nDotL * (1.0 - r) + r;\n    return .25 / (g1 * g2);\n}*/\n\nfloat hx_blinnPhongDistribution(float roughness, vec3 normal, vec3 halfVector)\n{\n\tfloat roughnessSqr = clamp(roughness * roughness, 0.0001, .9999);\n//\troughnessSqr *= roughnessSqr;\n\tfloat halfDotNormal = max(-dot(halfVector, normal), 0.0);\n\treturn pow(halfDotNormal, 2.0/roughnessSqr - 2.0) / roughnessSqr;\n}\n\nvoid hx_brdf(in HX_GeometryData geometry, in vec3 lightDir, in vec3 viewDir, in vec3 viewPos, in vec3 lightColor, vec3 normalSpecularReflectance, out vec3 diffuseColor, out vec3 specularColor)\n{\n\tfloat nDotL = max(-dot(lightDir, geometry.normal), 0.0);\n\tvec3 irradiance = nDotL * lightColor;\t// in fact irradiance / PI\n\n\tvec3 halfVector = normalize(lightDir + viewDir);\n\n\tfloat distribution = hx_blinnPhongDistribution(geometry.roughness, geometry.normal, halfVector);\n\n\tfloat halfDotLight = max(dot(halfVector, lightDir), 0.0);\n\tfloat cosAngle = 1.0 - halfDotLight;\n\t// to the 5th power\n\tvec3 fresnel = normalSpecularReflectance + (1.0 - normalSpecularReflectance)*pow(cosAngle, 5.0);\n\n// / PI factor is encoded in light colour\n\tdiffuseColor = irradiance;\n\tspecularColor = irradiance * fresnel * distribution;\n\n//#ifdef HX_VISIBILITY\n//    specularColor *= hx_lightVisibility(normal, lightDir, geometry.roughness, nDotL);\n//#endif\n}",on._files["lighting_debug.glsl"]="void hx_brdf(in HX_GeometryData geometry, in vec3 lightDir, in vec3 viewDir, in vec3 viewPos, in vec3 lightColor, vec3 normalSpecularReflectance, out vec3 diffuseColor, out vec3 specularColor)\n{\n\tdiffuseColor = vec3(0.0);\n\tspecularColor = vec3(0.0);\n}",on._files["lighting_ggx.glsl"]="#ifdef HX_VISIBILITY_TERM\nfloat hx_geometryTerm(vec3 normal, vec3 dir, float k)\n{\n    float d = max(-dot(normal, dir), 0.0);\n    return d / (d * (1.0 - k) + k);\n}\n\n// schlick-beckman\nfloat hx_lightVisibility(vec3 normal, vec3 viewDir, vec3 lightDir, float roughness)\n{\n\tfloat k = roughness + 1.0;\n\tk = k * k * .125;\n\treturn hx_geometryTerm(normal, viewDir, k) * hx_geometryTerm(normal, lightDir, k);\n}\n#endif\n\nfloat hx_ggxDistribution(float roughness, vec3 normal, vec3 halfVector)\n{\n    float roughSqr = roughness*roughness;\n    float halfDotNormal = max(-dot(halfVector, normal), 0.0);\n    float denom = (halfDotNormal * halfDotNormal) * (roughSqr - 1.0) + 1.0;\n    return roughSqr / (denom * denom);\n}\n\n// light dir is to the lit surface\n// view dir is to the lit surface\nvoid hx_brdf(in HX_GeometryData geometry, in vec3 lightDir, in vec3 viewDir, in vec3 viewPos, in vec3 lightColor, vec3 normalSpecularReflectance, out vec3 diffuseColor, out vec3 specularColor)\n{\n\tfloat nDotL = max(-dot(lightDir, geometry.normal), 0.0);\n\tvec3 irradiance = nDotL * lightColor;\t// in fact irradiance / PI\n\n\tvec3 halfVector = normalize(lightDir + viewDir);\n\n    float mappedRoughness =  geometry.roughness * geometry.roughness;\n\n\tfloat distribution = hx_ggxDistribution(mappedRoughness, geometry.normal, halfVector);\n\n\tfloat halfDotLight = max(dot(halfVector, lightDir), 0.0);\n\tfloat cosAngle = 1.0 - halfDotLight;\n\tvec3 fresnel = normalSpecularReflectance + (1.0 - normalSpecularReflectance) * pow(cosAngle, 5.0);\n\n\tdiffuseColor = irradiance;\n\n\tspecularColor = irradiance * fresnel * distribution;\n\n#ifdef HX_VISIBILITY_TERM\n    specularColor *= hx_lightVisibility(geometry.normal, viewDir, lightDir, geometry.roughness);\n#endif\n}",on._files["bloom_composite_fragment.glsl"]="varying vec2 uv;\n\nuniform sampler2D bloomTexture;\nuniform sampler2D hx_backbuffer;\nuniform float strength;\n\nvoid main()\n{\n\tgl_FragColor = texture2D(hx_backbuffer, uv) + texture2D(bloomTexture, uv) * strength;\n}",
on._files["bloom_composite_vertex.glsl"]="attribute vec4 hx_position;\nattribute vec2 hx_texCoord;\n\nvarying vec2 uv;\n\nvoid main()\n{\n\t   uv = hx_texCoord;\n\t   gl_Position = hx_position;\n}",on._files["bloom_threshold_fragment.glsl"]="varying vec2 uv;\n\nuniform sampler2D hx_backbuffer;\n\nuniform float threshold;\n\nvoid main()\n{\n        vec4 color = texture2D(hx_backbuffer, uv);\n        float originalLuminance = .05 + hx_luminance(color);\n        float targetLuminance = max(originalLuminance - threshold, 0.0);\n        gl_FragColor = color * targetLuminance / originalLuminance;\n}\n",on._files["default_post_vertex.glsl"]="attribute vec4 hx_position;\nattribute vec2 hx_texCoord;\n\nvarying vec2 uv;\n\nvoid main()\n{\n\tuv = hx_texCoord;\n\tgl_Position = hx_position;\n}",on._files["fog_fragment.glsl"]="varying vec2 uv;\nvarying vec3 viewDir;\n\nuniform vec3 tint;\nuniform float density;\nuniform float startDistance;\nuniform float heightFallOff;\n\nuniform float hx_cameraFrustumRange;\nuniform float hx_cameraNearPlaneDistance;\nuniform vec3 hx_cameraWorldPosition;\n\nuniform sampler2D hx_gbufferNormalDepth;\nuniform sampler2D hx_backbuffer;\n\nvoid main()\n{\n    vec4 normalDepth = texture2D(hx_gbufferNormalDepth, uv);\n\tvec4 color = texture2D(hx_backbuffer, uv);\n\tfloat depth = hx_decodeLinearDepth(normalDepth);\n\t// do not fog up skybox\n\tif (normalDepth.z == 1.0 && normalDepth.w == 1.0) depth = 0.0;\n\tfloat absViewY = hx_cameraNearPlaneDistance + depth * hx_cameraFrustumRange;\n\tvec3 viewVec = viewDir * absViewY;\n\tfloat fogFactor = max(length(viewVec) - startDistance, 0.0);// * exp(-heightFallOff * hx_cameraWorldPosition.y);\n//    if( abs( viewVec.y ) > 0.1 )\n//\t{\n\t\tfloat t = heightFallOff * (viewVec.z + hx_cameraWorldPosition.z);\n\t\tfogFactor *= saturate(( 1.0 - exp( -t ) ) / t);\n//\t}\n\n\tfloat fog = clamp(exp(-fogFactor * density), 0.0, 1.0);\n\tcolor.xyz = mix(tint, color.xyz, fog);\n\tgl_FragColor = color;\n}",on._files["fog_vertex.glsl"]="attribute vec4 hx_position;\nattribute vec2 hx_texCoord;\n\nvarying vec2 uv;\nvarying vec3 viewDir;\n\nuniform mat4 hx_inverseProjectionMatrix;\nuniform mat4 hx_cameraWorldMatrix;\n\nvoid main()\n{\n    uv = hx_texCoord;\n    viewDir = mat3(hx_cameraWorldMatrix) * hx_getLinearDepthViewVector(hx_position.xy, hx_inverseProjectionMatrix);\n    gl_Position = hx_position;\n}",on._files["fxaa_fragment.glsl"]="varying vec2 uv;\n\nuniform sampler2D hx_backbuffer;\nuniform vec2 hx_rcpRenderTargetResolution;\nuniform float edgeThreshold;\nuniform float edgeThresholdMin;\nuniform float edgeSharpness;\n\nfloat luminanceHint(vec4 color)\n{\n\treturn .30/.59 * color.r + color.g;\n}\n\nvoid main()\n{\n\tvec4 center = texture2D(hx_backbuffer, uv);\n\tvec2 halfRes = vec2(hx_rcpRenderTargetResolution.x, hx_rcpRenderTargetResolution.y) * .5;\n\tfloat topLeftLum = luminanceHint(texture2D(hx_backbuffer, uv + vec2(-halfRes.x, halfRes.y)));\n\tfloat bottomLeftLum = luminanceHint(texture2D(hx_backbuffer, uv + vec2(-halfRes.x, -halfRes.y)));\n\tfloat topRightLum = luminanceHint(texture2D(hx_backbuffer, uv + vec2(halfRes.x, halfRes.y)));\n\tfloat bottomRightLum = luminanceHint(texture2D(hx_backbuffer, uv + vec2(halfRes.x, -halfRes.y)));\n\n\tfloat centerLum = luminanceHint(center);\n\tfloat minLum = min(min(topLeftLum, bottomLeftLum), min(topRightLum, bottomRightLum));\n\tfloat maxLum = max(max(topLeftLum, bottomLeftLum), max(topRightLum, bottomRightLum));\n\tfloat range = max(centerLum, maxLum) - min(centerLum, minLum);\n\tfloat threshold = max(edgeThresholdMin, maxLum * edgeThreshold);\n\tfloat applyFXAA = range < threshold? 0.0 : 1.0;\n\n\tfloat diagDiff1 = bottomLeftLum - topRightLum;\n\tfloat diagDiff2 = bottomRightLum - topLeftLum;\n\tvec2 dir1 = normalize(vec2(diagDiff1 + diagDiff2, diagDiff1 - diagDiff2));\n\tvec4 sampleNeg1 = texture2D(hx_backbuffer, uv - halfRes * dir1);\n\tvec4 samplePos1 = texture2D(hx_backbuffer, uv + halfRes * dir1);\n\n\tfloat minComp = min(abs(dir1.x), abs(dir1.y)) * edgeSharpness;\n\tvec2 dir2 = clamp(dir1.xy / minComp, -2.0, 2.0) * 2.0;\n\tvec4 sampleNeg2 = texture2D(hx_backbuffer, uv - hx_rcpRenderTargetResolution * dir2);\n\tvec4 samplePos2 = texture2D(hx_backbuffer, uv + hx_rcpRenderTargetResolution * dir2);\n\tvec4 tap1 = sampleNeg1 + samplePos1;\n\tvec4 fxaa = (tap1 + sampleNeg2 + samplePos2) * .25;\n\tfloat fxaaLum = luminanceHint(fxaa);\n\tif ((fxaaLum < minLum) || (fxaaLum > maxLum))\n\t\tfxaa = tap1 * .5;\n\tgl_FragColor = mix(center, fxaa, applyFXAA);\n}",on._files["gaussian_blur_fragment.glsl"]="varying vec2 uv;\n\nuniform sampler2D sourceTexture;\n\nuniform vec2 stepSize;\n\nuniform float gaussianWeights[NUM_WEIGHTS];\n\nvoid main()\n{\n\tvec4 total = texture2D(sourceTexture, uv) * gaussianWeights[0];\n    vec2 offset = vec2(0.0);\n\n\tfor (int i = 1; i <= RADIUS; ++i) {\n\t\toffset += stepSize;\n\t    vec4 s = texture2D(sourceTexture, uv + offset) + texture2D(sourceTexture, uv - offset);\n\t\ttotal += s * gaussianWeights[i];\n\t}\n\n\tgl_FragColor = total;\n}",on._files["gaussian_blur_vertex.glsl"]="attribute vec4 hx_position;\nattribute vec2 hx_texCoord;\n\nvarying vec2 uv;\n\nvoid main()\n{\n\tuv = hx_texCoord;\n\tgl_Position = hx_position;\n}",on._files["post_viewpos_vertex.glsl"]="attribute vec4 hx_position;\nattribute vec2 hx_texCoord;\n\nvarying vec2 uv;\nvarying vec3 viewDir;\n\nuniform mat4 hx_inverseProjectionMatrix;\n\nvoid main()\n{\n    uv = hx_texCoord;\n    viewDir = hx_getLinearDepthViewVector(hx_position.xy, hx_inverseProjectionMatrix);\n    gl_Position = hx_position;\n}",on._files["ssr_fragment.glsl"]='#derivatives\n\nuniform sampler2D hx_gbufferColor;\nuniform sampler2D hx_gbufferNormals;\nuniform sampler2D hx_gbufferSpecular;\nuniform sampler2D hx_gbufferDepth;\nuniform sampler2D hx_dither2D;\nuniform vec2 hx_renderTargetResolution;\n\nuniform sampler2D hx_frontbuffer;\n\nvarying vec2 uv;\nvarying vec3 viewDir;\n\nuniform vec2 ditherTextureScale;\nuniform float hx_cameraNearPlaneDistance;\nuniform float hx_cameraFrustumRange;\nuniform float hx_rcpCameraFrustumRange;\nuniform mat4 hx_projectionMatrix;\n\nuniform float maxDistance;\nuniform float stepSize;\nuniform float maxRoughness;\n\n// all in viewspace\n// 0 is start, 1 is end\nfloat raytrace(in vec3 ray0, in vec3 rayDir, out float hitZ, out vec2 hitUV)\n{\n    vec4 dither = hx_sampleDefaultDither(hx_dither2D, uv * ditherTextureScale);\n    // Clip to the near plane\n\tfloat rayLength = ((ray0.z + rayDir.z * maxDistance) > -hx_cameraNearPlaneDistance) ?\n\t\t\t\t\t\t(-hx_cameraNearPlaneDistance - ray0.z) / rayDir.z : maxDistance;\n\n    vec3 ray1 = ray0 + rayDir * rayLength;\n\n    // only need the w component for perspective correct interpolation\n    // need to get adjusted ray end\'s uv value\n    vec4 hom0 = hx_projectionMatrix * vec4(ray0, 1.0);\n    vec4 hom1 = hx_projectionMatrix * vec4(ray1, 1.0);\n    float rcpW0 = 1.0 / hom0.w;\n    float rcpW1 = 1.0 / hom1.w;\n\n    hom0 *= rcpW0;\n    hom1 *= rcpW1;\n\n    // expressed in pixels, so we can snap to 1\n    // need to figure out the ratio between 1 pixel and the entire line "width" (if primarily vertical, it\'s actually height)\n\n    // line dimensions in pixels:\n\n    vec2 pixelSize = (hom1.xy - hom0.xy) * hx_renderTargetResolution * .5;\n\n    // line-"width" = max(abs(pixelSize.x), abs(pixelSize.y))\n    // ratio pixel/width = 1 / max(abs(pixelSize.x), abs(pixelSize.y))\n\n    float stepRatio = 1.0 / max(abs(pixelSize.x), abs(pixelSize.y)) * stepSize;\n\n    vec2 uvEnd = hom1.xy * .5 + .5;\n\n    vec2 dUV = (uvEnd - uv) * stepRatio;\n    hitUV = uv;\n\n    // linear depth\n    float rayDepth = (-ray0.z - hx_cameraNearPlaneDistance) * hx_rcpCameraFrustumRange;\n    float rayPerspDepth0 = rayDepth * rcpW0;\n    float rayPerspDepth1 = (-ray1.z - hx_cameraNearPlaneDistance) * hx_rcpCameraFrustumRange * rcpW1;\n    float rayPerspDepth = rayPerspDepth0;\n    // could probably optimize this:\n    float dRayD = (rayPerspDepth1 - rayPerspDepth0) * stepRatio;\n\n    float rcpW = rcpW0;\n    float dRcpW = (rcpW1 - rcpW0) * stepRatio;\n    float sceneDepth = rayDepth;\n\n    float amount = 0.0;\n\n    hitUV += dUV * dither.z;\n    rayPerspDepth += dRayD * dither.z;\n    rcpW += dRcpW * dither.z;\n\n    float sampleCount;\n    for (int i = 0; i < NUM_SAMPLES; ++i) {\n        rayDepth = rayPerspDepth / rcpW;\n\n        sceneDepth = hx_sampleLinearDepth(hx_gbufferDepth, hitUV);\n\n        if (rayDepth > sceneDepth + .001) {\n            amount = float(sceneDepth < 1.0);\n            sampleCount = float(i);\n            break;\n        }\n\n        hitUV += dUV;\n        rayPerspDepth += dRayD;\n        rcpW += dRcpW;\n    }\n\n    hitZ = -hx_cameraNearPlaneDistance - sceneDepth * hx_cameraFrustumRange;\n\n    amount *= clamp((1.0 - (sampleCount - float(NUM_SAMPLES)) / float(NUM_SAMPLES)) * 5.0, 0.0, 1.0);\n    return amount;\n}\n\nvoid main()\n{\n    vec4 colorSample = hx_gammaToLinear(texture2D(hx_gbufferColor, uv));\n    vec4 specularSample = texture2D(hx_gbufferSpecular, uv);\n    float depth = hx_sampleLinearDepth(hx_gbufferDepth, uv);\n    vec3 normalSpecularReflectance;\n    float roughness;\n    float metallicness;\n    hx_decodeReflectionData(colorSample, specularSample, normalSpecularReflectance, roughness, metallicness);\n    vec3 normal = hx_decodeNormal(texture2D(hx_gbufferNormals, uv));\n    vec3 reflDir = reflect(normalize(viewDir), normal);\n\n    vec3 fresnel = hx_fresnel(normalSpecularReflectance, reflDir, normal);\n    // not physically correct, but attenuation is required to look good\n\n    // step for every pixel\n\n    float absViewY = hx_cameraNearPlaneDistance + depth * hx_cameraFrustumRange;\n    vec3 viewSpacePos = absViewY * viewDir;\n\n    float hitY = 0.0;\n    vec2 hitUV;\n    float amount = raytrace(viewSpacePos, reflDir, hitY, hitUV);\n    float fadeFactor = 1.0 - clamp(reflDir.z * 2.0, 0.0, 1.0);\n\n    vec2 borderFactors = abs(hitUV * 2.0 - 1.0);\n    borderFactors = (1.0 - borderFactors) * 10.0;\n    fadeFactor *= clamp(borderFactors.x, 0.0, 1.0) * clamp(borderFactors.y, 0.0, 1.0);\n\n    float diff = viewSpacePos.y - hitY;\n    fadeFactor *= hx_linearStep(-1.0, 0.0, diff);\n    fadeFactor *= hx_linearStep(maxRoughness, 0.0, roughness);\n\n    vec4 reflColor = texture2D(hx_frontbuffer, hitUV);\n\n    float amountUsed = amount * fadeFactor;\n    gl_FragColor = vec4(fresnel * reflColor.xyz, amountUsed);\n}\n\n',on._files["ssr_stencil_fragment.glsl"]="uniform sampler2D hx_gbufferSpecular;\n\nvarying vec2 uv;\n\nuniform float maxRoughness;\n\nvoid main()\n{\n    vec4 specularSample = texture2D(hx_gbufferSpecular, uv);\n    if (specularSample.x > maxRoughness)\n        discard;\n}\n\n",on._files["tonemap_filmic_fragment.glsl"]="void main()\n{\n\tvec4 color = hx_getToneMapScaledColor();\n\tvec3 x = max(vec3(0.0), color.xyz - 0.004);\n\n\t// this has pow 2.2 gamma included, not valid if using fast gamma correction\n\t//gl_FragColor = vec4((x * (6.2 * x + .5))/(x * (6.2 * x + 1.7) + 0.06), 1.0);\n\n    #ifdef HX_ACES\n    // ACES -> this desaturates less\n    \tfloat a = 2.51;\n        float b = 0.03;\n        float c = 2.43;\n        float d = 0.59;\n        float e = 0.14;\n    #else\n    // Jim Hejl and Richard Burgess-Dawson\n        float a = 6.2;\n        float b = .5;\n        float c = 6.2;\n        float d = 1.7;\n        float e = 0.06;\n    #endif\n\tgl_FragColor = vec4(clamp((x*(a*x+b))/(x*(c*x+d)+e), 0.0, 1.0), 1.0);\n}",on._files["tonemap_reference_fragment.glsl"]="varying vec2 uv;\n\nuniform sampler2D hx_backbuffer;\n\nvoid main()\n{\n\tvec4 color = texture2D(hx_backbuffer, uv);\n\tfloat lum = clamp(hx_luminance(color), 0.0, 1000.0);\n\tfloat l = log(1.0 + lum);\n\tgl_FragColor = vec4(l, l, l, 1.0);\n}",on._files["tonemap_reinhard_fragment.glsl"]="void main()\n{\n\tvec4 color = hx_getToneMapScaledColor();\n\tfloat lum = hx_luminance(color);\n\tgl_FragColor = color / (1.0 + lum);\n}",on._files["directional_light.glsl"]="struct HX_DirectionalLight\n{\n    vec3 color;\n    vec3 direction; // in view space?\n\n    mat4 shadowMapMatrices[4];\n    vec4 splitDistances;\n    float depthBias;\n    float maxShadowDistance;    // = light.splitDistances[light.numCascades - 1]\n};\n\nvoid hx_calculateLight(HX_DirectionalLight light, HX_GeometryData geometry, vec3 viewVector, vec3 viewPosition, vec3 normalSpecularReflectance, out vec3 diffuse, out vec3 specular)\n{\n\thx_brdf(geometry, light.direction, viewVector, viewPosition, light.color, normalSpecularReflectance, diffuse, specular);\n}\n\nmat4 hx_getShadowMatrix(HX_DirectionalLight light, vec3 viewPos)\n{\n    #if HX_NUM_SHADOW_CASCADES > 1\n        // not very efficient :(\n        for (int i = 0; i < HX_NUM_SHADOW_CASCADES - 1; ++i) {\n            if (viewPos.y < light.splitDistances[i])\n                return light.shadowMapMatrices[i];\n        }\n        return light.shadowMapMatrices[HX_NUM_SHADOW_CASCADES - 1];\n    #else\n        return light.shadowMapMatrices[0];\n    #endif\n}\n\nfloat hx_calculateShadows(HX_DirectionalLight light, sampler2D shadowMap, vec3 viewPos)\n{\n    mat4 shadowMatrix = hx_getShadowMatrix(light, viewPos);\n    vec4 shadowMapCoord = shadowMatrix * vec4(viewPos, 1.0);\n    float shadow = hx_dir_readShadow(shadowMap, shadowMapCoord, light.depthBias);\n\n    // this can occur when modelInstance.castShadows = false, or using inherited bounds\n    bool isOutside = max(shadowMapCoord.x, shadowMapCoord.y) > 1.0 || min(shadowMapCoord.x, shadowMapCoord.y) < 0.0;\n    if (isOutside) shadow = 1.0;\n\n    // this makes sure that anything beyond the last cascade is unshadowed\n    return max(shadow, float(viewPos.y > light.maxShadowDistance));\n}",on._files["light_probe.glsl"]="#define HX_PROBE_K0 .00098\n#define HX_PROBE_K1 .9921\n\n/*\nvar minRoughness = 0.0014;\nvar maxPower = 2.0 / (minRoughness * minRoughness) - 2.0;\nvar maxMipFactor = (exp2(-10.0/Math.sqrt(maxPower)) - HX_PROBE_K0)/HX_PROBE_K1;\nvar HX_PROBE_SCALE = 1.0 / maxMipFactor\n*/\n\n#define HX_PROBE_SCALE\n\nvec3 hx_calculateDiffuseProbeLight(samplerCube texture, vec3 normal)\n{\n\treturn hx_gammaToLinear(textureCube(texture, normal.xzy).xyz);\n}\n\nvec3 hx_calculateSpecularProbeLight(samplerCube texture, float numMips, vec3 reflectedViewDir, vec3 fresnelColor, float roughness)\n{\n    #ifdef HX_TEXTURE_LOD\n    // knald method:\n        float power = 2.0/(roughness * roughness) - 2.0;\n        float factor = (exp2(-10.0/sqrt(power)) - HX_PROBE_K0)/HX_PROBE_K1;\n//        float mipLevel = numMips * (1.0 - clamp(factor * HX_PROBE_SCALE, 0.0, 1.0));\n        float mipLevel = numMips * (1.0 - clamp(factor, 0.0, 1.0));\n        vec4 specProbeSample = textureCubeLodEXT(texture, reflectedViewDir.xzy, mipLevel);\n    #else\n        vec4 specProbeSample = textureCube(texture, reflectedViewDir.xzy);\n    #endif\n\treturn hx_gammaToLinear(specProbeSample.xyz) * fresnelColor;\n}",on._files["point_light.glsl"]="struct HX_PointLight\n{\n    vec3 color;\n    vec3 position;\n    float radius;\n    float rcpRadius;\n\n    float depthBias;\n    mat4 shadowMapMatrix;\n};\n\nvoid hx_calculateLight(HX_PointLight light, HX_GeometryData geometry, vec3 viewVector, vec3 viewPosition, vec3 normalSpecularReflectance, out vec3 diffuse, out vec3 specular)\n{\n    vec3 direction = viewPosition - light.position;\n    float attenuation = dot(direction, direction);  // distance squared\n    float distance = sqrt(attenuation);\n    // normalize\n    direction /= distance;\n    attenuation = max((1.0 - distance * light.rcpRadius) / attenuation, 0.0);\n\thx_brdf(geometry, direction, viewVector, viewPosition, light.color * attenuation, normalSpecularReflectance, diffuse, specular);\n}\n\n#ifdef HX_FRAGMENT_SHADER\nfloat hx_calculateShadows(HX_PointLight light, samplerCube shadowMap, vec3 viewPos)\n{\n    vec3 dir = viewPos - light.position;\n    // go from view space back to world space, as a vector\n    dir = mat3(light.shadowMapMatrix) * dir;\n    return hx_point_readShadow(shadowMap, dir, light.rcpRadius, light.depthBias);\n}\n#endif",on._files["spot_light.glsl"]="struct HX_SpotLight\n{\n    vec3 color;\n    vec3 position;\n    vec3 direction;\n    float radius;\n    float rcpRadius;\n    vec2 angleData;    // cos(inner), rcp(cos(outer) - cos(inner))\n    float sinOuterAngle;    // only used in deferred, hence separate\n\n    mat4 shadowMapMatrix;\n    float depthBias;\n};\n\nvoid hx_calculateLight(HX_SpotLight light, HX_GeometryData geometry, vec3 viewVector, vec3 viewPosition, vec3 normalSpecularReflectance, out vec3 diffuse, out vec3 specular)\n{\n    vec3 direction = viewPosition - light.position;\n    float attenuation = dot(direction, direction);  // distance squared\n    float distance = sqrt(attenuation);\n    // normalize\n    direction /= distance;\n\n    float cosAngle = dot(light.direction, direction);\n\n    attenuation = max((1.0 - distance * light.rcpRadius) / attenuation, 0.0);\n    attenuation *=  saturate((cosAngle - light.angleData.x) * light.angleData.y);\n\n\thx_brdf(geometry, direction, viewVector, viewPosition, light.color * attenuation, normalSpecularReflectance, diffuse, specular);\n}\n\n#ifdef HX_FRAGMENT_SHADER\nfloat hx_calculateShadows(HX_SpotLight light, sampler2D shadowMap, vec3 viewPos)\n{\n    return hx_spot_readShadow(shadowMap, viewPos, light.shadowMapMatrix, light.depthBias);\n}\n#endif",on._files["default_geometry_fragment.glsl"]="uniform vec3 color;\nuniform vec3 emissiveColor;\nuniform float alpha;\n\n#if defined(COLOR_MAP) || defined(NORMAL_MAP)|| defined(SPECULAR_MAP)|| defined(ROUGHNESS_MAP) || defined(MASK_MAP) || defined(METALLIC_ROUGHNESS_MAP) || defined(OCCLUSION_MAP) || defined(EMISSION_MAP)\nvarying vec2 texCoords;\n#endif\n\n#ifdef COLOR_MAP\nuniform sampler2D colorMap;\n#endif\n\n#ifdef OCCLUSION_MAP\nuniform sampler2D occlusionMap;\n#endif\n\n#ifdef EMISSION_MAP\nuniform sampler2D emissionMap;\n#endif\n\n#ifdef MASK_MAP\nuniform sampler2D maskMap;\n#endif\n\n#ifndef HX_SKIP_NORMALS\n    varying vec3 normal;\n\n    #ifdef NORMAL_MAP\n    varying vec3 tangent;\n    varying vec3 bitangent;\n\n    uniform sampler2D normalMap;\n    #endif\n#endif\n\n#ifndef HX_SKIP_SPECULAR\nuniform float roughness;\nuniform float roughnessRange;\nuniform float normalSpecularReflectance;\nuniform float metallicness;\n\n#if defined(SPECULAR_MAP) || defined(ROUGHNESS_MAP) || defined(METALLIC_ROUGHNESS_MAP)\nuniform sampler2D specularMap;\n#endif\n\n#endif\n\n#if defined(ALPHA_THRESHOLD)\nuniform float alphaThreshold;\n#endif\n\n#ifdef VERTEX_COLORS\nvarying vec3 vertexColor;\n#endif\n\nHX_GeometryData hx_geometry()\n{\n    HX_GeometryData data;\n\n    vec4 outputColor = vec4(color, alpha);\n\n    #ifdef VERTEX_COLORS\n        outputColor.xyz *= vertexColor;\n    #endif\n\n    #ifdef COLOR_MAP\n        outputColor *= texture2D(colorMap, texCoords);\n    #endif\n\n    #ifdef MASK_MAP\n        outputColor.w *= texture2D(maskMap, texCoords).x;\n    #endif\n\n    #ifdef ALPHA_THRESHOLD\n        if (outputColor.w < alphaThreshold) discard;\n    #endif\n\n    data.color = hx_gammaToLinear(outputColor);\n\n#ifndef HX_SKIP_SPECULAR\n    float metallicnessOut = metallicness;\n    float specNormalReflOut = normalSpecularReflectance;\n    float roughnessOut = roughness;\n#endif\n\n#if defined(HX_SKIP_NORMALS) && defined(NORMAL_ROUGHNESS_MAP) && !defined(HX_SKIP_SPECULAR)\n    vec4 normalSample = texture2D(normalMap, texCoords);\n    roughnessOut -= roughnessRange * (normalSample.w - .5);\n#endif\n\n#ifndef HX_SKIP_NORMALS\n    vec3 fragNormal = normal;\n\n    #ifdef NORMAL_MAP\n        vec4 normalSample = texture2D(normalMap, texCoords);\n        mat3 TBN;\n        TBN[2] = normalize(normal);\n        TBN[0] = normalize(tangent);\n        TBN[1] = normalize(bitangent);\n\n        fragNormal = TBN * (normalSample.xyz - .5);\n\n        #ifdef NORMAL_ROUGHNESS_MAP\n            roughnessOut -= roughnessRange * (normalSample.w - .5);\n        #endif\n    #endif\n\n    #ifdef DOUBLE_SIDED\n        fragNormal *= gl_FrontFacing? 1.0 : -1.0;\n    #endif\n    data.normal = normalize(fragNormal);\n#endif\n\n#ifndef HX_SKIP_SPECULAR\n    #if defined(SPECULAR_MAP) || defined(ROUGHNESS_MAP) || defined(METALLIC_ROUGHNESS_MAP)\n          vec4 specSample = texture2D(specularMap, texCoords);\n\n          #ifdef METALLIC_ROUGHNESS_MAP\n              roughnessOut -= roughnessRange * (specSample.y - .5);\n              metallicnessOut *= specSample.z;\n\n          #else\n              roughnessOut -= roughnessRange * (specSample.x - .5);\n\n              #ifdef SPECULAR_MAP\n                  specNormalReflOut *= specSample.y;\n                  metallicnessOut *= specSample.z;\n              #endif\n          #endif\n    #endif\n\n    data.metallicness = metallicnessOut;\n    data.normalSpecularReflectance = specNormalReflOut;\n    data.roughness = roughnessOut;\n#endif\n\n    data.occlusion = 1.0;\n\n#ifdef OCCLUSION_MAP\n    data.occlusion = texture2D(occlusionMap, texCoords).x;\n#endif\n\n    vec3 emission = emissiveColor;\n#ifdef EMISSION_MAP\n    emission *= texture2D(emissionMap, texCoords).xyz;\n#endif\n\n    data.emission = hx_gammaToLinear(emission);\n    return data;\n}",on._files["default_geometry_vertex.glsl"]="attribute vec4 hx_position;\n\n// morph positions are offsets re the base position!\n#ifdef HX_USE_MORPHING\nattribute vec3 hx_morphPosition0;\nattribute vec3 hx_morphPosition1;\nattribute vec3 hx_morphPosition2;\nattribute vec3 hx_morphPosition3;\n\n#ifdef HX_USE_NORMAL_MORPHING\n    #ifndef HX_SKIP_NORMALS\n    attribute vec3 hx_morphNormal0;\n    attribute vec3 hx_morphNormal1;\n    attribute vec3 hx_morphNormal2;\n    attribute vec3 hx_morphNormal3;\n    #endif\n\nuniform float hx_morphWeights[4];\n#else\nattribute vec3 hx_morphPosition4;\nattribute vec3 hx_morphPosition5;\nattribute vec3 hx_morphPosition6;\nattribute vec3 hx_morphPosition7;\n\nuniform float hx_morphWeights[8];\n#endif\n\n#endif\n\n#ifdef HX_USE_SKINNING\nattribute vec4 hx_jointIndices;\nattribute vec4 hx_jointWeights;\n\n// WebGL doesn't support mat4x3 and I don't want to split the uniform either\n#ifdef HX_USE_SKINNING_TEXTURE\nuniform sampler2D hx_skinningTexture;\n#else\nuniform vec4 hx_skinningMatrices[HX_MAX_SKELETON_JOINTS * 3];\n#endif\n#endif\n\nuniform mat4 hx_wvpMatrix;\nuniform mat4 hx_worldViewMatrix;\n\n#if defined(COLOR_MAP) || defined(NORMAL_MAP)|| defined(SPECULAR_MAP)|| defined(ROUGHNESS_MAP) || defined(MASK_MAP) || defined(OCCLUSION_MAP) || defined(EMISSION_MAP)\nattribute vec2 hx_texCoord;\nvarying vec2 texCoords;\n#endif\n\n#ifdef VERTEX_COLORS\nattribute vec3 hx_vertexColor;\nvarying vec3 vertexColor;\n#endif\n\n#ifndef HX_SKIP_NORMALS\nattribute vec3 hx_normal;\nvarying vec3 normal;\n\nuniform mat3 hx_normalWorldViewMatrix;\n#ifdef NORMAL_MAP\nattribute vec4 hx_tangent;\n\nvarying vec3 tangent;\nvarying vec3 bitangent;\n#endif\n#endif\n\nvoid hx_geometry()\n{\n    vec4 morphedPosition = hx_position;\n\n    #ifndef HX_SKIP_NORMALS\n    vec3 morphedNormal = hx_normal;\n    #endif\n\n// TODO: Abstract this in functions for easier reuse in other materials\n#ifdef HX_USE_MORPHING\n    morphedPosition.xyz += hx_morphPosition0 * hx_morphWeights[0];\n    morphedPosition.xyz += hx_morphPosition1 * hx_morphWeights[1];\n    morphedPosition.xyz += hx_morphPosition2 * hx_morphWeights[2];\n    morphedPosition.xyz += hx_morphPosition3 * hx_morphWeights[3];\n    #ifdef HX_USE_NORMAL_MORPHING\n        #ifndef HX_SKIP_NORMALS\n        morphedNormal += hx_morphNormal0 * hx_morphWeights[0];\n        morphedNormal += hx_morphNormal1 * hx_morphWeights[1];\n        morphedNormal += hx_morphNormal2 * hx_morphWeights[2];\n        morphedNormal += hx_morphNormal3 * hx_morphWeights[3];\n        #endif\n    #else\n        morphedPosition.xyz += hx_morphPosition4 * hx_morphWeights[4];\n        morphedPosition.xyz += hx_morphPosition5 * hx_morphWeights[5];\n        morphedPosition.xyz += hx_morphPosition6 * hx_morphWeights[6];\n        morphedPosition.xyz += hx_morphPosition7 * hx_morphWeights[7];\n    #endif\n#endif\n\n#ifdef HX_USE_SKINNING\n    mat4 skinningMatrix = hx_getSkinningMatrix(0);\n\n    vec4 animPosition = morphedPosition * skinningMatrix;\n\n    #ifndef HX_SKIP_NORMALS\n        vec3 animNormal = morphedNormal * mat3(skinningMatrix);\n\n        #ifdef NORMAL_MAP\n        vec3 animTangent = hx_tangent.xyz * mat3(skinningMatrix);\n        #endif\n    #endif\n#else\n    vec4 animPosition = morphedPosition;\n\n    #ifndef HX_SKIP_NORMALS\n        vec3 animNormal = morphedNormal;\n\n        #ifdef NORMAL_MAP\n        vec3 animTangent = hx_tangent.xyz;\n        #endif\n    #endif\n#endif\n\n    // TODO: Should gl_position be handled by the shaders if we only return local position?\n    gl_Position = hx_wvpMatrix * animPosition;\n\n#ifndef HX_SKIP_NORMALS\n    normal = normalize(hx_normalWorldViewMatrix * animNormal);\n\n    #ifdef NORMAL_MAP\n        tangent = mat3(hx_worldViewMatrix) * animTangent;\n        bitangent = cross(tangent, normal) * hx_tangent.w;\n    #endif\n#endif\n\n#if defined(COLOR_MAP) || defined(NORMAL_MAP)|| defined(SPECULAR_MAP)|| defined(ROUGHNESS_MAP) || defined(MASK_MAP) || defined(OCCLUSION_MAP) || defined(EMISSION_MAP)\n    texCoords = hx_texCoord;\n#endif\n\n#ifdef VERTEX_COLORS\n    vertexColor = hx_vertexColor;\n#endif\n}",on._files["default_skybox_fragment.glsl"]="varying vec3 viewWorldDir;\n\nuniform samplerCube hx_skybox;\n\nHX_GeometryData hx_geometry()\n{\n    HX_GeometryData data;\n    data.color = textureCube(hx_skybox, viewWorldDir.xzy);\n    data.emission = vec3(0.0);\n    data.color = hx_gammaToLinear(data.color);\n    return data;\n}",on._files["default_skybox_vertex.glsl"]="attribute vec4 hx_position;\n\nuniform vec3 hx_cameraWorldPosition;\nuniform float hx_cameraFarPlaneDistance;\nuniform mat4 hx_viewProjectionMatrix;\n\nvarying vec3 viewWorldDir;\n\n// using 2D quad for rendering skyboxes rather than 3D cube causes jittering of the skybox\nvoid hx_geometry()\n{\n    viewWorldDir = hx_position.xyz;\n    vec4 pos = hx_position;\n    // use a decent portion of the frustum to prevent FP issues\n    pos.xyz = pos.xyz * hx_cameraFarPlaneDistance + hx_cameraWorldPosition;\n    pos = hx_viewProjectionMatrix * pos;\n    // make sure it's drawn behind everything else, so z = 1.0\n    pos.z = pos.w;\n    gl_Position = pos;\n}",on._files["material_apply_gbuffer_fragment.glsl"]="uniform vec2 hx_rcpRenderTargetResolution;\n\nuniform sampler2D hx_lightAccumulation;\n\nvoid main()\n{\n    HX_GeometryData data = hx_geometry();\n    vec2 screenUV = gl_FragCoord.xy * hx_rcpRenderTargetResolution;\n    gl_FragColor = texture2D(hx_lightAccumulation, screenUV);\n    gl_FragColor.xyz += data.emission;\n}",on._files["material_apply_gbuffer_vertex.glsl"]="void main()\n{\n    hx_geometry();\n}",on._files["material_dir_shadow_fragment.glsl"]="void main()\n{\n    // geometry is really only used for kil instructions if necessary\n    // hopefully the compiler optimizes the rest out for us\n    HX_GeometryData data = hx_geometry();\n    gl_FragColor = hx_dir_getShadowMapValue(gl_FragCoord.z);\n}",on._files["material_fwd_all_fragment.glsl"]="varying vec3 hx_viewPosition;\n\nuniform vec3 hx_ambientColor;\n\n#if HX_NUM_DIR_LIGHTS > 0\nuniform HX_DirectionalLight hx_directionalLights[HX_NUM_DIR_LIGHTS];\n#endif\n\n#if HX_NUM_DIR_LIGHT_CASTERS > 0\nuniform HX_DirectionalLight hx_directionalLightCasters[HX_NUM_DIR_LIGHT_CASTERS];\n\nuniform sampler2D hx_directionalShadowMaps[HX_NUM_DIR_LIGHT_CASTERS];\n#endif\n\n#if HX_NUM_POINT_LIGHTS > 0\nuniform HX_PointLight hx_pointLights[HX_NUM_POINT_LIGHTS];\n#endif\n\n\n#if HX_NUM_POINT_LIGHT_CASTERS > 0\nuniform HX_PointLight hx_pointLightCasters[HX_NUM_POINT_LIGHT_CASTERS];\n\nuniform samplerCube hx_pointShadowMaps[HX_NUM_POINT_LIGHT_CASTERS];\n#endif\n\n#if HX_NUM_SPOT_LIGHTS > 0\nuniform HX_SpotLight hx_spotLights[HX_NUM_SPOT_LIGHTS];\n#endif\n\n#if HX_NUM_SPOT_LIGHT_CASTERS > 0\nuniform HX_SpotLight hx_spotLightCasters[HX_NUM_SPOT_LIGHT_CASTERS];\n\nuniform sampler2D hx_spotShadowMaps[HX_NUM_SPOT_LIGHT_CASTERS];\n#endif\n\n#if HX_NUM_DIFFUSE_PROBES > 0 || HX_NUM_SPECULAR_PROBES > 0\nuniform mat4 hx_cameraWorldMatrix;\n#endif\n\n#if HX_NUM_DIFFUSE_PROBES > 0\nuniform samplerCube hx_diffuseProbeMaps[HX_NUM_DIFFUSE_PROBES];\n#endif\n\n#if HX_NUM_SPECULAR_PROBES > 0\nuniform samplerCube hx_specularProbeMaps[HX_NUM_SPECULAR_PROBES];\nuniform float hx_specularProbeNumMips[HX_NUM_SPECULAR_PROBES];\n#endif\n\n#ifdef HX_SSAO\nuniform sampler2D hx_ssao;\n\nuniform vec2 hx_rcpRenderTargetResolution;\n#endif\n\n\nvoid main()\n{\n    HX_GeometryData data = hx_geometry();\n\n    // update the colours\n    vec3 specularColor = mix(vec3(data.normalSpecularReflectance), data.color.xyz, data.metallicness);\n    data.color.xyz *= 1.0 - data.metallicness;\n\n    vec3 diffuseAccum = vec3(0.0);\n    vec3 specularAccum = vec3(0.0);\n    vec3 viewVector = normalize(hx_viewPosition);\n\n    float ao = data.occlusion;\n\n    #ifdef HX_SSAO\n        vec2 screenUV = gl_FragCoord.xy * hx_rcpRenderTargetResolution;\n        ao = texture2D(hx_ssao, screenUV).x;\n    #endif\n\n    #if HX_NUM_DIR_LIGHTS > 0\n    for (int i = 0; i < HX_NUM_DIR_LIGHTS; ++i) {\n        vec3 diffuse, specular;\n        hx_calculateLight(hx_directionalLights[i], data, viewVector, hx_viewPosition, specularColor, diffuse, specular);\n        diffuseAccum += diffuse;\n        specularAccum += specular;\n    }\n    #endif\n\n    #if HX_NUM_DIR_LIGHT_CASTERS > 0\n    for (int i = 0; i < HX_NUM_DIR_LIGHT_CASTERS; ++i) {\n        vec3 diffuse, specular;\n        hx_calculateLight(hx_directionalLightCasters[i], data, viewVector, hx_viewPosition, specularColor, diffuse, specular);\n        float shadow = hx_calculateShadows(hx_directionalLightCasters[i], hx_directionalShadowMaps[i], hx_viewPosition);\n        diffuseAccum += diffuse * shadow;\n        specularAccum += specular * shadow;\n    }\n    #endif\n\n\n    #if HX_NUM_POINT_LIGHTS > 0\n    for (int i = 0; i < HX_NUM_POINT_LIGHTS; ++i) {\n        vec3 diffuse, specular;\n        hx_calculateLight(hx_pointLights[i], data, viewVector, hx_viewPosition, specularColor, diffuse, specular);\n        diffuseAccum += diffuse;\n        specularAccum += specular;\n    }\n    #endif\n\n    #if HX_NUM_POINT_LIGHT_CASTERS > 0\n    for (int i = 0; i < HX_NUM_POINT_LIGHT_CASTERS; ++i) {\n        vec3 diffuse, specular;\n        hx_calculateLight(hx_pointLightCasters[i], data, viewVector, hx_viewPosition, specularColor, diffuse, specular);\n        float shadow = hx_calculateShadows(hx_pointLightCasters[i], hx_pointShadowMaps[i], hx_viewPosition);\n        diffuseAccum += diffuse * shadow;\n        specularAccum += specular * shadow;\n    }\n    #endif\n\n    #if HX_NUM_SPOT_LIGHTS > 0\n    for (int i = 0; i < HX_NUM_SPOT_LIGHTS; ++i) {\n        vec3 diffuse, specular;\n        hx_calculateLight(hx_spotLights[i], data, viewVector, hx_viewPosition, specularColor, diffuse, specular);\n        diffuseAccum += diffuse;\n        specularAccum += specular;\n    }\n    #endif\n\n    #if HX_NUM_SPOT_LIGHT_CASTERS > 0\n    for (int i = 0; i < HX_NUM_SPOT_LIGHT_CASTERS; ++i) {\n        vec3 diffuse, specular;\n        hx_calculateLight(hx_spotLightCasters[i], data, viewVector, hx_viewPosition, specularColor, diffuse, specular);\n        float shadow = hx_calculateShadows(hx_spotLightCasters[i], hx_spotShadowMaps[i], hx_viewPosition);\n        diffuseAccum += diffuse * shadow;\n        specularAccum += specular * shadow;\n    }\n    #endif\n\n// TODO: add support for local probes\n\n    #if HX_NUM_DIFFUSE_PROBES > 0\n    vec3 worldNormal = mat3(hx_cameraWorldMatrix) * data.normal;\n    for (int i = 0; i < HX_NUM_DIFFUSE_PROBES; ++i) {\n        diffuseAccum += hx_calculateDiffuseProbeLight(hx_diffuseProbeMaps[i], worldNormal) * ao;\n    }\n    #endif\n\n    #if HX_NUM_SPECULAR_PROBES > 0\n    vec3 reflectedViewDir = reflect(viewVector, data.normal);\n    vec3 fresnel = hx_fresnelProbe(specularColor, reflectedViewDir, data.normal, data.roughness);\n\n    reflectedViewDir = mat3(hx_cameraWorldMatrix) * reflectedViewDir;\n\n   for (int i = 0; i < HX_NUM_SPECULAR_PROBES; ++i) {\n        specularAccum += hx_calculateSpecularProbeLight(hx_specularProbeMaps[i], hx_specularProbeNumMips[i], reflectedViewDir, fresnel, data.roughness) * ao;\n    }\n    #endif\n\n    gl_FragColor = vec4((diffuseAccum + hx_ambientColor * ao) * data.color.xyz + specularAccum + data.emission, data.color.w);\n\n    #ifdef HX_GAMMA_CORRECT_LIGHTS\n        gl_FragColor = hx_linearToGamma(gl_FragColor);\n    #endif\n}",
on._files["material_fwd_all_vertex.glsl"]="varying vec3 hx_viewPosition;\nuniform mat4 hx_inverseProjectionMatrix;\n\nvoid main()\n{\n    hx_geometry();\n    // we need to do an unprojection here to be sure to have skinning - or anything like that - support\n    hx_viewPosition = (hx_inverseProjectionMatrix * gl_Position).xyz;\n}",on._files["material_fwd_base_fragment.glsl"]="uniform vec3 hx_ambientColor;\n\n#ifdef HX_SSAO\nuniform sampler2D hx_ssao;\n#endif\n\nuniform vec2 hx_rcpRenderTargetResolution;\n\nvoid main()\n{\n    vec2 screenUV = gl_FragCoord.xy * hx_rcpRenderTargetResolution;\n\n    HX_GeometryData data = hx_geometry();\n    // simply override with emission\n    gl_FragColor = data.color;\n    #ifdef HX_SSAO\n    float ssao = texture2D(hx_ssao, screenUV).x;\n    #else\n    float ssao = 1.0;\n    #endif\n    gl_FragColor.xyz = gl_FragColor.xyz * hx_ambientColor * ssao + data.emission;\n\n    #ifdef HX_GAMMA_CORRECT_LIGHTS\n        gl_FragColor = hx_linearToGamma(gl_FragColor);\n    #endif\n}",on._files["material_fwd_base_vertex.glsl"]="void main()\n{\n    hx_geometry();\n}",on._files["material_fwd_dir_fragment.glsl"]="varying vec3 hx_viewPosition;\n\nuniform HX_DirectionalLight hx_directionalLight;\n\n#ifdef HX_SHADOW_MAP\nuniform sampler2D hx_shadowMap;\n#endif\n\nvoid main()\n{\n    HX_GeometryData data = hx_geometry();\n\n    vec3 viewVector = normalize(hx_viewPosition);\n    vec3 diffuse, specular;\n\n    vec3 specularColor = mix(vec3(data.normalSpecularReflectance), data.color.xyz, data.metallicness);\n    data.color.xyz *= 1.0 - data.metallicness;\n\n    hx_calculateLight(hx_directionalLight, data, viewVector, hx_viewPosition, specularColor, diffuse, specular);\n\n    gl_FragColor = vec4(diffuse * data.color.xyz + specular, data.color.w);\n\n    #ifdef HX_SHADOW_MAP\n        gl_FragColor.xyz *= hx_calculateShadows(hx_directionalLight, hx_shadowMap, hx_viewPosition);\n    #endif\n\n    #ifdef HX_GAMMA_CORRECT_LIGHTS\n        gl_FragColor = hx_linearToGamma(gl_FragColor);\n    #endif\n}",on._files["material_fwd_dir_vertex.glsl"]="varying vec3 hx_viewPosition;\nuniform mat4 hx_inverseProjectionMatrix;\n\nvoid main()\n{\n    hx_geometry();\n    hx_viewPosition = (hx_inverseProjectionMatrix * gl_Position).xyz;\n}",on._files["material_fwd_point_fragment.glsl"]="varying vec3 hx_viewPosition;\n\nuniform HX_PointLight hx_pointLight;\n\n#ifdef HX_SHADOW_MAP\nuniform samplerCube hx_shadowMap;\n#endif\n\nvoid main()\n{\n    HX_GeometryData data = hx_geometry();\n\n    vec3 viewVector = normalize(hx_viewPosition);\n    vec3 diffuse, specular;\n\n    vec3 specularColor = mix(vec3(data.normalSpecularReflectance), data.color.xyz, data.metallicness);\n    data.color.xyz *= 1.0 - data.metallicness;\n\n    hx_calculateLight(hx_pointLight, data, viewVector, hx_viewPosition, specularColor, diffuse, specular);\n\n    gl_FragColor = vec4(diffuse * data.color.xyz + specular, data.color.w);\n\n    #ifdef HX_SHADOW_MAP\n        gl_FragColor.xyz *= hx_calculateShadows(hx_pointLight, hx_shadowMap, hx_viewPosition);\n    #endif\n\n    #ifdef HX_GAMMA_CORRECT_LIGHTS\n        gl_FragColor = hx_linearToGamma(gl_FragColor);\n    #endif\n}",on._files["material_fwd_point_vertex.glsl"]="varying vec3 hx_viewPosition;\nuniform mat4 hx_inverseProjectionMatrix;\n\nvoid main()\n{\n    hx_geometry();\n    hx_viewPosition = (hx_inverseProjectionMatrix * gl_Position).xyz;\n}",on._files["material_fwd_probe_fragment.glsl"]="varying vec3 hx_viewPosition;\nvarying vec3 hx_worldPosition;\n\nuniform samplerCube hx_diffuseProbeMap;\nuniform samplerCube hx_specularProbeMap;\nuniform float hx_specularProbeNumMips;\n\nuniform mat4 hx_cameraWorldMatrix;\n\n#ifdef HX_SSAO\nuniform vec2 hx_rcpRenderTargetResolution;\nuniform sampler2D hx_ssao;\n#endif\n\nuniform float hx_probeSize;\nuniform vec3 hx_probePosition;\nuniform float hx_probeLocal;\n\nvoid main()\n{\n    HX_GeometryData data = hx_geometry();\n\n    vec3 viewVector = normalize(hx_viewPosition);\n\n    vec3 specularColor = mix(vec3(data.normalSpecularReflectance), data.color.xyz, data.metallicness);\n    data.color.xyz *= 1.0 - data.metallicness;\n\n    // TODO: We should be able to change the base of TBN in vertex shader\n    vec3 worldNormal = mat3(hx_cameraWorldMatrix) * data.normal;\n    vec3 reflectedViewDir = reflect(viewVector, data.normal);\n    vec3 fresnel = hx_fresnelProbe(specularColor, reflectedViewDir, data.normal, data.roughness);\n    reflectedViewDir = mat3(hx_cameraWorldMatrix) * reflectedViewDir;\n    vec3 diffRay = hx_intersectCubeMap(hx_worldPosition, hx_probePosition, worldNormal, hx_probeSize);\n    vec3 specRay = hx_intersectCubeMap(hx_worldPosition, hx_probePosition, reflectedViewDir, hx_probeSize);\n    diffRay = mix(worldNormal, diffRay, hx_probeLocal);\n    specRay = mix(reflectedViewDir, specRay, hx_probeLocal);\n    vec3 diffuse = hx_calculateDiffuseProbeLight(hx_diffuseProbeMap, diffRay);\n    vec3 specular = hx_calculateSpecularProbeLight(hx_specularProbeMap, hx_specularProbeNumMips, specRay, fresnel, data.roughness);\n\n    gl_FragColor = vec4((diffuse * data.color.xyz + specular) * data.occlusion, data.color.w);\n\n    #ifdef HX_SSAO\n    vec2 screenUV = gl_FragCoord.xy * hx_rcpRenderTargetResolution;\n    gl_FragColor.xyz *= texture2D(hx_ssao, screenUV).x;\n    #endif\n\n    #ifdef HX_GAMMA_CORRECT_LIGHTS\n        gl_FragColor = hx_linearToGamma(gl_FragColor);\n    #endif\n}",on._files["material_fwd_probe_vertex.glsl"]="varying vec3 hx_viewPosition;\nvarying vec3 hx_worldPosition;\nuniform mat4 hx_inverseProjectionMatrix;\nuniform mat4 hx_worldMatrix;\n\nvoid main()\n{\n    hx_geometry();\n    hx_worldPosition = (hx_worldMatrix * gl_Position).xyz;\n    hx_viewPosition = (hx_inverseProjectionMatrix * gl_Position).xyz;\n}",on._files["material_fwd_spot_fragment.glsl"]="varying vec3 hx_viewPosition;\n\nuniform HX_SpotLight hx_spotLight;\n\n#ifdef HX_SHADOW_MAP\nuniform sampler2D hx_shadowMap;\n#endif\n\nvoid main()\n{\n    HX_GeometryData data = hx_geometry();\n\n    vec3 viewVector = normalize(hx_viewPosition);\n    vec3 diffuse, specular;\n\n    vec3 specularColor = mix(vec3(data.normalSpecularReflectance), data.color.xyz, data.metallicness);\n    data.color.xyz *= 1.0 - data.metallicness;\n\n    hx_calculateLight(hx_spotLight, data, viewVector, hx_viewPosition, specularColor, diffuse, specular);\n\n    gl_FragColor = vec4(diffuse * data.color.xyz + specular, data.color.w);\n\n    #ifdef HX_SHADOW_MAP\n        gl_FragColor.xyz *= hx_calculateShadows(hx_spotLight, hx_shadowMap, hx_viewPosition);\n    #endif\n\n    #ifdef HX_GAMMA_CORRECT_LIGHTS\n        gl_FragColor = hx_linearToGamma(gl_FragColor);\n    #endif\n}",on._files["material_fwd_spot_vertex.glsl"]="varying vec3 hx_viewPosition;\nuniform mat4 hx_inverseProjectionMatrix;\n\nvoid main()\n{\n    hx_geometry();\n    hx_viewPosition = (hx_inverseProjectionMatrix * gl_Position).xyz;\n}",on._files["material_gbuffer_albedo_fragment.glsl"]="void main()\n{\n    HX_GeometryData data = hx_geometry();\n    gl_FragColor.xyz = data.color.xyz;\n    gl_FragColor.w = data.occlusion;\n}",on._files["material_gbuffer_albedo_vertex.glsl"]="void main()\n{\n    hx_geometry();\n}",on._files["material_gbuffer_full_fragment.glsl"]="#drawbuffers\n\nvarying float hx_linearDepth;\n\nvoid main()\n{\n    HX_GeometryData data = hx_geometry();\n    gl_FragData[0] = vec4(data.color.xyz, data.occlusion);\n    gl_FragData[1].xy = hx_encodeNormal(data.normal);\n    gl_FragData[1].zw = hx_floatToRG8(hx_linearDepth);\n    gl_FragData[2].x = data.metallicness;\n    gl_FragData[2].y = data.normalSpecularReflectance * 5.0;  // better use of available range\n    gl_FragData[2].z = data.roughness;\n    gl_FragData[2].w = 1.0;\n}",on._files["material_gbuffer_full_vertex.glsl"]="varying float hx_linearDepth;\n\nuniform float hx_rcpCameraFrustumRange;\nuniform float hx_cameraNearPlaneDistance;\n\nvoid main()\n{\n    hx_geometry();\n\n    hx_linearDepth = (gl_Position.w - hx_cameraNearPlaneDistance) * hx_rcpCameraFrustumRange;\n}",on._files["material_gbuffer_normal_depth_fragment.glsl"]="varying float hx_linearDepth;\n\nvoid main()\n{\n    HX_GeometryData data = hx_geometry();\n    gl_FragColor.xy = hx_encodeNormal(data.normal);\n    gl_FragColor.zw = hx_floatToRG8(hx_linearDepth);\n}",on._files["material_gbuffer_normal_depth_vertex.glsl"]="varying float hx_linearDepth;\n\nuniform float hx_rcpCameraFrustumRange;\nuniform float hx_cameraNearPlaneDistance;\n\nvoid main()\n{\n    hx_geometry();\n\n    hx_linearDepth = (gl_Position.w - hx_cameraNearPlaneDistance) * hx_rcpCameraFrustumRange;\n}",on._files["material_gbuffer_specular_fragment.glsl"]="void main()\n{\n    HX_GeometryData data = hx_geometry();\n    gl_FragColor.x = data.metallicness;\n    gl_FragColor.y = data.normalSpecularReflectance * 5.0;  // better use of available range\n    gl_FragColor.z = data.roughness;\n    gl_FragColor.w = 1.0;\n}",on._files["material_gbuffer_specular_vertex.glsl"]="void main()\n{\n    hx_geometry();\n}",on._files["material_point_shadow_fragment.glsl"]="varying vec3 hx_viewPosition;\n\nuniform float hx_rcpRadius;\n\nvoid main()\n{\n    // geometry is really only used for kil instructions if necessary\n    // hopefully the compiler optimizes the rest out for us\n    HX_GeometryData data = hx_geometry();\n\n    gl_FragColor = hx_point_getShadowMapValue(length(hx_viewPosition) * hx_rcpRadius);\n}",on._files["material_point_shadow_vertex.glsl"]="varying vec3 hx_viewPosition;\n\nuniform mat4 hx_inverseProjectionMatrix;\n\nvoid main()\n{\n    hx_geometry();\n    hx_viewPosition = (hx_inverseProjectionMatrix * gl_Position).xyz;\n}",on._files["material_spot_shadow_fragment.glsl"]="void main()\n{\n    // geometry is really only used for kil instructions if necessary\n    // hopefully the compiler optimizes the rest out for us\n    HX_GeometryData data = hx_geometry();\n\n    // should we store distance instead of shadow value?\n    gl_FragColor = hx_spot_getShadowMapValue(gl_FragCoord.z);\n}",on._files["material_unlit_fragment.glsl"]="void main()\n{\n    HX_GeometryData data = hx_geometry();\n    gl_FragColor = data.color;\n    gl_FragColor.xyz += data.emission;\n\n\n    #ifdef HX_GAMMA_CORRECT_LIGHTS\n        gl_FragColor = hx_linearToGamma(gl_FragColor);\n    #endif\n}",on._files["material_unlit_vertex.glsl"]="void main()\n{\n    hx_geometry();\n}",on._files["blend_color_copy_fragment.glsl"]="varying vec2 uv;\n\nuniform sampler2D sampler;\n\nuniform vec4 blendColor;\n\nvoid main()\n{\n    // extractChannel comes from a macro\n   gl_FragColor = texture2D(sampler, uv) * blendColor;\n}\n",on._files["copy_fragment.glsl"]="varying vec2 uv;\n\nuniform sampler2D sampler;\n\nvoid main()\n{\n    // extractChannel comes from a macro\n   gl_FragColor = vec4(extractChannels(texture2D(sampler, uv)));\n\n#ifndef COPY_ALPHA\n   gl_FragColor.a = 1.0;\n#endif\n}\n",on._files["copy_to_gamma_fragment.glsl"]="varying vec2 uv;\n\nuniform sampler2D sampler;\n\nvoid main()\n{\n   gl_FragColor = hx_linearToGamma(texture2D(sampler, uv));\n}",on._files["copy_vertex.glsl"]="attribute vec4 hx_position;\n attribute vec2 hx_texCoord;\n\n varying vec2 uv;\n\n void main()\n {\n     uv = hx_texCoord;\n     gl_Position = hx_position;\n }",on._files["null_fragment.glsl"]="void main()\n{\n   gl_FragColor = vec4(1.0);\n}\n",on._files["null_vertex.glsl"]="attribute vec4 hx_position;\n\nvoid main()\n{\n    gl_Position = hx_position;\n}",on._files["dir_shadow_esm.glsl"]="vec4 hx_dir_getShadowMapValue(float depth)\n{\n    // I wish we could write exp directly, but precision issues (can't encode real floats)\n    return vec4(exp(HX_ESM_CONSTANT * depth));\n// so when blurring, we'll need to do ln(sum(exp())\n//    return vec4(depth);\n}\n\nfloat hx_dir_readShadow(sampler2D shadowMap, vec4 shadowMapCoord, float depthBias)\n{\n    float shadowSample = texture2D(shadowMap, shadowMapCoord.xy).x;\n    shadowMapCoord.z += depthBias;\n//    float diff = shadowSample - shadowMapCoord.z;\n//    return saturate(HX_ESM_DARKENING * exp(HX_ESM_CONSTANT * diff));\n    return saturate(HX_ESM_DARKENING * shadowSample * exp(-HX_ESM_CONSTANT * shadowMapCoord.z));\n}",on._files["dir_shadow_hard.glsl"]="vec4 hx_dir_getShadowMapValue(float depth)\n{\n    return hx_floatToRGBA8(depth);\n}\n\nfloat hx_dir_readShadow(sampler2D shadowMap, vec4 shadowMapCoord, float depthBias)\n{\n    float shadowSample = hx_RGBA8ToFloat(texture2D(shadowMap, shadowMapCoord.xy));\n    float diff = shadowMapCoord.z - shadowSample - depthBias;\n    return float(diff < 0.0);\n}",on._files["dir_shadow_pcf.glsl"]="#ifdef HX_DIR_PCF_DITHER_SHADOWS\n    uniform sampler2D hx_dither2D;\n    uniform vec2 hx_dither2DTextureScale;\n#endif\n\nuniform vec2 hx_poissonDisk[32];\n\nvec4 hx_dir_getShadowMapValue(float depth)\n{\n    return hx_floatToRGBA8(depth);\n}\n\nfloat hx_dir_readShadow(sampler2D shadowMap, vec4 shadowMapCoord, float depthBias)\n{\n    float shadowTest = 0.0;\n\n    #ifdef HX_DIR_PCF_DITHER_SHADOWS\n        vec4 dither = hx_sampleDefaultDither(hx_dither2D, gl_FragCoord.xy * hx_dither2DTextureScale);\n        dither = vec4(dither.x, -dither.y, dither.y, dither.x) * HX_DIR_PCF_SOFTNESS;  // add radius scale\n    #else\n        vec4 dither = vec4(HX_DIR_PCF_SOFTNESS);\n    #endif\n\n    for (int i = 0; i < HX_DIR_PCF_NUM_SHADOW_SAMPLES; ++i) {\n        vec2 offset;\n        offset.x = dot(dither.xy, hx_poissonDisk[i]);\n        offset.y = dot(dither.zw, hx_poissonDisk[i]);\n        float shadowSample = hx_RGBA8ToFloat(texture2D(shadowMap, shadowMapCoord.xy + offset));\n        float diff = shadowMapCoord.z - shadowSample - depthBias;\n        shadowTest += float(diff < 0.0);\n    }\n\n    return shadowTest * HX_DIR_PCF_RCP_NUM_SHADOW_SAMPLES;\n}",on._files["dir_shadow_vsm.glsl"]="#derivatives\n\nvec4 hx_dir_getShadowMapValue(float depth)\n{\n    float dx = dFdx(depth);\n    float dy = dFdy(depth);\n    float moment2 = depth * depth + 0.25*(dx*dx + dy*dy);\n\n    #if defined(HX_HALF_FLOAT_TEXTURES_LINEAR) || defined(HX_FLOAT_TEXTURES_LINEAR)\n    return vec4(depth, moment2, 0.0, 1.0);\n    #else\n    return vec4(hx_floatToRG8(depth), hx_floatToRG8(moment2));\n    #endif\n}\n\nfloat hx_dir_readShadow(sampler2D shadowMap, vec4 shadowMapCoord, float depthBias)\n{\n    vec4 s = texture2D(shadowMap, shadowMapCoord.xy);\n    #if defined(HX_HALF_FLOAT_TEXTURES_LINEAR) || defined(HX_FLOAT_TEXTURES_LINEAR)\n    vec2 moments = s.xy;\n    #else\n    vec2 moments = vec2(hx_RG8ToFloat(s.xy), hx_RG8ToFloat(s.zw));\n    #endif\n    shadowMapCoord.z += depthBias;\n\n    float variance = moments.y - moments.x * moments.x;\n    variance = max(variance, HX_DIR_VSM_MIN_VARIANCE);\n\n    float diff = shadowMapCoord.z - moments.x;\n    float upperBound = 1.0;\n\n    // transparents could be closer to the light than casters\n    if (diff > 0.0)\n        upperBound = variance / (variance + diff*diff);\n\n    return saturate((upperBound - HX_DIR_VSM_LIGHT_BLEED_REDUCTION) * HX_DIR_VSM_RCP_LIGHT_BLEED_REDUCTION_RANGE);\n}",on._files["esm_blur_fragment.glsl"]="varying vec2 uv;\n\nuniform sampler2D source;\nuniform vec2 direction; // this is 1/pixelSize\n\nfloat readValue(vec2 coord)\n{\n    float v = texture2D(source, coord).x;\n    return v;\n//    return exp(HX_ESM_CONSTANT * v);\n}\n\nvoid main()\n{\n    float total = readValue(uv);\n\n\tfor (int i = 1; i <= RADIUS; ++i) {\n\t    vec2 offset = direction * float(i);\n\t\ttotal += readValue(uv + offset) + readValue(uv - offset);\n\t}\n\n//\tgl_FragColor = vec4(log(total * RCP_NUM_SAMPLES) / HX_ESM_CONSTANT);\n\tgl_FragColor = vec4(total * RCP_NUM_SAMPLES);\n}",on._files["point_shadow_hard.glsl"]="vec4 hx_point_getShadowMapValue(float distance)\n{\n    return hx_floatToRGBA8(distance);\n}\n\nfloat hx_point_readShadow(samplerCube shadowMap, vec3 worldDir, float rcpRadius, float depthBias)\n{\n    // in world direction, because rendering cube map in view space introduces temporal aliasing\n\n    float dist = length(worldDir);\n    worldDir /= dist;\n    float shadowSample = hx_RGBA8ToFloat(textureCube(shadowMap, worldDir.xzy));\n    float diff = dist * rcpRadius - shadowSample - depthBias;\n    return float(diff < 0.0);\n}",on._files["point_shadow_pcf.glsl"]="#ifdef HX_POINT_PCF_DITHER_SHADOWS\n    uniform sampler2D hx_dither2D;\n    uniform vec2 hx_dither2DTextureScale;\n#endif\n\nuniform vec2 hx_poissonDisk[32];\n\nvec4 hx_point_getShadowMapValue(float distance)\n{\n    return hx_floatToRGBA8(distance);\n}\n\n#ifdef HX_FRAGMENT_SHADER\nfloat hx_point_readShadow(samplerCube shadowMap, vec3 worldDir, float rcpRadius, float depthBias)\n{\n    // in world direction, because rendering cube map in view space introduces temporal aliasing\n    float dist = length(worldDir);\n    worldDir /= dist;\n\n    // get the basis perpendicular to the sample vector to distribute the sphere samples correctly\n    float shadowTest = 0.0;\n    vec3 xDir = cross(worldDir, vec3(0.0, 1.0, 0.0));\n    vec3 yDir = cross(xDir, worldDir);\n\n    #ifdef HX_POINT_PCF_DITHER_SHADOWS\n        vec4 dither = hx_sampleDefaultDither(hx_dither2D, gl_FragCoord.xy * hx_dither2DTextureScale);\n        dither = vec4(dither.x, -dither.y, dither.y, dither.x) * HX_POINT_PCF_SOFTNESS;  // add radius scale\n    #else\n        vec4 dither = vec4(HX_POINT_PCF_SOFTNESS);\n    #endif\n\n    vec3 offset = vec3(0.0);\n    for (int i = 0; i < HX_POINT_PCF_NUM_SHADOW_SAMPLES; ++i) {\n        offset.x = dot(dither.xy, hx_poissonDisk[i]);\n        offset.y = dot(dither.zw, hx_poissonDisk[i]);\n        vec3 coord = worldDir + xDir * offset.x + yDir * offset.y;\n        float shadowSample = hx_RGBA8ToFloat(textureCube(shadowMap, coord.xzy));\n        float diff = dist * rcpRadius - shadowSample - depthBias;\n        shadowTest += float(diff < 0.0);\n    }\n\n\n    return shadowTest * HX_POINT_PCF_RCP_NUM_SHADOW_SAMPLES;\n}\n#endif",on._files["spot_shadow_hard.glsl"]="vec4 hx_spot_getShadowMapValue(float depth)\n{\n    return hx_floatToRGBA8(depth);\n}\n\nfloat hx_spot_readShadow(sampler2D shadowMap, vec3 viewPos, mat4 shadowMapMatrix, float depthBias)\n{\n    vec4 shadowMapCoord = shadowMapMatrix * vec4(viewPos, 1.0);\n    shadowMapCoord /= shadowMapCoord.w;\n    shadowMapCoord.xyz = shadowMapCoord.xyz * .5 + .5;\n    float shadowSample = hx_RGBA8ToFloat(texture2D(shadowMap, shadowMapCoord.xy));\n    float diff = shadowMapCoord.z - shadowSample - depthBias;\n    return float(diff < 0.0);\n}",on._files["spot_shadow_pcf.glsl"]="#ifdef HX_SPOT_PCF_DITHER_SHADOWS\n    uniform sampler2D hx_dither2D;\n    uniform vec2 hx_dither2DTextureScale;\n#endif\n\nuniform vec2 hx_poissonDisk[32];\n\nvec4 hx_spot_getShadowMapValue(float depth)\n{\n    return hx_floatToRGBA8(depth);\n}\n\n#ifdef HX_FRAGMENT_SHADER\nfloat hx_spot_readShadow(sampler2D shadowMap, vec3 viewPos, mat4 shadowMapMatrix, float depthBias)\n{\n    vec4 shadowMapCoord = shadowMapMatrix * vec4(viewPos, 1.0);\n    shadowMapCoord /= shadowMapCoord.w;\n    shadowMapCoord.xyz = shadowMapCoord.xyz * .5 + .5;\n    float shadowTest = 0.0;\n\n    #ifdef HX_SPOT_PCF_DITHER_SHADOWS\n        vec4 dither = hx_sampleDefaultDither(hx_dither2D, gl_FragCoord.xy * hx_dither2DTextureScale);\n        dither = vec4(dither.x, -dither.y, dither.y, dither.x) * HX_SPOT_PCF_SOFTNESS;  // add radius scale\n    #else\n        vec4 dither = vec4(HX_SPOT_PCF_SOFTNESS);\n    #endif\n\n    for (int i = 0; i < HX_SPOT_PCF_NUM_SHADOW_SAMPLES; ++i) {\n        vec2 offset;\n        offset.x = dot(dither.xy, hx_poissonDisk[i]);\n        offset.y = dot(dither.zw, hx_poissonDisk[i]);\n        float shadowSample = hx_RGBA8ToFloat(texture2D(shadowMap, shadowMapCoord.xy + offset));\n        float diff = shadowMapCoord.z - shadowSample - depthBias;\n        shadowTest += float(diff < 0.0);\n    }\n\n    return shadowTest * HX_SPOT_PCF_RCP_NUM_SHADOW_SAMPLES;\n}\n#endif",on._files["vsm_blur_fragment.glsl"]="varying vec2 uv;\n\nuniform sampler2D source;\nuniform vec2 direction; // this is 1/pixelSize\n\nvec2 readValues(vec2 coord)\n{\n    vec4 s = texture2D(source, coord);\n    #if defined(HX_HALF_FLOAT_TEXTURES_LINEAR) || defined(HX_FLOAT_TEXTURES_LINEAR)\n    return s.xy;\n    #else\n    return vec2(hx_RG8ToFloat(s.xy), hx_RG8ToFloat(s.zw));\n    #endif\n}\n\nvoid main()\n{\n    vec2 total = readValues(uv);\n\n\tfor (int i = 1; i <= RADIUS; ++i) {\n\t    vec2 offset = direction * float(i);\n\t\ttotal += readValues(uv + offset) + readValues(uv - offset);\n\t}\n\n    total *= RCP_NUM_SAMPLES;\n\n#if defined(HX_HALF_FLOAT_TEXTURES_LINEAR) || defined(HX_FLOAT_TEXTURES_LINEAR)\n    gl_FragColor = vec4(total, 0.0, 1.0);\n#else\n\tgl_FragColor.xy = hx_floatToRG8(total.x);\n\tgl_FragColor.zw = hx_floatToRG8(total.y);\n#endif\n}",on._files["snippets_general.glsl"]="#define HX_LOG_10 2.302585093\n\nfloat saturate(float value)\n{\n    return clamp(value, 0.0, 1.0);\n}\n\nvec2 saturate(vec2 value)\n{\n    return clamp(value, 0.0, 1.0);\n}\n\nvec3 saturate(vec3 value)\n{\n    return clamp(value, 0.0, 1.0);\n}\n\nvec4 saturate(vec4 value)\n{\n    return clamp(value, 0.0, 1.0);\n}\n\n// Only for 0 - 1\nvec4 hx_floatToRGBA8(float value)\n{\n    vec4 enc = value * vec4(1.0, 255.0, 65025.0, 16581375.0);\n    // cannot fract first value or 1 would not be encodable\n    enc.yzw = fract(enc.yzw);\n    return enc - enc.yzww * vec4(1.0/255.0, 1.0/255.0, 1.0/255.0, 0.0);\n}\n\nfloat hx_RGBA8ToFloat(vec4 rgba)\n{\n    return dot(rgba, vec4(1.0, 1.0/255.0, 1.0/65025.0, 1.0/16581375.0));\n}\n\nvec2 hx_floatToRG8(float value)\n{\n    vec2 enc = vec2(1.0, 255.0) * value;\n    enc.y = fract(enc.y);\n    enc.x -= enc.y / 255.0;\n    return enc;\n}\n\nfloat hx_RG8ToFloat(vec2 rg)\n{\n    return dot(rg, vec2(1.0, 1.0/255.0));\n}\n\nvec2 hx_encodeNormal(vec3 normal)\n{\n    vec2 data;\n    float p = sqrt(-normal.y*8.0 + 8.0);\n    data = normal.xz / p + .5;\n    return data;\n}\n\nvec3 hx_decodeNormal(vec4 data)\n{\n    vec3 normal;\n    data.xy = data.xy*4.0 - 2.0;\n    float f = dot(data.xy, data.xy);\n    float g = sqrt(1.0 - f * .25);\n    normal.xz = data.xy * g;\n    normal.y = -(1.0 - f * .5);\n    return normal;\n}\n\nfloat hx_log10(float val)\n{\n    return log(val) / HX_LOG_10;\n}\n\nvec4 hx_gammaToLinear(vec4 color)\n{\n    #if defined(HX_GAMMA_CORRECTION_PRECISE)\n        color.x = pow(color.x, 2.2);\n        color.y = pow(color.y, 2.2);\n        color.z = pow(color.z, 2.2);\n    #elif defined(HX_GAMMA_CORRECTION_FAST)\n        color.xyz *= color.xyz;\n    #endif\n    return color;\n}\n\nvec3 hx_gammaToLinear(vec3 color)\n{\n    #if defined(HX_GAMMA_CORRECTION_PRECISE)\n        color.x = pow(color.x, 2.2);\n        color.y = pow(color.y, 2.2);\n        color.z = pow(color.z, 2.2);\n    #elif defined(HX_GAMMA_CORRECTION_FAST)\n        color.xyz *= color.xyz;\n    #endif\n    return color;\n}\n\nvec4 hx_linearToGamma(vec4 linear)\n{\n    #if defined(HX_GAMMA_CORRECTION_PRECISE)\n        linear.x = pow(linear.x, 0.454545);\n        linear.y = pow(linear.y, 0.454545);\n        linear.z = pow(linear.z, 0.454545);\n    #elif defined(HX_GAMMA_CORRECTION_FAST)\n        linear.xyz = sqrt(linear.xyz);\n    #endif\n    return linear;\n}\n\nvec3 hx_linearToGamma(vec3 linear)\n{\n    #if defined(HX_GAMMA_CORRECTION_PRECISE)\n        linear.x = pow(linear.x, 0.454545);\n        linear.y = pow(linear.y, 0.454545);\n        linear.z = pow(linear.z, 0.454545);\n    #elif defined(HX_GAMMA_CORRECTION_FAST)\n        linear.xyz = sqrt(linear.xyz);\n    #endif\n    return linear;\n}\n\n/*float hx_sampleLinearDepth(sampler2D tex, vec2 uv)\n{\n    return hx_RGBA8ToFloat(texture2D(tex, uv));\n}*/\n\nfloat hx_decodeLinearDepth(vec4 samp)\n{\n    return hx_RG8ToFloat(samp.zw);\n}\n\nvec3 hx_getFrustumVector(vec2 position, mat4 unprojectionMatrix)\n{\n    vec4 unprojNear = unprojectionMatrix * vec4(position, -1.0, 1.0);\n    vec4 unprojFar = unprojectionMatrix * vec4(position, 1.0, 1.0);\n    return unprojFar.xyz/unprojFar.w - unprojNear.xyz/unprojNear.w;\n}\n\n// view vector with z = 1, so we can use nearPlaneDist + linearDepth * (farPlaneDist - nearPlaneDist) as a scale factor to find view space position\nvec3 hx_getLinearDepthViewVector(vec2 position, mat4 unprojectionMatrix)\n{\n    vec4 unproj = unprojectionMatrix * vec4(position, 0.0, 1.0);\n    unproj /= unproj.w;\n    return unproj.xyz / unproj.y;\n}\n\n// THIS IS FOR NON_LINEAR DEPTH!\nfloat hx_depthToViewY(float depthSample, mat4 projectionMatrix)\n{\n    // View Y maps to NDC Z!!!\n    // y = projectionMatrix[3][2] / (d * 2.0 - 1.0 + projectionMatrix[1][2])\n    return projectionMatrix[3][2] / (depthSample * 2.0 - 1.0 + projectionMatrix[1][2]);\n}\n\nvec3 hx_getNormalSpecularReflectance(float metallicness, float insulatorNormalSpecularReflectance, vec3 color)\n{\n    return mix(vec3(insulatorNormalSpecularReflectance), color, metallicness);\n}\n\nvec3 hx_fresnel(vec3 normalSpecularReflectance, vec3 lightDir, vec3 halfVector)\n{\n    float cosAngle = 1.0 - max(dot(halfVector, lightDir), 0.0);\n    // to the 5th power\n    float power = pow(cosAngle, 5.0);\n    return normalSpecularReflectance + (1.0 - normalSpecularReflectance) * power;\n}\n\n// https://seblagarde.wordpress.com/2011/08/17/hello-world/\nvec3 hx_fresnelProbe(vec3 normalSpecularReflectance, vec3 lightDir, vec3 normal, float roughness)\n{\n    float cosAngle = 1.0 - max(dot(normal, lightDir), 0.0);\n    // to the 5th power\n    float power = pow(cosAngle, 5.0);\n    float gloss = (1.0 - roughness) * (1.0 - roughness);\n    vec3 bound = max(vec3(gloss), normalSpecularReflectance);\n    return normalSpecularReflectance + (bound - normalSpecularReflectance) * power;\n}\n\n\nfloat hx_luminance(vec4 color)\n{\n    return dot(color.xyz, vec3(.30, 0.59, .11));\n}\n\nfloat hx_luminance(vec3 color)\n{\n    return dot(color, vec3(.30, 0.59, .11));\n}\n\n// linear variant of smoothstep\nfloat hx_linearStep(float lower, float upper, float x)\n{\n    return clamp((x - lower) / (upper - lower), 0.0, 1.0);\n}\n\nvec4 hx_sampleDefaultDither(sampler2D ditherTexture, vec2 uv)\n{\n    vec4 s = texture2D(ditherTexture, uv);\n\n    #ifndef HX_FLOAT_TEXTURES\n    s = s * 2.0 - 1.0;\n    #endif\n\n    return s;\n}\n\nvec3 hx_intersectCubeMap(vec3 rayOrigin, vec3 cubeCenter, vec3 rayDir, float cubeSize)\n{\n    vec3 t = (cubeSize * sign(rayDir) - (rayOrigin - cubeCenter)) / rayDir;\n    float minT = min(min(t.x, t.y), t.z);\n    return rayOrigin + minT * rayDir;\n}\n\n// sadly, need a parameter due to a bug in Internet Explorer / Edge. Just pass in 0.\n#ifdef HX_USE_SKINNING_TEXTURE\n#define HX_RCP_MAX_SKELETON_JOINTS 1.0 / float(HX_MAX_SKELETON_JOINTS - 1)\nmat4 hx_getSkinningMatrixImpl(vec4 weights, vec4 indices, sampler2D tex)\n{\n    mat4 m = mat4(0.0);\n    for (int i = 0; i < 4; ++i) {\n        mat4 t;\n        float index = indices[i] * HX_RCP_MAX_SKELETON_JOINTS;\n        t[0] = texture2D(tex, vec2(index, 0.0));\n        t[1] = texture2D(tex, vec2(index, 0.5));\n        t[2] = texture2D(tex, vec2(index, 1.0));\n        t[3] = vec4(0.0, 0.0, 0.0, 1.0);\n        m += weights[i] * t;\n    }\n    return m;\n}\n#define hx_getSkinningMatrix(v) hx_getSkinningMatrixImpl(hx_jointWeights, hx_jointIndices, hx_skinningTexture)\n#else\n#define hx_getSkinningMatrix(v) ( hx_jointWeights.x * mat4(hx_skinningMatrices[int(hx_jointIndices.x) * 3], hx_skinningMatrices[int(hx_jointIndices.x) * 3 + 1], hx_skinningMatrices[int(hx_jointIndices.x) * 3 + 2], vec4(0.0, 0.0, 0.0, 1.0)) + hx_jointWeights.y * mat4(hx_skinningMatrices[int(hx_jointIndices.y) * 3], hx_skinningMatrices[int(hx_jointIndices.y) * 3 + 1], hx_skinningMatrices[int(hx_jointIndices.y) * 3 + 2], vec4(0.0, 0.0, 0.0, 1.0)) + hx_jointWeights.z * mat4(hx_skinningMatrices[int(hx_jointIndices.z) * 3], hx_skinningMatrices[int(hx_jointIndices.z) * 3 + 1], hx_skinningMatrices[int(hx_jointIndices.z) * 3 + 2], vec4(0.0, 0.0, 0.0, 1.0)) + hx_jointWeights.w * mat4(hx_skinningMatrices[int(hx_jointIndices.w) * 3], hx_skinningMatrices[int(hx_jointIndices.w) * 3 + 1], hx_skinningMatrices[int(hx_jointIndices.w) * 3 + 2], vec4(0.0, 0.0, 0.0, 1.0)) )\n#endif",on._files["snippets_geometry.glsl"]="struct HX_GeometryData\n{\n    vec4 color;\n    vec3 normal;\n    float metallicness;\n    float normalSpecularReflectance;\n    float roughness;\n    float occlusion;\n    vec3 emission;\n    vec4 data;  // this can be anything the lighting model requires (only works with forward rendering)\n};\n\n// used for parsing deferred passes\nstruct HX_GBufferData\n{\n    HX_GeometryData geometry;\n\n    // extra decoding stuff\n    vec3 normalSpecularReflectance;\n    float linearDepth;\n};\n\nHX_GBufferData hx_parseGBuffer(sampler2D albedoTex, sampler2D normalDepthTex, sampler2D specularTex, vec2 uv)\n{\n    HX_GBufferData data;\n    vec4 albedoSample = texture2D(albedoTex, uv);\n    vec4 normalDepthSample = texture2D(normalDepthTex, uv);\n    vec4 specularSample = texture2D(specularTex, uv);\n    data.geometry.normal = hx_decodeNormal(normalDepthSample);\n    data.geometry.metallicness = specularSample.x;\n    data.geometry.normalSpecularReflectance = specularSample.y * .2;\n    data.geometry.roughness = max(specularSample.z, .01);\n    data.geometry.color = vec4(albedoSample.xyz * (1.0 - data.geometry.metallicness), 1.0);\n    data.geometry.occlusion = albedoSample.w;\n    data.normalSpecularReflectance = hx_getNormalSpecularReflectance(specularSample.x, data.geometry.normalSpecularReflectance, albedoSample.xyz);\n    data.linearDepth = hx_RG8ToFloat(normalDepthSample.zw);\n    return data;\n}",on._files["snippets_tonemap.glsl"]="varying vec2 uv;\n\n#ifdef HX_ADAPTIVE\nuniform sampler2D hx_luminanceMap;\nuniform float hx_luminanceMipLevel;\n#endif\n\nuniform float hx_exposure;\nuniform float hx_key;\n\nuniform sampler2D hx_backbuffer;\n\n\nvec4 hx_getToneMapScaledColor()\n{\n    #ifdef HX_ADAPTIVE\n    float referenceLuminance = exp(texture2DLodEXT(hx_luminanceMap, uv, hx_luminanceMipLevel).x) - 1.0;\n    referenceLuminance = clamp(referenceLuminance, .08, 1000.0);\n\tfloat exposure = hx_key / referenceLuminance * hx_exposure;\n\t#else\n\tfloat exposure = hx_exposure;\n\t#endif\n    return texture2D(hx_backbuffer, uv) * exposure;\n}",on._files["2d_to_cube_vertex.glsl"]="// position to write to\nattribute vec4 hx_position;\n\n// the corner of the cube map\nattribute vec3 corner;\n\nvarying vec3 direction;\n\nvoid main()\n{\n    direction = corner;\n    gl_Position = hx_position;\n}\n",on._files["equirectangular_to_cube_fragment.glsl"]="#define RECIPROCAL_PI2 0.15915494\n\nvarying vec3 direction;\n\nuniform sampler2D source;\n\nvoid main()\n{\n    vec3 dir = normalize(direction);\n    vec2 uv;\n    uv.x = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tuv.y = dir.y * 0.5 + 0.5;\n    gl_FragColor = texture2D(source, uv);\n}\n",on._files["greyscale_to_rgba8.glsl"]="varying vec2 uv;\n\nuniform sampler2D source;\n\nvoid main()\n{\n    gl_FragColor = hx_floatToRGBA8(texture2D(source, uv).x);\n}\n",on._files["smooth_heightmap_fragment.glsl"]="varying vec2 uv;\n\nuniform sampler2D reference;    // the source (8 bit) texture\nuniform sampler2D source;\n\nuniform vec2 stepSize;\n\nvoid main()\n{\n    float gauss[4];\n    gauss[0] = 0.201788613113303;\n    gauss[1] = 0.17755834971394;\n    gauss[2] = 0.120969095455128;\n    gauss[3] = 0.063811162332456;\n    float refHeight = texture2D(reference, uv).x;\n    float total = hx_RGBA8ToFloat(texture2D(source, uv)) * gauss[0];\n    float totalWeight = gauss[0];\n    float currentWeightL = 1.0;\n    float currentWeightR = 1.0;\n    vec2 offset = vec2(0.0);\n\n\n    for (int i = 0; i < 3; ++i) {\n        offset += stepSize;\n        float refLeft = texture2D(reference, uv - offset).x;\n        float refRight = texture2D(reference, uv + offset).x;\n        float heightLeft = hx_RGBA8ToFloat(texture2D(source, uv - offset));\n        float heightRight = hx_RGBA8ToFloat(texture2D(source, uv + offset));\n        // smooth out over N pixels that have the same reference height in the source image\n        currentWeightL = max(currentWeightL - abs(refLeft - refHeight) * 5.0, 0.0);\n        currentWeightR = max(currentWeightR - abs(refRight - refHeight) * 5.0, 0.0);\n        totalWeight += (currentWeightL + currentWeightR) * gauss[i + 1];\n        total += (heightLeft * currentWeightL + heightRight * currentWeightR) *  gauss[i + 1];\n    }\n\n    gl_FragColor = hx_floatToRGBA8(total / totalWeight);\n//    gl_FragColor = hx_floatToRGBA8(refHeight);\n}\n",
on._files["ao_blur_fragment.glsl"]="varying vec2 uv1;\nvarying vec2 uv2;\nvarying vec2 uv3;\nvarying vec2 uv4;\n\nuniform sampler2D source;\n\nvoid main()\n{\n    vec4 total = texture2D(source, uv1) + texture2D(source, uv2) + texture2D(source, uv3) + texture2D(source, uv4);\n\tgl_FragColor = total * .25;\n}",on._files["ao_blur_vertex.glsl"]="attribute vec4 hx_position;\nattribute vec2 hx_texCoord;\n\nvarying vec2 uv1;\nvarying vec2 uv2;\nvarying vec2 uv3;\nvarying vec2 uv4;\n\nuniform vec2 pixelSize;\n\nvoid main()\n{\n\tuv1 = hx_texCoord + vec2(-1.5, .5) * pixelSize;\n\tuv2 = hx_texCoord + vec2(.5, .5) * pixelSize;\n\tuv3 = hx_texCoord + vec2(.5, -1.5) * pixelSize;\n\tuv4 = hx_texCoord + vec2(-1.5, -1.5) * pixelSize;\n\tgl_Position = hx_position;\n}",on._files["hbao_fragment.glsl"]="uniform float hx_cameraFrustumRange;\nuniform float hx_cameraNearPlaneDistance;\nuniform vec2 hx_rcpRenderTargetResolution;\nuniform mat4 hx_projectionMatrix;\n\nuniform float strengthPerRay;\nuniform float halfSampleRadius;\nuniform float bias;\nuniform float rcpFallOffDistance;\nuniform vec2 ditherScale;\n\nuniform sampler2D hx_gbufferNormalDepth;\nuniform sampler2D sampleDirTexture;\nuniform sampler2D ditherTexture;\n\nvarying vec2 uv;\nvarying vec3 viewDir;\nvarying vec3 frustumCorner;\n\nvec3 getViewPos(vec2 sampleUV)\n{\n    vec4 smp = texture2D(hx_gbufferNormalDepth, sampleUV);\n    float depth = hx_decodeLinearDepth(smp);\n    float viewY = hx_cameraNearPlaneDistance + depth * hx_cameraFrustumRange;\n    vec3 viewPos = frustumCorner * vec3(sampleUV.x * 2.0 - 1.0, 1.0, sampleUV.y * 2.0 - 1.0);\n    return viewPos * viewY;\n}\n\n// Retrieves the occlusion factor for a particular sample\nfloat getSampleOcclusion(vec2 sampleUV, vec3 centerViewPos, vec3 centerNormal, vec3 tangent, inout float topOcclusion)\n{\n    vec3 sampleViewPos = getViewPos(sampleUV);\n\n    // get occlusion factor based on candidate horizon elevation\n    vec3 horizonVector = sampleViewPos - centerViewPos;\n    float horizonVectorLength = length(horizonVector);\n\n    float occlusion;\n\n    // If the horizon vector points away from the tangent, make an estimate\n    if (dot(tangent, horizonVector) < 0.0)\n        occlusion = .5;\n    else\n        occlusion = dot(centerNormal, horizonVector) / horizonVectorLength;\n\n    // this adds occlusion only if angle of the horizon vector is higher than the previous highest one without branching\n    float diff = max(occlusion - topOcclusion, 0.0);\n    topOcclusion = max(occlusion, topOcclusion);\n\n    // attenuate occlusion contribution using distance function 1 - (d/f)^2\n    float distanceFactor = 1.0 - saturate(horizonVectorLength * rcpFallOffDistance);\n    return diff * distanceFactor;\n}\n\n// Retrieves the occlusion for a given ray\nfloat getRayOcclusion(vec2 direction, float jitter, vec2 projectedRadii, vec3 centerViewPos, vec3 centerNormal)\n{\n    // calculate the nearest neighbour sample along the direction vector\n    vec2 texelSizedStep = direction * hx_rcpRenderTargetResolution;\n    direction *= projectedRadii;\n\n    // gets the tangent for the current ray, this will be used to handle opposing horizon vectors\n    // Tangent is corrected with respect to face normal by projecting it onto the tangent plane defined by the normal\n    vec3 tangent = getViewPos(uv + texelSizedStep) - centerViewPos;\n    tangent -= dot(centerNormal, tangent) * centerNormal;\n\n    vec2 stepUV = direction.xy / float(NUM_SAMPLES_PER_RAY - 1);\n\n    // jitter the starting position for ray marching between the nearest neighbour and the sample step size\n    vec2 jitteredOffset = mix(texelSizedStep, stepUV, jitter);\n    //stepUV *= 1.0 + jitter * .1;\n    vec2 sampleUV = uv + jitteredOffset;\n\n    // top occlusion keeps track of the occlusion contribution of the last found occluder.\n    // set to bias value to avoid near-occluders\n    float topOcclusion = bias;\n    float occlusion = 0.0;\n\n    // march!\n    for (int step = 0; step < NUM_SAMPLES_PER_RAY; ++step) {\n        occlusion += getSampleOcclusion(sampleUV, centerViewPos, centerNormal, tangent, topOcclusion);\n        sampleUV += stepUV;\n    }\n\n    return occlusion;\n}\n\nvoid main()\n{\n    vec4 normalDepth = texture2D(hx_gbufferNormalDepth, uv);\n    vec3 centerNormal = hx_decodeNormal(normalDepth);\n    float centerDepth = hx_decodeLinearDepth(normalDepth);\n    float viewY = hx_cameraNearPlaneDistance + centerDepth * hx_cameraFrustumRange;\n    vec3 centerViewPos = viewY * viewDir;\n\n    // clamp z to a minimum, so the radius does not get excessively large in screen-space\n    float projRadius = halfSampleRadius / max(centerViewPos.y, 7.0);\n    vec2 projectedRadii = projRadius * vec2(hx_projectionMatrix[0][0], hx_projectionMatrix[1][2]);\n\n    // do not take more steps than there are pixels\n    float totalOcclusion = 0.0;\n\n    vec2 randomFactors = texture2D(ditherTexture, uv * ditherScale).xy;\n\n    vec2 rayUV = vec2(0.0);\n    for (int i = 0; i < NUM_RAYS; ++i) {\n        rayUV.x = (float(i) + randomFactors.x) / float(NUM_RAYS);\n        vec2 sampleDir = texture2D(sampleDirTexture, rayUV).xy * 2.0 - 1.0;\n        totalOcclusion += getRayOcclusion(sampleDir, randomFactors.y, projectedRadii, centerViewPos, centerNormal);\n    }\n\n    totalOcclusion = 1.0 - clamp(strengthPerRay * totalOcclusion, 0.0, 1.0);\n    gl_FragColor = vec4(vec3(totalOcclusion), 1.0);\n}",on._files["hbao_vertex.glsl"]="attribute vec4 hx_position;\nattribute vec2 hx_texCoord;\n\nuniform mat4 hx_inverseProjectionMatrix;\n\nvarying vec2 uv;\nvarying vec3 viewDir;\nvarying vec3 frustumCorner;\n\nvoid main()\n{\n    uv = hx_texCoord;\n    viewDir = hx_getLinearDepthViewVector(hx_position.xy, hx_inverseProjectionMatrix);\n    frustumCorner = hx_getLinearDepthViewVector(vec2(1.0, 1.0), hx_inverseProjectionMatrix);\n    gl_Position = hx_position;\n}",on._files["ssao_fragment.glsl"]='uniform mat4 hx_projectionMatrix;\nuniform mat4 hx_cameraWorldMatrix;\nuniform float hx_cameraFrustumRange;\nuniform float hx_cameraNearPlaneDistance;\n\nuniform vec2 ditherScale;\nuniform float strengthPerSample;\nuniform float rcpFallOffDistance;\nuniform float sampleRadius;\nuniform vec3 samples[NUM_SAMPLES]; // w contains bias\n\nuniform sampler2D ditherTexture;\nuniform sampler2D hx_gbufferNormalDepth;\n\nvarying vec2 uv;\n\nvoid main()\n{\n    vec4 normalDepth = texture2D(hx_gbufferNormalDepth, uv);\n    vec3 centerNormal = hx_decodeNormal(normalDepth);\n    float centerDepth = hx_decodeLinearDepth(normalDepth);\n    float totalOcclusion = 0.0;\n    vec3 dither = texture2D(ditherTexture, uv * ditherScale).xyz;\n    vec3 randomPlaneNormal = normalize(dither - .5);\n    float w = hx_cameraNearPlaneDistance + centerDepth * hx_cameraFrustumRange;\n    float centerY = centerDepth * hx_cameraFrustumRange;    // can ignore nearDist\n    vec3 sampleRadii;\n    sampleRadii.xy = sampleRadius * .5 / w * vec2(hx_projectionMatrix[0][0], hx_projectionMatrix[1][2]);\n    sampleRadii.z = sampleRadius;\n\n    for (int i = 0; i < NUM_SAMPLES; ++i) {\n        vec3 sampleOffset = reflect(samples[i], randomPlaneNormal);\n        vec3 normOffset = normalize(sampleOffset);\n\n        // mirror sample position to the positive side of the plane\n        float cosFactor = dot(normOffset, centerNormal);\n        float sign = sign(cosFactor);\n        sampleOffset *= sign;\n        cosFactor *= sign;\n\n        vec3 scaledOffset = sampleOffset * sampleRadii;\n\n        vec2 samplePos = uv + scaledOffset.xy;\n        normalDepth = texture2D(hx_gbufferNormalDepth, samplePos);\n        float occluderDepth = hx_decodeLinearDepth(normalDepth);\n\n        // can ignore nearDist\n        float occluderY = hx_cameraFrustumRange * occluderDepth;\n        float sampleY = centerY + scaledOffset.z;\n\n        float distanceFactor = max(1.0 - (sampleY - occluderY) * rcpFallOffDistance, 0.0);\n\n        // at this point, occlusion really means occlusion, and not the output "colour" (ie 1 = completely occluded)\n        float sampleOcclusion = float(occluderY < sampleY);\n\n        // if cosFactor = 0, the sample is coplanar, and occludes less\n        totalOcclusion += sampleOcclusion * distanceFactor * cosFactor;\n    }\n    gl_FragColor = vec4(vec3(1.0 - totalOcclusion * strengthPerSample), 1.0);\n}';var sn={shuffle:function(t){for(var e,i,n=t.length;0!==n;)i=Math.floor(Math.random()*n),n-=1,e=t[n],t[n]=t[i],t[i]=e;return t},forEach:function(t,e){for(var i in t)t.hasOwnProperty(i)&&e(t[i],i)}};e.prototype={bind:function(t,e){this._lookUp[t]=this._listeners.length;var i=e?t.bind(e):t;this._listeners.push(i)},unbind:function(t){var e=this._lookUp[t];this._listeners.splice(e,1),delete this._lookUp[t]},unbindAll:function(){this._listeners=[],this._lookUp={}},dispatch:function(t){for(var e=this._listeners.length,i=0;i<e;++i)this._listeners[i].apply(null,arguments)},get hasListeners(){return this._listeners.length>0}},i.prototype={start:function(){this._isRunning||(this._currentTime=0,this._isRunning=!0,requestAnimationFrame(this._tickFunc))},stop:function(){this._isRunning=!1},get dt(){return this._dt},get time(){return this._currentTime},_tick:function(t){this._isRunning&&(requestAnimationFrame(this._tickFunc),0===this._currentTime?this._dt=16:this._dt=t-this._currentTime,this._currentTime=t,this.onTick.dispatch(this._dt))}},n.lerp=function(t,e,i,r){r=r||new n;var o=t.r,s=t.g,a=t.b,h=t.a;return r.r=o+(e.r-o)*i,r.g=s+(e.g-s)*i,r.b=a+(e.b-a)*i,r.a=h+(e.a-h)*i,r},n.prototype={set:function(t,e,i,n){void 0===t?(this.a=1,this.r=1,this.g=1,this.b=1):void 0===e?(this.a=1,this.r=((16711680&t)>>>16)/255,this.g=((65280&t)>>>8)/255,this.b=(255&t)/255):(this.r=t,this.g=e,this.b=i,this.a=void 0===n?1:n)},scale:function(t){this.r*=t,this.g*=t,this.b*=t},hex:function(){var t=255*Math.min(this.r,1),e=255*Math.min(this.g,1),i=255*Math.min(this.b,1);return t<<16|e<<8|i},luminance:function(){return.3*this.r+.59*this.g+.11*this.b},gammaToLinear:function(t){return t=t||new n,On.OPTIONS.usePreciseGammaCorrection?(t.r=Math.pow(this.r,2.2),t.g=Math.pow(this.g,2.2),t.b=Math.pow(this.b,2.2)):(t.r=this.r*this.r,t.g=this.g*this.g,t.b=this.b*this.b),t.a=this.a,t},linearToGamma:function(t){return t=t||new n,On.OPTIONS.usePreciseGammaCorrection?(t.r=Math.pow(this.r,.454545),t.g=Math.pow(this.g,.454545),t.b=Math.pow(this.b,.454545)):(t.r=Math.sqrt(this.r),t.g=Math.sqrt(this.g),t.b=Math.sqrt(this.b)),t.a=this.a,t},copyFrom:function(t){this.r=t.r,this.g=t.g,this.b=t.b,this.a=t.a},toString:function(){return"Color("+this.r+", "+this.g+", "+this.b+", "+this.a+")"},clone:function(){var t=new n;return t.r=this.r,t.g=this.g,t.b=this.b,t.a=this.a,t}},n.BLACK=new n(0,0,0,1),n.ZERO=new n(0,0,0,0),n.RED=new n(1,0,0,1),n.GREEN=new n(0,1,0,1),n.BLUE=new n(0,0,1,1),n.YELLOW=new n(1,1,0,1),n.MAGENTA=new n(1,0,1,1),n.CYAN=new n(0,1,1,1),n.WHITE=new n(1,1,1,1);var an=0,hn=!0,_n=!0,ln=null,cn=!1,un=null,fn=null,dn=null,pn=null,mn={numDrawCalls:0,numTriangles:0,numClears:0},gn=function(){mn.numDrawCalls=0,mn.numTriangles=0,mn.numClears=0},xn=null,vn={gl:null,_setGL:function(t){vn.gl=xn=t},clear:function(t){void 0===t&&(t=Wn.COMPLETE),xn.clear(t),++mn.numClears},drawElements:function(t,e,i,n){n=n||xn.UNSIGNED_SHORT,++mn.numDrawCalls,mn.numTriangles+=e/3,xn.drawElements(t,e,n,2*i)},setViewport:function(t){t?xn.viewport(t.x||0,t.y||0,t.width,t.height):xn.viewport(0,0,On.TARGET_CANVAS.width,On.TARGET_CANVAS.height)},getCurrentRenderTarget:function(){return dn},setColorMask:function(t){t!==_n&&(_n=t,xn.colorMask(t,t,t,t))},setRenderTarget:function(t){dn=t;var e=dn;e?(xn.bindFramebuffer(xn.FRAMEBUFFER,e._fbo),e._numColorTextures>1&&Un.EXT_DRAW_BUFFERS.drawBuffersWEBGL(e._drawBuffers)):xn.bindFramebuffer(xn.FRAMEBUFFER,null),vn.setViewport(t)},enableAttributes:function(t){var e,i=an;if(i<t)for(e=i;e<t;++e)xn.enableVertexAttribArray(e);else if(i>t)for(t+=1,e=t;e<i;++e)xn.disableVertexAttribArray(e);an=t},setClearColor:function(t){t=t instanceof n?t:new n(t),xn.clearColor(t.r,t.g,t.b,t.a)},setCullMode:function(t){if(ln!==t){if(t===jn.NONE)xn.disable(xn.CULL_FACE);else{ln===jn.NONE&&xn.enable(xn.CULL_FACE);var e=t;cn&&(e===jn.BACK?e=jn.FRONT:e===jn.FRONT&&(e=jn.BACK)),xn.cullFace(e)}ln=t}},setInvertCulling:function(t){cn!==t&&(cn=t,ln=jn.NONE)},setDepthMask:function(t){hn!==t&&(hn=t,xn.depthMask(hn))},setDepthTest:function(t){un!==t&&(un=t,un===Vn.DISABLED?xn.disable(xn.DEPTH_TEST):(xn.enable(xn.DEPTH_TEST),xn.depthFunc(un)))},setBlendState:function(t){if(fn!==t){fn=t;var e=fn;if(e&&e.enabled!==!1){xn.enable(xn.BLEND),null===e.alphaSrcFactor||void 0===e.alphaSrcFactor?xn.blendFunc(e.srcFactor,e.dstFactor):xn.blendFuncSeparate(e.srcFactor,e.dstFactor,e.alphaSrcFactor,e.alphaDstFactor),null===e.alphaOperator||void 0===e.alphaOperator?xn.blendEquation(e.operator):xn.blendEquationSeparate(e.operator,e.alphaOperator);var i=e.color;i&&xn.blendColor(i.r,i.g,i.b,i.a)}else xn.disable(xn.BLEND)}},updateStencilReferenceValue:function(t){var e=pn;e&&e.reference!==t&&(e.reference=t,xn.stencilFunc(e.comparison,t,e.readMask))},setStencilState:function(t){pn=t;var e=pn;e&&e.enabled!==!1?(xn.enable(xn.STENCIL_TEST),xn.stencilFunc(e.comparison,e.reference,e.readMask),xn.stencilOp(e.onStencilFail,e.onDepthFail,e.onPass),xn.stencilMask(e.writeMask)):(xn.disable(xn.STENCIL_TEST),xn.stencilFunc(Vn.ALWAYS,0,255),xn.stencilOp(zn.KEEP,zn.KEEP,zn.KEEP))},setMaterialPassState:function(t,e,i,n,r){if(ln!==t){if(t===jn.NONE)xn.disable(xn.CULL_FACE);else{ln===jn.NONE&&xn.enable(xn.CULL_FACE);var o=t;cn&&(o===jn.BACK?o=jn.FRONT:o===jn.FRONT&&(o=jn.BACK)),xn.cullFace(o)}ln=t}if(un!==e&&(un=e,un===Vn.DISABLED?xn.disable(xn.DEPTH_TEST):(xn.enable(xn.DEPTH_TEST),xn.depthFunc(un))),hn!==i&&(hn=i,xn.depthMask(hn)),n!==_n&&(_n=n,xn.colorMask(n,n,n,n)),fn!==r)if(fn=r,r&&r.enabled!==!1){xn.enable(xn.BLEND),null===r.alphaSrcFactor||void 0===r.alphaSrcFactor?xn.blendFunc(r.srcFactor,r.dstFactor):xn.blendFuncSeparate(r.srcFactor,r.dstFactor,r.alphaSrcFactor,r.alphaDstFactor),null===r.alphaOperator||void 0===r.alphaOperator?xn.blendEquation(r.operator):xn.blendEquationSeparate(r.operator,r.alphaOperator);var s=r.color;s&&xn.blendColor(s.r,s.g,s.b,s.a)}else xn.disable(xn.BLEND)}};r.prototype={get cullMode(){return this._cullMode},set cullMode(t){this._cullMode=t},getShadowMapFormat:function(){return Zn.RGBA},getShadowMapDataType:function(){return qn.UNSIGNED_BYTE},getGLSL:function(){throw new Error("Abstract method called")},get blurShader(){return this._blurShader||(this._blurShader=this._createBlurShader()),this._blurShader},get numBlurPasses(){return this._numBlurPasses},set numBlurPasses(t){this._numBlurPasses=t},init:function(){},_createBlurShader:function(){},_invalidateBlurShader:function(){this._blurShader&&(this._blurShader=null)}},o.prototype=Object.create(r.prototype),o.prototype.getGLSL=function(){return on.get("dir_shadow_hard.glsl")};var Sn={Unlit:null,BlinnPhong:on.get("lighting_blinn_phong.glsl"),GGX:on.get("lighting_ggx.glsl"),GGX_FULL:"#define HX_VISIBILITY_TERM\n"+on.get("lighting_ggx.glsl"),DEBUG:on.get("lighting_debug.glsl")},Tn={GENERAL:"precision highp float;\n\n"+on.get("snippets_general.glsl")+"\n\n"};s.add=function(t,e,i){return i=i||new s,i.x=t.x+e.x,i.y=t.y+e.y,i},s.subtract=function(t,e,i){return i=i||new s,i.x=t.x-e.x,i.y=t.y-e.y,i},s.scale=function(t,e,i){return i=i||new s,i.x=t.x*e,i.y=t.y*e,i},s.prototype={set:function(t,e){this.x=t,this.y=e},dot:function(t){return t.x*this.x+t.y*this.y},get lengthSqr(){return this.x*this.x+this.y*this.y},get length(){return Math.sqrt(this.x*this.x+this.y*this.y)},normalize:function(){var t=1/this.length;this.x*=t,this.y*=t},clone:function(){return new s(this.x,this.y)},add:function(t){this.x+=t.x,this.y+=t.y},subtract:function(t){this.x-=t.x,this.y-=t.y},scale:function(t){this.x*=t,this.y*=t},negate:function(){this.x=-this.x,this.y=-this.y},negativeOf:function(t){this.x=-t.x,this.y=-t.y},abs:function(){this.x=Math.abs(this.x),this.y=Math.abs(this.y)},fromPolarCoordinates:function(t,e){this.x=t*Math.cos(e),this.y=t*Math.sin(e)},copyFrom:function(t){this.x=t.x,this.y=t.y},distanceTo:function(t){var e=t.x-this.x,i=t.y-this.y;return Math.sqrt(e*e+i*i)},squareDistanceTo:function(t){var e=t.x-this.x,i=t.y-this.y;return e*e+i*i},lerp:function(t,e,i){var n=t.x,r=t.y;this.x=n+(e.x-n)*i,this.y=r+(e.y-r)*i},maximize:function(t){t.x>this.x&&(this.x=t.x),t.y>this.y&&(this.y=t.y)},minimize:function(t){t.x<this.x&&(this.x=t.x),t.y<this.y&&(this.y=t.y)},angle:function(t){return Math.acos(this.dot(t)/(this.length*t.length))},angleNormalized:function(t){return Math.acos(this.dot(t))}},s.ZERO=new s(0,0),s.X_AXIS=new s(1,0),s.Y_AXIS=new s(0,1),a.SQUARE=0,a.CIRCULAR=1,a._initDefault=function(){a.DEFAULT=new a,a.DEFAULT.generatePoints(64),a.DEFAULT_FLOAT32=new Float32Array(128);for(var t=a.DEFAULT.getPoints(),e=0;e<64;++e){var i=t[e];a.DEFAULT_FLOAT32[2*e]=i.x,a.DEFAULT_FLOAT32[2*e+1]=i.y}},a.prototype={getPoints:function(){return this._points},reset:function(){this._currentDistance=this._initialDistance,this._points=[]},generatePoints:function(t){for(var e=0;e<t;++e)this.generatePoint()},generatePoint:function(){for(;;){for(var t=0,e=this._currentDistance*this._currentDistance;t++<this._maxTests;){var i=this._getCandidate();if(this._isValid(i,e))return this._points.push(i),i}this._currentDistance*=this._decayFactor}},_getCandidate:function(){for(;;){var t=2*Math.random()-1,e=2*Math.random()-1;if(this._mode===a.SQUARE||t*t+e*e<=1)return new s(t,e)}},_isValid:function(t,e){for(var i=this._points.length,n=0;n<i;++n){var r=this._points[n],o=t.x-r.x,s=t.y-r.y;if(o*o+s*s<e)return!1}return!0}},h.add=function(t,e,i){return i=i||new h,i.x=t.x+e.x,i.y=t.y+e.y,i.z=t.z+e.z,i.w=t.w+e.w,i},h.subtract=function(t,e,i){return i=i||new h,i.x=t.x-e.x,i.y=t.y-e.y,i.z=t.z-e.z,i.w=t.w-e.w,i},h.scale=function(t,e,i){return i=i||new h,i.x=t.x*e,i.y=t.y*e,i.z=t.z*e,i},h.scale4=function(t,e,i){return i=i||new h,i.x=t.x*e,i.y=t.y*e,i.z=t.z*e,i.w=t.w*e,i},h.cross=function(t,e,i){i=i||new h;var n=t.x,r=t.y,o=t.z,s=e.x,a=e.y,_=e.z;return i.x=r*_-o*a,i.y=o*s-n*_,i.z=n*a-r*s,i},h.prototype={set:function(t,e,i,n){return this.x=t,this.y=e,this.z=i,this.w=void 0===n?this.w:n,this},get lengthSqr(){return this.x*this.x+this.y*this.y+this.z*this.z},get length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},normalize:function(){var t=1/this.length;return this.x*=t,this.y*=t,this.z*=t,this},normalizeAsPlane:function(){var t=1/this.length;return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this},clone:function(){return new h(this.x,this.y,this.z,this.w)},add:function(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this},addScaled:function(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this},subtract:function(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this},scale:function(t){return this.x*=t,this.y*=t,this.z*=t,this},scale4:function(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this},negativeOf:function(t){return this.x=-t.x,this.y=-t.y,this.z=-t.z,this.w=-t.w,this},homogeneousProject:function(){var t=1/this.w;return this.x*=t,this.y*=t,this.z*=t,this.w=1,this},abs:function(){return this.x=Math.abs(this.x),this.y=Math.abs(this.y),this.z=Math.abs(this.z),this.w=Math.abs(this.w),this},fromSphericalCoordinates:function(t,e,i){return this.x=t*Math.sin(i)*Math.cos(e),this.y=t*Math.sin(i)*Math.sin(e),this.z=t*Math.cos(i),this.w=1,this},copyFrom:function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w,this},maximize:function(t){return t.x>this.x&&(this.x=t.x),t.y>this.y&&(this.y=t.y),t.z>this.z&&(this.z=t.z),t.w>this.w&&(this.w=t.w),this},maximize3:function(t){return t.x>this.x&&(this.x=t.x),t.y>this.y&&(this.y=t.y),t.z>this.z&&(this.z=t.z),this},minimize:function(t){return t.x<this.x&&(this.x=t.x),t.y<this.y&&(this.y=t.y),t.z<this.z&&(this.z=t.z),t.w<this.w&&(this.w=t.w),this},minimize3:function(t){return t.x<this.x&&(this.x=t.x),t.y<this.y&&(this.y=t.y),t.z<this.z&&(this.z=t.z),this},planeFromNormalAndPoint:function(t,e){var i=t.x,n=t.y,r=t.z;return this.x=i,this.y=n,this.z=r,this.w=-(e.x*i+e.y*n+e.z*r),this},angle:function(t){return Math.acos(this.dot3(t)/(this.length*t.length))},angleNormalized:function(t){return Math.acos(this.dot3(t))},distanceTo:function(t){var e=t.x-this.x,i=t.y-this.y,n=t.z-this.z;return Math.sqrt(e*e+i*i+n*n)},squareDistanceTo:function(t){var e=t.x-this.x,i=t.y-this.y,n=t.z-this.z;return e*e+i*i+n*n},dot3:function(t){return t.x*this.x+t.y*this.y+t.z*this.z},dot:function(t){return t.x*this.x+t.y*this.y+t.z*this.z},dot4:function(t){return t.x*this.x+t.y*this.y+t.z*this.z+t.w*this.w},lerp:function(t,e,i){var n=t.x,r=t.y,o=t.z,s=t.w;return this.x=n+(e.x-n)*i,this.y=r+(e.y-r)*i,this.z=o+(e.z-o)*i,this.w=s+(e.w-s)*i,this},cross:function(t,e){var i=t.x,n=t.y,r=t.z,o=e.x,s=e.y,a=e.z;return this.x=n*a-r*s,this.y=r*o-i*a,this.z=i*s-n*o,this},toString:function(){return"Float4("+this.x+", "+this.y+", "+this.z+", "+this.w+")"}},h.ORIGIN_POINT=new h(0,0,0,1),h.ZERO=new h(0,0,0,0),h.X_AXIS=new h(1,0,0,0),h.Y_AXIS=new h(0,1,0,0),h.Z_AXIS=new h(0,0,1,0),_.BOX=0,_.SPHERICAL=1,_._initDefault=function(){_.DEFAULT=new _,_.DEFAULT.generatePoints(64),_.DEFAULT_FLOAT32=new Float32Array(192);for(var t=_.DEFAULT.getPoints(),e=0;e<64;++e){var i=t[e];_.DEFAULT_FLOAT32[3*e]=i.x,_.DEFAULT_FLOAT32[3*e+1]=i.y,_.DEFAULT_FLOAT32[3*e+2]=i.z}},_.prototype={getPoints:function(){return this._points},reset:function(){this._currentDistance=this._initialDistance,this._points=[]},generatePoints:function(t){for(var e=0;e<t;++e)this.generatePoint()},generatePoint:function(){for(;;){for(var t=0,e=this._currentDistance*this._currentDistance;t++<this._maxTests;){var i=this._getCandidate();if(this._isValid(i,e))return this._points.push(i),i}this._currentDistance*=this._decayFactor}},_getCandidate:function(){for(;;){var t=2*Math.random()-1,e=2*Math.random()-1,i=2*Math.random()-1;if(this._mode===_.BOX||t*t+e*e+i*i<=1)return new h(t,e,i,0)}},_isValid:function(t,e){for(var i=this._points.length,n=0;n<i;++n){var r=this._points[n],o=t.x-r.x,s=t.y-r.y,a=t.z-r.z;if(o*o+s*s+a*a<e)return!1}return!0}};var En=1/Math.log(2),yn={DEG_TO_RAD:Math.PI/180,RAD_TO_DEG:180/Math.PI,sign:function(t){return 0===t?0:t>0?1:-1},isPowerOfTwo:function(t){return!!t&&(t&-t)===t},log2:function(t){return Math.log(t)*En},clamp:function(t,e,i){return t<e?e:t>i?i:t},saturate:function(t){return yn.clamp(t,0,1)},lerp:function(t,e,i){return t+(e-t)*i},linearStep:function(t,e,i){return yn.saturate((i-t)/(e-t))},estimateGaussianRadius:function(t,e){return Math.sqrt(-2*t*Math.log(e))},fract:function(t){return t-Math.floor(t)}};l.prototype={fromAxisAngle:function(t,e){var i=.5*e,n=Math.sin(i)/t.length;return this.x=t.x*n,this.y=t.y*n,this.z=t.z*n,this.w=Math.cos(i),this},fromPitchYawRoll:function(t,e,i){var n=new f;return n.fromRotationPitchYawRoll(t,e,i),this.fromMatrix(n),this},fromEuler:function(t,e,i){var n=Math.cos(.5*t),r=Math.cos(.5*e),o=Math.cos(.5*i),s=Math.sin(.5*t),a=Math.sin(.5*e),h=Math.sin(.5*i);return this.x=s*r*o+n*a*h,this.y=n*a*o-s*r*h,this.z=n*r*h+s*a*o,this.w=n*r*o-s*a*h,this},toEuler:function(t){t=t||new h;var e=this.x,i=this.y,n=this.z,r=this.w,o=e*e,s=i*i,a=n*n,_=r*r;return t.x=Math.atan2(-2*(i*n-r*e),_-o-s+a),t.y=Math.asin(2*(e*n+r*i)),t.z=Math.atan2(-2*(e*i-r*n),_+o-s-a),t},fromMatrix:function(t){var e,i=t._m[0],n=t._m[5],r=t._m[10],o=i+n+r;return o>0?(o+=1,e=1/Math.sqrt(o)*.5,this.x=e*(t._m[6]-t._m[9]),this.y=e*(t._m[8]-t._m[2]),this.z=e*(t._m[1]-t._m[4]),this.w=e*o):i>n&&i>r?(o=i-n-r+1,e=1/Math.sqrt(o)*.5,this.x=e*o,this.y=e*(t._m[1]+t._m[4]),this.z=e*(t._m[8]+t._m[2]),this.w=e*(t._m[6]-t._m[9])):n>r?(o=n-i-r+1,e=1/Math.sqrt(o)*.5,this.x=e*(t._m[1]+t._m[4]),this.y=e*o,this.z=e*(t._m[6]+t._m[9]),this.w=e*(t._m[8]-t._m[2])):(o=r-i-n+1,e=1/Math.sqrt(o)*.5,this.x=e*(t._m[8]+t._m[2]),this.y=e*(t._m[6]+t._m[9]),this.z=e*o,this.w=e*(t._m[1]-t._m[4])),this.normalize(),this},rotate:function(t,e){e=e||new h;var i=t.x,n=t.y,r=t.z,o=this.x,s=this.y,a=this.z,_=this.w,l=-o*i-s*n-a*r,c=_*i+s*r-a*n,u=_*n-o*r+a*i,f=_*r+o*n-s*i;return e.x=-l*o+c*_-u*a+f*s,e.y=-l*s+c*a+u*_-f*o,e.z=-l*a-c*s+u*o+f*_,e.w=t.w,e},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this},set:function(t,e,i,n){return this.x=t,this.y=e,this.z=i,this.w=n,this},copyFrom:function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w,this},get normSquared(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},get norm(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},normalize:function(){var t=1/Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this},conjugate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this},invert:function(){var t=this.x,e=this.y,i=this.z,n=this.w,r=1/(t*t+e*e+i*i+n*n);return this.x=-t*r,this.y=-e*r,this.z=-i*r,this.w=n*r,this},multiply:function(t,e){var i=t.w,n=t.x,r=t.y,o=t.z,s=e.w,a=e.x,h=e.y,_=e.z;return this.x=i*a+n*s+r*_-o*h,this.y=i*h-n*_+r*s+o*a,this.z=i*_+n*h-r*a+o*s,this.w=i*s-n*a-r*h-o*_,this},append:function(t){return this.multiply(t,this)},prepend:function(t){return this.multiply(this,t)},lerp:function(t,e,i){var n=t.w,r=t.x,o=t.y,s=t.z,a=e.w,h=e.x,_=e.y,l=e.z;return n*a+r*h+o*_+s*l<0&&(a=-a,h=-h,_=-_,l=-l),this.x=r+i*(h-r),this.y=o+i*(_-o),this.z=s+i*(l-s),this.w=n+i*(a-n),this.normalize(),this},slerp:function(t,e,i){var n=t.w,r=t.x,o=t.y,s=t.z,a=e.w,h=e.x,_=e.y,l=e.z,c=n*a+r*h+o*_+s*l;if(c<0&&(c=-c,a=-a,h=-h,_=-_,l=-l),c<.95){var u=Math.acos(c),f=i*u,d=h-r*c,p=_-o*c,m=l-s*c,g=a-n*c,x=1/Math.sqrt(d*d+p*p+m*m+g*g);d*=x,p*=x,m*=x,g*=x;var v=Math.cos(f),S=Math.sin(f);this.x=r*v+d*S,this.y=o*v+p*S,this.z=s*v+m*S,this.w=n*v+g*S}else this.x=r+i*(h-r),this.y=o+i*(_-o),this.z=s+i*(l-s),this.w=n+i*(a-n),this.normalize();return this},toString:function(){return"Quaternion("+this.x+", "+this.y+", "+this.z+", "+this.w+")"}},c.prototype={get enabled(){return this._enabled},set enabled(t){this._enabled=t},add:function(t,e){var i=this._targets.length;this._targets.push({object:t,propertyName:e,value:t[e]});var n=this,r=n._targets[i];Object.defineProperty(t,e,{get:function(){return r.value},set:function(t){t!==r.value&&(r.value=t,n._enabled&&n.onChange.dispatch())}})},remove:function(t,e){for(var i=0;i<this._targets.length;++i){var n=this._targets[i];n.object===t&&n.propertyName===e&&(delete n.object[n.propertyName],n.object[n.propertyName]=n.value,this._targets.splice(i--,1))}}},u.prototype={get position(){return this._position},set position(t){this._position.copyFrom(t)},get rotation(){return this._rotation},set rotation(t){this._rotation.copyFrom(t)},get scale(){return this._scale},set scale(t){this._scale.copyFrom(t)},lookAt:function(t){this._matrix.lookAt(t,this._position),this._matrix.appendScale(this._scale),this._applyMatrix()},copyTransform:function(t){this._changeListener.enabled=!1,this._position.copyFrom(t.position),this._rotation.copyFrom(t.rotation),this._scale.copyFrom(t.scale),this._changeListener.enabled=!0,this._invalidateMatrix()},get matrix(){return this._matrixInvalid&&this._updateMatrix(),this._matrix},set matrix(t){this._matrix.copyFrom(t),this._applyMatrix()},_invalidateMatrix:function(){this._matrixInvalid=!0},_updateMatrix:function(){this._matrix.compose(this),this._matrixInvalid=!1},_applyMatrix:function(){this._matrixInvalid=!1,this._changeListener.enabled=!1,this._matrix.decompose(this),this._changeListener.enabled=!0}},f.prototype={transform:function(t,e){e=e||new h;var i=t.x,n=t.y,r=t.z,o=t.w,s=this._m;return e.x=s[0]*i+s[4]*n+s[8]*r+s[12]*o,e.y=s[1]*i+s[5]*n+s[9]*r+s[13]*o,e.z=s[2]*i+s[6]*n+s[10]*r+s[14]*o,e.w=s[3]*i+s[7]*n+s[11]*r+s[15]*o,e},transformPoint:function(t,e){e=e||new h;var i=t.x,n=t.y,r=t.z,o=this._m;return e.x=o[0]*i+o[4]*n+o[8]*r+o[12],e.y=o[1]*i+o[5]*n+o[9]*r+o[13],e.z=o[2]*i+o[6]*n+o[10]*r+o[14],e.w=1,e},transformVector:function(t,e){e=e||new h;var i=t.x,n=t.y,r=t.z,o=this._m;return e.x=o[0]*i+o[4]*n+o[8]*r,e.y=o[1]*i+o[5]*n+o[9]*r,e.z=o[2]*i+o[6]*n+o[10]*r,e.w=0,e},transformExtent:function(t,e){e=e||new h;var i=t.x,n=t.y,r=t.z,o=this._m,s=o[0],a=o[1],_=o[2],l=o[4],c=o[5],u=o[6],f=o[8],d=o[9],p=o[10];return s<0&&(s=-s),a<0&&(a=-a),_<0&&(_=-_),l<0&&(l=-l),c<0&&(c=-c),u<0&&(u=-u),f<0&&(f=-f),d<0&&(d=-d),p<0&&(p=-p),e.x=s*i+l*n+f*r,e.y=a*i+c*n+d*r,e.z=_*i+u*n+p*r,e.w=0,e},copyFrom:function(t){var e=this._m,i=t._m;return e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=i[3],e[4]=i[4],e[5]=i[5],e[6]=i[6],e[7]=i[7],e[8]=i[8],e[9]=i[9],e[10]=i[10],e[11]=i[11],e[12]=i[12],e[13]=i[13],e[14]=i[14],e[15]=i[15],this},fromQuaternion:function(t){var e=t.x,i=t.y,n=t.z,r=t.w,o=this._m;return o[0]=1-2*(i*i+n*n),o[1]=2*(e*i+r*n),o[2]=2*(e*n-r*i),o[3]=0,o[4]=2*(e*i-r*n),o[5]=1-2*(e*e+n*n),o[6]=2*(i*n+r*e),o[7]=0,o[8]=2*(e*n+r*i),o[9]=2*(i*n-r*e),o[10]=1-2*(e*e+i*i),o[11]=0,o[12]=0,o[13]=0,o[14]=0,o[15]=1,this},multiply:function(t,e){var i=t._m,n=e._m,r=i[0],o=i[1],s=i[2],a=i[3],h=i[4],_=i[5],l=i[6],c=i[7],u=i[8],f=i[9],d=i[10],p=i[11],m=i[12],g=i[13],x=i[14],v=i[15],S=n[0],T=n[1],E=n[2],y=n[3],w=n[4],A=n[5],M=n[6],P=n[7],b=n[8],L=n[9],R=n[10],O=n[11],D=n[12],I=n[13],N=n[14],C=n[15],F=this._m;return F[0]=r*S+h*T+u*E+m*y,F[1]=o*S+_*T+f*E+g*y,F[2]=s*S+l*T+d*E+x*y,F[3]=a*S+c*T+p*E+v*y,F[4]=r*w+h*A+u*M+m*P,F[5]=o*w+_*A+f*M+g*P,F[6]=s*w+l*A+d*M+x*P,F[7]=a*w+c*A+p*M+v*P,F[8]=r*b+h*L+u*R+m*O,F[9]=o*b+_*L+f*R+g*O,F[10]=s*b+l*L+d*R+x*O,F[11]=a*b+c*L+p*R+v*O,F[12]=r*D+h*I+u*N+m*C,F[13]=o*D+_*I+f*N+g*C,F[14]=s*D+l*I+d*N+x*C,F[15]=a*D+c*I+p*N+v*C,this},multiplyAffine:function(t,e){var i=t._m,n=e._m,r=i[0],o=i[1],s=i[2],a=i[4],h=i[5],_=i[6],l=i[8],c=i[9],u=i[10],f=i[12],d=i[13],p=i[14],m=n[0],g=n[1],x=n[2],v=n[4],S=n[5],T=n[6],E=n[8],y=n[9],w=n[10],A=n[12],M=n[13],P=n[14],b=this._m;return b[0]=r*m+a*g+l*x,b[1]=o*m+h*g+c*x,b[2]=s*m+_*g+u*x,b[4]=r*v+a*S+l*T,b[5]=o*v+h*S+c*T,b[6]=s*v+_*S+u*T,b[8]=r*E+a*y+l*w,b[9]=o*E+h*y+c*w,b[10]=s*E+_*y+u*w,b[12]=r*A+a*M+l*P+f,b[13]=o*A+h*M+c*P+d,b[14]=s*A+_*M+u*P+p,this},fromRotationAxisAngle:function(t,e){var i=Math.cos(e),n=Math.sin(e),r=1/t.length,o=t.x*r,s=t.y*r,a=t.z*r,h=1-i,_=this._m;return _[0]=h*o*o+i,_[1]=h*o*s+n*a,_[2]=h*o*a-n*s,_[3]=0,_[4]=h*o*s-n*a,_[5]=h*s*s+i,_[6]=h*s*a+n*o,_[7]=0,_[8]=h*o*a+n*s,_[9]=h*s*a-n*o,_[10]=h*a*a+i,_[11]=0,_[12]=0,_[13]=0,_[14]=0,_[15]=1,this},fromEuler:function(t,e,i){var n=Math.cos(t),r=Math.sin(t),o=Math.cos(e),s=Math.sin(e),a=Math.cos(i),h=Math.sin(i),_=this._m;return _[0]=o*a,_[1]=n*h+r*s*a,_[2]=r*h-n*s*a,_[3]=0,_[4]=-o*h,_[5]=n*a-r*s*h,_[6]=r*a+n*s*h,_[7]=0,_[8]=s,_[9]=-r*o,_[10]=n*o,_[11]=0,_[12]=0,_[13]=0,_[14]=0,_[15]=1,this},fromRotationPitchYawRoll:function(t,e,i){var n=Math.cos(-t),r=Math.cos(-e),o=Math.cos(i),s=Math.sin(-t),a=Math.sin(-e),h=Math.sin(i),_=-a*n,l=r*n,c=-s,u=-r*h-a*s*o,f=-a*h+s*o*r,d=n*o,p=l*d-c*f,m=c*u-_*d,g=_*f-l*u,x=this._m;return x[0]=p,x[1]=m,x[2]=g,x[3]=0,x[4]=_,x[5]=l,x[6]=c,x[7]=0,x[8]=u,x[9]=f,x[10]=d,x[11]=0,x[12]=0,x[13]=0,x[14]=0,x[15]=1,this},fromTranslation:function(t,e,i){void 0===e&&(t=t.x,e=t.y,i=t.z);var n=this._m;return n[0]=1,n[1]=0,n[2]=0,n[3]=0,n[4]=0,n[5]=1,n[6]=0,n[7]=0,n[8]=0,n[9]=0,n[10]=1,n[11]=0,n[12]=t,n[13]=e,n[14]=i,n[15]=1,this},fromScale:function(t,e,i){t instanceof h?(e=t.y,i=t.z,t=t.x):void 0===e&&(e=i=t);var n=this._m;return n[0]=t,n[1]=0,n[2]=0,n[3]=0,n[4]=0,n[5]=e,n[6]=0,n[7]=0,n[8]=0,n[9]=0,n[10]=i,n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1,this},fromPerspectiveProjection:function(t,e,i,n){var r=1/Math.tan(.5*t),o=r/e,s=1/(i-n),a=this._m;return a[0]=o,a[1]=0,a[2]=0,a[3]=0,a[4]=0,a[5]=0,a[6]=-(n+i)*s,a[7]=1,a[8]=0,a[9]=r,a[10]=0,a[11]=0,a[12]=0,a[13]=0,a[14]=2*i*n*s,a[15]=0,this},fromOrthographicOffCenterProjection:function(t,e,i,n,r,o){var s=1/(e-t),a=1/(i-n),h=1/(r-o),_=this._m;return _[0]=2*s,_[1]=0,_[2]=0,_[3]=0,_[4]=0,_[5]=0,_[6]=-2*h,_[7]=0,_[8]=0,_[9]=2*a,_[10]=0,_[11]=0,_[12]=-(t+e)*s,_[13]=-(i+n)*a,_[14]=(o+r)*h,_[15]=1,this},fromOrthographicProjection:function(t,e,i,n){
var r=1/t,o=1/e,s=1/(i-n),a=this._m;return a[0]=2*r,a[1]=0,a[2]=0,a[3]=0,a[4]=0,a[5]=0,a[6]=2*s,a[7]=0,a[8]=0,a[9]=2*o,a[10]=0,a[11]=0,a[12]=0,a[13]=0,a[14]=(n+i)*s,a[15]=1,this},clone:function(){return new f(this._m)},transpose:function(){var t=this._m,e=t[1],i=t[2],n=t[3],r=t[6],o=t[7],s=t[11];return t[1]=t[4],t[2]=t[8],t[3]=t[12],t[4]=e,t[6]=t[9],t[7]=t[13],t[8]=i,t[9]=r,t[11]=t[14],t[12]=n,t[13]=o,t[14]=s,this},determinant3x3:function(t,e){var i=0===e?4:0,n=e<2?8:4,r=3===e?8:12,o=0===t?1:0,s=t<2?2:1,a=3===t?2:3,h=this._m,_=h[i|s],l=h[s|n],c=h[r|s],u=h[i|a],f=h[n|a],d=h[a|r];return h[i|o]*(l*d-c*f)-h[n|o]*(_*d-c*u)+h[r|o]*(_*f-l*u)},cofactor:function(t,e){var i=1-((t+e&1)<<1);return i*this.determinant3x3(t,e)},getCofactorMatrix:function(t,e,i){i=i||new f;for(var n=i._m,r=0;r<16;++r)n[r]=this.cofactor(3&r,r>>2);return i},getAdjugate:function(t,e,i){i=i||new f;for(var n=i._m,r=0;r<16;++r)n[r]=this.cofactor(r>>2,3&r);return i},determinant:function(){var t=this._m;return t[0]*this.determinant3x3(0,0)-t[4]*this.determinant3x3(0,1)+t[8]*this.determinant3x3(0,2)-t[12]*this.determinant3x3(0,3)},inverseOf:function(t){var e=1/t.determinant(),i=e*t.cofactor(0,0),n=e*t.cofactor(0,1),r=e*t.cofactor(0,2),o=e*t.cofactor(0,3),s=e*t.cofactor(1,0),a=e*t.cofactor(1,1),h=e*t.cofactor(1,2),_=e*t.cofactor(1,3),l=e*t.cofactor(2,0),c=e*t.cofactor(2,1),u=e*t.cofactor(2,2),f=e*t.cofactor(2,3),d=e*t.cofactor(3,0),p=e*t.cofactor(3,1),m=e*t.cofactor(3,2),g=e*t.cofactor(3,3),x=this._m;return x[0]=i,x[1]=n,x[2]=r,x[3]=o,x[4]=s,x[5]=a,x[6]=h,x[7]=_,x[8]=l,x[9]=c,x[10]=u,x[11]=f,x[12]=d,x[13]=p,x[14]=m,x[15]=g,this},inverseAffineOf:function(t){var e=t._m,i=e[0],n=e[1],r=e[2],o=e[4],s=e[5],a=e[6],h=e[8],_=e[9],l=e[10],c=e[12],u=e[13],f=e[14],d=i*(s*l-_*a)-o*(n*l-_*r)+h*(n*a-s*r),p=1/d,m=(s*l-_*a)*p,g=(_*r-n*l)*p,x=(n*a-s*r)*p,v=(h*a-o*l)*p,S=(i*l-h*r)*p,T=(o*r-i*a)*p,E=(o*_-h*s)*p,y=(h*n-i*_)*p,w=(i*s-o*n)*p,A=this._m;return A[0]=m,A[1]=g,A[2]=x,A[3]=0,A[4]=v,A[5]=S,A[6]=T,A[7]=0,A[8]=E,A[9]=y,A[10]=w,A[11]=0,A[12]=-m*c-v*u-E*f,A[13]=-g*c-S*u-y*f,A[14]=-x*c-T*u-w*f,A[15]=1,this},writeNormalMatrix:function(t,e){e=e||0;var i=this._m,n=i[0],r=i[1],o=i[2],s=i[4],a=i[5],h=i[6],_=i[8],l=i[9],c=i[10],u=n*(a*c-l*h)-s*(r*c-l*o)+_*(r*h-a*o),f=1/u;t[e]=(a*c-l*h)*f,t[e+1]=(_*h-s*c)*f,t[e+2]=(s*l-_*a)*f,t[e+3]=(l*o-r*c)*f,t[e+4]=(n*c-_*o)*f,t[e+5]=(_*r-n*l)*f,t[e+6]=(r*h-a*o)*f,t[e+7]=(s*o-n*h)*f,t[e+8]=(n*a-s*r)*f},writeData:function(t,e){e=e||0;for(var i=this._m,n=0;n<16;++n)t[e+n]=i[n]},writeData4x3:function(t,e){var i=this._m;e=e||0,t[e]=i[0],t[e+1]=i[4],t[e+2]=i[8],t[e+3]=i[12],t[e+4]=i[1],t[e+5]=i[5],t[e+6]=i[9],t[e+7]=i[13],t[e+8]=i[2],t[e+9]=i[6],t[e+10]=i[10],t[e+11]=i[14]},invert:function(){return this.inverseOf(this)},invertAffine:function(){return this.inverseAffineOf(this)},append:function(t){return this.multiply(t,this)},prepend:function(t){return this.multiply(this,t)},appendAffine:function(t){return this.multiplyAffine(t,this)},prependAffine:function(t){return this.multiplyAffine(this,t)},add:function(t){var e=this._m,i=t._m;return e[0]+=i[0],e[1]+=i[1],e[2]+=i[2],e[3]+=i[3],e[4]+=i[4],e[5]+=i[5],e[6]+=i[6],e[7]+=i[7],e[8]+=i[8],e[9]+=i[9],e[10]+=i[10],e[11]+=i[11],e[12]+=i[12],e[13]+=i[13],e[14]+=i[14],e[15]+=i[15],this},addAffine:function(t){var e=this._m,i=t._m;return e[0]+=i[0],e[1]+=i[1],e[2]+=i[2],e[4]+=i[4],e[5]+=i[5],e[6]+=i[6],e[8]+=i[8],e[9]+=i[9],e[10]+=i[10],this},subtract:function(t){var e=this._m,i=t._m;return e[0]-=i[0],e[1]-=i[1],e[2]-=i[2],e[3]-=i[3],e[4]-=i[4],e[5]-=i[5],e[6]-=i[6],e[7]-=i[7],e[8]-=i[8],e[9]-=i[9],e[10]-=i[10],e[11]-=i[11],e[12]-=i[12],e[13]-=i[13],e[14]-=i[14],e[15]-=i[15],this},subtractAffine:function(t){var e=this._m,i=t._m;return e[0]-=i[0],e[1]-=i[1],e[2]-=i[2],e[4]-=i[4],e[5]-=i[5],e[6]-=i[6],e[8]-=i[8],e[9]-=i[9],e[10]-=i[10],this},appendScale:function(t,e,i){t instanceof h?(e=t.y,i=t.z,t=t.x):void 0===e&&(e=i=t);var n=this._m;return n[0]*=t,n[1]*=e,n[2]*=i,n[4]*=t,n[5]*=e,n[6]*=i,n[8]*=t,n[9]*=e,n[10]*=i,n[12]*=t,n[13]*=e,n[14]*=i,this},prependScale:function(t,e,i){t instanceof h?(e=t.y,i=t.z,t=t.x):void 0===e&&(e=i=t);var n=this._m;return n[0]*=t,n[1]*=t,n[2]*=t,n[3]*=t,n[4]*=e,n[5]*=e,n[6]*=e,n[7]*=e,n[8]*=i,n[9]*=i,n[10]*=i,n[11]*=i,this},appendTranslation:function(t){var e=this._m;return e[12]+=t.x,e[13]+=t.y,e[14]+=t.z,this},prependTranslation:function(t){var e=this._m,i=t.x,n=t.y,r=t.z;return e[12]+=e[0]*i+e[4]*n+e[8]*r,e[13]+=e[1]*i+e[5]*n+e[9]*r,e[14]+=e[2]*i+e[6]*n+e[10]*r,e[15]+=e[3]*i+e[7]*n+e[11]*r,this},appendQuaternion:function(t){var e=this._m,i=t.x,n=t.y,r=t.z,o=t.w,s=1-2*(n*n+r*r),a=2*(i*n+o*r),h=2*(i*r-o*n),_=2*(i*n-o*r),l=1-2*(i*i+r*r),c=2*(n*r+o*i),u=2*(i*r+o*n),f=2*(n*r-o*i),d=1-2*(i*i+n*n),p=e[0],m=e[1],g=e[2],x=e[4],v=e[5],S=e[6],T=e[8],E=e[9],y=e[10],w=e[12],A=e[13],M=e[14];return e[0]=s*p+_*m+u*g,e[1]=a*p+l*m+f*g,e[2]=h*p+c*m+d*g,e[4]=s*x+_*v+u*S,e[5]=a*x+l*v+f*S,e[6]=h*x+c*v+d*S,e[8]=s*T+_*E+u*y,e[9]=a*T+l*E+f*y,e[10]=h*T+c*E+d*y,e[12]=s*w+_*A+u*M,e[13]=a*w+l*A+f*M,e[14]=h*w+c*A+d*M,this},prependQuaternion:function(t){var e=this._m,i=t.x,n=t.y,r=t.z,o=t.w,s=e[0],a=e[1],h=e[2],_=e[4],l=e[5],c=e[6],u=e[8],f=e[9],d=e[10],p=1-2*(n*n+r*r),m=2*(i*n+o*r),g=2*(i*r-o*n),x=2*(i*n-o*r),v=1-2*(i*i+r*r),S=2*(n*r+o*i),T=2*(i*r+o*n),E=2*(n*r-o*i),y=1-2*(i*i+n*n);return e[0]=s*p+_*m+u*g,e[1]=a*p+l*m+f*g,e[2]=h*p+c*m+d*g,e[4]=s*x+_*v+u*S,e[5]=a*x+l*v+f*S,e[6]=h*x+c*v+d*S,e[8]=s*T+_*E+u*y,e[9]=a*T+l*E+f*y,e[10]=h*T+c*E+d*y,this},appendRotationAxisAngle:function(t,e){var i=this._m,n=Math.cos(e),r=Math.sin(e),o=1/t.length,s=t.x*o,a=t.y*o,h=t.z*o,_=1-n,l=_*s*s+n,c=_*s*a+r*h,u=_*s*h-r*a,f=_*s*a-r*h,d=_*a*a+n,p=_*a*h+r*s,m=_*s*h+r*a,g=_*a*h-r*s,x=_*h*h+n,v=i[0],S=i[1],T=i[2],E=i[4],y=i[5],w=i[6],A=i[8],M=i[9],P=i[10],b=i[12],L=i[13],R=i[14];return i[0]=l*v+f*S+m*T,i[1]=c*v+d*S+g*T,i[2]=u*v+p*S+x*T,i[4]=l*E+f*y+m*w,i[5]=c*E+d*y+g*w,i[6]=u*E+p*y+x*w,i[8]=l*A+f*M+m*P,i[9]=c*A+d*M+g*P,i[10]=u*A+p*M+x*P,i[12]=l*b+f*L+m*R,i[13]=c*b+d*L+g*R,i[14]=u*b+p*L+x*R,this},prependRotationAxisAngle:function(t,e){var i=this._m,n=Math.cos(e),r=Math.sin(e),o=1/t.length,s=t.x*o,a=t.y*o,h=t.z*o,_=1-n,l=i[0],c=i[1],u=i[2],f=i[4],d=i[5],p=i[6],m=i[8],g=i[9],x=i[10],v=_*s*s+n,S=_*s*a+r*h,T=_*s*h-r*a,E=_*s*a-r*h,y=_*a*a+n,w=_*a*h+r*s,A=_*s*h+r*a,M=_*a*h-r*s,P=_*h*h+n;return i[0]=l*v+f*S+m*T,i[1]=c*v+d*S+g*T,i[2]=u*v+p*S+x*T,i[4]=l*E+f*y+m*w,i[5]=c*E+d*y+g*w,i[6]=u*E+p*y+x*w,i[8]=l*A+f*M+m*P,i[9]=c*A+d*M+g*P,i[10]=u*A+p*M+x*P,this},getRow:function(t,e){var i=this._m;return e=e||new h,e.x=i[t],e.y=i[4|t],e.z=i[8|t],e.w=i[12|t],e},setRow:function(t,e){var i=this._m;return i[t]=e.x,i[4|t]=e.y,i[8|t]=e.z,i[12|t]=e.w,this},getElement:function(t,e){return this._m[t|e<<2]},setElement:function(t,e,i){return this._m[t|e<<2]=i,this},getColumn:function(t,e){var i=this._m;return e=e||new h,t<<=2,e.x=i[t],e.y=i[1|t],e.z=i[2|t],e.w=i[3|t],e},setColumn:function(t,e){var i=this._m;return t<<=2,i[t]=e.x,i[1|t]=e.y,i[2|t]=e.z,i[3|t]=e.w,this},copyColumn:function(t,e){var i=this._m,n=e._m;return t<<=2,i[t]=n[t],i[1|t]=n[1|t],i[2|t]=n[2|t],i[3|t]=n[3|t],this},lookAt:function(t,e,i){var n=new h,r=new h,o=new h;return function(t,e,i){if(i=i||h.Z_AXIS,h.subtract(t,e,r),r.normalize(),h.cross(r,i,n),Math.abs(n.lengthSqr)>1e-4)n.normalize();else{var s=new h(i.x,i.z,i.y,0);h.cross(r,s,n),Math.abs(n.lengthSqr)<=1e-4&&(s.set(i.z,i.y,i.z,0),h.cross(r,s,n)),n.normalize()}h.cross(n,r,o);var a=this._m;return a[0]=n.x,a[1]=n.y,a[2]=n.z,a[3]=0,a[4]=r.x,a[5]=r.y,a[6]=r.z,a[7]=0,a[8]=o.x,a[9]=o.y,a[10]=o.z,a[11]=0,a[12]=e.x,a[13]=e.y,a[14]=e.z,a[15]=1,this}}(),compose:function(t){return this.fromScale(t.scale),this.appendQuaternion(t.rotation),this.appendTranslation(t.position),this},decompose:function(t,e,i){t=t||new u;var n;void 0===e?(e=t.rotation,i=t.scale,n=t.position):n=t;var r=this._m,o=r[0],s=r[1],a=r[2],h=r[4],_=r[5],l=r[6],c=r[8],f=r[9],d=r[10],p=s*l-a*_,m=a*h-o*l,g=o*_-s*h,x=yn.sign(p*c+m*f+g*d);i.x=x*Math.sqrt(o*o+s*s+a*a),i.y=x*Math.sqrt(h*h+_*_+l*l),i.z=x*Math.sqrt(c*c+f*f+d*d);var v=this.clone(),S=1/i.x,T=1/i.y,E=1/i.z,y=v._m;return y[0]*=S,y[1]*=S,y[2]*=S,y[4]*=T,y[5]*=T,y[6]*=T,y[8]*=E,y[9]*=E,y[10]*=E,e.fromMatrix(v),this.getColumn(3,n),t},swapColums:function(t,e){var i=this._m;if(t!==e){t<<=2,e<<=2;var n=i[t],r=i[1|t],o=i[2|t],s=i[3|t];return i[t]=i[e],i[1|t]=i[1|e],i[2|t]=i[2|e],i[3|t]=i[3|e],i[e]=n,i[1|e]=r,i[2|e]=o,i[3|e]=s,this}},toString:function(){for(var t=this._m,e="",i=0;i<16;++i){var n=3&i;0===n&&(e+="["),e+=t[i],e+=3===n?"]\n":"\t , \t"}return e}},f.IDENTITY=new f,f.ZERO=new f(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);var wn={getSettersPerInstance:function(t){return void 0===wn._instanceTable&&wn._init(),wn._findSetters(t,wn._instanceTable)},getSettersPerPass:function(t){return void 0===wn._passTable&&wn._init(),wn._findSetters(t,wn._passTable)},_findSetters:function(t,e){var i=[];for(var n in e){var r=vn.gl.getUniformLocation(t._program,n);if(r){var o=new e[n];i.push(o),o.location=r}}return i},_init:function(){wn._instanceTable={},wn._passTable={},wn._instanceTable.hx_worldMatrix=d,wn._instanceTable.hx_worldViewMatrix=T,wn._instanceTable.hx_wvpMatrix=S,wn._instanceTable.hx_inverseWVPMatrix=g,wn._instanceTable.hx_normalWorldMatrix=E,wn._instanceTable.hx_normalWorldViewMatrix=y,wn._instanceTable["hx_skinningMatrices[0]"]=U,wn._instanceTable["hx_morphWeights[0]"]=B,wn._passTable.hx_viewMatrix=R,wn._passTable.hx_projectionMatrix=x,wn._passTable.hx_inverseProjectionMatrix=v,wn._passTable.hx_viewProjectionMatrix=p,wn._passTable.hx_inverseViewProjectionMatrix=m,wn._passTable.hx_cameraWorldPosition=w,wn._passTable.hx_cameraWorldMatrix=A,wn._passTable.hx_cameraFrustumRange=M,wn._passTable.hx_rcpCameraFrustumRange=P,wn._passTable.hx_cameraNearPlaneDistance=b,wn._passTable.hx_cameraFarPlaneDistance=L,wn._passTable.hx_renderTargetResolution=O,wn._passTable.hx_rcpRenderTargetResolution=I,wn._passTable.hx_dither2DTextureScale=N,wn._passTable.hx_ambientColor=D,wn._passTable["hx_poissonDisk[0]"]=C,wn._passTable["hx_poissonSphere[0]"]=F}};d.prototype.execute=function(t,e){vn.gl.uniformMatrix4fv(this.location,!1,e.worldMatrix._m)},p.prototype.execute=function(t){vn.gl.uniformMatrix4fv(this.location,!1,t.viewProjectionMatrix._m)},m.prototype.execute=function(t){vn.gl.uniformMatrix4fv(this.location,!1,t.inverseViewProjectionMatrix._m)},g.prototype.execute=function(t){vn.gl.uniformMatrix4fv(this.location,!1,t.inverseViewProjectionMatrix._m)},x.prototype.execute=function(t){vn.gl.uniformMatrix4fv(this.location,!1,t.projectionMatrix._m)},v.prototype.execute=function(t){vn.gl.uniformMatrix4fv(this.location,!1,t.inverseProjectionMatrix._m)},S.prototype.execute=function(){var t=new f,e=t._m;return function(i,n){t.multiply(i.viewProjectionMatrix,n.worldMatrix),vn.gl.uniformMatrix4fv(this.location,!1,e)}}(),T.prototype.execute=function(){var t=new f,e=t._m;return function(i,n){t.multiply(i.viewMatrix,n.worldMatrix),vn.gl.uniformMatrix4fv(this.location,!1,e)}}(),E.prototype.execute=function(){var t=new Float32Array(9);return function(e,i){i.worldMatrix.writeNormalMatrix(t),vn.gl.uniformMatrix3fv(this.location,!1,t)}}(),y.prototype.execute=function(){var t=new Float32Array(9);return function(e,i){var n=e.viewMatrix._m,r=i.worldMatrix._m,o=n[0],s=n[1],a=n[2],h=n[4],_=n[5],l=n[6],c=n[8],u=n[9],f=n[10],d=n[12],p=n[13],m=n[14],g=r[0],x=r[1],v=r[2],S=r[3],T=r[4],E=r[5],y=r[6],w=r[7],A=r[8],M=r[9],P=r[10],b=r[11],L=o*g+h*x+c*v+d*S,R=s*g+_*x+u*v+p*S,O=a*g+l*x+f*v+m*S,D=o*T+h*E+c*y+d*w,I=s*T+_*E+u*y+p*w,N=a*T+l*E+f*y+m*w,C=o*A+h*M+c*P+d*b,F=s*A+_*M+u*P+p*b,U=a*A+l*M+f*P+m*b,B=L*(I*U-F*N)-D*(R*U-F*O)+C*(R*N-I*O),H=1/B;t[0]=(I*U-F*N)*H,t[1]=(C*N-D*U)*H,t[2]=(D*F-C*I)*H,t[3]=(F*O-R*U)*H,t[4]=(L*U-C*O)*H,t[5]=(C*R-L*F)*H,t[6]=(R*N-I*O)*H,t[7]=(D*O-L*N)*H,t[8]=(L*I-D*R)*H,vn.gl.uniformMatrix3fv(this.location,!1,t)}}(),w.prototype.execute=function(t){var e=t.worldMatrix._m;vn.gl.uniform3f(this.location,e[12],e[13],e[14])},A.prototype.execute=function(t){var e=t.worldMatrix;vn.gl.uniformMatrix4fv(this.location,!1,e._m)},M.prototype.execute=function(t){vn.gl.uniform1f(this.location,t._farDistance-t._nearDistance)},P.prototype.execute=function(t){vn.gl.uniform1f(this.location,1/(t._farDistance-t._nearDistance))},b.prototype.execute=function(t){vn.gl.uniform1f(this.location,t._nearDistance)},L.prototype.execute=function(t){vn.gl.uniform1f(this.location,t._farDistance)},R.prototype.execute=function(t){vn.gl.uniformMatrix4fv(this.location,!1,t.viewMatrix._m)},O.prototype.execute=function(t){vn.gl.uniform2f(this.location,t._renderTargetWidth,t._renderTargetHeight)},D.prototype.execute=function(t,e){var i=e._ambientColor;vn.gl.uniform3f(this.location,i.r,i.g,i.b)},I.prototype.execute=function(t){vn.gl.uniform2f(this.location,1/t._renderTargetWidth,1/t._renderTargetHeight)},N.prototype.execute=function(){vn.gl.uniform2f(this.location,1/Fn.DEFAULT_2D_DITHER_TEXTURE.width,1/Fn.DEFAULT_2D_DITHER_TEXTURE.height)},C.prototype.execute=function(){vn.gl.uniform2fv(this.location,a.DEFAULT_FLOAT32)},F.prototype.execute=function(){vn.gl.uniform3fv(this.location,_.DEFAULT_FLOAT32)},U.prototype.execute=function(t,e){var i=e.skeleton;if(i){for(var n=e.skeletonMatrices,r=i.numJoints,o=0,s=0;s<r;++s)n[s].writeData4x3(this._data,o),o+=12;vn.gl.uniform4fv(this.location,this._data)}},B.prototype.execute=function(t,e){vn.gl.uniform1fv(this.location,e.meshInstance._morphWeights)};var An={printShaderCode:function(t){for(var e=t.split("\n"),i="",n=0;n<e.length;++n)i+=n+1+":\t"+e[n]+"\n";console.log(i)},printSkeletonHierarchy:function(t){for(var e="Skeleton: \n",i=0;i<t.numJoints;++i){for(var n=t.getJoint(i),r=n.name;n.parentIndex!==-1;)n=t.getJoint(n.parentIndex),e+="\t";e+="\t"+r+"\n"}console.log(e)},assert:function(t,e){if(!t)throw new Error(e)}},Mn=function(){var t={},e={};return{getTime:function(e){return t[e]},startTiming:function(i){t[i]||(t[i]=0),e[i]=Date.now()},stopTiming:function(i){t[i]+=Date.now()-e[i]},resetTiming:function(e){t[e]=0}}}();H.ID_COUNTER=0,H.prototype={constructor:H,isReady:function(){return this._ready},init:function(t,e){var i=vn.gl;if(t="#define HX_VERTEX_SHADER\n"+Tn.GENERAL+t,e="#define HX_FRAGMENT_SHADER\n"+Tn.GENERAL+e,t=this._processShaderCode(t),e=this._processShaderCode(e),this._vertexShader=i.createShader(i.VERTEX_SHADER),!this._initShader(this._vertexShader,t)){if(this.dispose(),On.OPTIONS.throwOnShaderError)throw new Error("Failed generating vertex shader: \n"+t);return void console.warn("Failed generating vertex shader")}if(this._fragmentShader=i.createShader(i.FRAGMENT_SHADER),!this._initShader(this._fragmentShader,e)){if(this.dispose(),On.OPTIONS.throwOnShaderError)throw new Error("Failed generating fragment shader: \n"+e);return void console.warn("Failed generating fragment shader:")}if(this._program=i.createProgram(),i.attachShader(this._program,this._vertexShader),i.attachShader(this._program,this._fragmentShader),i.linkProgram(this._program),On.OPTIONS.debug&&!i.getProgramParameter(this._program,i.LINK_STATUS)){var n=i.getProgramInfoLog(this._program);if(this.dispose(),console.log("**********"),An.printShaderCode(t),console.log("**********"),An.printShaderCode(e),On.OPTIONS.throwOnShaderError)throw new Error("Error in program linking:"+n);return void console.warn("Error in program linking:"+n)}this._ready=!0,Mn.stopTiming("Shader::init"),this._uniformSettersInstance=wn.getSettersPerInstance(this),this._uniformSettersPass=wn.getSettersPerPass(this)},updatePassRenderState:function(t,e){vn.gl.useProgram(this._program);for(var i=this._uniformSettersPass.length,n=0;n<i;++n)this._uniformSettersPass[n].execute(t,e)},updateInstanceRenderState:function(t,e){for(var i=this._uniformSettersInstance.length,n=0;n<i;++n)this._uniformSettersInstance[n].execute(t,e)},_initShader:function(t,e){var i=vn.gl;return i.shaderSource(t,e),i.compileShader(t),!(On.OPTIONS.debug&&!i.getShaderParameter(t,i.COMPILE_STATUS))||(console.warn(i.getShaderInfoLog(t)),An.printShaderCode(e),!1)},dispose:function(){var t=vn.gl;t.deleteShader(this._vertexShader),t.deleteShader(this._fragmentShader),t.deleteProgram(this._program),this._ready=!1},getProgram:function(){return this._program},getUniformLocation:function(t){return vn.gl.getUniformLocation(this._program,t)},getAttributeLocation:function(t){return vn.gl.getAttribLocation(this._program,t)},_processShaderCode:function(t){return t=this._processExtensions(t,/^\s*#derivatives\s*$/gm,"GL_OES_standard_derivatives"),t=this._processExtensions(t,/^\s*#texturelod\s*$/gm,"GL_EXT_shader_texture_lod"),t=this._processExtensions(t,/^\s*#drawbuffers\s*$/gm,"GL_EXT_draw_buffers"),t=this._guard(t,/^\s*uniform\s+\w+\s+hx_\w+(\[\w+])?\s*;/gm),t=this._guard(t,/^\s*attribute\s+\w+\s+hx_\w+\s*;/gm)},_processExtensions:function(t,e,i){var n=t.search(e);return n<0?t:t="#extension "+i+" : enable\n"+t.replace(e,"")},_guard:function(t,e){for(var i=t.match(e)||[],n={},r=0;r<i.length;++r){var o=i[r];o=o.replace(/(\r|\n)/g,""),10===o.charCodeAt(0)&&(o=o.substring(1));var s=o.indexOf("hx_"),a=o.indexOf(";"),h=o.indexOf("[");h>=0&&h<a&&(a=h);var _=o.substring(s,a);if(_=_.trim(),!n[_]){n[_]=!0;var l="HX_GUARD_"+_.toUpperCase(),c="\n#ifndef "+l+"\n#define "+l+"\n"+o+"\n#endif\n";o=o.replace(/\[/g,"\\[");var u=new RegExp(o,"g");t=t.replace(u,c)}}return t}},X.prototype=Object.create(H.prototype),X.prototype.execute=function(t,e){var i=vn.gl;vn.setDepthTest(Vn.DISABLED),vn.setCullMode(jn.NONE),t._vertexBuffers[0].bind(),t._indexBuffer.bind(),this.updatePassRenderState(),e.bind(0),i.vertexAttribPointer(this._positionAttributeLocation,2,i.FLOAT,!1,16,0),i.vertexAttribPointer(this._texCoordAttributeLocation,2,i.FLOAT,!1,16,8),vn.enableAttributes(2),vn.drawElements(Gn.TRIANGLES,6,0)},j.prototype=Object.create(X.prototype),z.prototype=Object.create(X.prototype),V.prototype={uploadData:function(t,e){void 0===e&&(e=Kn.STATIC_DRAW),this.bind(),vn.gl.bufferData(vn.gl.ELEMENT_ARRAY_BUFFER,t,e)},bind:function(){vn.gl.bindBuffer(vn.gl.ELEMENT_ARRAY_BUFFER,this._buffer)}},G.prototype={uploadData:function(t,e){void 0===e&&(e=vn.gl.STATIC_DRAW),this.bind(),vn.gl.bufferData(vn.gl.ARRAY_BUFFER,t,e)},bind:function(){vn.gl.bindBuffer(vn.gl.ARRAY_BUFFER,this._buffer)}};var Pn=0;k.DEFAULT_VERTEX_SIZE=12,k.ID_COUNTER=0,k.createDefaultEmpty=function(){var t=new k;return t.addVertexAttribute("hx_position",3),t.addVertexAttribute("hx_normal",3),t.addVertexAttribute("hx_tangent",4),t.addVertexAttribute("hx_texCoord",2),t},k.prototype={get hasMorphData(){return!!this._defaultMorphTarget},get hasMorphNormals(){return this._hasMorphNormals},get vertexUsage(){return this._vertexUsage},set vertexUsage(t){this._vertexUsage=t},get indexUsage(){return this._indexUsage},set indexUsage(t){this._indexUsage=t},hasVertexData:function(t){return!!this._vertexData[t]},getVertexData:function(t){return this._vertexData[t]},setVertexData:function(t,e){e=e||0,this._vertexData[e]=t instanceof Float32Array?t:new Float32Array(t),this._vertexBuffers[e]=this._vertexBuffers[e]||new G,this._vertexBuffers[e].uploadData(this._vertexData[e],this._vertexUsage),0===e&&(this._numVertices=t.length/this._vertexStrides[0])},getIndexData:function(){return this._indexData},setIndexData:function(t){t instanceof Uint16Array?(this._indexData=t,this._indexType=qn.UNSIGNED_SHORT):t instanceof Uint32Array?(this._indexData=t,this._indexType=qn.UNSIGNED_INT):(this._indexData=new Uint16Array(t),this._indexType=qn.UNSIGNED_SHORT),this._numIndices=this._indexData.length,this._indexBuffer.uploadData(this._indexData,this._indexUsage)},addVertexAttribute:function(t,e,i){i=i||0,this._numStreams=Math.max(this._numStreams,i+1);var n=this._vertexStrides[i]||0,r={name:t,offset:n,numComponents:e,streamIndex:i};this._vertexAttributes.push(r),this._vertexAttributesLookUp[t]=r,this._vertexStrides[i]=n+e,this.onLayoutChanged.dispatch()},get numStreams(){return this._numStreams},extractAttributeData:function(t){for(var e=this.getVertexAttributeByName(t),i=this.getVertexStride(e),n=this.getVertexData(e.streamIndex),r=e.numComponents,o=[],s=0,a=e.offset;a<n.length;a+=i)for(var h=0;h<r;++h)o[s++]=n[a+h];return o},generateMorphData:function(t){var e;for(t?(this._hasMorphNormals=!0,e=4):e=8,n=0;n<e;++n)this.addVertexAttribute("hx_morphPosition"+n,3,this._numStreams),t&&this.addVertexAttribute("hx_morphNormal"+n,3,this._numStreams);for(var i=[],n=0;n<this._numVertices;++n)i.push(0,0,0);this._defaultMorphTarget=new G,this._defaultMorphTarget.uploadData(new Float32Array(i),Kn.STATIC_DRAW)},get numVertices(){return this._numVertices},get numIndices(){return this._numIndices},get numVertexAttributes(){return this._vertexAttributes.length},getVertexStride:function(t){return this._vertexStrides[t]},getVertexAttributeByName:function(t){return this._vertexAttributesLookUp[t]},getVertexAttributeByIndex:function(t){return this._vertexAttributes[t]},clone:function(){for(var t=new k(this._vertexUsage,this._indexUsage),e=this._vertexAttributes.length,i=0;i<e;++i){var n=this._vertexAttributes[i];t.addVertexAttribute(n.name,n.numComponents,n.streamIndex)}for(i=0;i<this._numStreams;++i)this._vertexData[i]&&t.setVertexData(this._vertexData[i],i);return this._indexData&&t.setIndexData(this._indexData),t},translate:function(t,e,i){t instanceof h&&(e=t.y,i=t.z,t=t.x);var n=this.getVertexAttributeByName("hx_position");if(n){for(var r=this.getVertexStride(n),o=this.getVertexData(n.streamIndex),s=n.offset;s<o.length;s+=r)o[s]+=t,o[s+1]+=t,o[s+2]+=t;this._vertexBuffers[n.streamIndex].uploadData(this._vertexData[n.streamIndex],this._vertexUsage)}}};var bn={create:function(){var t=new k;return t.addVertexAttribute("hx_position",2),t.addVertexAttribute("hx_texCoord",2),t.setVertexData([-1,1,0,1,1,1,1,1,1,-1,1,0,-1,-1,0,0],0),t.setIndexData([0,1,2,0,2,3]),t},_initDefault:function(){bn.DEFAULT=bn.create()}},Ln={assureSize:function(t,e,i,n,r,o){return(t!==i.width||e!==i.height)&&(i.initEmpty(t,e,r,o),n&&n.init(),!0)},copy:function(t,e){vn.setRenderTarget(e),vn.clear(),Fn.COPY_SHADER.execute(bn.DEFAULT,t),vn.setRenderTarget(null)},encodeHalfFloat:function(t){var e=new Float32Array(1),i=new Int32Array(e.buffer);return function(t){e[0]=t;var n=i[0],r=n>>16&32768,o=n>>12&2047,s=n>>23&255;return s<103?r:s>142?(r|=31744,r|=(255===s?0:1)&&8388607&n):s<113?(o|=2048,r|=(o>>114-s)+(o>>113-s&1)):(r|=s-112<<10|o>>1,r+=1&o)}}(),encodeToFloat16Array:function(t){for(var e=Ln.encodeHalfFloat,i=[],n=0;n<t.length;++n)i[n]=e(t[n]);return new Uint16Array(i)}};Y._initDefault=function(){var t=new Uint8Array([255,0,255,255]);Y.DEFAULT=new Y,Y.DEFAULT.uploadData(t,1,1,!0),Y.DEFAULT.filter=Hn.NEAREST_NOMIP},Y.prototype={get name(){return this._name},set name(t){this._name=t},generateMipmap:function(){var t=vn.gl;this.bind(),t.generateMipmap(t.TEXTURE_2D),t.bindTexture(t.TEXTURE_2D,null)},get filter(){return this._filter},set filter(t){var e=vn.gl;this._filter=t,this.bind(),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,t.min),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,t.mag),e.bindTexture(e.TEXTURE_2D,null),t!==Hn.NEAREST_NOMIP&&t!==Hn.NEAREST||(this.maxAnisotropy=1)},get wrapMode(){return this._wrapMode},set wrapMode(t){var e=vn.gl;this._wrapMode=t,this.bind(),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,t.s),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,t.t),e.bindTexture(e.TEXTURE_2D,null)},get maxAnisotropy(){return this._maxAnisotropy},set maxAnisotropy(t){var e=vn.gl;t>Un.DEFAULT_TEXTURE_MAX_ANISOTROPY&&(t=Un.DEFAULT_TEXTURE_MAX_ANISOTROPY),this._maxAnisotropy=t,this.bind(),Un.EXT_TEXTURE_FILTER_ANISOTROPIC&&vn.gl.texParameteri(e.TEXTURE_2D,Un.EXT_TEXTURE_FILTER_ANISOTROPIC.TEXTURE_MAX_ANISOTROPY_EXT,t),e.bindTexture(e.TEXTURE_2D,null)},get width(){return this._width},get height(){return this._height},get format(){return this._format},get dataType(){return this._dataType},initEmpty:function(t,e,i,n){var r=vn.gl;this._format=i=i||Zn.RGBA,this._dataType=n=n||qn.UNSIGNED_BYTE,this.bind(),this._width=t,this._height=e,r.texImage2D(r.TEXTURE_2D,0,i,t,e,0,i,n,null),this._isReady=!0,r.bindTexture(r.TEXTURE_2D,null)},uploadData:function(t,e,i,n,r,o){var s=vn.gl;Un.EXT_HALF_FLOAT_TEXTURES&&o===Un.EXT_HALF_FLOAT_TEXTURES.HALF_FLOAT_OES&&(t=Ln.encodeToFloat16Array(t)),this._width=e,this._height=i,this._format=r=r||Zn.RGBA,this._dataType=o=o||qn.UNSIGNED_BYTE,n=void 0!==n&&n,this.bind(),s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,0),s.texImage2D(s.TEXTURE_2D,0,r,e,i,0,r,o,t),n&&s.generateMipmap(s.TEXTURE_2D),this._isReady=!0,s.bindTexture(s.TEXTURE_2D,null)},uploadImage:function(t,e,i,n,r,o){var s=vn.gl;this._width=e,this._height=i,this._format=r=r||Zn.RGBA,this._dataType=o=o||qn.UNSIGNED_BYTE,n=void 0===n||n,this.bind(),t&&s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,1),s.texImage2D(s.TEXTURE_2D,0,r,r,o,t),n&&s.generateMipmap(s.TEXTURE_2D),this._isReady=!0,s.bindTexture(s.TEXTURE_2D,null)},isReady:function(){return this._isReady},bind:function(t){var e=vn.gl;void 0!==t&&e.activeTexture(e.TEXTURE0+t),e.bindTexture(e.TEXTURE_2D,this._texture)},toString:function(){return"[Texture2D(name="+this._name+")]"}},W._initDefault=function(){var t=vn.gl,e=new Uint8Array([255,0,255,255]);W.DEFAULT=new W,W.DEFAULT.uploadData([e,e,e,e,e,e],1,!0),W.DEFAULT.filter=Hn.NEAREST_NOMIP,t.bindTexture(t.TEXTURE_CUBE_MAP,null)},W.prototype={get name(){return this._name},set name(t){this._name=t},generateMipmap:function(){this.bind();var t=vn.gl;t.generateMipmap(t.TEXTURE_CUBE_MAP),t.bindTexture(t.TEXTURE_CUBE_MAP,null)},get filter(){return this._filter},set filter(t){this._filter=t,this.bind();var e=vn.gl;e.texParameteri(e.TEXTURE_CUBE_MAP,e.TEXTURE_MIN_FILTER,t.min),e.texParameteri(e.TEXTURE_CUBE_MAP,e.TEXTURE_MAG_FILTER,t.mag),e.bindTexture(e.TEXTURE_CUBE_MAP,null)},get maxAnisotropy(){return this._maxAnisotropy},set maxAnisotropy(t){t>Un.DEFAULT_TEXTURE_MAX_ANISOTROPY&&(t=Un.DEFAULT_TEXTURE_MAX_ANISOTROPY),this._maxAnisotropy=t,this.bind();var e=vn.gl;Un.EXT_TEXTURE_FILTER_ANISOTROPIC&&e.texParameteri(e.TEXTURE_CUBE_MAP,Un.EXT_TEXTURE_FILTER_ANISOTROPIC.TEXTURE_MAX_ANISOTROPY_EXT,t),e.bindTexture(e.TEXTURE_CUBE_MAP,null)},get size(){return this._size},get format(){return this._format},get dataType(){return this._dataType},initEmpty:function(t,e,i){this._format=e=e||Zn.RGBA,this._dataType=i=i||qn.UNSIGNED_BYTE,this._size=t,this.bind();var n=vn.gl;n.texImage2D(Jn.POSITIVE_X,0,e,t,t,0,e,i,null),n.texImage2D(Jn.NEGATIVE_X,0,e,t,t,0,e,i,null),n.texImage2D(Jn.POSITIVE_Y,0,e,t,t,0,e,i,null),n.texImage2D(Jn.NEGATIVE_Y,0,e,t,t,0,e,i,null),n.texImage2D(Jn.POSITIVE_Z,0,e,t,t,0,e,i,null),n.texImage2D(Jn.NEGATIVE_Z,0,e,t,t,0,e,i,null),this._isReady=!0,n.bindTexture(n.TEXTURE_2D,null)},uploadData:function(t,e,i,n,r){this._size=e,this._format=n=n||Zn.RGBA,this._dataType=r=r||qn.UNSIGNED_BYTE,i=void 0===i||i,this.bind();var o=vn.gl;o.pixelStorei(o.UNPACK_FLIP_Y_WEBGL,0),o.texImage2D(Jn.POSITIVE_X,0,n,e,e,0,n,r,t[0]),o.texImage2D(Jn.NEGATIVE_X,0,n,e,e,0,n,r,t[1]),o.texImage2D(Jn.POSITIVE_Y,0,n,e,e,0,n,r,t[2]),o.texImage2D(Jn.NEGATIVE_Y,0,n,e,e,0,n,r,t[3]),o.texImage2D(Jn.POSITIVE_Z,0,n,e,e,0,n,r,t[4]),o.texImage2D(Jn.NEGATIVE_Z,0,n,e,e,0,n,r,t[5]),i&&o.generateMipmap(o.TEXTURE_CUBE_MAP),this._isReady=!0,o.bindTexture(o.TEXTURE_CUBE_MAP,null)},uploadImages:function(t,e,i,n){e=void 0===e||e,this._format=i,this._dataType=n,this.uploadImagesToMipLevel(t,0,i,n);var r=vn.gl;e&&(this.bind(),r.generateMipmap(r.TEXTURE_CUBE_MAP)),this._isReady=!0,r.bindTexture(r.TEXTURE_CUBE_MAP,null)},uploadImagesToMipLevel:function(t,e,i,n){var r=vn.gl;this._format=i=i||Zn.RGBA,this._dataType=n=n||qn.UNSIGNED_BYTE,0===e&&(this._size=t[0].naturalWidth),this.bind(),r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,0),r.texImage2D(Jn.POSITIVE_X,e,i,i,n,t[0]),r.texImage2D(Jn.NEGATIVE_X,e,i,i,n,t[1]),r.texImage2D(Jn.POSITIVE_Y,e,i,i,n,t[2]),r.texImage2D(Jn.NEGATIVE_Y,e,i,i,n,t[3]),r.texImage2D(Jn.POSITIVE_Z,e,i,i,n,t[4]),r.texImage2D(Jn.NEGATIVE_Z,e,i,i,n,t[5]),r.bindTexture(r.TEXTURE_CUBE_MAP,null)},isReady:function(){return this._isReady},bind:function(t){var e=vn.gl;void 0!==t&&e.activeTexture(e.TEXTURE0+t),e.bindTexture(e.TEXTURE_CUBE_MAP,this._texture)},toString:function(){return"[TextureCube(name="+this._name+")]"}},Z.prototype={clone:function(){return new Z(this.srcFactor,this.dstFactor,this.operator,this.color)}},Z._initDefaults=function(){Z.ADD=new Z(kn.SOURCE_ALPHA,kn.ONE),Z.ADD_NO_ALPHA=new Z(kn.ONE,kn.ONE),Z.MULTIPLY=new Z(kn.DESTINATION_COLOR,kn.ZERO),Z.ALPHA=new Z(kn.SOURCE_ALPHA,kn.ONE_MINUS_SOURCE_ALPHA),Z.ALPHA.alphaSrcFactor=kn.ONE,Z.ALPHA.alphaDstFactor=kn.ONE_MINUS_SOURCE_ALPHA,Z.INV_ALPHA=new Z(kn.ONE_MINUS_SOURCE_ALPHA,kn.SOURCE_ALPHA)},q.prototype={get width(){return this._width},get height(){return this._height},init:function(t){var e=vn.gl;e.bindFramebuffer(e.FRAMEBUFFER,this._fbo),this._colorTextures?void 0===this._cubeFace?(this._width=this._colorTextures[0]._width,this._height=this._colorTextures[0]._height):this._height=this._width=this._colorTextures[0].size:(this._width=this._depthBuffer._width,this._height=this._depthBuffer._height);var i=void 0===this._cubeFace?e.TEXTURE_2D:this._cubeFace;if(1===this._numColorTextures){var n=this._colorTextures[0];e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,i,n._texture,0)}else{if(!Un.EXT_DRAW_BUFFERS)throw new Error("Trying to bind multiple render targets without EXT_DRAW_BUFFERS support!");for(var r=0;r<this._numColorTextures;++r)n=this._colorTextures[r],e.framebufferTexture2D(e.FRAMEBUFFER,Un.EXT_DRAW_BUFFERS.COLOR_ATTACHMENT0_WEBGL+r,i,n._texture,0)}if(this._depthBuffer){var o=this._depthBuffer.format===e.DEPTH_STENCIL?e.DEPTH_STENCIL_ATTACHMENT:e.DEPTH_ATTACHMENT;this._depthBuffer instanceof Y?e.framebufferTexture2D(e.FRAMEBUFFER,o,e.TEXTURE_2D,this._depthBuffer._texture,0):e.framebufferRenderbuffer(e.FRAMEBUFFER,o,e.RENDERBUFFER,this._depthBuffer._renderBuffer)}var s=e.checkFramebufferStatus(e.FRAMEBUFFER);switch(s&&!t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:console.warn("Failed to initialize FBO: FRAMEBUFFER_INCOMPLETE_ATTACHMENT");break;case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:console.warn("Failed to initialize FBO: FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT");break;case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:console.warn("Failed to initialize FBO: FRAMEBUFFER_INCOMPLETE_DIMENSIONS");break;case e.FRAMEBUFFER_UNSUPPORTED:console.warn("Failed to initialize FBO: FRAMEBUFFER_UNSUPPORTED")}return s===e.FRAMEBUFFER_COMPLETE}},K.ALBEDO=0,K.NORMAL_DEPTH=1,K.SPECULAR=2,K.prototype={resize:function(t,e){for(var i=0;i<3;++i)this.textures[i].initEmpty(t,e),this.fbos[i].init();this.mrt&&this.mrt.init()}};var Rn={getSettersPerPass:function(t){return void 0===Rn._passTable&&Rn._init(),Rn._findSetters(t,Rn._passTable)},getSettersPerInstance:function(t){return void 0===Rn._instanceTable&&Rn._init(),Rn._findSetters(t,Rn._instanceTable)},_findSetters:function(t,e){var i=[];for(var n in e)if(e.hasOwnProperty(n)){var r=t.getTextureSlot(n);if(r){var o=new e[n];i.push(o),o.slot=r}}return i},_init:function(){Rn._passTable={},Rn._instanceTable={},Rn._passTable.hx_gbufferAlbedo=J,Rn._passTable.hx_gbufferNormalDepth=Q,Rn._passTable.hx_gbufferSpecular=$,Rn._passTable.hx_backbuffer=et,Rn._passTable.hx_frontbuffer=tt,Rn._passTable.hx_lightAccumulation=it,Rn._passTable.hx_ssao=nt,Rn._instanceTable.hx_skinningTexture=rt}};J.prototype.execute=function(t){t._gbuffer&&(this.slot.texture=t._gbuffer.textures[K.ALBEDO])},Q.prototype.execute=function(t){t._gbuffer&&(this.slot.texture=t._gbuffer.textures[K.NORMAL_DEPTH])},$.prototype.execute=function(t){t._gbuffer&&(this.slot.texture=t._gbuffer.textures[K.SPECULAR])},tt.prototype.execute=function(t){t._hdrFront&&(this.slot.texture=t._hdrFront.texture)},et.prototype.execute=function(t){t._hdrBack&&(this.slot.texture=t._hdrBack.texture)},it.prototype.execute=function(t){t._hdrBack&&(this.slot.texture=t._hdrBack.texture)},nt.prototype.execute=function(t){this.slot.texture=t._ssaoTexture},rt.prototype.execute=function(t){this.slot.texture=t.skeletonMatrices},st.BASE_PASS=0,st.DIR_LIGHT_PASS=1,st.DIR_LIGHT_SHADOW_PASS=2,st.POINT_LIGHT_PASS=3,st.POINT_LIGHT_SHADOW_PASS=4,st.SPOT_LIGHT_PASS=5,st.SPOT_LIGHT_SHADOW_PASS=6,
st.LIGHT_PROBE_PASS=7,st.DIR_LIGHT_SHADOW_MAP_PASS=8,st.POINT_LIGHT_SHADOW_MAP_PASS=9,st.SPOT_LIGHT_SHADOW_MAP_PASS=10,st.GBUFFER_PASS=11,st.GBUFFER_ALBEDO_PASS=11,st.GBUFFER_NORMAL_DEPTH_PASS=12,st.GBUFFER_SPECULAR_PASS=13,st.NUM_PASS_TYPES=14,st.prototype={constructor:st,getShader:function(){return this._shader},get elementType(){return this._elementType},set elementType(t){this._elementType=t},get depthTest(){return this._depthTest},set depthTest(t){this._depthTest=t},get writeColor(){return this._writeColor},set writeColor(t){this._writeColor=t},get writeDepth(){return this._writeDepth},set writeDepth(t){this._writeDepth=t},get cullMode(){return this._cullMode},set cullMode(t){this._cullMode=t},get blendState(){return this._blendState},set blendState(t){this._blendState=t},updateInstanceRenderState:function(t,e){for(var i=this._textureSettersInstance.length,n=0;n<i;++n)this._textureSettersInstance[n].execute(e);this._shader.updateInstanceRenderState(t,e)},updatePassRenderState:function(t,e,i){var n,r=this._textureSettersPass.length;for(n=0;n<r;++n)this._textureSettersPass[n].execute(e);for(r=this._textureSlots.length,n=0;n<r;++n){var o=this._textureSlots[n],s=o.texture;s?s.isReady()?s.bind(n):s._default.bind(n):Y.DEFAULT.bind(n)}vn.setMaterialPassState(this._cullMode,this._depthTest,this._writeDepth,this._writeColor,this._blendState),this._shader.updatePassRenderState(t,e)},_storeUniforms:function(){for(var t=vn.gl,e=t.getProgramParameter(this._shader._program,t.ACTIVE_UNIFORMS),i=0;i<e;++i){var n=t.getActiveUniform(this._shader._program,i),r=n.name,o=t.getUniformLocation(this._shader._program,r);this._uniforms[r]={type:n.type,location:o,size:n.size}}},getTextureSlot:function(t){if(!this._uniforms.hasOwnProperty(t))return null;var e=vn.gl;e.useProgram(this._shader._program);var i=this._uniforms[t];if(i){for(var n=i.location,r=null,o=this._textureSlots.length,s=0;s<o;++s)if(this._textureSlots[s].location===n){r=this._textureSlots[s];break}if(!r){for(var a=new Int32Array(i.size),h=0;h<i.size;++h)r=new ot,r.index=s,r.name=t,this._textureSlots.push(r),r.location=n,a[h]=s+h;1===i.size?e.uniform1i(n,s):e.uniform1iv(n,a)}return r}},setTexture:function(t,e){var i=this.getTextureSlot(t);i&&(i.texture=e)},setTextureArray:function(t,e){var i=this.getTextureSlot(t+"[0]"),n=i.location;if(i)for(var r=e.length,o=0;o<r;++o){var s=this._textureSlots[i.index+o];if(!s||s.location!==n)return;s.texture=e[o]}},getUniformLocation:function(t){if(this._uniforms.hasOwnProperty(t))return this._uniforms[t].location},getAttributeLocation:function(t){return this._shader.getAttributeLocation(t)},setUniformStructArray:function(t,e){for(var i=e.length,n=0;n<i;++n){var r=e[n];for(var o in r)r.hasOwnProperty("key")&&this.setUniform(t+"["+n+"]."+o,e)}},setUniformArray:function(t,e){if(t+="[0]",this._uniforms.hasOwnProperty(t)){var i=this._uniforms[t],n=vn.gl;switch(n.useProgram(this._shader._program),i.type){case n.FLOAT:n.uniform1fv(i.location,e);break;case n.FLOAT_VEC2:n.uniform2fv(i.location,e);break;case n.FLOAT_VEC3:n.uniform3fv(i.location,e);break;case n.FLOAT_VEC4:n.uniform4fv(i.location,e);break;case n.FLOAT_MAT4:n.uniformMatrix4fv(i.location,!1,e);break;case n.INT:n.uniform1iv(i.location,e);break;case n.INT_VEC2:n.uniform2iv(i.location,e);break;case n.INT_VEC3:n.uniform3iv(i.location,e);break;case n.INT_VEC4:n.uniform1iv(i.location,e);break;case n.BOOL:n.uniform1bv(i.location,e);break;case n.BOOL_VEC2:n.uniform2bv(i.location,e);break;case n.BOOL_VEC3:n.uniform3bv(i.location,e);break;case n.BOOL_VEC4:n.uniform4bv(i.location,e);break;default:throw new Error("Unsupported uniform format for setting ("+i.type+") for uniform '"+t+"'. May be a todo.")}}},setUniform:function(t,e){if(this._uniforms.hasOwnProperty(t)){var i=this._uniforms[t],n=vn.gl;switch(n.useProgram(this._shader._program),i.type){case n.FLOAT:n.uniform1f(i.location,e);break;case n.FLOAT_VEC2:n.uniform2f(i.location,e.x||e[0]||0,e.y||e[1]||0);break;case n.FLOAT_VEC3:n.uniform3f(i.location,e.x||e.r||e[0]||0,e.y||e.g||e[1]||0,e.z||e.b||e[2]||0);break;case n.FLOAT_VEC4:n.uniform4f(i.location,e.x||e.r||e[0]||0,e.y||e.g||e[1]||0,e.z||e.b||e[2]||0,e.w||e.a||e[3]||0);break;case n.INT:n.uniform1i(i.location,e);break;case n.INT_VEC2:n.uniform2i(i.location,e.x||e[0],e.y||e[1]);break;case n.INT_VEC3:n.uniform3i(i.location,e.x||e[0],e.y||e[1],e.z||e[2]);break;case n.INT_VEC4:n.uniform4i(i.location,e.x||e[0],e.y||e[1],e.z||e[2],e.w||e[3]);break;case n.BOOL:n.uniform1i(i.location,e);break;case n.BOOL_VEC2:n.uniform2i(i.location,e.x||e[0],e.y||e[1]);break;case n.BOOL_VEC3:n.uniform3i(i.location,e.x||e[0],e.y||e[1],e.z||e[2]);break;case n.BOOL_VEC4:n.uniform4i(i.location,e.x||e[0],e.y||e[1],e.z||e[2],e.w||e[3]);break;case n.FLOAT_MAT4:n.uniformMatrix4fv(i.location,!1,e._m);break;default:throw new Error("Unsupported uniform format for setting. May be a todo.")}}}},at.prototype=Object.create(r.prototype),at.prototype.getGLSL=function(){return on.get("spot_shadow_hard.glsl")},ht.prototype=Object.create(r.prototype),ht.prototype.getGLSL=function(){return on.get("point_shadow_hard.glsl")};var On={INITIALIZED:!1,OPTIONS:null,TARGET_CANVAS:null},Dn=new e,In=new e,Nn=0,Cn=new i;Cn.onTick.bind(ct);var Fn={COPY_SHADER:null,DEFAULT_2D_DITHER_TEXTURE:null,DEFAULT_SKINNING_TEXTURE:null},Un={EXT_DRAW_BUFFERS:null,EXT_FLOAT_TEXTURES:null,EXT_HALF_FLOAT_TEXTURES:null,EXT_FLOAT_TEXTURES_LINEAR:null,EXT_HALF_FLOAT_TEXTURES_LINEAR:null,EXT_DEPTH_TEXTURE:null,EXT_STANDARD_DERIVATIVES:null,EXT_SHADER_TEXTURE_LOD:null,EXT_TEXTURE_FILTER_ANISOTROPIC:null,EXT_ELEMENT_INDEX_UINT:null,DEFAULT_TEXTURE_MAX_ANISOTROPY:0,GBUFFER_MRT:!1,HDR_FORMAT:0,HALF_FLOAT_FBO:!1},Bn={GAMMA_CORRECT_LIGHTS:!1},Hn={},Xn={},jn={NONE:null,BACK:1029,FRONT:1028,ALL:1032},zn={},Vn={},Gn={},kn={},Yn={},Wn={},Zn={},qn={},Kn={},Jn={};vt.prototype={getValueAt:function(t){return this._amplitude*Math.pow(Math.E,t*t*this._expScale)}},vt.fromRadius=function(t,e){e=e||.01;var i=t/Math.sqrt(-2*Math.log(e));return new vt(i*i)};var Qn={FRONT:1,BACK:-1,INTERSECTING:0};St.prototype={transformFrom:function(t,e){e.transformPoint(t.origin,this.origin),e.transformVector(t.direction,this.direction),this.direction.normalize()},toString:function(){return"Ray(\norigin: "+this.origin.toString()+"\ndirection: "+this.direction.toString()+"\n)"}},Tt.EXPANSE_EMPTY=0,Tt.EXPANSE_INFINITE=1,Tt.EXPANSE_FINITE=2,Tt.EXPANSE_INHERIT=3,Tt._testAABBToSphere=function(t,e){var i,n=e._maximumX,r=e._maximumY,o=e._maximumZ,s=t._minimumX,a=t._minimumY,h=t._minimumZ,_=e._halfExtentX,l=e._center.x,c=e._center.y,u=e._center.z,f=0;return s>l?(i=l-s,f+=i*i):n<l&&(i=l-n,f+=i*i),a>c?(i=c-a,f+=i*i):r<c&&(i=c-r,f+=i*i),h>u?(i=u-h,f+=i*i):o<u&&(i=u-o,f+=i*i),f<_*_},Tt.prototype={get expanse(){return this._expanse},get type(){return this._type},growToIncludeMesh:function(t){throw new Error("Abstract method!")},growToIncludeBound:function(t){throw new Error("Abstract method!")},growToIncludeMinMax:function(t,e){throw new Error("Abstract method!")},clear:function(t){this._minimumX=this._minimumY=this._minimumZ=0,this._maximumX=this._maximumY=this._maximumZ=0,this._center.set(0,0,0),this._halfExtentX=this._halfExtentY=this._halfExtentZ=0,this._expanse=void 0===t?Tt.EXPANSE_EMPTY:t},get minimum(){return new h(this._minimumX,this._minimumY,this._minimumZ,1)},get maximum(){return new h(this._maximumX,this._maximumY,this._maximumZ,1)},get center(){return this._center},get halfExtent(){return new h(this._halfExtentX,this._halfExtentY,this._halfExtentZ,0)},getRadius:function(){throw new Error("Abstract method!")},transformFrom:function(t,e){throw new Error("Abstract method!")},intersectsConvexSolid:function(t,e){throw new Error("Abstract method!")},intersectsBound:function(t){throw new Error("Abstract method!")},classifyAgainstPlane:function(t){throw new Error("Abstract method!")},intersectsRay:function(t){throw new Error("Abstract method!")},createDebugModel:function(){throw new Error("Abstract method!")},getDebugModel:function(){return void 0===this._type._debugModel&&(this._type._debugModel=this.createDebugModel()),this._type._debugModel},toString:function(){return"BoundingVolume: [ "+this._minimumX+", "+this._minimumY+", "+this._minimumZ+" ] - [ "+this._maximumX+", "+this._maximumY+", "+this._maximumZ+" ], expanse: "+this._expanse}},Et.prototype={get name(){return this._name},set name(t){this._name=t},get numMeshes(){return this._meshes.length},getMesh:function(t){return this._meshes[t]},get localBounds(){return this._localBoundsInvalid&&this._updateLocalBounds(),this._localBounds},set localBounds(t){this._localBounds=t,this._localBoundsInvalid=!0},get skeleton(){return this._skeleton},set skeleton(t){this._skeleton=t,this.onSkeletonChange.dispatch()},removeMesh:function(t){var e=this._meshes.indexOf(t);e<0||(t._model=null,this._localBoundsInvalid=!0,this.onMeshesChange.dispatch())},addMesh:function(t){if(t._model)throw new Error("Mesh cannot be shared across Models");t._model=this,this._meshes.push(t),this._localBoundsInvalid=!0,this.onMeshesChange.dispatch()},toString:function(){return"[Model(name="+this._name+")]"},_updateLocalBounds:function(){this._localBounds.clear();for(var t=0;t<this._meshes.length;++t)this._localBounds.growToIncludeMesh(this._meshes[t]);this._localBoundsInvalid=!1}},yt.MODE_NORMALS=1,yt.MODE_TANGENTS=2,yt.prototype={generate:function(t,e,i,n){void 0===i&&(i=!0),this._mode=void 0===e?yt.MODE_NORMALS|yt.MODE_TANGENTS:e,this._flip=n||!1,this._mesh=t,this._positionAttrib=t.getVertexAttributeByName("hx_position"),this._normalAttrib=t.getVertexAttributeByName("hx_normal"),this._tangentAttrib=t.getVertexAttributeByName("hx_tangent"),this._uvAttrib=t.getVertexAttributeByName("hx_texCoord"),this._positionStride=t.getVertexStride(this._positionAttrib.streamIndex),this._normalStride=t.getVertexStride(this._normalAttrib.streamIndex),this._tangentStride=t.getVertexStride(this._tangentAttrib.streamIndex),this._uvStride=t.getVertexStride(this._uvAttrib.streamIndex),this._calculateFaceVectors(i),this._calculateVertexVectors()},_calculateFaceVectors:function(t){var e=this._mesh._indexData.length;0!==(this._mode&yt.MODE_NORMALS)&&(this._faceNormals=new Array(e)),0!==(this._mode&yt.MODE_TANGENTS)&&(this._faceTangents=new Array(e),this._faceBitangents=new Array(e));for(var i=new h,n=new h,r=new h,o=new h,a=new h,_=new h,l=new s,c=new s,u=new s,f=new s,d=new s,p=this._positionAttrib.offset,m=this._uvAttrib.offset,g=this._mesh.getVertexData(this._positionAttrib.streamIndex),x=this._mesh.getVertexData(this._uvAttrib.streamIndex),v=0;v<e;v+=3)this._getFloat3At(v,p,this._positionStride,o,g),this._getFloat3At(v+1,p,this._positionStride,a,g),this._getFloat3At(v+2,p,this._positionStride,_,g),this._getFloat2At(v,m,this._uvStride,l,x),this._getFloat2At(v+1,m,this._uvStride,c,x),this._getFloat2At(v+2,m,this._uvStride,u,x),a.subtract(o),_.subtract(o),this._faceNormals&&(this._flip?h.cross(_,a,i):h.cross(a,_,i),t||i.normalize(),this._faceNormals[v]=i.x,this._faceNormals[v+1]=i.y,this._faceNormals[v+2]=i.z),this._faceTangents&&(s.subtract(c,l,f),s.subtract(u,l,d),h.scale(a,d.y,n),h.scale(_,f.y,r),h.subtract(n,r,i),i.lengthSqr>.001&&i.normalize(),this._faceTangents[v]=i.x,this._faceTangents[v+1]=i.y,this._faceTangents[v+2]=i.z,h.scale(a,d.x,n),h.scale(_,f.x,n),h.subtract(r,n,i),this._faceBitangents[v]=i.x,this._faceBitangents[v+1]=i.y,this._faceBitangents[v+2]=i.z)},_calculateVertexVectors:function(){this._zeroVectors();for(var t=this._faceTangents?[]:null,e=this._mesh._indexData,i=this._normalAttrib.offset,n=this._tangentAttrib.offset,r=this._mesh.getVertexData(this._normalAttrib.streamIndex),o=this._mesh.getVertexData(this._tangentAttrib.streamIndex),s=e.length,a=0;a<s;++a){var h=e[a],_=i+h*this._normalStride,l=n+h*this._tangentStride,c=3*h,u=3*Math.floor(a/3);this._faceNormals&&(r[_]+=this._faceNormals[u],r[_+1]+=this._faceNormals[u+1],r[_+2]+=this._faceNormals[u+2]),this._faceTangents&&(o[l]+=this._faceTangents[u],o[l+1]+=this._faceTangents[u+1],o[l+2]+=this._faceTangents[u+2],t[c]+=this._faceBitangents[u],t[c+1]+=this._faceBitangents[u+1],t[c+2]+=this._faceBitangents[u+2])}this._normalize(t)},_zeroVectors:function(){for(var t=this._mesh.getVertexData(this._normalAttrib.streamIndex),e=this._mesh.getVertexData(this._tangentAttrib.streamIndex),i=this._mesh.getVertexStride(this._normalAttrib.streamIndex),n=this._mesh.getVertexStride(this._tangentAttrib.streamIndex),r=t.length/i,o=this._normalAttrib.offset,s=this._tangentAttrib.offset,a=0;a<r;++a)this._mode&yt.MODE_NORMALS&&(t[o]=0,t[o+1]=0,t[o+2]=0),this._mode&yt.MODE_TANGENTS&&(e[s]=0,e[s+1]=0,e[s+2]=0),o+=i,s+=n},_normalize:function(t){for(var e=this._mesh.getVertexData(this._normalAttrib.streamIndex),i=this._mesh.getVertexData(this._tangentAttrib.streamIndex),n=e.length/this._normalStride,r=this._normalAttrib.offset,o=this._tangentAttrib.offset,s=0,a=new h,_=new h,l=new h,c=new h,u=0;u<n;++u)a.x=e[r],a.y=e[r+1],a.z=e[r+2],this._mode&yt.MODE_NORMALS&&(a.normalize(),e[r]=a.x,e[r+1]=a.y,e[r+2]=a.z),this._mode&yt.MODE_TANGENTS&&(_.x=i[o],_.y=i[o+1],_.z=i[o+2],_.lengthSqr<1e-4?_.set(1,1,1,1):_.normalize(),l.x=t[s],l.y=t[s+1],l.z=t[s+2],h.cross(a,_,c),i[o]=_.x,i[o+1]=_.y,i[o+2]=_.z,i[o+3]=l.dot3(c)>0?-1:1),r+=this._normalStride,o+=this._tangentStride;this._mesh.setVertexData(e,this._normalAttrib.streamIndex),this._normalAttrib.streamIndex!==this._tangentAttrib.streamIndex&&this._mesh.setVertexData(i,this._tangentAttrib.streamIndex)},_getFloat3At:function(t,e,i,n,r){var o=this._mesh._indexData,s=e+o[t]*i;n.x=r[s],n.y=r[s+1],n.z=r[s+2]},_getFloat2At:function(t,e,i,n,r){var o=this._mesh._indexData,s=e+o[t]*i;n.x=r[s],n.y=r[s+1]}},wt._ATTRIBS=function(){this.positions=[],this.uvs=null,this.normals=null,this.vertexColors=null,this.indices=[]},wt.prototype=Object.create(Et.prototype),wt.prototype._generate=function(t,e){throw new Error("Abstract method called!")},wt.prototype._createMesh=function(t){var e=new wt._ATTRIBS,i=void 0===t.uvs||t.uvs,n=void 0===t.normals||t.normals,r=void 0===t.tangents||t.tangents,o=new k;o.addVertexAttribute("hx_position",3),n&&(o.addVertexAttribute("hx_normal",3),e.normals=[]),r&&o.addVertexAttribute("hx_tangent",4),i&&(o.addVertexAttribute("hx_texCoord",2),e.uvs=[]),this._generate(e,t);var s=e.vertexColors;s&&o.addVertexAttribute("hx_vertexColor",3);for(var a=t.scaleU||1,h=t.scaleV||1,_=e.positions.length/3,l=0,c=0,u=0,f=[],d=0;d<_;++d)f[l++]=e.positions[u],f[l++]=e.positions[u+1],f[l++]=e.positions[u+2],n&&(f[l++]=e.normals[u],f[l++]=e.normals[u+1],f[l++]=e.normals[u+2]),r&&(l+=4),i&&(f[l++]=e.uvs[c++]*a,f[l++]=e.uvs[c++]*h),s&&(f[l++]=e.vertexColors[u],f[l++]=e.vertexColors[u+1],f[l++]=e.vertexColors[u+2]),u+=3;o.setVertexData(f,0),o.setIndexData(e.indices);var p=0;if(n&&0===e.normals.length&&(p|=yt.MODE_NORMALS),r&&(p|=yt.MODE_TANGENTS),p){var m=new yt;m.generate(o,p)}return o},wt.prototype._getBounds=function(){return new Mt},At.prototype=Object.create(wt.prototype),At.prototype._generate=function(t,e){var i,n,r,o,s,a,h,_,l=e.numSegmentsW||1,c=e.numSegmentsH||e.numSegmentsW||1,u=e.numSegmentsD||e.numSegmentsW||1,f=e.width||1,d=e.height||f,p=e.depth||f,m=e.invert?-1:1,g=void 0!==e.doubleSided&&e.doubleSided,x=1/l,v=1/c,S=1/u,T=.5*f,E=.5*d,y=.5*p,w=t.positions,A=t.uvs,M=t.normals,P=t.indices;for(h=0;h<=c;++h)for(s=h*v,n=d*s-E,m<0&&(s=1-s),a=0;a<=l;++a)o=a*x,i=f*o-T,m<0&&(o=1-o),w.push(i*m,y*m,n*m),w.push(-i*m,-y*m,n*m),M&&(M.push(0,1,0),M.push(0,-1,0)),A&&(A.push(o,s),A.push(o,s));for(h=0;h<=c;++h)for(s=h*v,n=d*s-E,_=0;_<=u;++_)o=_*S,r=p*o-y,w.push(-T,r*m,n),w.push(T,-r*m,n),M&&(M.push(-m,0,0),M.push(m,0,0)),A&&(A.push(o,s),A.push(o,s));for(_=0;_<=u;++_)for(s=_*S,r=p*s-y,a=0;a<=l;++a)o=a*x,i=f*o-T,w.push(i,-r*m,E),w.push(i,r*m,-E),M&&(M.push(0,0,m),M.push(0,0,-m)),A&&(A.push(1-o,1-s),A.push(1-o,1-s));for(var b=0,L=0;L<3;++L){for(var R=1===L?u:l,O=2===L?u:c,D=0;D<O;++D)for(var I=0;I<R;++I){var N=R+1,C=b+I+D*N,F=C<<1,U=C+N+1<<1,B=C+N<<1,H=C+1<<1;P.push(F,B,U),P.push(F,U,H),P.push(1|F,1|B,1|U),P.push(1|F,1|U,1|H)}b+=(R+1)*(O+1)}var X=0;if(g)for(var j=0;j<X;)P.push(P[j],P[j+2],P[j+1]),P.push(P[j+3],P[j+5],P[j+4]),X+=6},Mt.prototype=Object.create(Tt.prototype),Mt.prototype.growToIncludeMesh=function(t){if(this._expanse!==Tt.EXPANSE_INFINITE){var e,i,n,r,o,s,a=t.getVertexAttributeByName("hx_position"),h=a.offset,_=t.getVertexStride(a.streamIndex),l=t.getVertexData(a.streamIndex),c=l.length;for(this._expanse===Tt.EXPANSE_EMPTY?(r=e=l[h],o=i=l[h+1],s=n=l[h+2],h+=_):(e=this._minimumX,i=this._minimumY,n=this._minimumZ,r=this._maximumX,o=this._maximumY,s=this._maximumZ);h<c;h+=_){var u=l[h],f=l[h+1],d=l[h+2];u>r?r=u:u<e&&(e=u),f>o?o=f:f<i&&(i=f),d>s?s=d:d<n&&(n=d)}this._minimumX=e,this._minimumY=i,this._minimumZ=n,this._maximumX=r,this._maximumY=o,this._maximumZ=s,this._expanse=Tt.EXPANSE_FINITE,this._updateCenterAndExtent()}},Mt.prototype.growToIncludeBound=function(t){t._expanse!==Tt.EXPANSE_EMPTY&&t._expanse!==Tt.EXPANSE_INHERIT&&this._expanse!==Tt.EXPANSE_INFINITE&&(t._expanse===Tt.EXPANSE_INFINITE?this._expanse=Tt.EXPANSE_INFINITE:this._expanse===Tt.EXPANSE_EMPTY?(this._minimumX=t._minimumX,this._minimumY=t._minimumY,this._minimumZ=t._minimumZ,this._maximumX=t._maximumX,this._maximumY=t._maximumY,this._maximumZ=t._maximumZ,this._expanse=Tt.EXPANSE_FINITE):(t._minimumX<this._minimumX&&(this._minimumX=t._minimumX),t._minimumY<this._minimumY&&(this._minimumY=t._minimumY),t._minimumZ<this._minimumZ&&(this._minimumZ=t._minimumZ),t._maximumX>this._maximumX&&(this._maximumX=t._maximumX),t._maximumY>this._maximumY&&(this._maximumY=t._maximumY),t._maximumZ>this._maximumZ&&(this._maximumZ=t._maximumZ)),this._updateCenterAndExtent())},Mt.prototype.growToIncludeMinMax=function(t,e){this._expanse!==Tt.EXPANSE_INFINITE&&(this._expanse===Tt.EXPANSE_EMPTY?(this._minimumX=t.x,this._minimumY=t.y,this._minimumZ=t.z,this._maximumX=e.x,this._maximumY=e.y,this._maximumZ=e.z,this._expanse=Tt.EXPANSE_FINITE):(t.x<this._minimumX&&(this._minimumX=t.x),t.y<this._minimumY&&(this._minimumY=t.y),t.z<this._minimumZ&&(this._minimumZ=t.z),e.x>this._maximumX&&(this._maximumX=e.x),e.y>this._maximumY&&(this._maximumY=e.y),e.z>this._maximumZ&&(this._maximumZ=e.z)),this._updateCenterAndExtent())},Mt.prototype.transformFrom=function(t,e){if(t._expanse===Tt.EXPANSE_FINITE){var i=e._m,n=i[0],r=i[1],o=i[2],s=i[4],a=i[5],h=i[6],_=i[8],l=i[9],c=i[10],u=t._center.x,f=t._center.y,d=t._center.z,p=this._center.x=n*u+s*f+_*d+i[12],m=this._center.y=r*u+a*f+l*d+i[13],g=this._center.z=o*u+h*f+c*d+i[14];n<0&&(n=-n),r<0&&(r=-r),o<0&&(o=-o),s<0&&(s=-s),a<0&&(a=-a),h<0&&(h=-h),_<0&&(_=-_),l<0&&(l=-l),c<0&&(c=-c),u=t._halfExtentX,f=t._halfExtentY,d=t._halfExtentZ;var x=this._halfExtentX=n*u+s*f+_*d,v=this._halfExtentY=r*u+a*f+l*d,S=this._halfExtentZ=o*u+h*f+c*d;this._minimumX=p-x,this._minimumY=m-v,this._minimumZ=g-S,this._maximumX=p+x,this._maximumY=m+v,this._maximumZ=g+S,this._expanse=t._expanse}else this.clear(t._expanse)},Mt.prototype.intersectsConvexSolid=function(t,e){if(this._expanse===Tt.EXPANSE_INFINITE||this._expanse===Tt.EXPANSE_INHERIT)return!0;if(this._expanse===Tt.EXPANSE_EMPTY)return!1;for(var i=this._minimumX,n=this._minimumY,r=this._minimumZ,o=this._maximumX,s=this._maximumY,a=this._maximumZ,h=0;h<e;++h){var _=t[h],l=_.x,c=_.y,u=_.z,f=_.w,d=l>0?i:o,p=c>0?n:s,m=u>0?r:a,g=l*d+c*p+u*m+f;if(g>0)return!1}return!0},Mt.prototype.intersectsBound=function(t){return this._expanse!==Tt.EXPANSE_EMPTY&&t._expanse!==Tt.EXPANSE_EMPTY&&(this._expanse===Tt.EXPANSE_INFINITE||t._expanse===Tt.EXPANSE_INFINITE||this._expanse===Tt.EXPANSE_INHERIT||t._expanse===Tt.EXPANSE_INHERIT||(t._type===this._type?this._maximumX>t._minimumX&&this._minimumX<t._maximumX&&this._maximumY>t._minimumY&&this._minimumY<t._maximumY&&this._maximumZ>t._minimumZ&&this._minimumZ<t._maximumZ:Tt._testAABBToSphere(this,t)))},Mt.prototype.classifyAgainstPlane=function(t){var e=t.x,i=t.y,n=t.z,r=t.w,o=e*this._center.x+i*this._center.y+n*this._center.z+r;e<0&&(e=-e),i<0&&(i=-i),n<0&&(n=-n);var s=e*this._halfExtentX+i*this._halfExtentY+n*this._halfExtentZ;return o>s?Qn.FRONT:o<-s?Qn.BACK:Qn.INTERSECTING},Mt.prototype.intersectsRay=function(t){if(this._expanse===Tt.EXPANSE_INFINITE)return!0;if(this._expanse===Tt.EXPANSE_EMPTY||this._expanse===Tt.EXPANSE_INHERIT)return!1;var e,i,n=t.origin,r=t.direction,o=n.x,s=n.y,a=n.z,h=r.x,_=r.y,l=r.z,c=1/h,u=1/_,f=1/l,d=-(1/0),p=1/0;return 0!==h&&(e=(this._minimumX-o)*c,i=(this._maximumX-o)*c,d=Math.min(e,i),p=Math.max(e,i)),0!==_&&(e=(this._minimumY-s)*u,i=(this._maximumY-s)*u,d=Math.max(d,Math.min(e,i)),p=Math.min(p,Math.max(e,i))),0!==l&&(e=(this._minimumZ-a)*f,i=(this._maximumZ-a)*f,d=Math.max(d,Math.min(e,i)),p=Math.min(p,Math.max(e,i))),p>0&&p>=d},Mt.prototype.setExplicit=function(t,e){this._minimumX=t.x,this._minimumY=t.y,this._minimumZ=t.z,this._maximumX=e.x,this._maximumY=e.y,this._maximumZ=e.z,this._expanse=Tt.EXPANSE_FINITE,this._updateCenterAndExtent()},Mt.prototype._updateCenterAndExtent=function(){var t=this._minimumX,e=this._minimumY,i=this._minimumZ,n=this._maximumX,r=this._maximumY,o=this._maximumZ;this._center.x=.5*(t+n),this._center.y=.5*(e+r),this._center.z=.5*(i+o),this._halfExtentX=.5*(n-t),this._halfExtentY=.5*(r-e),this._halfExtentZ=.5*(o-i)},Mt.prototype.getRadius=function(){return Math.sqrt(this._halfExtentX*this._halfExtentX+this._halfExtentY*this._halfExtentY+this._halfExtentZ*this._halfExtentZ)},Mt.prototype.getHalfExtents=function(){return new h(this._halfExtentX,this._halfExtentY,this._halfExtentZ,0)},Mt.prototype.createDebugModel=function(){return new At},bt.prototype={get visible(){return this._visible},set visible(t){this._visible=t},get mesh(){return this._mesh},setMorphTarget:function(t,e,i,n){t>=this._morphWeights.length||(this._morphPositions[t]=e,i&&this._morphNormals&&(this._morphNormals[t]=i),this._morphWeights[t]=e?n:0)},get material(){return this._material},set material(t){this._material&&this._material.onChange.unbind(this._onMaterialOrMeshChange),this._material=t,this._material&&(this._material.onChange.bind(this._onMaterialOrMeshChange,this),this._material._setUseSkinning(!!this._mesh._model.skeleton),this._material._setUseMorphing(this._mesh.hasMorphData,this._mesh.hasMorphNormals)),this._meshMaterialLinkInvalid=!0},updateRenderState:function(t){this._meshMaterialLinkInvalid&&this._linkMeshWithMaterial();var e=this._mesh._vertexBuffers;this._mesh._indexBuffer.bind();for(var i,n=this._vertexLayouts[t],r=n.morphPositionAttributes,o=n.morphNormalAttributes,s=vn.gl,a=r.length,h=0;h<a;++h){i=r[h];var _=this._morphPositions[h]||this._mesh._defaultMorphTarget;_.bind(),s.vertexAttribPointer(i.index,i.numComponents,s.FLOAT,!1,i.stride,i.offset)}if(this._morphNormals)for(a=o.length,h=0;h<a;++h){i=o[h];var _=this._morphNormals[h]||this._mesh._defaultMorphTarget;_.bind(),s.vertexAttribPointer(i.index,i.numComponents,s.FLOAT,!1,i.stride,i.offset)}var l=n.attributes;for(a=n._numAttributes,vn.enableAttributes(n._numAttributes),h=0;h<a;++h)i=l[h],i?i.external||(e[i.streamIndex].bind(),s.vertexAttribPointer(h,i.numComponents,s.FLOAT,!1,i.stride,i.offset)):vn.gl.disableVertexAttribArray(h)},_initVertexLayouts:function(){this._vertexLayouts=new Array(st.NUM_PASS_TYPES);for(var t=0;t<st.NUM_PASS_TYPES;++t){var e=this._material.getPass(t);e&&(this._vertexLayouts[t]=new Pt(this._mesh,e))}},_linkMeshWithMaterial:function(){this._initVertexLayouts(),this._meshMaterialLinkInvalid=!1},_onMaterialOrMeshChange:function(){this._meshMaterialLinkInvalid=!0}},Lt.prototype={qualifies:function(t){},visitLight:function(t){},visitAmbientLight:function(t){},visitModelInstance:function(t,e){},visitScene:function(t){},visitEffects:function(t,e){}},Rt.prototype=Object.create(Lt.prototype,{foundMaterial:{get:function(){return this._foundMaterial}}}),Rt.prototype.qualifies=function(t){return!this._foundMaterial},Rt.prototype.visitModelInstance=function(t,e){for(var i=t._materials,n=i.length,r=0;r<n;++r){var o=i[r];o.name===this._materialName&&(this._foundMaterial=o)}},Ot.prototype=Object.create(u.prototype,{name:{get:function(){return this._name},set:function(t){this._name=t}},parent:{get:function(){return this._parent}},numChildren:{get:function(){return this._children.length}},visible:{get:function(){return this._visible},set:function(t){this._visible=t}},worldBounds:{get:function(){return this._worldBoundsInvalid&&(this._updateWorldBounds(),this._worldBoundsInvalid=!1),this._worldBounds}},worldMatrix:{get:function(){return this._worldMatrixInvalid&&this._updateWorldMatrix(),this._worldMatrix}}}),Ot.prototype.attach=function(t){if(t instanceof Array)for(var e=t.length,i=0;i<e;++i)this.attach(t[i]);else{if(t._parent)throw new Error("Child is already parented!");t._parent=this,t._setScene(this._scene),this._children.push(t),this._invalidateWorldBounds()}},Ot.prototype.detach=function(t){var e=this._children.indexOf(t);if(e<0)throw new Error("Trying to remove a scene object that is not a child");t._parent=null,this._children.splice(e,1),this._invalidateWorldBounds()},Ot.prototype.getChild=function(t){return this._children[t]},Ot.prototype._applyMatrix=function(){u.prototype._applyMatrix.call(this),this._invalidateWorldMatrix()},Ot.prototype.findMaterialByName=function(t){var e=new Rt(t);return this.acceptVisitor(e),e.foundMaterial},Ot.prototype.findNodeByName=function(t){if(this._name===t)return this;for(var e=this._children.length,i=0;i<e;++i){var n=this._children[i].findNodeByName(t);if(n)return n}},Ot.prototype._setScene=function(t){this._scene=t;for(var e=this._children.length,i=0;i<e;++i)this._children[i]._setScene(t)},Ot.prototype.acceptVisitor=function(t){this._debugBounds&&this._debugBounds.acceptVisitor(t);for(var e=this._children.length,i=0;i<e;++i){var n=this._children[i];t.qualifies(n)&&n.acceptVisitor(t)}},Ot.prototype._invalidateMatrix=function(){u.prototype._invalidateMatrix.call(this),this._invalidateWorldMatrix()},Ot.prototype._invalidateWorldMatrix=function(){this._worldMatrixInvalid=!0,this._invalidateWorldBounds();for(var t=this._children.length,e=0;e<t;++e)this._children[e]._invalidateWorldMatrix()},Ot.prototype._invalidateWorldBounds=function(){this._worldBoundsInvalid||(this._worldBoundsInvalid=!0,this._parent&&this._parent._invalidateWorldBounds())},Ot.prototype._updateWorldBounds=function(){var t=this._children.length;this._worldBounds.clear();for(var e=0;e<t;++e)this._worldBounds.growToIncludeBound(this._children[e].worldBounds);this._debugBounds&&this._updateDebugBounds()},Ot.prototype._updateDebugBounds=function(){var t=this._debugBounds.matrix,e=this._worldBounds;t.fromScale(2*e._halfExtentX,2*e._halfExtentY,2*e._halfExtentZ),t.appendTranslation(e._center),this._debugBounds.matrix=t},Ot.prototype._updateMatrix=function(){u.prototype._updateMatrix.call(this),this._invalidateWorldBounds()},Ot.prototype._updateWorldMatrix=function(){this._parent?this._worldMatrix.multiply(this._parent.worldMatrix,this.matrix):this._worldMatrix.copyFrom(this.matrix),this._worldMatrixInvalid=!1},Ot.prototype._createBoundingVolume=function(){return new Mt},Ot.prototype.toString=function(){return"[SceneNode(name="+this._name+")]"},Ot.prototype.applyFunction=function(t,e){e?t.call(e,this):t(this);for(var i=this._children.length,n=0;n<i;++n)this._children[n].applyFunction(t,e)},Dt.prototype={isBitSet:function(t){var e=t>>5;return t&=~(e<<5),this._hash[e]&1<<t},setBit:function(t){var e=this._hash,i=t>>5;t&=~(i<<5),e[i]=(e[i]||0)|1<<t},clearBit:function(t){var e=this._hash,i=t>>5;t&=~(i<<5),e[i]=(e[i]||0)&~(1<<t)},zero:function(){for(var t=this._hash,e=t.length,i=0;i<e;++i)t[i]=0},OR:function(t){var e=this._hash;t=t._hash;for(var i=Math.max(e.length,t.length),n=0;n<i;++n)e[n]=(e[n]||0)|(t[n]||0)},AND:function(t){var e=this._hash;t=t._hash;for(var i=Math.max(e.length,t.length),n=0;n<i;++n)e[n]=(e[n]||0)&(t[n]||0)},NOT:function(){for(var t=this._hash,e=t.length,i=0;i<e;++i)t[i]=~(t[i]||0)},contains:function(t){for(var e=this._hash,t=t._hash,i=t.length,n=0;n<i;++n){var r=t[n];if((e[n]&r)!==r)return!1}return!0},clone:function(){for(var t=new Dt,e=this._hash.length,i=0;i<e;++i)t._hash[i]=this._hash[i];return t},toString:function(){var t="",e=this._hash,i=e.length;if(0===i)return"0b0";for(var n=0;n<i;++n){for(var r=(e[n]||0).toString(2);r.length<32;)r="0"+r;t=r+t}return"0b"+t}},It.prototype=Object.create(Ot.prototype),It.prototype.addComponent=function(t){if(t._entity)throw new Error("Component already added to an entity!");var e=this._componentHash;this._componentHash=this._componentHash.clone(),this._components=this._components||[],this._components.push(t),this._componentHash.setBit(t.COMPONENT_ID),this._requiresUpdates=this._requiresUpdates||!!t.onUpdate,t._entity=this,t.onAdded(),this._onComponentsChange.dispatch(this,e)},It.prototype.removeComponent=function(t){var e=!1,i=this._components.length,n=0,r=[],o=this._componentHash;this._componentHash=new Dt;for(var s=0;s<i;++s){var a=this._components[s];a!==t&&(r[n++]=a,e=e||!!t.onUpdate,this._componentHash.setBit(a.COMPONENT_ID))}this._requiresUpdates=e,this._onComponentsChange.dispatch(this,o),this._components=0===n?null:r,t._entity=null,t.onRemoved()},It.prototype.addComponents=function(t){for(var e=0;e<t.length;++e)this.addComponent(t[e])},It.prototype.removeComponents=function(t){for(var e=0;e<t.length;++e)this.removeComponent(t[e])},It.prototype.hasComponentType=function(t){if(!this._components)return!1;for(var e=0;e<this._components.length;++e)if(this._components[e]instanceof t)return!0},It.prototype.getFirstComponentByType=function(t){if(!this._components)return null;for(var e=0;e<this._components.length;++e){var i=this._components[e];if(i instanceof t)return i}return null},It.prototype.getComponentsByType=function(t){var e=[];if(!this._components)return e;for(var i=0;i<this._components.length;++i){var n=this._components[i];n instanceof t&&e.push(n)}return e},It.prototype.acceptVisitor=function(t){Ot.prototype.acceptVisitor.call(this,t),this._effects&&t.visitEffects(this._effects,this)},It.prototype.update=function(t){var e=this._components;if(e)for(var i=e.length,n=0;n<i;++n){var r=e[n];r.onUpdate&&r.onUpdate(t)}},It.prototype._registerEffect=function(t){this._effects=this._effects||[],this._effects.push(t)},It.prototype._unregisterEffect=function(t){var e=this._effects.indexOf(t);this._effects.splice(e,1),0===this._effects.length&&(this._effects=null)},It.prototype._setScene=function(t){this._scene&&this._scene.entityEngine.unregisterEntity(this),t&&t.entityEngine.registerEntity(this),Ot.prototype._setScene.call(this,t)},Nt.prototype={copyFrom:function(t){this.rotation.copyFrom(t.rotation),this.position.copyFrom(t.position),this.scale.copyFrom(t.scale)},toString:function(){return"[SkeletonJointPose]"}},Ct.prototype={get numJoints(){return this._jointPoses.length},getJointPose:function(t){return this._jointPoses[t]},setJointPose:function(t,e){this._jointPoses[t]=e,e.skeletonPose=this},invalidateGlobalPose:function(){this._skeletonMatricesInvalid=!0},interpolate:function(t,e,i){t=t._jointPoses,e=e._jointPoses;var n=t.length;this._jointPoses.length!==n&&this._initJointPoses(n);for(var r=this._jointPoses,o=0;o<n;++o){var s=r[o];s.rotation.slerp(t[o].rotation,e[o].rotation,i),s.position.lerp(t[o].position,e[o].position,i),s.scale.lerp(t[o].scale,e[o].scale,i)}},copyBindPose:function(t){for(var e=new f,i=0;i<t.numJoints;++i){var n=t.getJoint(i),r=this._jointPoses[i]=new Nt;e.inverseAffineOf(n.inverseBindPose),n.parentIndex>=0&&e.append(t.getJoint(n.parentIndex).inverseBindPose),e.decompose(r)}},copyFrom:function(t){t=t._jointPoses;var e=this._jointPoses,i=t.length;this._jointPoses.length!==i&&this._initJointPoses(i);for(var n=0;n<i;++n)e[n].copyFrom(t[n])},_initJointPoses:function(t){this._numJoints=t,this._jointPoses.length=t;for(var e=0;e<t;++e)this.setJointPose(e,new Nt)},getBindMatrices:function(t){return(this._skeletonMatricesInvalid||this._skeleton!==t)&&this._updateSkeletonMatrices(t),this._skeleton=t,this._skinningTexture||this._bindMatrices},_generateDefault:function(t){this._skeletonMatricesInvalid=!1,
this._skeleton=t,this._initJointPoses(t.numJoints);for(var e=new HX.Matrix4x4,i=0;i<this._jointPoses.length;++i)e.inverseOf(t.getJoint(i).inverseBindPose),e.decompose(this._jointPoses[i]);if(On.OPTIONS.useSkinningTexture)return void(this._skinningTexture=Fn.DEFAULT_SKINNING_TEXTURE);this._globalMatrices=[],this._bindMatrices=[];for(var i=0;i<t.numJoints;++i)this._globalMatrices[i]=new f,this._bindMatrices[i]=new f},_updateSkeletonMatrices:function(t){var e=this._globalMatrices,i=this._bindMatrices;e&&e.length===t.numJoints||(this._generateGlobalSkeletonData(t),e=this._globalMatrices,i=this._bindMatrices);for(var n=t.numJoints,r=0;r<n;++r){var o=this._jointPoses[r],s=e[r],a=t.getJoint(r),h=a.parentIndex;s.compose(o),h!==-1&&s.append(e[h]),t._applyInverseBindPose?i[r].multiplyAffine(s,a.inverseBindPose):i[r].copyFrom(s)}On.OPTIONS.useSkinningTexture&&this._updateSkinningTexture()},_generateGlobalSkeletonData:function(t){this._globalMatrices=[],this._bindMatrices=[];for(var e=0;e<t.numJoints;++e)this._globalMatrices[e]=new f,this._bindMatrices[e]=new f;On.OPTIONS.useSkinningTexture&&(this._skinningTexture=new Y,this._skinningTexture.filter=Hn.NEAREST_NOMIP,this._skinningTexture.wrapMode=Xn.CLAMP)},_updateSkinningTexture:function(){var t;return function(){t=t||new Float32Array(3*On.OPTIONS.maxSkeletonJoints*4);for(var e=this._bindMatrices,i=e.length,n=0,r=0;r<3;++r){for(var o=0;o<i;++o){var s=e[o]._m;t[n++]=s[r],t[n++]=s[r+4],t[n++]=s[r+8],t[n++]=s[r+12]}for(o=i;o<On.OPTIONS.maxSkeletonJoints;++o)t[n++]=0,t[n++]=0,t[n++]=0,t[n++]=0}this._skinningTexture.uploadData(t,On.OPTIONS.maxSkeletonJoints,3,!1,Zn.RGBA,qn.FLOAT)}}()},Ft.prototype=Object.create(It.prototype,{model:{get:function(){return this._model}},localBounds:{get:function(){return this._model.localBounds}},castShadows:{get:function(){return this._castShadows},set:function(t){this._castShadows=t}},numMeshInstances:{get:function(){return this._meshInstances.length}},skeleton:{get:function(){return this._model.skeleton}},skeletonMatrices:{get:function(){return this._skeletonPose?this._skeletonPose.getBindMatrices(this._model._skeleton):null}},skeletonPose:{get:function(){return this._skeletonPose},set:function(t){this._skeletonPose=t}},morphPose:{get:function(){return this._morphPose},set:function(t){this._morphPose&&this._morphPose.onChange.unbind(this._onMorphChanged),this._morphPose=t,this._morphPose?(this._morphPose.onChange.bind(this._onMorphChanged,this),this._onMorphChanged()):this._clearMorph()}}}),Ft.prototype.init=function(t,e){if(this._model||this._materials)throw new Error("ModelInstance already initialized");e&&(this._materials=e instanceof Array?e:[e]),t&&(this._model=t,t.skeleton&&this._generateDefaultSkeletonPose(),t.onMeshesChange.bind(this._onModelChange,this),t.onSkeletonChange.bind(this._onSkeletonChange,this),this._onModelChange()),this._invalidateWorldBounds(),this._updateMeshInstances()},Ft.prototype.assignMaterial=function(t){this._meshInstancesInvalid&&this._updateMeshInstances();for(var e=0;e<this._meshInstances.length;++e)this._meshInstances[e].material=t},Ft.prototype.getMeshInstance=function(t){return this._meshInstances[t]},Ft.prototype._generateDefaultSkeletonPose=function(){this._skeletonPose=new Ct,this._skeletonPose._generateDefault(this._model._skeleton)},Ft.prototype._updateMeshInstances=function(){this._meshInstances=[];for(var t=this._materials.length-1,e=0;e<this._model.numMeshes;++e)this._meshInstances.push(new bt(this._model.getMesh(e),this._materials[Math.min(e,t)]));this._meshInstancesInvalid=!1},Ft.prototype._onSkeletonChange=function(){for(var t=0;t<this._meshInstances.length;++t)this._meshInstances[t].material._setUseSkinning(!!this._model.skeleton);this._model.skeleton?this._generateDefaultSkeletonPose():this._skeletonPose=null},Ft.prototype._onModelChange=function(){this._meshInstancesInvalid=!0,this._invalidateWorldBounds()},Ft.prototype._clearMorph=function(){for(var t=this._meshInstances.length,e=0;e<t;++e)for(var i=0;i<8;++i)this._meshInstances[e].setMorphTarget(i,null,null,0)},Ft.prototype._onMorphChanged=function(){for(var t=this._meshInstances.length,e=0;e<8;++e){var i=this._morphPose.getMorphTarget(e);if(i)for(var n=this._morphPose.getWeight(i.name),r=0;r<t;++r){var o=this._meshInstances[r],s=i.getPositionBuffer(r),a=i.hasNormals?i.getNormalBuffer(r):null;o.setMorphTarget(e,s,a,n)}else for(r=0;r<t;++r)this._meshInstances[r].setMorphTarget(e,null,null,0)}},Ft.prototype._updateWorldBounds=function(){this._meshInstancesInvalid&&this._updateMeshInstances(),It.prototype._updateWorldBounds.call(this),this._meshBounds.transformFrom(this._model.localBounds,this.worldMatrix),this._worldBounds.growToIncludeBound(this._meshBounds)},Ft.prototype.acceptVisitor=function(t){this._meshInstancesInvalid&&this._updateMeshInstances(),t.visitModelInstance(this,this.worldMatrix,this.worldBounds),It.prototype.acceptVisitor.call(this,t)},Ft.prototype.toString=function(){return"[ModelInstance(name="+this._name+")]"},Ut.prototype=Object.create(wt.prototype),Ut.ALIGN_X=1,Ut.ALIGN_Y=2,Ut.ALIGN_Z=3,Ut.prototype._generate=function(t,e){e=e||{};var i,n,r,o,s,a=e.alignment||Ut.ALIGN_Z,h=e.numSegmentsH||1,_=e.numSegmentsW||16,l=e.radius||1,c=e.height||1,u=void 0!==e.doubleSided&&e.doubleSided,f=t.positions,d=t.uvs,p=t.normals,m=t.indices,g=1/_,x=1/h;for(i=0;i<=h;++i){var v=(i*x-.5)*c;for(n=0;n<=_;++n){s=n*g*Math.PI*2;var S=Math.sin(s),T=Math.cos(s);switch(r=S*l,o=T*l,a){case Ut.ALIGN_X:f.push(-v,r,o),p&&p.push(0,S,T);break;case Ut.ALIGN_Z:f.push(r,o,-v),p&&p.push(S,T,0);break;default:f.push(r,v,o),p&&p.push(S,0,T)}d&&d.push(1-n*g,i*x)}}for(i=0;i<h;++i)for(n=0;n<_;++n){var E=_+1,y=n+i*E;m.push(y,y+E+1,y+E),m.push(y,y+1,y+E+1),u&&(m.push(y,y+E,y+E+1),m.push(y,y+E+1,y+1))}var w=f.length/3,A=.5*c;for(n=0;n<_;++n){s=n*g*Math.PI*2;var M=Math.sin(s),P=Math.cos(s);switch(r=M*l,o=P*l,M=.5*-M+.5,P=.5*P+.5,a){case Ut.ALIGN_X:f.push(A,r,o),f.push(-A,r,o),p&&(p.push(1,0,0),p.push(-1,0,0)),d&&(d.push(P,1-M),d.push(1-P,1-M));break;case Ut.ALIGN_Z:f.push(r,o,A),f.push(r,o,-A),p&&(p.push(0,0,1),p.push(0,0,-1)),d&&(d.push(M,P),d.push(1-M,P));break;default:f.push(r,-A,o),f.push(r,A,o),p&&(p.push(0,-1,0),p.push(0,1,0)),d&&(d.push(M,P),d.push(M,1-P))}}for(n=1;n<_-1;++n){var b=n<<1;m.push(w,w+b+2,w+b),m.push(w+1,w+b+1,w+b+3)}},Bt.prototype=Object.create(st.prototype),Bt.prototype._generateShader=function(t,e){var i="#define HX_SKIP_NORMALS\n#define HX_SKIP_SPECULAR\n",n=i+on.get("snippets_geometry.glsl")+"\n"+e+"\n"+on.get("material_unlit_fragment.glsl"),r=i+t+"\n"+on.get("material_unlit_vertex.glsl");return new H(r,n)},Ht.prototype=Object.create(st.prototype),Ht.prototype._generateShader=function(t,e){var i="#define HX_SKIP_NORMALS\n#define HX_SKIP_SPECULAR\n",n=i+on.get("snippets_geometry.glsl")+"\n"+On.OPTIONS.directionalShadowFilter.getGLSL()+"\n"+e+"\n"+on.get("material_dir_shadow_fragment.glsl"),r=i+t+"\n"+on.get("material_unlit_vertex.glsl");return new H(r,n)},Xt.prototype=Object.create(st.prototype),Xt.prototype._generateShader=function(t,e){var i="#define HX_SKIP_NORMALS\n#define HX_SKIP_SPECULAR\n",n=i+on.get("snippets_geometry.glsl")+"\n"+e+"\n"+on.get("material_fwd_base_fragment.glsl"),r=i+t+"\n"+on.get("material_fwd_base_vertex.glsl");return new H(r,n)},jt.prototype=Object.create(It.prototype,{intensity:{get:function(){return this._intensity},set:function(t){this._intensity=t,this._updateScaledIrradiance()}},color:{get:function(){return this._color},set:function(t){this._color=isNaN(t)?t:new n(t),this._updateScaledIrradiance()}}}),jt.prototype.acceptVisitor=function(t){It.prototype.acceptVisitor.call(this,t),t.visitLight(this)},jt.prototype.luminance=function(){return this._color.luminance()*this._intensity},jt.prototype._updateScaledIrradiance=function(){var t=this._intensity/Math.PI;On.OPTIONS.useGammaCorrection?this._color.gammaToLinear(this._scaledIrradiance):this._scaledIrradiance.copyFrom(this._color),this._scaledIrradiance.r*=t,this._scaledIrradiance.g*=t,this._scaledIrradiance.b*=t,this._invalidateWorldBounds()},jt.prototype.renderDeferredLighting=function(t){};var $n={sortOpaques:function(t,e){var i;return i=t.material._renderOrder-e.material._renderOrder,0!==i?i:(i=t.material._renderOrderHint-e.material._renderOrderHint,0!==i?i:t.renderOrderHint-e.renderOrderHint)},sortTransparents:function(t,e){var i=t.material._renderOrder-e.material._renderOrder;return 0!==i?i:e.renderOrderHint-t.renderOrderHint},sortLights:function(t,e){return t._type===e._type?t._castShadows?1:-1:t._type-e._type}};Gt.prototype=Object.create(Lt.prototype),Gt.prototype.getRenderList=function(t){return this._renderList[t]},Gt.prototype.collect=function(t,e){this._collectorCamera=t,t.worldMatrix.getColumn(1,this._cameraYAxis),this._bounds.clear(),this._renderItemPool.reset();for(var i=On.OPTIONS.numShadowCascades,n=0;n<i;++n)this._renderList[n]=[];e.acceptVisitor(this);for(var n=0;n<i;++n)this._renderList[n].sort($n.sortOpaques)},Gt.prototype.getBounds=function(){return this._bounds},Gt.prototype.setRenderCameras=function(t){this._renderCameras=t},Gt.prototype.setCullPlanes=function(t,e){this._cullPlanes=t,this._numCullPlanes=e},Gt.prototype.visitModelInstance=function(t,e,i){if(t._castShadows!==!1){this._bounds.growToIncludeBound(i);for(var n=st.DIR_LIGHT_SHADOW_MAP_PASS,r=On.OPTIONS.numShadowCascades,o=t.numMeshInstances,s=t.skeleton,a=t.skeletonMatrices,h=this._cameraYAxis,_=h.x,l=h.y,c=h.z,u=0;u<r;++u){var f=this._renderList[u],d=this._renderCameras[u],p=i.intersectsConvexSolid(d.frustum.planes,4);if(p)for(var m=0;m<o;++m){var g=t.getMeshInstance(m),x=g.material;if(x.hasPass(n)){var v=this._renderItemPool.getItem();v.pass=x.getPass(n),v.meshInstance=g,v.worldMatrix=e,v.camera=d,v.material=x,v.skeleton=s,v.skeletonMatrices=a;var S=i._center;v.renderOrderHint=S.x*_+S.y*l+S.z*c,f.push(v)}}}}},Gt.prototype.qualifies=function(t){return t.visible&&t.worldBounds.intersectsConvexSolid(this._cullPlanes,this._numCullPlanes)},kt.PLANE_LEFT=0,kt.PLANE_RIGHT=1,kt.PLANE_BOTTOM=2,kt.PLANE_TOP=3,kt.PLANE_NEAR=4,kt.PLANE_FAR=5,kt.CLIP_SPACE_CORNERS=[new h((-1),(-1),(-1),1),new h(1,(-1),(-1),1),new h(1,1,(-1),1),new h((-1),1,(-1),1),new h((-1),(-1),1,1),new h(1,(-1),1,1),new h(1,1,1,1),new h((-1),1,1,1)],kt.prototype={get planes(){return this._planes},get corners(){return this._corners},update:function(t,e){this._updatePlanes(t),this._updateCorners(e)},_updatePlanes:function(t){var e=t._m,i=this._planes[kt.PLANE_LEFT],n=this._planes[kt.PLANE_RIGHT],r=this._planes[kt.PLANE_TOP],o=this._planes[kt.PLANE_BOTTOM],s=this._planes[kt.PLANE_NEAR],a=this._planes[kt.PLANE_FAR],h=e[0],_=e[4],l=e[8],c=e[12],u=e[1],f=e[5],d=e[9],p=e[13],m=e[2],g=e[6],x=e[10],v=e[14],S=e[3],T=e[7],E=e[11],y=e[15];i.x=-(S+h),i.y=-(T+_),i.z=-(E+l),i.w=-(y+c),i.normalizeAsPlane(),n.x=h-S,n.y=_-T,n.z=l-E,n.w=c-y,n.normalizeAsPlane(),o.x=-(S+u),o.y=-(T+f),o.z=-(E+d),o.w=-(y+p),o.normalizeAsPlane(),r.x=u-S,r.y=f-T,r.z=d-E,r.w=p-y,r.normalizeAsPlane(),s.x=-(S+m),s.y=-(T+g),s.z=-(E+x),s.w=-(y+v),s.normalizeAsPlane(),a.x=m-S,a.y=g-T,a.z=x-E,a.w=v-y,a.normalizeAsPlane()},_updateCorners:function(t){for(var e=0;e<8;++e){var i=this._corners[e];t.transform(kt.CLIP_SPACE_CORNERS[e],i),i.scale(1/i.w)}}},Yt.prototype=Object.create(It.prototype,{nearDistance:{get:function(){return this._nearDistance},set:function(t){this._nearDistance!==t&&(this._nearDistance=t,this._invalidateProjectionMatrix())}},farDistance:{get:function(){return this._farDistance},set:function(t){this._farDistance!==t&&(this._farDistance=t,this._invalidateProjectionMatrix())}},viewProjectionMatrix:{get:function(){return this._viewProjectionMatrixInvalid&&this._updateViewProjectionMatrix(),this._viewProjectionMatrix}},viewMatrix:{get:function(){return this._viewProjectionMatrixInvalid&&this._updateViewProjectionMatrix(),this._viewMatrix}},projectionMatrix:{get:function(){return this._projectionMatrixDirty&&this._updateProjectionMatrix(),this._projectionMatrix}},inverseViewProjectionMatrix:{get:function(){return this._viewProjectionMatrixInvalid&&this._updateViewProjectionMatrix(),this._inverseViewProjectionMatrix}},inverseProjectionMatrix:{get:function(){return this._projectionMatrixDirty&&this._updateProjectionMatrix(),this._inverseProjectionMatrix}},frustum:{get:function(){return this._viewProjectionMatrixInvalid&&this._updateViewProjectionMatrix(),this._frustum}}}),Yt.prototype.getRay=function(t,e){var i=new St,n=i.direction;return n.set(t,e,1,1),this.inverseProjectionMatrix.transform(n,n),n.homogeneousProject(),this.worldMatrix.transformVector(n,n),n.normalize(),this.worldMatrix.getColumn(3,i.origin),i},Yt.prototype._setRenderTargetResolution=function(t,e){this._renderTargetWidth=t,this._renderTargetHeight=e},Yt.prototype._invalidateViewProjectionMatrix=function(){this._viewProjectionMatrixInvalid=!0},Yt.prototype._invalidateWorldMatrix=function(){It.prototype._invalidateWorldMatrix.call(this),this._invalidateViewProjectionMatrix()},Yt.prototype._updateViewProjectionMatrix=function(){this._viewMatrix.inverseAffineOf(this.worldMatrix),this._viewProjectionMatrix.multiply(this.projectionMatrix,this._viewMatrix),this._inverseProjectionMatrix.inverseOf(this._projectionMatrix),this._inverseViewProjectionMatrix.inverseOf(this._viewProjectionMatrix),this._frustum.update(this._viewProjectionMatrix,this._inverseViewProjectionMatrix),this._viewProjectionMatrixInvalid=!1},Yt.prototype._invalidateProjectionMatrix=function(){this._projectionMatrixDirty=!0,this._invalidateViewProjectionMatrix()},Yt.prototype._updateProjectionMatrix=function(){throw new Error("Abstract method!")},Yt.prototype._updateWorldBounds=function(){this._worldBounds.clear(Tt.EXPANSE_INFINITE)},Yt.prototype.toString=function(){return"[Camera(name="+this._name+")]"},Wt.prototype=Object.create(Yt.prototype),Wt.prototype.setBounds=function(t,e,i,n){this._left=t,this._right=e,this._top=i,this._bottom=n,this._invalidateProjectionMatrix()},Wt.prototype._updateProjectionMatrix=function(){this._projectionMatrix.fromOrthographicOffCenterProjection(this._left,this._right,this._top,this._bottom,this._nearDistance,this._farDistance),this._projectionMatrixDirty=!1},Zt.prototype={get width(){return this._width},get height(){return this._height},get format(){return this._format},init:function(t,e,i){var n=vn.gl;i=void 0===i||i,this._width=t,this._height=e,this._format=i?n.DEPTH_STENCIL:n.DEPTH_COMPONENT16,n.bindRenderbuffer(n.RENDERBUFFER,this._renderBuffer),n.renderbufferStorage(n.RENDERBUFFER,this._format,t,e),n.bindRenderbuffer(n.RENDERBUFFER,null)}};var tr={renderPass:function(t,e,i,n){for(var r=i.length,o=null,s=null,a=0;a<r;++a){var h=i[a],_=h.material,l=_.getPass(e);if(l){var c=h.meshInstance;l!==o&&(l.updatePassRenderState(h.camera,t,n),o=l,s=null),l.updateInstanceRenderState(h.camera,h,n),s!==c._mesh&&(c.updateRenderState(e),s=c._mesh);var u=c._mesh;vn.drawElements(l._elementType,u._numIndices,0,u._indexType)}}return vn.setBlendState(null),r}};Kt.prototype={get shadowMapSize(){return this._shadowMapSize},set shadowMapSize(t){this._shadowMapSize!==t&&(this._shadowMapSize=t,this._invalidateShadowMap())},render:function(t,e){this._shadowMapInvalid&&this._initShadowMap(),this._inverseLightMatrix.inverseAffineOf(this._light.worldMatrix),this._updateCollectorCamera(t),this._updateSplits(t),this._updateCullPlanes(t),this._collectShadowCasters(e),this._updateCascadeCameras(t,this._casterCollector.getBounds()),vn.setRenderTarget(this._fboFront);var i=vn.gl,r=st.DIR_LIGHT_SHADOW_MAP_PASS;vn.setClearColor(n.WHITE),vn.clear();for(var o=On.OPTIONS.numShadowCascades,s=0;s<o;++s){var a=this._viewports[s];i.viewport(a.x,a.y,a.width,a.height),tr.renderPass(this,r,this._casterCollector.getRenderList(s))}vn.setColorMask(!0),this._blurShader&&this._blur(),vn.setRenderTarget(),vn.setClearColor(n.BLACK)},_updateCollectorCamera:function(t){var e=t.frustum._corners,i=new h,n=new h,r=new h;this._inverseLightMatrix.transformPoint(e[0],i),n.copyFrom(i);for(var o=1;o<8;++o)this._inverseLightMatrix.transformPoint(e[o],r),i.minimize(r),n.maximize(r);this._maxY=n.y,this._collectorCamera.matrix.copyFrom(this._light.worldMatrix),this._collectorCamera._invalidateWorldMatrix(),this._collectorCamera.setBounds(i.x,n.x+1,n.z+1,i.z),this._collectorCamera._setRenderTargetResolution(this._shadowMap._width,this._shadowMap._height)},_updateSplits:function(t){for(var e=t.nearDistance,i=t.farDistance-e,n=On.OPTIONS.numShadowCascades,r=0;r<n;++r)this._splitDistances[r]=e+this._splitRatios[r]*i},_updateCascadeCameras:function(t,e){this._localBounds.transformFrom(e,this._inverseLightMatrix);for(var i=this._localBounds.minimum,n=this._localBounds.maximum,r=1,o=new h,s=new h,a=new h,_=new h,l=t.frustum.corners,c=0,u=On.OPTIONS.numShadowCascades,f=0;f<u;++f){var d=this._splitRatios[f],p=this._shadowMapCameras[f];p.matrix=this._light.worldMatrix;for(var m=0;m<4;++m){var g=l[m],x=l[m+4],v=g.x,S=g.y,T=g.z,E=x.x-v,y=x.y-S,w=x.z-T;o.x=v+E*c,o.y=S+y*c,o.z=T+w*c,s.x=v+E*d,s.y=S+y*d,s.z=T+w*d,this._inverseLightMatrix.transformPoint(o,o),this._inverseLightMatrix.transformPoint(s,s),0===m?(a.copyFrom(o),_.copyFrom(o)):(a.minimize(o),_.maximize(o)),a.minimize(s),_.maximize(s)}c=d,_.y=Math.min(this._maxY,_.y);var A=Math.max(a.x,i.x),M=Math.min(_.x,n.x),P=Math.max(a.z,i.z),b=Math.min(_.z,n.z),L=M-A,R=b-P;L=Math.ceil(L/r)*r,R=Math.ceil(R/r)*r,L=Math.max(L,r),R=Math.max(R,r);var O=this._shadowMap._width/L*.5,D=this._shadowMap._height/R*.5;A=Math.floor(A*O)/O,P=Math.floor(P*D)/D,M=A+L,b=P+R;var I=this._softness;p.setBounds(A-I,M+I,b+I,P-I),p.nearDistance=i.y,p.farDistance=_.y,p._setRenderTargetResolution(this._shadowMap._width,this._shadowMap._height),this._shadowMatrices[f].multiply(this._transformToUV[f],p.viewProjectionMatrix)}},_updateCullPlanes:function(t){for(var e=this._collectorCamera.frustum,i=e._planes,n=0;n<4;++n)this._cullPlanes[n]=i[n];this._numCullPlanes=4,e=t.frustum,i=e._planes;for(var r=this._light.direction,o=0;o<6;++o){var s=i[o];s.dot3(r)>.001&&(this._cullPlanes[this._numCullPlanes++]=s)}},_collectShadowCasters:function(t){this._casterCollector.setCullPlanes(this._cullPlanes,this._numCullPlanes),this._casterCollector.setRenderCameras(this._shadowMapCameras),this._casterCollector.collect(this._collectorCamera,t)},get splitDistances(){return this._splitDistances},setSplitRatios:function(t,e,i,n){this._splitRatios[0]=t,this._splitRatios[1]=e,this._splitRatios[2]=i,this._splitRatios[3]=n},getShadowMatrix:function(t){return this._shadowMatrices[t]},_invalidateShadowMap:function(){this._shadowMapInvalid=!0},_initShadowMap:function(){var t=On.OPTIONS.numShadowCascades,e=t>1?2:1,i=Math.ceil(t/2),n=this._shadowMapSize*e,r=this._shadowMapSize*i;this._shadowMap.initEmpty(n,r,On.OPTIONS.directionalShadowFilter.getShadowMapFormat(),On.OPTIONS.directionalShadowFilter.getShadowMapDataType()),this._depthBuffer||(this._depthBuffer=new Zt),this._fboFront||(this._fboFront=new q(this._shadowMap,this._depthBuffer)),this._depthBuffer.init(n,r,!1),this._fboFront.init(),this._shadowMapInvalid=!1,this._shadowBackBuffer&&(this._shadowBackBuffer.initEmpty(n,r,On.OPTIONS.directionalShadowFilter.getShadowMapFormat(),On.OPTIONS.directionalShadowFilter.getShadowMapDataType()),this._fboBack||(this._fboFrontNoDepth=new q(this._shadowMap),this._fboBack=new q(this._shadowBackBuffer)),this._fboFrontNoDepth.init(),this._fboBack.init()),this._viewports=[],this._viewports.push(new qt(0,0,this._shadowMapSize,this._shadowMapSize)),this._viewports.push(new qt(this._shadowMapSize,0,this._shadowMapSize,this._shadowMapSize)),this._viewports.push(new qt(0,this._shadowMapSize,this._shadowMapSize,this._shadowMapSize)),this._viewports.push(new qt(this._shadowMapSize,this._shadowMapSize,this._shadowMapSize,this._shadowMapSize)),this._initViewportMatrices(1/e,1/i)},_initSplitProperties:function(){var t=1;this._splitRatios=[],this._splitDistances=[];for(var e=On.OPTIONS.numShadowCascades-1;e>=0;--e)this._splitRatios[e]=t,this._splitDistances[e]=0,t*=.5},_initCameras:function(){this._shadowMapCameras=[];for(var t=0;t<On.OPTIONS.numShadowCascades;++t)this._shadowMapCameras[t]=new Wt},_initViewportMatrices:function(t,e){for(var i=new h(.5,.5,.5),n=0;n<4;++n)this._transformToUV[n].fromScale(.5),this._transformToUV[n].appendTranslation(i),this._transformToUV[n].appendScale(t,e,1);this._transformToUV[1].appendTranslation(new h(.5,0,0)),this._transformToUV[2].appendTranslation(new h(0,.5,0)),this._transformToUV[3].appendTranslation(new h(.5,.5,0))},_createShadowBuffer:function(){var t=new Y;return t.filter=Hn.BILINEAR_NOMIP,t.wrapMode=Xn.CLAMP,t},_blur:function(){for(var t=this._blurShader,e=On.OPTIONS.directionalShadowFilter.numBlurPasses,i=0;i<e;++i)vn.setRenderTarget(this._fboBack),vn.clear(),t.execute(bn.DEFAULT,this._shadowMap,1/this._shadowMapSize,0),vn.setRenderTarget(this._fboFrontNoDepth),vn.clear(),t.execute(bn.DEFAULT,this._shadowBackBuffer,0,1/this._shadowMapSize)}},Jt.prototype=Object.create(H.prototype),Jt.prototype.execute=function(t,e){var i=new h,n=new f,r=new Float32Array(64);return function(t,e){var o=vn.gl;o.useProgram(this._program);var s=t._gbuffer.textures;s[0].bind(0),s[1].bind(1),s[2].bind(2);var a=t._camera,h=e._scaledIrradiance;if(a.viewMatrix.transformVector(e.direction,i),o.uniform3f(this._colorLocation,h.r,h.g,h.b),o.uniform3f(this._dirLocation,i.x,i.y,i.z),e._castShadows){var _=e._shadowMapRenderer;_._shadowMap.bind(3);for(var l=On.OPTIONS.numShadowCascades,c=_._splitDistances,u=0,f=0;f<l;++f){n.multiply(_.getShadowMatrix(f),a.worldMatrix);for(var d=n._m,p=0;p<16;++p)r[u++]=d[p]}o.uniformMatrix4fv(this._shadowMatricesLocation,!1,r),o.uniform4f(this._shadowSplitsLocation,c[0],c[1],c[2],c[3]),o.uniform1f(this._depthBiasLocation,e.depthBias),o.uniform1f(this._maxShadowDistanceLocation,c[l-1]),Fn.DEFAULT_2D_DITHER_TEXTURE.bind(4)}vn.setCullMode(jn.NONE),this.updatePassRenderState(a,t);var m=bn.DEFAULT;m._vertexBuffers[0].bind(),m._indexBuffer.bind(),o.vertexAttribPointer(this._positionAttributeLocation,2,o.FLOAT,!1,16,0),o.vertexAttribPointer(this._texCoordAttributeLocation,2,o.FLOAT,!1,16,8),vn.enableAttributes(2),vn.drawElements(Gn.TRIANGLES,6,0)}}(),Qt._initDeferredShaders=function(){Qt._deferredShader=new Jt((!1)),Qt._deferredShadowShader=new Jt((!0))},Qt.prototype=Object.create(jt.prototype,{castShadows:{get:function(){return this._castShadows},set:function(t){this._castShadows!==t&&(this._castShadows=t,t?this._shadowMapRenderer=new Kt(this,this._shadowMapSize):this._shadowMapRenderer=null)}},shadowMapSize:{get:function(){return this._shadowMapSize},set:function(t){this._shadowMapSize=t,this._shadowMapRenderer&&(this._shadowMapRenderer.shadowMapSize=t)}},direction:{get:function(){var t=this._direction;return this.worldMatrix.getColumn(1,t),t},set:function(t){var e=new f,i=this.worldMatrix.getColumn(3),n=h.add(t,i);e.lookAt(n,i),this.matrix=e}}}),Qt.prototype.setCascadeRatios=function(t,e,i,n){this._shadowMapRenderer.setSplitRatios(t,e,i,n)},Qt.prototype._updateWorldBounds=function(){this._worldBounds.clear(Tt.EXPANSE_INFINITE)},Qt.prototype.renderDeferredLighting=function(t){var e=this._castShadows?Qt._deferredShadowShader:Qt._deferredShader;e.execute(t,this)},$t.prototype=Object.create(st.prototype),$t.prototype.updatePassRenderState=function(t,e,i){var n=new h,r=new f,o=new Float32Array(64);return function(t,e,i){var s=vn.gl,a=i._scaledIrradiance;if(s.useProgram(this._shader._program),t.viewMatrix.transformVector(i.direction,n),s.uniform3f(this._colorLocation,a.r,a.g,a.b),s.uniform3f(this._dirLocation,n.x,n.y,n.z),i.castShadows){var h=i._shadowMapRenderer,_=On.OPTIONS.numShadowCascades,l=h._splitDistances,c=0;this._shadowMapSlot.texture=h._shadowMap;for(var u=0;u<_;++u){r.multiply(h.getShadowMatrix(u),t.worldMatrix);for(var f=r._m,d=0;d<16;++d)o[c++]=f[d]}s.uniformMatrix4fv(this._shadowMatricesLocation,!1,o),s.uniform4f(this._shadowSplitsLocation,l[0],l[1],l[2],l[3]),s.uniform1f(this._depthBiasLocation,i.depthBias),s.uniform1f(this._maxShadowDistanceLocation,l[_-1])}st.prototype.updatePassRenderState.call(this,t,e)}}(),$t.prototype._generateShader=function(t,e,i,n){var r={};n&&(r.HX_SHADOW_MAP=1);var o=t+"\n"+on.get("material_fwd_dir_vertex.glsl",r),s=on.get("snippets_geometry.glsl",r)+"\n"+i+"\n\n\n"+On.OPTIONS.directionalShadowFilter.getGLSL()+"\n"+on.get("directional_light.glsl")+"\n"+e+"\n"+on.get("material_fwd_dir_fragment.glsl");return new H(o,s)},te.prototype=Object.create(st.prototype),te.prototype.updatePassRenderState=function(t,e,i){var n=new h;return function(t,e,i){var r=vn.gl,o=i._scaledIrradiance;if(r.useProgram(this._shader._program),i.worldMatrix.getColumn(3,n),t.viewMatrix.transformPoint(n,n),r.uniform3f(this._colorLocation,o.r,o.g,o.b),r.uniform3f(this._posLocation,n.x,n.y,n.z),r.uniform1f(this._radiusLocation,i._radius),r.uniform1f(this._rcpRadiusLocation,1/i._radius),st.prototype.updatePassRenderState.call(this,t,e),i.castShadows){var s=i._shadowMapRenderer;r.uniform1f(this._depthBiasLocation,i.depthBias),this._shadowMapSlot.texture=s._shadowMap,r.uniformMatrix4fv(this._shadowMatrixLocation,!1,t.worldMatrix._m)}}}(),te.prototype._generateShader=function(t,e,i,n){var r={};n&&(r.HX_SHADOW_MAP=1);var o=t+"\n"+on.get("material_fwd_point_vertex.glsl",r),s=on.get("snippets_geometry.glsl",r)+"\n"+i+"\n\n\n"+On.OPTIONS.pointShadowFilter.getGLSL()+"\n"+on.get("point_light.glsl")+"\n"+e+"\n"+on.get("material_fwd_point_fragment.glsl");return new H(o,s)},ee.prototype=Object.create(st.prototype),ee.prototype.updatePassRenderState=function(t,e,i){var n=new h,r=new f;return function(t,e,i){var o=vn.gl,s=i._scaledIrradiance;o.useProgram(this._shader._program);var a=i.worldMatrix,h=t.viewMatrix;if(a.getColumn(3,n),h.transformPoint(n,n),o.uniform3f(this._colorLocation,s.r,s.g,s.b),o.uniform3f(this._posLocation,n.x,n.y,n.z),a.getColumn(1,n),h.transformVector(n,n),o.uniform3f(this._dirLocation,n.x,n.y,n.z),o.uniform1f(this._radiusLocation,i._radius),o.uniform1f(this._rcpRadiusLocation,1/i._radius),o.uniform2f(this._anglesLocation,i._cosOuter,1/Math.max(i._cosInner-i._cosOuter,1e-5)),i.castShadows){var _=i._shadowMapRenderer;o.uniform1f(this._depthBiasLocation,i.depthBias),r.multiply(_.shadowMatrix,t.worldMatrix),o.uniformMatrix4fv(this._shadowMatrixLocation,!1,r._m),this._shadowMapSlot.texture=_._shadowMap}st.prototype.updatePassRenderState.call(this,t,e)}}(),ee.prototype._generateShader=function(t,e,i,n){var r={};n&&(r.HX_SHADOW_MAP=1);var o=t+"\n"+on.get("material_fwd_spot_vertex.glsl",r),s=on.get("snippets_geometry.glsl",r)+"\n"+i+"\n\n\n"+On.OPTIONS.spotShadowFilter.getGLSL()+"\n"+on.get("spot_light.glsl")+"\n"+e+"\n"+on.get("material_fwd_spot_fragment.glsl");return new H(o,s)},ie.prototype=Object.create(st.prototype),ie.prototype.updatePassRenderState=function(t,e,i){var n=vn.gl;n.useProgram(this._shader._program),this._diffuseSlot.texture=i.diffuseTexture||Fn.DARK_CUBE_TEXTURE;var r=i.specularTexture||Fn.DARK_CUBE_TEXTURE;this._specularSlot.texture=r,n.uniform1f(this._numMipsLocation,Math.floor(yn.log2(r.size))),n.uniform1f(this._localLocation,i._size?1:0),n.uniform1f(this._sizeLocation,i._size||0);var o=i.worldMatrix._m;n.uniform3f(this._positionLocation,o[12],o[13],o[14]),st.prototype.updatePassRenderState.call(this,t,e)},ie.prototype._generateShader=function(t,e,i){var n="";Un.EXT_SHADER_TEXTURE_LOD&&(n+="#texturelod\n");var r=t+"\n"+on.get("material_fwd_probe_vertex.glsl"),o=n+on.get("snippets_geometry.glsl")+"\n"+i+"\n\n\n"+on.get("light_probe.glsl")+"\n"+e+"\n"+on.get("material_fwd_probe_fragment.glsl");return new H(r,o)},ne.prototype=Object.create(wt.prototype),ne.prototype._generate=function(t,e){e=e||{};for(var i=e.numSegmentsW||16,n=e.numSegmentsH||10,r=e.radius||.5,o=e.invert?-1:1,s=void 0!==e.doubleSided&&e.doubleSided,a=t.positions,h=t.uvs,_=t.normals,l=1/i,c=1/n,u=0;u<=n;++u){var f=u*c,d=f*Math.PI,p=-Math.cos(d),m=Math.sin(d);o<0&&(f=1-f);for(var g=0;g<=i;++g){var x=g*l,v=x*Math.PI*2;o&&(x=1-x);var S=Math.cos(v)*m*o,T=p*o,E=Math.sin(v)*m*o;a.push(S*r,E*r,T*r),_&&_.push(S*o,E*o,T*o),h&&h.push(x,f)}}var y=t.indices;for(u=0;u<n;++u)for(g=0;g<i;++g){var w=i+1,A=g+u*w;y.push(A,A+w+1,A+w),y.push(A,A+1,A+w+1),s&&(y.push(A,A+w,A+w+1),y.push(A,A+w+1,A+1))}},ne.prototype._getBounds=function(){return new re},re.prototype=Object.create(Tt.prototype),re.prototype.setExplicit=function(t,e){this._center.copyFrom(t),this._halfExtentX=this._halfExtentY=this._halfExtentZ=e,this._expanse=Tt.EXPANSE_FINITE,this._updateMinAndMax()},re.prototype.growToIncludeMesh=function(t){if(this._expanse!==Tt.EXPANSE_INFINITE){var e,i,n,r,o,s,a=t.getVertexAttributeByName("hx_position"),h=a.offset,_=t.getVertexStride(a.streamIndex),l=t.getVertexData(a.streamIndex),c=l.length;for(this._expanse===Tt.EXPANSE_EMPTY?(r=e=l[h],o=i=l[h+1],s=n=l[h+2],h+=_):(e=this._minimumX,i=this._minimumY,n=this._minimumZ,r=this._maximumX,o=this._maximumY,s=this._maximumZ);h<c;h+=_){var u=l[h],f=l[h+1],d=l[h+2];u>r?r=u:u<e&&(e=u),f>o?o=f:f<i&&(i=f),d>s?s=d:d<n&&(n=d)}var p=.5*(r+e),m=.5*(o+i),g=.5*(s+n),x=0;for(h=a.offset;h<c;h+=_){var v=p-l[h],S=m-l[h+1],T=g-l[h+2],E=v*v+S*S+T*T;E>x&&(x=E)}this._center.x=p,this._center.y=m,this._center.z=g;var y=Math.sqrt(x);this._halfExtentX=y,this._halfExtentY=y,this._halfExtentZ=y,this._expanse=Tt.EXPANSE_FINITE,this._updateMinAndMax()}},re.prototype.growToIncludeBound=function(t){if(t._expanse!==Tt.EXPANSE_EMPTY&&t._expanse!==Tt.EXPANSE_INHERIT&&this._expanse!==Tt.EXPANSE_INFINITE){if(t._expanse===Tt.EXPANSE_INFINITE)this._expanse=Tt.EXPANSE_INFINITE;else if(this._expanse===Tt.EXPANSE_EMPTY)this._center.x=t._center.x,this._center.y=t._center.y,this._center.z=t._center.z,t._type===this._type?(this._halfExtentX=t._halfExtentX,this._halfExtentY=t._halfExtentY,this._halfExtentZ=t._halfExtentZ):this._halfExtentX=this._halfExtentY=this._halfExtentZ=t.getRadius(),this._expanse=Tt.EXPANSE_FINITE;else{var e=this._minimumX,i=this._minimumY,n=this._minimumZ,r=this._maximumX,o=this._maximumY,s=this._maximumZ;t._maximumX>r&&(r=t._maximumX),t._maximumY>o&&(o=t._maximumY),t._maximumZ>s&&(s=t._maximumZ),t._minimumX<e&&(e=t._minimumX),t._minimumY<i&&(i=t._minimumY),t._minimumZ<n&&(n=t._minimumZ),this._center.x=.5*(e+r),this._center.y=.5*(i+o),this._center.z=.5*(n+s);var a=r-this._center.x,h=o-this._center.y,_=s-this._center.z,l=Math.sqrt(a*a+h*h+_*_);this._halfExtentX=this._halfExtentY=this._halfExtentZ=l}this._updateMinAndMax()}},re.prototype.growToIncludeMinMax=function(t,e){var i=new Mt;i.growToIncludeMinMax(t,e),this.growToIncludeBound(i)},re.prototype.getRadius=function(){return this._halfExtentX},re.prototype.transformFrom=function(t,e){if(t._expanse===Tt.EXPANSE_INFINITE||t._expanse===Tt.EXPANSE_EMPTY)this.clear(t._expanse);else{var i=e._m,n=i[0],r=i[1],o=i[2],s=i[4],a=i[5],h=i[6],_=i[8],l=i[9],c=i[10],u=t._center.x,f=t._center.y,d=t._center.z;this._center.x=n*u+s*f+_*d+i[12],this._center.y=r*u+a*f+l*d+i[13],this._center.z=o*u+h*f+c*d+i[14],n<0&&(n=-n),r<0&&(r=-r),o<0&&(o=-o),s<0&&(s=-s),a<0&&(a=-a),h<0&&(h=-h),_<0&&(_=-_),l<0&&(l=-l),c<0&&(c=-c),u=t._halfExtentX,f=t._halfExtentY,d=t._halfExtentZ;var p=n*u+s*f+_*d,m=r*u+a*f+l*d,g=o*u+h*f+c*d,x=Math.sqrt(p*p+m*m+g*g);this._halfExtentX=this._halfExtentY=this._halfExtentZ=x,this._minimumX=this._center.x-this._halfExtentX,this._minimumY=this._center.y-this._halfExtentY,this._minimumZ=this._center.z-this._halfExtentZ,this._maximumX=this._center.x+this._halfExtentX,this._maximumY=this._center.y+this._halfExtentY,this._maximumZ=this._center.z+this._halfExtentZ,this._expanse=Tt.EXPANSE_FINITE}},re.prototype.intersectsConvexSolid=function(t,e){if(this._expanse===Tt.EXPANSE_INFINITE||this._expanse===Tt.EXPANSE_INHERIT)return!0;if(this._expanse===Tt.EXPANSE_EMPTY)return!1;for(var i=this._center.x,n=this._center.y,r=this._center.z,o=this._halfExtentX,s=0;s<e;++s){var a=t[s],h=a.x*i+a.y*n+a.z*r+a.w;if(h>o)return!1}return!0},re.prototype.intersectsBound=function(t){if(this._expanse===Tt.EXPANSE_EMPTY||t._expanse===Tt.EXPANSE_EMPTY)return!1;if(this._expanse===Tt.EXPANSE_INFINITE||t._expanse===Tt.EXPANSE_INFINITE||this._expanse===Tt.EXPANSE_INHERIT||t._expanse===Tt.EXPANSE_INHERIT)return!0;
if(t._type===this._type){var e=this._center.x-t._center.x,i=this._center.y-t._center.y,n=this._center.z-t._center.z,r=this._halfExtentX+t._halfExtentX;return e*e+i*i+n*n<r*r}return Tt._testAABBToSphere(t,this)},re.prototype.classifyAgainstPlane=function(t){var e=t.x*this._center.x+t.y*this._center.y+t.z*this._center.z+t.w,i=this._halfExtentX;return e>i?Qn.FRONT:e<-i?Qn.BACK:Qn.INTERSECTING},re.prototype._updateMinAndMax=function(){var t=this._center.x,e=this._center.y,i=this._center.z,n=this._halfExtentX;this._minimumX=t-n,this._minimumY=e-n,this._minimumZ=i-n,this._maximumX=t+n,this._maximumY=e+n,this._maximumZ=i+n},re.prototype.intersectsRay=function(t){if(this._expanse===Tt.EXPANSE_INFINITE)return!0;if(this._expanse===Tt.EXPANSE_EMPTY||this._expanse===Tt.EXPANSE_INHERIT)return!1;var e,i=this._center.x,n=this._center.y,r=this._center.z,o=this._halfExtentX,s=t.origin,a=t.direction,h=s.x,_=s.y,l=s.z,c=a.x,u=a.y,f=a.z,d=i-h,p=n-_,m=r-l,g=d*c+p*u+m*f;if(g>0){var x=h+g*c,v=_+g*u,S=l+g*f;x=i-x,v=n-v,S=r-S,e=x*x+v*v+S*S}else e=d*d+p*p+m*m;return e<=o*o},re.prototype.createDebugModel=function(){return new ne({doubleSided:!0})},oe.prototype=Object.create(H.prototype),oe.prototype.execute=function(t,e){var i=new h;return function(t,e){var n=vn.gl;n.useProgram(this._program);var r=t._gbuffer.textures;r[0].bind(0),r[1].bind(1),r[2].bind(2);var o=t._camera,s=e._scaledIrradiance;if(e.worldMatrix.getColumn(3,i),o.viewMatrix.transformPoint(i,i),n.uniform3f(this._colorLocation,s.r,s.g,s.b),n.uniform3f(this._posLocation,i.x,i.y,i.z),n.uniform1f(this._radiusLocation,e._radius),n.uniform1f(this._rcpRadiusLocation,1/e._radius),e._castShadows){var a=e._shadowMapRenderer;a._shadowMap.bind(3),n.uniformMatrix4fv(this._shadowMatrixLocation,!1,o.worldMatrix._m),n.uniform1f(this._depthBiasLocation,e.depthBias),Fn.DEFAULT_2D_DITHER_TEXTURE.bind(4)}if(this.updatePassRenderState(o,t),this._useSphere){vn.setCullMode(jn.FRONT);var h=this._mesh;h._vertexBuffers[0].bind(),h._indexBuffer.bind(),n.vertexAttribPointer(this._positionAttributeLocation,3,n.FLOAT,!1,48,0),vn.enableAttributes(1),vn.drawElements(Gn.TRIANGLES,h.numIndices,0)}else{vn.setCullMode(jn.NONE);var _=bn.DEFAULT;_._vertexBuffers[0].bind(),_._indexBuffer.bind(),n.vertexAttribPointer(this._positionAttributeLocation,2,n.FLOAT,!1,16,0),n.vertexAttribPointer(this._texCoordAttributeLocation,2,n.FLOAT,!1,16,8),vn.enableAttributes(2),vn.drawElements(Gn.TRIANGLES,6,0)}}}(),se.prototype=Object.create(Yt.prototype,{verticalFOV:{get:function(){return this._vFOV},set:function(t){this._vFOV!==t&&(this._vFOV=t,this._invalidateProjectionMatrix())}}}),se.prototype._setAspectRatio=function(t){this._aspectRatio!==t&&(this._aspectRatio=t,this._invalidateProjectionMatrix())},se.prototype._setRenderTargetResolution=function(t,e){Yt.prototype._setRenderTargetResolution.call(this,t,e),this._setAspectRatio(t/e)},se.prototype._updateProjectionMatrix=function(){this._projectionMatrix.fromPerspectiveProjection(this._vFOV,this._aspectRatio,this._nearDistance,this._farDistance),this._projectionMatrixDirty=!1},ae.prototype=Object.create(Lt.prototype),ae.prototype.getRenderList=function(t){return this._renderLists[t]},ae.prototype.setLightBounds=function(t){this._lightBounds=t},ae.prototype.collect=function(t,e){this._cameras=t,this._renderLists=[];for(var i=this._cameraPos,n=0;n<6;++n){var r=this._octantPlanes[n];r.w=-(i.x*r.x+i.y*r.y+i.z*r.z),this._renderLists[n]=[]}for(this._renderItemPool.reset(),e.acceptVisitor(this),n=0;n<6;++n)this._renderLists[n].sort($n.sortOpaques)},ae.prototype.visitModelInstance=function(t,e,i){if(t._castShadows){var n=this._octantPlanes,r=i.classifyAgainstPlane(n[0]),o=i.classifyAgainstPlane(n[1]),s=i.classifyAgainstPlane(n[2]),a=i.classifyAgainstPlane(n[3]),h=i.classifyAgainstPlane(n[4]),_=i.classifyAgainstPlane(n[5]);o>=0&&s<=0&&h>=0&&_<=0&&this._addTo(t,0,i,e),o<=0&&s>=0&&h<=0&&_>=0&&this._addTo(t,1,i,e),r>=0&&a<=0&&h>=0&&_>=0&&this._addTo(t,2,i,e),r<=0&&a>=0&&h<=0&&_<=0&&this._addTo(t,3,i,e),r<=0&&o<=0&&s<=0&&a<=0&&this._addTo(t,4,i,e),r>=0&&o>=0&&s>=0&&a>=0&&this._addTo(t,5,i,e)}},ae.prototype._addTo=function(t,e,i,n){for(var r=t.numMeshInstances,o=t.skeleton,s=t.skeletonMatrices,a=this._renderItemPool,h=this._cameraPos,_=h.x,l=h.y,c=h.z,u=this._renderLists[e],f=this._cameras[e],d=0;d<r;++d){var p=t.getMeshInstance(d);if(p.visible){var m=p.material,g=a.getItem();g.material=m,g.meshInstance=p,g.skeleton=o,g.skeletonMatrices=s;var x=i._center,v=_-x.x,S=l-x.y,T=c-x.z;g.renderOrderHint=v*v+S*S+T*T,g.worldMatrix=n,g.camera=f,g.worldBounds=i,u.push(g)}}},ae.prototype.qualifies=function(t){return t.visible&&t.worldBounds.intersectsBound(this._lightBounds)},he.prototype={get shadowMapSize(){return this._shadowMapSize},set shadowMapSize(t){this._shadowMapSize!==t&&(this._shadowMapSize=t,this._invalidateShadowMap())},render:function(t,e){var i=new h;return function(t,e){var r=this._light;this._shadowMapInvalid&&this._initShadowMap(),r.worldMatrix.getColumn(3,i);for(var o=0;o<6;++o)this._cameras[o].position.copyFrom(i);for(this._casterCollector.setLightBounds(r.worldBounds),this._casterCollector.collect(this._cameras,e),vn.setInvertCulling(!0),o=0;o<6;++o)vn.setRenderTarget(this._fbos[o]),vn.setClearColor(n.WHITE),vn.clear(),tr.renderPass(this,st.POINT_LIGHT_SHADOW_MAP_PASS,this._casterCollector.getRenderList(o),r);vn.setInvertCulling(!1),vn.setColorMask(!0),vn.setRenderTarget(),vn.setClearColor(n.BLACK)}}(),_createShadowBuffer:function(){var t=new W;return t.filter=Hn.BILINEAR_NOMIP,t.wrapMode=Xn.CLAMP,t},_invalidateShadowMap:function(){this._shadowMapInvalid=!0},_initShadowMap:function(){var t=this._shadowMapSize;this._shadowMap.initEmpty(t,On.OPTIONS.spotShadowFilter.getShadowMapFormat(),On.OPTIONS.spotShadowFilter.getShadowMapDataType()),this._depthBuffer.init(t,t,!1);for(var e=0;e<6;++e)this._fbos[e].init();this._shadowMapInvalid=!1},_initFaces:function(){this._cameras=[];var t=new l;t.fromAxisAngle(h.Z_AXIS,Math.PI);for(var e=[],i=0;i<6;++i)e[i]=new l;e[0].fromAxisAngle(h.Z_AXIS,.5*-Math.PI),e[1].fromAxisAngle(h.Z_AXIS,.5*Math.PI),e[2].fromAxisAngle(h.Z_AXIS,0),e[3].fromAxisAngle(h.Z_AXIS,Math.PI),e[4].fromAxisAngle(h.X_AXIS,.5*Math.PI),e[5].fromAxisAngle(h.X_AXIS,.5*-Math.PI);for(var n=this._light._radius,r=[Jn.POSITIVE_X,Jn.NEGATIVE_X,Jn.POSITIVE_Y,Jn.NEGATIVE_Y,Jn.POSITIVE_Z,Jn.NEGATIVE_Z],i=0;i<6;++i){var o=new se;o.nearDistance=.01,o.farDistance=n,o.verticalFOV=.5*Math.PI,o.rotation.copyFrom(e[i]),o.scale.set(1,1,-1),this._cameras.push(o),this._fbos.push(new q(this._shadowMap,this._depthBuffer,r[i]))}}},_e.prototype=Object.create(jt.prototype,{castShadows:{get:function(){return this._castShadows},set:function(t){this._castShadows!==t&&(this._castShadows=t,t?this._shadowMapRenderer=new he(this,this._shadowMapSize):this._shadowMapRenderer=null)}},shadowMapSize:{get:function(){return this._shadowMapSize},set:function(t){this._shadowMapSize=t,this._shadowMapRenderer&&(this._shadowMapRenderer.shadowMapSize=t)}},radius:{get:function(){return this._radius},set:function(t){this._radius=t,this._updateWorldBounds()}}}),_e.prototype._createBoundingVolume=function(){return new re},_e.prototype._updateWorldBounds=function(){this._worldBounds.setExplicit(this.worldMatrix.getColumn(3),this._radius)},_e.prototype.renderDeferredLighting=function(t){var e=new h,i=new h;return function(t){t._camera.worldMatrix.getColumn(3,e),this.worldMatrix.getColumn(3,i);var n,r=e.squareDistanceTo(i),o=1.1*this._radius;n=r>o*o?this._castShadows?_e._deferredShaderSphereShadows:_e._deferredShaderSphere:this._castShadows?_e._deferredShaderRectShadows:_e._deferredShaderRect,n.execute(t,this)}}(),le.prototype=Object.create(H.prototype),le.prototype.execute=function(t){var e=vn.gl;e.useProgram(this._program);var i=t._gbuffer.textures;i[0].bind(0),i[1].bind(1),i[2].bind(2);var n=this._probe.specularTexture,r=this._probe.diffuseTexture;if(!(n&&0===n.size||r&&0===r.size)){if(t._ssaoTexture&&t._ssaoTexture.bind(3),n&&(n.bind(4),e.uniform1f(this._numMipsLocation,Math.floor(yn.log2(n.size)))),r&&r.bind(5),this._sizeLocation){var o=this._probe.worldMatrix._m;e.uniform1f(this._sizeLocation,.5*this._probe._size),e.uniform3f(this._positionLocation,o[12],o[13],o[14])}vn.setCullMode(jn.NONE),this.updatePassRenderState(t._camera,t);var s=bn.DEFAULT;s._vertexBuffers[0].bind(),s._indexBuffer.bind(),e.vertexAttribPointer(this._positionAttributeLocation,2,e.FLOAT,!1,16,0),e.vertexAttribPointer(this._texCoordAttributeLocation,2,e.FLOAT,!1,16,8),vn.enableAttributes(2),vn.drawElements(Gn.TRIANGLES,6,0)}},ce.powerRange0=98e-5,ce.powerRange1=.9921,ce.prototype=Object.create(It.prototype,{specularTexture:{get:function(){return this._specularTexture}},diffuseTexture:{get:function(){return this._diffuseTexture}},size:{get:function(){return this._size},set:function(t){if(this._size!==t){var e=!1;!On.OPTIONS.deferredLightingModel||void 0!==this._size&&void 0!==t||(e=!0),this._size=t,this._invalidateWorldBounds(),e&&(this._deferredShader=new le(this))}}}}),ce.prototype._updateWorldBounds=function(){var t=new h,e=new h;return function(){if(this._size){this.worldMatrix.getColumn(3,t),this.worldMatrix.getColumn(3,e);var i=.5*this._size;t.x-=i,t.y-=i,t.z-=i,e.x+=i,e.y+=i,e.z+=i,this._worldBounds.setExplicit(t,e)}else this._worldBounds.clear(Tt.EXPANSE_INFINITE)}}(),ce.prototype.acceptVisitor=function(t){It.prototype.acceptVisitor.call(this,t),t.visitLight(this)},ce.prototype.renderDeferredLighting=function(t){this._deferredShader.execute(t)},ue.prototype=Object.create(wt.prototype),ue.ALIGN_X=1,ue.ALIGN_Y=2,ue.ALIGN_Z=3,ue.prototype._generate=function(t,e){e=e||{};var i,n,r,o,s,a=e.alignment||ue.ALIGN_Z,h=e.numSegmentsH||1,_=e.numSegmentsW||16,l=e.radius||1,c=e.height||1,u=void 0!==e.doubleSided&&e.doubleSided,f=t.positions,d=t.uvs,p=t.normals,m=t.indices,g=1/_,x=1/h;for(i=0;i<=h;++i){var v=(1-i*x)*l,S=(i*x-.5)*c;for(n=0;n<=_;++n){s=n*g*Math.PI*2;var T=Math.sin(s),E=Math.cos(s);switch(r=T*v,o=E*v,a){case ue.ALIGN_X:f.push(S,o,r),p&&p.push(0,E,T);break;case ue.ALIGN_Z:f.push(r,-o,S),p&&p.push(T,-E,0);break;default:f.push(r,S,o),p&&p.push(T,0,E)}d&&d.push(1-n*g,i*x)}}var y,w=_+1;for(n=0;n<_;++n){for(i=0;i<h-1;++i)y=n+i*w,m.push(y,y+w+1,y+w),m.push(y,y+1,y+w+1),u&&(m.push(y,y+w,y+w+1),m.push(y,y+w+1,y+1));y=n+(h-1)*w,m.push(y,y+1,y+w+1)}var A=f.length/3,M=.5*c;for(n=0;n<_;++n){s=n*g*Math.PI*2;var P=Math.sin(s),b=Math.cos(s);switch(r=P*l,o=b*l,P=.5*-P+.5,b=.5*b+.5,a){case ue.ALIGN_X:f.push(-M,o,r),p&&p.push(-1,0,0),d&&d.push(b,1-P);break;case ue.ALIGN_Z:f.push(r,-o,-M),p&&p.push(0,0,-1),d&&d.push(P,b);break;default:f.push(r,-M,o),p&&p.push(0,-1,0),d&&d.push(P,b)}}for(n=1;n<_-1;++n)m.push(A,A+n+1,A+n)},fe.prototype=Object.create(H.prototype),fe.prototype.execute=function(t,e){var i=new h,n=new f;return function(t,e){var r=vn.gl;r.useProgram(this._program);var o=t._gbuffer.textures;o[0].bind(0),o[1].bind(1),o[2].bind(2);var s=t._camera,a=e._scaledIrradiance,h=e.worldMatrix;if(h.getColumn(3,i),s.viewMatrix.transformPoint(i,i),r.uniform3f(this._colorLocation,a.r,a.g,a.b),r.uniform3f(this._posLocation,i.x,i.y,i.z),h.getColumn(1,i),s.viewMatrix.transformVector(i,i),r.uniform3f(this._dirLocation,i.x,i.y,i.z),r.uniform1f(this._radiusLocation,e._radius),r.uniform1f(this._rcpRadiusLocation,1/e._radius),r.uniform2f(this._anglesLocation,e._cosOuter,1/Math.max(e._cosInner-e._cosOuter,1e-5)),this._useCone&&(r.uniform1f(this._sinOuterAngleLocation,e._sinOuter),r.uniformMatrix4fv(this._worldMatrixLocation,!1,h._m)),e._castShadows){var _=e._shadowMapRenderer;_._shadowMap.bind(3),n.multiply(_.shadowMatrix,s.worldMatrix),r.uniformMatrix4fv(this._shadowMatrixLocation,!1,n._m),r.uniform1f(this._depthBiasLocation,e.depthBias),Fn.DEFAULT_2D_DITHER_TEXTURE.bind(4)}if(this.updatePassRenderState(s,t),this._useCone){vn.setCullMode(jn.FRONT);var l=this._mesh;l._vertexBuffers[0].bind(),l._indexBuffer.bind(),r.vertexAttribPointer(this._positionAttributeLocation,3,r.FLOAT,!1,48,0),vn.enableAttributes(1),vn.drawElements(Gn.TRIANGLES,l.numIndices,0)}else{vn.setCullMode(jn.NONE);var c=bn.DEFAULT;c._vertexBuffers[0].bind(),c._indexBuffer.bind(),r.vertexAttribPointer(this._positionAttributeLocation,2,r.FLOAT,!1,16,0),r.vertexAttribPointer(this._texCoordAttributeLocation,2,r.FLOAT,!1,16,8),vn.enableAttributes(2),vn.drawElements(Gn.TRIANGLES,6,0)}}}();var er={FORWARD_DYNAMIC:0,FORWARD_FIXED:1,DEFERRED:2,NUM_PATHS:3};de.prototype=Object.create(Lt.prototype,{ambientColor:{get:function(){return this._ambientColor}},needsNormalDepth:{get:function(){return this._needsNormalDepth}},needsForwardPath:{get:function(){return this._needsForwardPath}},needsBackbuffer:{get:function(){return this._needsBackbuffer}}}),de.prototype.getOpaqueRenderList=function(t){return this._opaques[t]},de.prototype.getTransparentRenderList=function(){return this._transparents},de.prototype.getLights=function(){return this._lights},de.prototype.getShadowCasters=function(){return this._shadowCasters},de.prototype.getEffects=function(){return this._effects},de.prototype.collect=function(t,e){this._camera=t,t.worldMatrix.getColumn(1,this._cameraYAxis),this._frustumPlanes=t.frustum._planes,this._reset(),e.acceptVisitor(this);for(var i=0;i<er.NUM_PATHS;++i)this._opaques[i].sort($n.sortOpaques);this._transparents.sort($n.sortTransparents),this._lights.sort($n.sortLights);var n=this._camera._effects;if(n)for(var r=n.length,i=0;i<r;++i){var o=n[i];this._needsNormalDepth=this._needsNormalDepth||o._needsNormalDepth,this._effects.push(o)}this._needsForwardPath=this._transparents.length>0||this._opaques[er.FORWARD_FIXED].length>0||this._opaques[er.FORWARD_DYNAMIC].length>0},de.prototype.qualifies=function(t){return t.visible&&t.worldBounds.intersectsConvexSolid(this._frustumPlanes,6)},de.prototype.visitScene=function(t){var e=t._skybox;e&&this.visitModelInstance(e._modelInstance,t._rootNode.worldMatrix,t._rootNode.worldBounds)},de.prototype.visitEffects=function(t){for(var e=t.length,i=0;i<e;++i)this._effects.push(t[i])},de.prototype.visitModelInstance=function(t,e,i){for(var n=t.numMeshInstances,r=this._cameraYAxis,o=r.x,s=r.y,a=r.z,h=t.skeleton,_=t.skeletonMatrices,l=this._renderItemPool,c=this._camera,u=this._opaques,f=this._transparents,d=0;d<n;++d){var p=t.getMeshInstance(d);if(p.visible){var m=p.material,g=m.renderPath;this._needsNormalDepth=this._needsNormalDepth||m._needsNormalDepth,this._needsBackbuffer=this._needsBackbuffer||m._needsBackbuffer;var x=l.getItem();x.material=m,x.meshInstance=p,x.skeleton=h,x.skeletonMatrices=_;var v=i._center;x.renderOrderHint=v.x*o+v.y*s+v.z*a,x.worldMatrix=e,x.camera=c,x.worldBounds=i;var S=m.blendState||m._needsBackbuffer?f:u[g];S.push(x)}}},de.prototype.visitAmbientLight=function(t){var e=t._scaledIrradiance;this._ambientColor.r+=e.r,this._ambientColor.g+=e.g,this._ambientColor.b+=e.b},de.prototype.visitLight=function(t){this._lights.push(t),t._castShadows&&this._shadowCasters.push(t._shadowMapRenderer)},de.prototype._reset=function(){this._renderItemPool.reset();for(var t=0;t<er.NUM_PATHS;++t)this._opaques[t]=[];this._transparents=[],this._lights=[],this._shadowCasters=[],this._effects=[],this._needsNormalDepth=On.OPTIONS.ambientOcclusion,this._ambientColor.set(0,0,0,1)},pe.prototype=Object.create(H.prototype),pe.prototype.execute=function(t){var e=vn.gl;e.useProgram(this._program);var i=t._gbuffer.textures;i[0].bind(0),i[1].bind(1),i[2].bind(2),t._ssaoTexture&&t._ssaoTexture.bind(3),this.updatePassRenderState(t._camera,t),vn.setCullMode(jn.NONE);var n=bn.DEFAULT;n._vertexBuffers[0].bind(),n._indexBuffer.bind(),e.vertexAttribPointer(this._positionAttributeLocation,2,e.FLOAT,!1,16,0),e.vertexAttribPointer(this._texCoordAttributeLocation,2,e.FLOAT,!1,16,8),vn.enableAttributes(2),vn.drawElements(Gn.TRIANGLES,6,0)},me.prototype=Object.create(Lt.prototype),me.prototype.getRenderList=function(){return this._renderList},me.prototype.collect=function(t,e){this._camera=t,this._renderList=[],t.worldMatrix.getColumn(1,this._cameraYAxis),this._frustumPlanes=t.frustum._planes,this._renderItemPool.reset(),e.acceptVisitor(this),this._renderList.sort($n.sortOpaques)},me.prototype.visitModelInstance=function(t,e,i){if(t._castShadows)for(var n=t.numMeshInstances,r=this._cameraYAxis,o=r.x,s=r.y,a=r.z,h=t.skeleton,_=t.skeletonMatrices,l=this._renderItemPool,c=this._camera,u=this._renderList,f=0;f<n;++f){var d=t.getMeshInstance(f);if(d.visible){var p=d.material,m=l.getItem();m.material=p,m.meshInstance=d,m.skeleton=h,m.skeletonMatrices=_;var g=i._center;m.renderOrderHint=g.x*o+g.y*s+g.z*a,m.worldMatrix=e,m.camera=c,m.worldBounds=i,u.push(m)}}},me.prototype.qualifies=function(t){return t.visible&&t.worldBounds.intersectsConvexSolid(this._frustumPlanes,6)},ge.prototype={get shadowMatrix(){return this._camera.viewProjectionMatrix},get shadowMapSize(){return this._shadowMapSize},set shadowMapSize(t){this._shadowMapSize!==t&&(this._shadowMapSize=t,this._invalidateShadowMap())},render:function(t,e){this._shadowMapInvalid&&this._initShadowMap();var i=this._light;this._camera.verticalFOV=i.outerAngle,this._camera.far=i._radius,this._camera.matrix.copyFrom(i.worldMatrix),this._camera._invalidateWorldMatrix(),this._casterCollector.collect(this._camera,e),vn.setRenderTarget(this._fboFront),vn.setClearColor(n.WHITE),vn.clear(),tr.renderPass(this,st.SPOT_LIGHT_SHADOW_MAP_PASS,this._casterCollector.getRenderList()),vn.setColorMask(!0),this._blurShader&&this._blur(),vn.setRenderTarget(),vn.setClearColor(n.BLACK)},_createShadowBuffer:function(){var t=new Y;return t.filter=Hn.BILINEAR_NOMIP,t.wrapMode=Xn.CLAMP,t},_invalidateShadowMap:function(){this._shadowMapInvalid=!0},_initShadowMap:function(){var t=this._shadowMapSize;this._shadowMap.initEmpty(t,t,On.OPTIONS.spotShadowFilter.getShadowMapFormat(),On.OPTIONS.spotShadowFilter.getShadowMapDataType()),this._depthBuffer||(this._depthBuffer=new Zt),this._fboFront||(this._fboFront=new q(this._shadowMap,this._depthBuffer)),this._depthBuffer.init(t,t,!1),this._fboFront.init(),this._shadowMapInvalid=!1,this._shadowBackBuffer&&(this._shadowBackBuffer.initEmpty(t,t,On.OPTIONS.spotShadowFilter.getShadowMapFormat(),On.OPTIONS.spotShadowFilter.getShadowMapDataType()),this._fboBack||(this._fboBack=new q(this._shadowBackBuffer,this._depthBuffer)),this._fboBack.init())},_blur:function(){for(var t=this._blurShader,e=On.OPTIONS.spotShadowFilter.numBlurPasses,i=0;i<e;++i)vn.setRenderTarget(this._fboBack),vn.clear(),t.execute(bn.DEFAULT,this._shadowMap,1/this._shadowMapSize,0),vn.setRenderTarget(this._fboFront),vn.clear(),t.execute(bn.DEFAULT,this._shadowBackBuffer,0,1/this._shadowMapSize)}},xe.prototype=Object.create(jt.prototype,{castShadows:{get:function(){return this._castShadows},set:function(t){this._castShadows!==t&&(this._castShadows=t,t?this._shadowMapRenderer=new ge(this,this._shadowMapSize):this._shadowMapRenderer=null)}},shadowMapSize:{get:function(){return this._shadowMapSize},set:function(t){this._shadowMapSize=t,this._shadowMapRenderer&&(this._shadowMapRenderer.shadowMapSize=t)}},radius:{get:function(){return this._radius},set:function(t){this._radius=t,this._updateWorldBounds(),this._invalidateLocalBounds()}},innerAngle:{get:function(){return this._innerAngle},set:function(t){this._innerAngle=yn.clamp(t,0,Math.PI),this._outerAngle=yn.clamp(this._outerAngle,this._innerAngle,Math.PI),this._cosInner=Math.cos(.5*this._innerAngle),this._cosOuter=Math.cos(.5*this._outerAngle),this._sinOuter=Math.cos(.5*this._sinOuter),this._invalidateLocalBounds()}},outerAngle:{get:function(){return this._outerAngle},set:function(t){this._outerAngle=yn.clamp(t,0,Math.PI),this._innerAngle=yn.clamp(this._innerAngle,0,this._outerAngle),this._cosInner=Math.cos(.5*this._innerAngle),this._cosOuter=Math.cos(.5*this._outerAngle),this._sinOuter=Math.cos(.5*this._sinOuter),this._invalidateLocalBounds()}}}),xe.prototype._createBoundingVolume=function(){return new Mt},xe.prototype._updateWorldBounds=function(){this._localBoundsInvalid&&this._updateLocalBounds(),this._worldBounds.transformFrom(this._localBounds,this.worldMatrix)},xe.prototype.renderDeferredLighting=function(t){var e=new h,i=new h;return function(t){var n=t._camera;n.worldMatrix.getColumn(3,e),this.worldMatrix.getColumn(3,i);var r,o=this.worldBounds.classifyAgainstPlane(n.frustum.planes[kt.PLANE_NEAR]);r=o===Qn.FRONT?this._castShadows?xe._deferredShaderConeShadows:xe._deferredShaderCone:this._castShadows?xe._deferredShaderRectShadows:xe._deferredShaderRect,r.execute(t,this)}}(),xe.prototype._updateLocalBounds=function(){var t=new h,e=new h;return function(){e.z=this._radius;var i=this._sinOuter*this._radius;if(t.x=-i,t.y=-i,e.x=i,e.y=i,void 0===this._radius)throw new Error("No radius!");this._localBounds.setExplicit(t,e),this._localBoundsInvalid=!1}}(),xe.prototype._invalidateLocalBounds=function(){this._localBoundsInvalid=!0,this._invalidateWorldBounds()},ve.prototype=Object.create(st.prototype),ve.prototype.updatePassRenderState=function(t,e){vn.gl.useProgram(this._shader._program),this._assignDirLights(t),this._assignDirLightCasters(t),this._assignPointLights(t),this._assignPointLightCasters(t),this._assignSpotLights(t),this._assignSpotLightCasters(t),this._assignLightProbes(t),st.prototype.updatePassRenderState.call(this,t,e)},ve.prototype._generateShader=function(t,e,i,n){this._dirLights=[],this._dirLightCasters=[],this._pointLights=[],this._pointLightCasters=[],this._spotLights=[],this._spotLightCasters=[],this._diffuseLightProbes=[],this._specularLightProbes=[];for(var r=0;r<n.length;++r){var o=n[r];o instanceof Qt?o.castShadows?this._dirLightCasters.push(o):this._dirLights.push(o):o instanceof _e?o.castShadows?this._pointLightCasters.push(o):this._pointLights.push(o):o instanceof xe?o.castShadows?this._spotLightCasters.push(o):this._spotLights.push(o):o instanceof ce&&(o.diffuseTexture&&this._diffuseLightProbes.push(o),o.specularTexture&&this._specularLightProbes.push(o))}var s=[],a={HX_NUM_DIR_LIGHTS:this._dirLights.length,HX_NUM_DIR_LIGHT_CASTERS:this._dirLightCasters.length,HX_NUM_POINT_LIGHTS:this._pointLights.length,HX_NUM_POINT_LIGHT_CASTERS:this._pointLightCasters.length,HX_NUM_SPOT_LIGHTS:this._spotLights.length,HX_NUM_SPOT_LIGHT_CASTERS:this._spotLightCasters.length,HX_NUM_DIFFUSE_PROBES:this._diffuseLightProbes.length,HX_NUM_SPECULAR_PROBES:this._specularLightProbes.length};Un.EXT_SHADER_TEXTURE_LOD&&(s+="#texturelod\n");var h=t+"\n"+on.get("material_fwd_all_vertex.glsl",a),_=s+on.get("snippets_geometry.glsl")+"\n"+i+"\n\n\n"+On.OPTIONS.directionalShadowFilter.getGLSL()+"\n"+On.OPTIONS.spotShadowFilter.getGLSL()+"\n"+On.OPTIONS.pointShadowFilter.getGLSL()+"\n"+on.get("directional_light.glsl",a)+"\n"+on.get("point_light.glsl")+"\n"+on.get("spot_light.glsl")+"\n"+on.get("light_probe.glsl")+"\n"+e+"\n"+on.get("material_fwd_all_fragment.glsl");return new H(h,_)},ve.prototype._assignDirLights=function(t){var e=new h;return function(t){var i=this._dirLights;if(i)for(var n=i.length,r=vn.gl,o=0;o<n;++o){var s=i[o],a=this._dirLocations[o];t.viewMatrix.transformVector(s.direction,e);var h=s._scaledIrradiance;r.uniform3f(a.color,h.r,h.g,h.b),r.uniform3f(a.direction,e.x,e.y,e.z)}}}(),ve.prototype._assignDirLightCasters=function(t){var e=new h,i=new f,n=new Float32Array(64);return function(t){var r=this._dirLightCasters;if(r)for(var o=r.length,s=vn.gl,a=0;a<o;++a){var h=r[a];t.viewMatrix.transformVector(h.direction,e);var _=this._dirCasterLocations[a],l=h._scaledIrradiance;s.uniform3f(_.color,l.r,l.g,l.b),s.uniform3f(_.direction,e.x,e.y,e.z);for(var c=h._shadowMapRenderer,u=On.OPTIONS.numShadowCascades,f=c._splitDistances,d=0,p=0;p<u;++p){i.multiply(c.getShadowMatrix(p),t.worldMatrix);for(var m=i._m,g=0;g<16;++g)n[d++]=m[g]}s.uniformMatrix4fv(_.matrices,!1,n),s.uniform4f(_.splits,f[0],f[1],f[2],f[3]),s.uniform1f(_.depthBias,h.depthBias),s.uniform1f(_.maxShadowDistance,f[u-1])}}}(),ve.prototype._assignPointLights=function(t){var e=new h;return function(t){var i=this._pointLights;if(i)for(var n=vn.gl,r=i.length,o=0;o<r;++o){var s=this._pointLocations[o],a=i[o];a.worldMatrix.getColumn(3,e),t.viewMatrix.transformPoint(e,e);var h=a._scaledIrradiance;n.uniform3f(s.color,h.r,h.g,h.b),n.uniform3f(s.position,e.x,e.y,e.z),n.uniform1f(s.radius,a._radius),n.uniform1f(s.rcpRadius,1/a._radius)}}}(),ve.prototype._assignPointLightCasters=function(t){var e=new h;return function(t){var i=this._pointLightCasters;if(i)for(var n=vn.gl,r=i.length,o=0;o<r;++o){var s=this._pointCasterLocations[o],a=i[o];a.worldMatrix.getColumn(3,e),t.viewMatrix.transformPoint(e,e);var h=a._scaledIrradiance;n.uniform3f(s.color,h.r,h.g,h.b),n.uniform3f(s.position,e.x,e.y,e.z),n.uniform1f(s.radius,a._radius),n.uniform1f(s.rcpRadius,1/a._radius),n.uniform1f(s.depthBias,a.depthBias),n.uniformMatrix4fv(s.matrix,!1,t.worldMatrix._m)}}}(),ve.prototype._assignSpotLights=function(t){var e=new h;return function(t){var i=this._spotLights;if(i)for(var n=vn.gl,r=i.length,o=0;o<r;++o){var s=this._spotLocations[o],a=i[o],h=a.worldMatrix,_=t.viewMatrix;h.getColumn(3,e),_.transformPoint(e,e);var l=a._scaledIrradiance;n.uniform3f(s.color,l.r,l.g,l.b),n.uniform3f(s.position,e.x,e.y,e.z),n.uniform1f(s.radius,a._radius),n.uniform1f(s.rcpRadius,1/a._radius),n.uniform2f(s.angleData,a._cosOuter,1/Math.max(a._cosInner-a._cosOuter,1e-5)),h.getColumn(1,e),_.transformVector(e,e),n.uniform3f(s.direction,e.x,e.y,e.z)}}}(),ve.prototype._assignSpotLightCasters=function(t){var e=new h,i=new f;return function(t){var n=this._spotLightCasters;if(n)for(var r=vn.gl,o=n.length,s=0;s<o;++s){var a=this._spotCasterLocations[s],h=n[s],_=h.worldMatrix,l=t.viewMatrix;_.getColumn(3,e),l.transformPoint(e,e);var c=h._scaledIrradiance;r.uniform3f(a.color,c.r,c.g,c.b),r.uniform3f(a.position,e.x,e.y,e.z),r.uniform1f(a.radius,h._radius),r.uniform1f(a.rcpRadius,1/h._radius),r.uniform2f(a.angleData,h._cosOuter,1/Math.max(h._cosInner-h._cosOuter,1e-5)),_.getColumn(1,e),l.transformVector(e,e),r.uniform3f(a.direction,e.x,e.y,e.z),i.multiply(h._shadowMapRenderer.shadowMatrix,t.worldMatrix),r.uniformMatrix4fv(a.matrix,!1,i._m),r.uniform1f(a.depthBias,h.depthBias)}}}(),ve.prototype._assignShadowMaps=function(){var t=this._dirLightCasters,e=t.length;if(e>0){for(var i=[],n=0;n<e;++n){var r=t[n],o=r._shadowMapRenderer;i[n]=o._shadowMap}this.setTextureArray("hx_directionalShadowMaps",i)}if(t=this._spotLightCasters,e=t.length,e>0){for(var i=[],n=0;n<e;++n){var r=t[n],o=r._shadowMapRenderer;i[n]=o._shadowMap}this.setTextureArray("hx_spotShadowMaps",i)}if(t=this._pointLightCasters,e=t.length,e>0){for(var i=[],n=0;n<e;++n){var r=t[n],o=r._shadowMapRenderer;i[n]=o._shadowMap}this.setTextureArray("hx_pointShadowMaps",i)}},ve.prototype._assignLightProbes=function(){for(var t=[],e=[],i=this._diffuseLightProbes,n=i.length,r=0;r<n;++r)t[r]=i[r].diffuseTexture;i=this._specularLightProbes,n=i.length;var o=[];for(r=0;r<n;++r)e[r]=i[r].specularTexture,o[r]=Math.floor(yn.log2(e[r].size));t.length>0&&this.setTextureArray("hx_diffuseProbeMaps",t),e.length>0&&(this.setTextureArray("hx_specularProbeMaps",e),this.setUniformArray("hx_specularProbeNumMips",new Float32Array(o)))},ve.prototype._getUniformLocations=function(){this._dirLocations=[],this._dirCasterLocations=[],this._pointLocations=[],this._pointCasterLocations=[],this._spotLocations=[],this._spotCasterLocations=[];for(var t=0;t<this._dirLights.length;++t)this._dirLocations.push({color:this.getUniformLocation("hx_directionalLights["+t+"].color"),direction:this.getUniformLocation("hx_directionalLights["+t+"].direction")});for(t=0;t<this._dirLightCasters.length;++t)this._dirCasterLocations.push({color:this.getUniformLocation("hx_directionalLightCasters["+t+"].color"),direction:this.getUniformLocation("hx_directionalLightCasters["+t+"].direction"),matrices:this.getUniformLocation("hx_directionalLightCasters["+t+"].shadowMapMatrices[0]"),splits:this.getUniformLocation("hx_directionalLightCasters["+t+"].splitDistances"),depthBias:this.getUniformLocation("hx_directionalLightCasters["+t+"].depthBias"),maxShadowDistance:this.getUniformLocation("hx_directionalLightCasters["+t+"].maxShadowDistance")});for(t=0;t<this._pointLights.length;++t)this._pointLocations.push({color:this.getUniformLocation("hx_pointLights["+t+"].color"),position:this.getUniformLocation("hx_pointLights["+t+"].position"),radius:this.getUniformLocation("hx_pointLights["+t+"].radius"),rcpRadius:this.getUniformLocation("hx_pointLights["+t+"].rcpRadius")});for(t=0;t<this._pointLightCasters.length;++t)this._pointCasterLocations.push({color:this.getUniformLocation("hx_pointLightCasters["+t+"].color"),position:this.getUniformLocation("hx_pointLightCasters["+t+"].position"),radius:this.getUniformLocation("hx_pointLightCasters["+t+"].radius"),rcpRadius:this.getUniformLocation("hx_pointLightCasters["+t+"].rcpRadius"),depthBias:this.getUniformLocation("hx_pointLightCasters["+t+"].depthBias"),matrix:this.getUniformLocation("hx_pointLightCasters["+t+"].shadowMapMatrix")});for(t=0;t<this._spotLights.length;++t)this._spotLocations.push({color:this.getUniformLocation("hx_spotLights["+t+"].color"),position:this.getUniformLocation("hx_spotLights["+t+"].position"),direction:this.getUniformLocation("hx_spotLights["+t+"].direction"),radius:this.getUniformLocation("hx_spotLights["+t+"].radius"),rcpRadius:this.getUniformLocation("hx_spotLights["+t+"].rcpRadius"),angleData:this.getUniformLocation("hx_spotLights["+t+"].angleData")});for(t=0;t<this._spotLightCasters.length;++t)this._spotCasterLocations.push({color:this.getUniformLocation("hx_spotLightCasters["+t+"].color"),position:this.getUniformLocation("hx_spotLightCasters["+t+"].position"),direction:this.getUniformLocation("hx_spotLightCasters["+t+"].direction"),radius:this.getUniformLocation("hx_spotLightCasters["+t+"].radius"),angleData:this.getUniformLocation("hx_spotLightCasters["+t+"].angleData"),depthBias:this.getUniformLocation("hx_spotLightCasters["+t+"].depthBias"),matrix:this.getUniformLocation("hx_spotLightCasters["+t+"].shadowMapMatrix")})},Se.prototype=Object.create(st.prototype),Se.prototype._generateShader=function(t,e){var i="#define HX_SKIP_NORMALS\n#define HX_SKIP_SPECULAR\n",n=i+on.get("snippets_geometry.glsl")+"\n"+e+"\n"+on.get("material_gbuffer_albedo_fragment.glsl"),r=i+t+"\n"+on.get("material_gbuffer_albedo_vertex.glsl");return new H(r,n)},Te.prototype=Object.create(st.prototype),Te.prototype._generateShader=function(t,e){var i="#define HX_SKIP_SPECULAR\n",n=i+on.get("snippets_geometry.glsl")+"\n"+e+"\n"+on.get("material_gbuffer_normal_depth_fragment.glsl"),r=i+t+"\n"+on.get("material_gbuffer_normal_depth_vertex.glsl");return new H(r,n)},Ee.prototype=Object.create(st.prototype),Ee.prototype._generateShader=function(t,e){var i="#define HX_SKIP_NORMALS\n",n=i+on.get("snippets_geometry.glsl")+"\n"+e+"\n"+on.get("material_gbuffer_specular_fragment.glsl"),r=i+t+"\n"+on.get("material_gbuffer_specular_vertex.glsl");return new H(r,n)},ye.prototype=Object.create(st.prototype),ye.prototype._generateShader=function(t,e){var i=on.get("snippets_geometry.glsl")+"\n"+e+"\n"+on.get("material_gbuffer_full_fragment.glsl"),n=t+"\n"+on.get("material_gbuffer_full_vertex.glsl");return new H(n,i)},we.prototype=Object.create(st.prototype),we.prototype._generateShader=function(t,e){var i="#define HX_SKIP_NORMALS\n#define HX_SKIP_SPECULAR\n",n=i+t+"\n"+on.get("material_apply_gbuffer_vertex.glsl"),r=i+on.get("snippets_geometry.glsl")+"\n"+e+"\n\n"+on.get("material_apply_gbuffer_fragment.glsl");return new H(n,r)},Ae.prototype=Object.create(st.prototype),Ae.prototype._generateShader=function(t,e){var i="#define HX_SKIP_NORMALS\n#define HX_SKIP_SPECULAR\n",n=i+on.get("snippets_geometry.glsl")+"\n"+On.OPTIONS.spotShadowFilter.getGLSL()+"\n"+e+"\n"+on.get("material_spot_shadow_fragment.glsl"),r=i+t+"\n"+on.get("material_unlit_vertex.glsl");return new H(r,n)},Me.prototype=Object.create(st.prototype),Me.prototype.updatePassRenderState=function(t,e,i){st.prototype.updatePassRenderState.call(this,t,e),vn.gl.uniform1f(this._rcpRadiusLocation,1/i._radius)},Me.prototype._generateShader=function(t,e){
var i="#define HX_SKIP_NORMALS\n#define HX_SKIP_SPECULAR\n",n=i+on.get("snippets_geometry.glsl")+"\n"+On.OPTIONS.pointShadowFilter.getGLSL()+"\n"+e+"\n"+on.get("material_point_shadow_fragment.glsl"),r=i+t+"\n"+on.get("material_point_shadow_vertex.glsl");return new H(r,n)};var ir=0;Pe.ID_COUNTER=0,Pe.prototype={init:function(){if(!this._initialized&&this._geometryVertexShader&&this._geometryFragmentShader){this._needsNormalDepth=!1,this._needsBackbuffer=!1;var t=this._geometryVertexShader,e=this._geometryFragmentShader;this._useSkinning&&(t="#define HX_USE_SKINNING\n"+t),this._useMorphing&&(t="#define HX_USE_MORPHING\n"+t,this._useNormalMorphing&&(t="#define HX_USE_NORMAL_MORPHING\n"+t)),this._lightingModel?this._fixedLights?(this._renderPath=er.FORWARD_FIXED,this.setPass(st.BASE_PASS,new ve(t,e,this._lightingModel,this._fixedLights))):this._lightingModel!==On.OPTIONS.deferredLightingModel||this._blendState?(this._renderPath=er.FORWARD_DYNAMIC,this.setPass(st.BASE_PASS,new Xt(t,e)),this.setPass(st.DIR_LIGHT_PASS,new $t(t,e,this._lightingModel,(!1))),this.setPass(st.DIR_LIGHT_SHADOW_PASS,new $t(t,e,this._lightingModel,(!0))),this.setPass(st.POINT_LIGHT_PASS,new te(t,e,this._lightingModel,(!1))),this.setPass(st.POINT_LIGHT_SHADOW_PASS,new te(t,e,this._lightingModel,(!0))),this.setPass(st.SPOT_LIGHT_PASS,new ee(t,e,this._lightingModel,(!1))),this.setPass(st.SPOT_LIGHT_SHADOW_PASS,new ee(t,e,this._lightingModel,(!0))),this.setPass(st.LIGHT_PROBE_PASS,new ie(t,e,this._lightingModel))):(this._renderPath=er.DEFERRED,this.setPass(st.BASE_PASS,new we(t,e)),Un.GBUFFER_MRT||(this.setPass(st.GBUFFER_ALBEDO_PASS,new Se(t,e)),this.setPass(st.GBUFFER_SPECULAR_PASS,new Ee(t,e)))):(this._renderPath=er.FORWARD_FIXED,this.setPass(st.BASE_PASS,new Bt(t,e))),this.setPass(st.DIR_LIGHT_SHADOW_MAP_PASS,new Ht(t,e)),this.setPass(st.POINT_LIGHT_SHADOW_MAP_PASS,new Me(t,e)),this.setPass(st.SPOT_LIGHT_SHADOW_MAP_PASS,new Ae(t,e)),Un.GBUFFER_MRT&&this.setPass(st.GBUFFER_PASS,new ye(t,e)),this.setPass(st.GBUFFER_NORMAL_DEPTH_PASS,new Te(t,e)),this._initialized=!0}},get initialized(){return this._initialized},get blendState(){return this._blendState},set blendState(t){this._blendState=t,t?(this._additiveBlendState=t.clone(),this._additiveBlendState.dstFactor=kn.ONE):this._additiveBlendState=Z.ADD,this._invalidate()},get fixedLights(){return this._fixedLights},set fixedLights(t){this._fixedLights=t,this._invalidate()},get name(){return this._name},set name(t){this._name=t},get lightingModel(){return this._lightingModel},set lightingModel(t){this._lightingModel=t,this._invalidate()},get renderOrder(){return this._renderOrder},set renderOrder(t){this._renderOrder=t},get elementType(){return this._elementType},set elementType(t){this._elementType=t;for(var e=0;e<st.NUM_PASS_TYPES;++e)this._passes[e]&&(this._passes[e].elementType=t)},get writeDepth(){return this._writeDepth},set writeDepth(t){this._writeDepth=t,!t&&this._passes[st.GBUFFER_NORMAL_DEPTH_PASS]?this._passes[st.GBUFFER_NORMAL_DEPTH_PASS]=null:t&&!this._passes[st.GBUFFER_NORMAL_DEPTH_PASS]&&this._invalidate();for(var e=0;e<st.NUM_PASS_TYPES;++e)this._passes[e]&&(this._passes[e].writeDepth=t)},get writeColor(){return this._writeColor},set writeColor(t){this._writeColor=t;for(var e=0;e<st.NUM_PASS_TYPES;++e)this._passes[e]&&(this._passes[e].writeColor=t)},get cullMode(){return this._cullMode},set cullMode(t){this._cullMode=t;for(var e=0;e<st.NUM_PASS_TYPES;++e)e!==st.DIR_LIGHT_SHADOW_MAP_PASS&&e!==st.SPOT_LIGHT_SHADOW_MAP_PASS&&e!==st.POINT_LIGHT_SHADOW_MAP_PASS&&this._passes[e]&&(this._passes[e].cullMode=t)},get renderPath(){return this._initialized||this.init(),this._renderPath},getPass:function(t){return this._initialized||this.init(),this._passes[t]},setPass:function(t,e){if(this._passes[t]=e,e){t===st.DIR_LIGHT_SHADOW_MAP_PASS?e.cullMode=On.OPTIONS.directionalShadowFilter.cullMode:t===st.SPOT_LIGHT_SHADOW_MAP_PASS?e.cullMode=On.OPTIONS.spotShadowFilter.cullMode:t===st.POINT_LIGHT_SHADOW_MAP_PASS?e.cullMode=On.OPTIONS.pointShadowFilter.cullMode:e.cullMode=this._cullMode,e.elementType=this._elementType,e.writeDepth=this._writeDepth,e.writeColor=this._writeColor,t>=st.DIR_LIGHT_PASS&&t<=st.LIGHT_PROBE_PASS&&(e.blendState=this._additiveBlendState),t===st.BASE_PASS&&(e.blendState=this._blendState),e.getTextureSlot("hx_gbufferNormalDepth")&&(this._needsNormalDepth=!0),e.getTextureSlot("hx_backbuffer")&&(this._needsBackbuffer=!0);for(var i in this._textures)if(this._textures.hasOwnProperty(i)){var n=this._textures[i];n instanceof Array?e.setTextureArray(i,n):e.setTexture(i,n)}for(var r in this._uniforms)this._uniforms.hasOwnProperty(r)&&("]"===r.charAt(r.length-1)?e.setUniformArray(r.substr(0,r.length-3),this._uniforms[r]):e.setUniform(r,this._uniforms[r]))}this.onChange.dispatch()},hasPass:function(t){return this._initialized||this.init(),!!this._passes[t]},setTexture:function(t,e){e?this._textures[t]=e:delete this._textures[t];for(var i=0;i<st.NUM_PASS_TYPES;++i)this._passes[i]&&this._passes[i].setTexture(t,e)},setTextureArray:function(t,e){e?this._textures[t]=e:delete this._textures[t];for(var i=0;i<st.NUM_PASS_TYPES;++i)this._passes[i]&&this._passes[i].setTextureArray(t,e)},setUniform:function(t,e,i){if(void 0===i&&(i=!0),i||!this._uniforms.hasOwnProperty(t)){this._uniforms[t]=e;for(var n=0;n<st.NUM_PASS_TYPES;++n)this._passes[n]&&this._passes[n].setUniform(t,e)}},setUniformArray:function(t,e,i){if(void 0===i&&(i=!0),i||!this._uniforms.hasOwnProperty(t+"[0]")){this._uniforms[t+"[0]"]=e;for(var n=0;n<st.NUM_PASS_TYPES;++n)this._passes[n]&&this._passes[n].setUniformArray(t,e)}},_setUseSkinning:function(t){this._useSkinning!==t&&this._invalidate(),this._useSkinning=t},_setUseMorphing:function(t,e){this._useSkinning===t&&this._useNormalMorphing===e||this._invalidate(),this._useMorphing=t,this._useNormalMorphing=e},_invalidate:function(){this._initialized=!1,this._passes=new Array(Pe.NUM_PASS_TYPES),this.onChange.dispatch()},toString:function(){return"[Material(name="+this._name+")]"}},be.roughnessFromShininess=function(t){return Math.sqrt(2/(t+2))},be.SPECULAR_MAP_ROUGHNESS_ONLY=1,be.SPECULAR_MAP_ALL=2,be.SPECULAR_MAP_SHARE_NORMAL_MAP=3,be.SPECULAR_MAP_METALLIC_ROUGHNESS=4,be.prototype=Object.create(Pe.prototype,{doubleSided:{get:function(){return this._doubleSided},set:function(t){this._doubleSided!==t&&this._invalidate(),this._doubleSided=t,this.cullMode=t?jn.NONE:jn.BACK}},alpha:{get:function(){return this._alpha},set:function(t){this._alpha=yn.saturate(t),this.setUniform("alpha",this._alpha)}},useVertexColors:{get:function(){return this._useVertexColors},set:function(t){this._useVertexColors!==t&&this._invalidate(),this._useVertexColors=t}},color:{get:function(){return this._color},set:function(t){this._color=isNaN(t)?t:new n(t),this.setUniform("color",this._color)}},colorMap:{get:function(){return this._colorMap},set:function(t){!!this._colorMap!=!!t&&this._invalidate(),this._colorMap=t,this.setTexture("colorMap",t)}},normalMap:{get:function(){return this._normalMap},set:function(t){!!this._normalMap!=!!t&&this._invalidate(),this.setTexture("normalMap",t),this._normalMap=t}},occlusionMap:{get:function(){return this._occlusionMap},set:function(t){!!this._occlusionMap!=!!t&&this._invalidate(),this.setTexture("occlusionMap",t),this._occlusionMap=t}},emissiveColor:{get:function(){return this._emissiveColor},set:function(t){this._emissiveColor=isNaN(t)?t:new n(t),this.setUniform("emissiveColor",this._emissiveColor)}},emissionMap:{get:function(){return this._emissionMap},set:function(t){!!this._emissionMap!=!!t&&this._invalidate(),this.setTexture("emissionMap",t),this._emissionMap=t}},specularMap:{get:function(){return this._specularMap},set:function(t){!!this._specularMap!=!!t&&this._invalidate(),this.setTexture("specularMap",t),this._specularMap=t}},maskMap:{get:function(){return this._maskMap},set:function(t){!!this._maskMap!=!!t&&this._invalidate(),this.setTexture("maskMap",t),this._maskMap=t}},specularMapMode:{get:function(){return this._specularMapMode},set:function(t){this._specularMapMode!==t&&this._invalidate(),this._specularMapMode=t}},metallicness:{get:function(){return this._metallicness},set:function(t){this._metallicness=yn.saturate(t),this.setUniform("metallicness",this._metallicness)}},normalSpecularReflectance:{get:function(){return this._normalSpecularReflectance},set:function(t){this._normalSpecularReflectance=yn.saturate(t),this.setUniform("normalSpecularReflectance",this._normalSpecularReflectance)}},roughness:{get:function(){return this._roughness},set:function(t){this._roughness=t,this.setUniform("roughness",this._roughness)}},roughnessRange:{get:function(){return this._roughnessRange},set:function(t){this._roughnessRange=t,this.setUniform("roughnessRange",2*this._roughnessRange)}},alphaThreshold:{get:function(){return this._alphaThreshold},set:function(t){t=yn.saturate(t),1===this._alphaThreshold!=(1===t)&&this._invalidate(),this._alphaThreshold=t,this.setUniform("alphaThreshold",t)}}}),be.prototype.init=function(){var t=this._generateDefines();this._geometryVertexShader=on.get("default_geometry_vertex.glsl",t),this._geometryFragmentShader=on.get("default_geometry_fragment.glsl",t),Pe.prototype.init.call(this)},be.prototype._generateDefines=function(){var t={};switch(this._colorMap&&(t.COLOR_MAP=1),this._useVertexColors&&(t.VERTEX_COLORS=1),this._normalMap&&(t.NORMAL_MAP=1),this._occlusionMap&&(t.OCCLUSION_MAP=1),this._emissionMap&&(t.EMISSION_MAP=1),this._maskMap&&(t.MASK_MAP=1),this._alphaThreshold<1&&(t.ALPHA_THRESHOLD=1),this._specularMapMode){case be.SPECULAR_MAP_ROUGHNESS_ONLY:this._specularMap&&(t.ROUGHNESS_MAP=1);break;case be.SPECULAR_MAP_ALL:this._specularMap&&(t.SPECULAR_MAP=1);break;case be.SPECULAR_MAP_METALLIC_ROUGHNESS:this._specularMap&&(t.METALLIC_ROUGHNESS_MAP=1);break;default:t.NORMAL_ROUGHNESS_MAP=1}return this._doubleSided&&(t.DOUBLE_SIDED=1),t},Le.prototype=Object.create(Ot.prototype),Re.COMPONENT_ID=0,Re.create=function(t,e){var i=0;return function(t,e){t.prototype=Object.create(Re.prototype,e),t.COMPONENT_ID=++i,t.prototype.COMPONENT_ID=t.COMPONENT_ID}}(),Re.prototype={onAdded:function(){},onRemoved:function(){},onUpdate:null,get entity(){return this._entity}},Oe.prototype=Object.create(wt.prototype),Oe.prototype._generate=function(t,e){var i=e.width||1,n=e.height||i,r=e.depth||i,o=.5*i,s=.5*n,a=.5*r,h=t.positions,_=t.indices;h.push(-o,-a,-s),h.push(o,-a,-s),h.push(-o,-a,s),h.push(o,-a,s),h.push(-o,a,-s),h.push(o,a,-s),h.push(-o,a,s),h.push(o,a,s),_.push(0,1),_.push(2,3),_.push(0,2),_.push(1,3),_.push(4,5),_.push(6,7),_.push(4,6),_.push(5,7),_.push(0,4),_.push(2,6),_.push(1,5),_.push(3,7)},De.prototype=Object.create(Ft.prototype),De.prototype._updateWorldBounds=function(){this._worldBounds.clear(Tt.EXPANSE_INHERIT)},Re.create(Ie,{color:{get:function(){return this._material.color},set:function(t){this._material.color=t}}}),Ie.prototype.onAdded=function(){this.entity.attach(this._modelInstance)},Ie.prototype.onRemoved=function(){this.entity.detach(this._modelInstance),this._modelInstance=null},Ie.prototype.onUpdate=function(t){var e=new f;return function(t){var i=this.entity.worldBounds,n=this._modelInstance.matrix;e.inverseAffineOf(this.entity.worldMatrix),n.fromScale(i._halfExtentX,i._halfExtentY,i._halfExtentZ),n.setColumn(3,i.center),n.append(e),this._modelInstance.matrix=n}}(),Ie.prototype._initModelInstance=function(){var t=new Oe({width:2});this._material=new be,this._material.elementType=Gn.LINES,this._material.doubleSided=!0,this._material.lightingModel=Sn.Unlit,this._modelInstance=new De(t,this._material)},Re.create(Ne,{color:{get:function(){return this._color},set:function(t){this._color=t,this._material&&(this._material.color=t)}}}),Ne.prototype.onAdded=function(){this._initGroup(),this.entity.attach(this._group)},Ne.prototype.onRemoved=function(){this.entity.detach(this._group),this._group=null},Ne.prototype.onUpdate=function(t){for(var e=this.entity.skeletonPose,i=e.numJoints,n=0;n<i;++n){var r=e.getJointPose(n),o=this._modelInstances[n];o.copyTransform(r)}},Ne.prototype._initGroup=function(){var t=new ne({radius:.5});this._group=new HX.SceneNode,this._material=new be,this._material.color=this._color,this._material.depth=this._color,this._material.lightingModel=Sn.Unlit,this._modelInstances=[];for(var e=this.entity.skeleton,i=e.numJoints,n=0;n<i;++n){var r=e.getJoint(n),o=new HX.ModelInstance(t,this._material);r.parentIndex===-1?this._group.attach(o):this._modelInstances[r.parentIndex].attach(o),this._modelInstances[n]=o}},Ce.prototype={get numEntities(){return this._entities.length},getEntity:function(t){return this._entities[t]},_containsComponentHash:function(t){this._hash.contains(t)},_add:function(t){this._entities.push(t),this.onEntityAdded.dispatch(t)},_remove:function(t){this.onEntityRemoved.dispatch(t);var e=this._entities.indexOf(t);this._entities.splice(e,1)},_increaseUsage:function(){++this._usageCount},free:function(){0===--this._usageCount&&this.onDisposed.dispatch()}},Fe.prototype={startSystem:function(t){if(this._systems.indexOf(t)>=0)throw new Error("System already running!");this._systems.push(t),t._onStarted(this)},stopSystem:function(t){var e=this._systems.push(t);if(e<0)throw new Error("System not running!");this._systems.splice(e,1),t.onStopped()},getEntitySet:function(t){for(var e=new Dt,i=t.length,n=0;n<i;++n)e.setBit(t[n].COMPONENT_ID);var r=e.toString(),o=this._entitySets[r];if(!o){o=new Ce(e),this._entitySets[r]=o,i=this._entities.length;for(var n=0;n<i;++n){var s=this._entities[n];s._componentHash.contains(e)&&o._add(s)}}return o._increaseUsage(),o},registerEntity:function(t){this._entities.push(t),t._onComponentsChange.bind(this._onEntityComponentsChange,this),t._requiresUpdates&&this._addUpdatableEntity(t),sn.forEach(this._entitySets,function(e){t._componentHash.contains(e._hash)&&e._add(t)})},unregisterEntity:function(t){var e=this._entities.indexOf(t);this._entities.splice(e),t._onComponentsChange.unbind(this),t._requiresUpdates&&this._removeUpdatableEntity(t),sn.forEach(this._entitySets,function(e){t._componentHash.contains(e._hash)&&e._remove(t)})},_onEntityComponentsChange:function(t,e){t._requiresUpdates?this._addUpdatableEntity(t):this._removeUpdatableEntity(t),sn.forEach(this._entitySets,function(i){var n=e.contains(i._hash),r=t._componentHash.contains(i._hash);!n&&r?i._add(t):n&&!r&&i._remove(t)})},_addUpdatableEntity:function(t){this._updateableEntities.indexOf(t)<0&&this._updateableEntities.push(t)},_removeUpdatableEntity:function(t){var e=this._updateableEntities.indexOf(t);e>=0&&this._updateableEntities.splice(e,1)},_update:function(t){for(var e=this._updateableEntities,i=e.length,n=0;n<i;++n)e[n].update(t);var r=this._systems;for(i=r.length,n=0;n<i;++n)r[n].onUpdate(t)}},Ue.prototype={get rootNode(){return this._rootNode},get skybox(){return this._skybox},set skybox(t){this._skybox=t},findNodeByName:function(t){return this._rootNode.findNodeByName(t)},findMaterialByName:function(t){return this._rootNode.findMaterialByName(t)},attach:function(t){this._rootNode.attach(t)},detach:function(t){this._rootNode.detach(t)},get numChildren(){return this._rootNode.numChildren},getChild:function(t){return this._rootNode.getChild(t)},contains:function(t){this._rootNode.contains(t)},acceptVisitor:function(t){t.visitScene(this),this._rootNode.acceptVisitor(t)},get entityEngine(){return this._entityEngine},startSystem:function(t){this._entityEngine.startSystem(t)},stopSystem:function(t){this._entityEngine.stopSystem(t)},get worldBounds(){return this._rootNode.worldBounds},applyFunction:function(t,e){this._rootNode.applyFunction(t,e)}},Be.prototype=Object.create(Pe.prototype),He.prototype={},Xe.prototype=Object.create(Ot.prototype,{terrainSize:{get:function(){return this._terrainSize}}}),Xe.prototype._createModel=function(t,e,i,n){var r=1/e,o=new k,s=t*r,a=.5*s;o.addVertexAttribute("hx_position",3),o.addVertexAttribute("hx_normal",3),o.addVertexAttribute("hx_cellSize",1);for(var _=[],l=[],c=i?e-1:e,u=e+1,f=0;f<=c;++f)for(var d=(f*r-.5)*t,p=0;p<=e;++p){var m=(p*r-.5)*t,g=n||p!==e||f!==e?s:a;if(_.push(m,d,0,0,0,1,g),p!==e&&f!==c){var x=p+f*u;l.push(x,x+u+1,x+u),l.push(x,x+1,x+u+1)}}var v=_.length/7;if(i)for(d=(e*r-.5)*t,p=0;p<=e;++p)m=(p*r-.5)*t,_.push(m,d,0,0,0,1),_.push(a),p!==e&&(x=p+c*u,_.push(m+a,d,0,0,0,1,a),l.push(x,v+2*p+1,v+2*p),l.push(x+1,v+2*p+1,x),l.push(v+2*p+2,v+2*p+1,x+1));o.setVertexData(_,0),o.setIndexData(l);var S=new Et(o);return S.localBounds.growToIncludeMinMax(new h(0,0,this._minElevation),new h(0,0,this._maxElevation)),S},Xe.prototype._initModels=function(t){this._models=[];for(var e=.25*this._terrainSize,i=0;i<this._numLevels;++i){if(i===this._numLevels-1){var n=this._createModel(e,t,!1,!0);this._models[i]={edge:n,corner:n}}else this._models[i]={edge:this._createModel(e,t,!0,!1),corner:this._createModel(e,t,!1,!1)};e*=.5}},Xe.prototype._initTree=function(){for(var t=0,e=.25*this._terrainSize,i=0;i<4;++i)for(var n=this._terrainSize*(i/4-.5)+.5*e,r=0;r<4;++r){var o=this._terrainSize*(r/4-.5)+.5*e,s=0,a=0;if(1===r?s=1:2===r&&(s=-1),1===i?a=1:2===i&&(a=-1),s&&a)this._subDivide(o,n,s,a,t+1,.5*e);else{var h=0,_="edge",l=!0;r%3===i%3?(_="corner",0===r&&0===i&&(h=0),0===r&&3===i&&(h=1),3===r&&3===i&&(h=2),3===r&&0===i&&(h=-1)):(3===i&&(h=2),3===r&&(h=-1),0===r&&(h=1)),l&&this._addModel(o,n,t,h,_)}}},Xe.prototype._addModel=function(t,e,i,n,r){var o=new Ft(this._models[i][r],this._material);o.position.set(t,e,0),o.rotation.fromAxisAngle(h.Z_AXIS,-n*Math.PI*.5),this.attach(o)},Xe.prototype._subDivide=function(t,e,i,n,r,o){o*=.5;for(var s=-1;s<=1;s+=2)for(var a=-1;a<=1;a+=2)if(a!==i||s!==n||r===this._numLevels-1){var h=0,_="corner";t<0&&e<0?a<0&&s>0?(_="edge",h=1):a>0&&s<0?(_="edge",h=0):h=0:t>0&&e>0?a>0&&s<0?(_="edge",h=-1):a<0&&s>0?(_="edge",h=2):h=2:t<0&&e>0?a>0&&s>0?(_="edge",h=2):a<0&&s<0?(_="edge",h=1):h=1:t>0&&e<0&&(a<0&&s<0?(_="edge",h=0):a>0&&s>0?(_="edge",h=-1):h=-1),this._addModel(t+o*a,e+o*s,r,h,_)}r<this._numLevels-1&&this._subDivide(t+o*i,e+o*n,i,n,r+1,o)},Xe.prototype.acceptVisitor=function(t){if(t instanceof de){var e=t._camera.position;this.position.x=Math.floor(e.x/this._snapSize)*this._snapSize,this.position.y=Math.floor(e.y/this._snapSize)*this._snapSize}Ot.prototype.acceptVisitor.call(this,t)},Xe.prototype._updateWorldBounds=function(){this._worldBounds.clear(Tt.EXPANSE_INFINITE)},je.prototype={onStarted:function(){},onStopped:function(){},onUpdate:function(t){},getEntitySet:function(t){var e=this._entityEngine.getEntitySet(t);return this._sets.push(e),e},_onStarted:function(t){this._entityEngine=t,this.onStarted()},_onStopped:function(){for(var t=0;t<this._sets;++t)this._sets[t].free();this._sets=[]}},Re.create(ze),ze.prototype.addComponent=function(t){if(t._entity)throw new Error("Component already added to an entity!");this._subs.push(t)},ze.prototype.removeComponent=function(t){var e=this._subs.indexOf(t);e>=0&&this._subs.splice(e,1)},ze.prototype.onAdded=function(){for(var t=0;t<this._subs.length;++t){var e=this._subs[t];e._entity=this._entity,e.onAdded()}},ze.prototype.onRemoved=function(){for(var t=0;t<this._subs.length;++t){var e=this._subs[t];e.onRemoved(),e._entity=null}},ze.prototype.onUpdate=function(t){for(var e=this._subs.length,i=0;i<e;++i){var n=this._subs[i];n.onUpdate(t)}},Ge.prototype={get looping(){return this._looping},set looping(t){this._looping=t},get name(){return this._name},set name(t){this._name=t},get numKeyFrames(){return this._keyFrames.length},get duration(){return this._duration},addKeyFrame:function(t){this._keyFrames.push(t),t.time>this._duration&&(this._duration=t.time)},sortKeyFrames:function(){this._keyFrames.sort(function(t,e){return t.time-e.time})},getKeyFrame:function(t){return this._keyFrames[t]},toString:function(){return"[AnimationClip(name="+this.name+")"}},ke.prototype={get timeScale(){return this._timeScale},set timeScale(t){this._timeScale=t},get looping(){return this._looping},set looping(t){this._looping=t},get time(){return this._time},set time(t){this._looping||(t=yn.clamp(t,0,this._clip.duration)),this._time!==t&&(this._time=t,this._timeChanged=!0)},play:function(){this._isPlaying=!0},stop:function(){this._isPlaying=!1},update:function(t){var e=this._isPlaying&&0!==t;if(!e&&!this._timeChanged)return!1;this._timeChanged=!1,this._isPlaying&&(t*=this._timeScale,this._time+=t);var i=this._clip,n=i.numKeyFrames,r=n-1,o=i.duration,s=0;this._looping||(this._time>o?(this._time=o,this._isPlaying=!1):this._time<0&&(this._time=0,this._isPlaying=!1));var a,h;if(t>=0){for(;this._looping&&this._time>=o;)this._currentFrameIndex=0,this._time-=o,++s;do++this._currentFrameIndex===n&&(this._currentFrameIndex=0),h=i.getKeyFrame(this._currentFrameIndex);while(h.time<this._time);--this._currentFrameIndex,a=i.getKeyFrame(this._currentFrameIndex)}else{for(;this._looping&&this._time<0;)this._currentFrameIndex=r,this._time+=o,++s;++this._currentFrameIndex;do--this._currentFrameIndex<0&&(this._currentFrameIndex=n),a=i.getKeyFrame(this._currentFrameIndex);while(a.time>this._time)}return this.wraps=s,this.frame1=a,this.frame2=h,this.ratio=(this._time-a.time)/(h.time-a.time),!0}},Ye.prototype={get name(){return this._name},set name(t){this._name=t},get timeScale(){return this._timeScale},set timeScale(t){this._timeScale=t},get time(){return this._time},set time(t){this._time=t;for(var e=0;e<this._layers.length;++e)this._layers[e].time=t},get looping(){return this._looping},set looping(t){this._looping=t;for(var e=0;e<this._layers.length;++e)this._layers[e].looping=!0},addLayer:function(t){this._layers.push(t),t.time=this._time,t.looping=this._looping},removeLayer:function(t){var e=this._layers.indexOf(t);e>=0&&this._layers.splice(e,1)},play:function(){Dn.bind(this._update,this)},stop:function(){Dn.unbind(this._update)},_update:function(t){t*=this._timeScale,this._time+=t;for(var e=this._layers.length,i=0;i<e;++i)this._layers[i].update(t)}},We.prototype={get looping(){return this._playhead.looping},set looping(t){this._playhead.looping=t},get time(){return this._playhead.time},set time(t){this._playhead.time=t},get duration(){return this._clip.duration},getKeyFrame:function(t){return this._clip.getKeyFrame(t)},update:function(t){},toString:function(){return"[AnimationLayer(name="+this.name+")"}},Ze.prototype=Object.create(We.prototype),Ze.prototype.update=function(t){var e=this._playhead;e.update(t)&&(this._targetObject[this._propertyName].lerp(e.frame1.value,e.frame2.value,e.ratio),this._skeletonPose&&this._skeletonPose.invalidateGlobalPose())},qe.prototype=Object.create(We.prototype),qe.prototype.update=function(t){var e=this._playhead;e.update(t)&&(this._targetObject[this._propertyName].slerp(e.frame1.value,e.frame2.value,e.ratio),this._skeletonPose&&this._skeletonPose.invalidateGlobalPose())},Ke.prototype=Object.create(We.prototype),Ke.prototype.update=function(t){var e=this._playhead;if(e.update(t)){var i=yn.lerp(e.frame1.value,e.frame2.value,e.ratio);this._targetObject.setWeight(this._propertyName,i)}},Je.prototype={getMorphTarget:function(t){return this._targets[t]},get numMorphTargets(){return this._targets.length},addMorphTarget:function(t){this._targets.push(t),this._weights[t.name]=0,this._stateInvalid=!0},getWeight:function(t){return this._weights[t]},setWeight:function(t,e){this._weights[t]!==e&&(this._stateInvalid=!0),this._weights[t]=e},update:function(){if(this._stateInvalid){var t=this._weights;this._targets.sort(function(e,i){return t[i.name]-t[e.name]}),this._stateInvalid=!1,this.onChange.dispatch()}}},Re.create(Qe,{numMorphTargets:{get:function(){return this._morphPose.numMorphTargets}}}),Qe.prototype.getMorphTarget=function(t){return this._morphPose.getMorphTarget(t)},Qe.prototype.setWeight=function(t,e){this._morphPose.setWeight(t,e)},Qe.prototype.onAdded=function(){this._hasOwn?this.entity.morphPose=this._morphPose:this._morphPose=this.entity.morphPose},Qe.prototype.onRemoved=function(){this._hasOwn&&(this.entity.morphPose=null)},Qe.prototype.onUpdate=function(t){this._morphPose.update(t)},$e.prototype={get hasNormals(){return!!this._normalBuffers},getNumVertices:function(t){return this._numVertices[t]},getPositionBuffer:function(t){return this._positionBuffers[t]},getNormalBuffer:function(t){return this._normalBuffers[t]},init:function(t,e,i){this._numVertices[t]=e.length/3,this._positionBuffers[t]=new G,this._positionBuffers[t].uploadData(new Float32Array(e)),i&&(this._normalBuffers||(this._normalBuffers=[]),this._normalBuffers[t]=new G,this._normalBuffers[t].uploadData(new Float32Array(i)))}},ti.prototype={get applyInverseBindPose(){return this._applyInverseBindPose},set applyInverseBindPose(t){this._applyInverseBindPose=t},get numJoints(){return this._joints.length},addJoint:function(t){this._joints.push(t)},getJoint:function(t){return this._joints[t]},get name(){return this._name},set name(t){this._name=t},toString:function(){return"[Skeleton(name="+this.name+")"}},ei.prototype={get name(){return this._name},set name(t){this._name=t},findNode:function(t){return this._name===t?this:this._queryChildren(t)},update:function(t,e){},get rootJointDeltaPosition(){return this._rootJointDeltaPosition},get numJoints(){return-1},_queryChildren:function(t){throw new Error("Abstract method called!")}},ii.prototype=Object.create(ei.prototype,{numJoints:{get:function(){return this._numJoints}},looping:{get:function(){return this._playhead._looping},set:function(t){this._playhead.looping=t}},duration:{get:function(){return this._clip.duration}},timeScale:{get:function(){return this._playhead.timeScale},set:function(t){this._playhead.timeScale=t}},time:{get:function(){return this._playhead.time},set:function(t){this._playhead.time=t,this._timeChanged=!0}}}),ii.prototype.play=function(){this._animationClipPlayer.play()},ii.prototype.stop=function(){this._animationClipPlayer.stop()},ii.prototype.update=function(t,e){if(!this._playhead.update(t))return!1;var i=this._playhead;return this._pose.interpolate(i.frame1.value,i.frame2.value,i.ratio),e&&this._transferRootJointTransform(i.wraps,t),!0},ii.prototype._transferRootJointTransform=function(t,e){var i=this._pose._jointPoses[0].position,n=this._rootPosition,r=this._rootJointDeltaPosition;h.subtract(i,n,r),e>0&&t>0?r.addScaled(this._clipRootDelta,t):e<0&&t>0&&r.addScaled(this._clipRootDelta,-t),this._rootPosition.copyFrom(i),i.set(0,0,0)},ii.prototype._queryChildren=function(t){return null},ni.prototype={get transferRootJoint(){return this._transferRootJoint},set transferRootJoint(t){this._transferRootJoint=t},get skeleton(){return this._skeleton},set skeleton(t){this._skeleton=t},get skeletonPose(){return this._rootNode._pose},get rootJointDeltaPosition(){return this._rootNode.rootJointDeltaPosition},get rootNode(){return this._rootNode},set rootNode(t){this._rootNode=t},update:function(t){var e=this._rootNode.update(t,this._transferRootJoint);return e&&this._rootNode._pose.invalidateGlobalPose(),e},getNode:function(t){return this._rootNode.findNode(t)}},Re.create(ri,{transferRootJoint:{get:function(){return this._blendTree.transferRootJoint},set:function(t){this._blendTree.transferRootJoint=t}},applyInverseBindPose:{get:function(){return this._blendTree.applyInverseBindPose},set:function(t){this._blendTree.applyInverseBindPose=t}},animationNode:{get:function(){return this._blendTree.rootNode},set function(t){this._blendTree.rootNode=t,this._entity&&(this._blendTree.skeleton=this._entity.skeleton)}}}),ri.prototype.onAdded=function(){this._blendTree.skeleton=this._entity.skeleton,this._entity.skeletonPose=this._blendTree.skeletonPose},ri.prototype.onUpdate=function(t){if(this._blendTree.update(t)){var e=this._entity.matrix,i=this._blendTree.rootJointDeltaPosition;e.prependTranslation(i),this._entity.matrix=e,this._entity.skeletonPose=this._blendTree.skeletonPose}},ri.prototype.getNode=function(t){return this._blendTree.getNode(t)},oi.prototype=Object.create(ei.prototype,{numJoints:{get:function(){return this._numJoints}},minValue:{get:function(){return this._minValue},set:function(t){this._minValue=t}},maxValue:{get:function(){return this._maxValue},set:function(t){this._maxValue=t}},value:{get:function(){return this._value},set:function(t){t=yn.clamp(t,this._minValue,this._maxValue),this._value!==t&&(this._valueChanged=!0),this._value=t,this._t=(this._value-this._minValue)/(this._maxValue-this._minValue)}},child1:{get:function(){return this._child1},set:function(t){if(this._child1=t,this._child2&&t.numJoints!==this._child2.numJoints)throw new Error("Incompatible child nodes (numJoints mismatch)!");this._numJoints=t.numJoints}},child2:{get:function(){return this._child2},set:function(t){if(this._child2=t,this._child1&&t.numJoints!==this._child1.numJoints)throw new Error("Incompatible child nodes (numJoints mismatch)!")}}}),oi.prototype.update=function(t,e){var i=this._child1.update(t,e);i=this._child2.update(t,e)||i,i=i||this._valueChanged;var n=this._t;return i&&(n>.999?this._pose.copyFrom(this._child1._pose):n<.001?this._pose.copyFrom(this._child2._pose):this._pose.interpolate(this._child1._pose,this._child2._pose,this._t),this._valueChanged=!1),i},oi.prototype._queryChildren=function(t){return this._child1.findNode(t)||this._child2.findNode(t)},si.prototype=Object.create(ei.prototype,{numJoints:{get function(){return this._skeleton.numJoints}}}),si.prototype.update=function(t){var e=this._poseInvalid;return this._poseInvalid=!1,e},si.prototype.setJointRotation=function(t,e){var i=this._getJointPose(t);i.rotation.copyFrom(e),this._poseInvalid=!0},si.prototype.setJointTranslation=function(t,e){var i=this._getJointPose(t);i.position.copyFrom(e),this._poseInvalid=!0},si.prototype.setJointScale=function(t,e){var i=this._getJointPose(t);i.scale.copyFrom(e),this._poseInvalid=!0},si.prototype._getJointPose=function(t){return t instanceof String?this._poseLookUp[t]:this._pose._jointPoses[t]},si.prototype._queryChildren=function(t){return null},ai.prototype={toString:function(){return"[SkeletonJoint]"}},hi.prototype=Object.create(ei.prototype,{numJoints:{get:function(){return this._numJoints}}}),hi.prototype.addClip=function(t){this._clips[t.name]=t},hi.prototype.fadeTo=function(t,e,i){0===e&&t.looping===!1&&(this._children=[]),t instanceof String?t=new ii(this._clips[t]):t instanceof Ge&&(t=new ii(t)),this._numJoints=t.numJoints,this._children.unshift({node:t,weight:0===e?1:0,fadeSpeed:0===e?1e4:1/e,sync:i})},hi.prototype.update=function(t,e){var i=this._children.length,n=0,r=0,o=void 0;for(c=i-1;c>=0;--c){var s=this._children[c],a=s.node;s.sync&&(o=o||s,n+=s.node.duration*s.weight,r+=s.weight)}if(0!==r&&(n/=r),o)var h=o.duration/n,_=(o.time+t*h)/o.duration;for(var l=i>1&&t>0,c=0;c<i;++c){s=this._children[c],a=s.node,s.sync?(a.time=a.duration*_,l=a.update(0,e)||l):l=a.update(t,e)||l;var u=s.weight+t*s.fadeSpeed;if(a.looping===!1){var f=(a.duration-a.time)*s.fadeSpeed;f<=1&&(u*=f,f<.001&&1!==i&&(--i,this._children.splice(c--,1)))}if(u>.999&&a.looping!==!1){s.weight=1,this._children.splice(c+1);break}s.weight=u}if(!l)return!1;var d=this._children.length-1;a=this._children[d].node;var p=this._rootJointDeltaPosition,m=this._pose;for(m.copyFrom(a._pose),e&&p.copyFrom(a._rootJointDeltaPosition),c=d-1;c>=0;--c)s=this._children[c],a=s.node,e&&p.lerp(p,a._rootJointDeltaPosition,s.weight),m.interpolate(m,a._pose,s.weight);return!0},ii.prototype._queryChildren=function(t){return null},Re.create(_i,{speed:{get:function(){return this._speed},set:function(t){this._speed=t,this._maxAcceleration=t,this._maxVelocity=t}},shiftMultiplier:{get:function(){return this._speedMultiplier},set:function(t){this._speedMultiplier=t}},pitch:{get:function(){return this._pitch},set:function(t){this._pitch=t}},yaw:{get:function(){return this._yaw},set:function(t){this._yaw=t}},friction:{get:function(){return this._friction},set:function(t){this._friction=t}}}),_i.prototype.onAdded=function(t){var e=this;this._onKeyDown=function(t){var i="which"in t?t.which:t.keyCode;switch(i){case 16:e._maxVelocity=e._speed*e._speedMultiplier,
e._maxAcceleration=e._speed*e._speedMultiplier;break;case 87:e._setForwardForce(1);break;case 83:e._setForwardForce(-1);break;case 65:e._setStrideForce(-1);break;case 68:e._setStrideForce(1)}},this._onKeyUp=function(t){var i="which"in t?t.which:t.keyCode;switch(i){case 16:e._maxVelocity=e._speed,e._maxAcceleration=e._speed;break;case 87:case 83:e._setForwardForce(0);break;case 65:case 68:e._setStrideForce(0)}},this._onMouseMove=function(t){t=t||window.event,e._addPitch((e._mouseY-t.clientY)/100),e._addYaw(-(e._mouseX-t.clientX)/100),e._mouseX=t.clientX,e._mouseY=t.clientY},this._onMouseDown=function(t){e._mouseX=t.clientX,e._mouseY=t.clientY,On.TARGET_CANVAS.addEventListener("mousemove",e._onMouseMove)},this._onMouseUp=function(t){On.TARGET_CANVAS.removeEventListener("mousemove",e._onMouseMove)},document.addEventListener("keydown",this._onKeyDown),document.addEventListener("keyup",this._onKeyUp),On.TARGET_CANVAS.addEventListener("mousedown",this._onMouseDown),On.TARGET_CANVAS.addEventListener("mouseup",this._onMouseUp)},_i.prototype.onRemoved=function(t){document.removeEventListener("keydown",this._onKeyDown),document.removeEventListener("keyup",this._onKeyUp),On.TARGET_CANVAS.removeEventListener("mousemove",this._onMouseMove),On.TARGET_CANVAS.removeEventListener("mousedown",this._onMouseDown),On.TARGET_CANVAS.removeEventListener("mouseup",this._onMouseUp)},_i.prototype.onUpdate=function(t){var e=.001*t,i=h.scale(this._localVelocity,this._friction*e);this._localVelocity.subtract(i);var n=h.scale(this._localAcceleration,this._maxAcceleration*e);this._localVelocity.add(n);var r=this._localVelocity.length;r>this._maxVelocity&&this._localVelocity.scale(this._maxVelocity/r),this._pitch<.5*-Math.PI?this._pitch=.5*-Math.PI:this._pitch>.5*Math.PI&&(this._pitch=.5*Math.PI);var o=this.entity.matrix,s=o.getColumn(3),a=h.scale(this._localVelocity,e);o.fromRotationPitchYawRoll(this._pitch,this._yaw,0),o.prependTranslation(a),o.appendTranslation(s),this.entity.matrix=o},_i.prototype._setForwardForce=function(t){this._localAcceleration.y=t*this._maxAcceleration},_i.prototype._setStrideForce=function(t){this._localAcceleration.x=t*this._maxAcceleration},_i.prototype._addPitch=function(t){this._pitch+=t},_i.prototype._addYaw=function(t){this._yaw+=t},Re.create(li,{radius:{get:function(){return this._coords.z},set:function(t){this._coords.z=t}},azimuth:{get:function(){return this._coords.x},set:function(t){this._coords.x=t}},polar:{get:function(){return this._coords.y},set:function(t){this._coords.y=t}}}),li.prototype.onAdded=function(){var t=this;this._onMouseWheel=function(e){var i=e.detail?-120*e.detail:e.wheelDelta;t.setZoomImpulse(-i*t.zoomSpeed*1e-4)},this._onMouseDown=function(e){t._oldMouseX=void 0,t._oldMouseY=void 0,t._isDown=!0},this._onMouseMove=function(e){t._isDown&&t._updateMove(e.screenX,e.screenY)},this._onTouchDown=function(e){if(t._oldMouseX=void 0,t._oldMouseY=void 0,2===e.touches.length){var i=e.touches[0],n=e.touches[1],r=i.screenX-n.screenX,o=i.screenY-n.screenY;t._startPitchDistance=Math.sqrt(r*r+o*o),t._startZoom=t.radius}t._isDown=!0},this._onTouchMove=function(e){if(e.preventDefault(),t._isDown){var i=e.touches.length;if(1===i){var n=e.touches[0];t._updateMove(n.screenX,n.screenY)}else if(2===i){var r=e.touches[0],o=e.touches[1],s=r.screenX-o.screenX,a=r.screenY-o.screenY,h=Math.sqrt(s*s+a*a),_=t._startPitchDistance-h;t.radius=t._startZoom+_*t.touchZoomSpeed}}},this._onUp=function(e){t._isDown=!1};var e=/Firefox/i.test(navigator.userAgent)?"DOMMouseScroll":"mousewheel";On.TARGET_CANVAS.addEventListener(e,this._onMouseWheel),On.TARGET_CANVAS.addEventListener("mousemove",this._onMouseMove),On.TARGET_CANVAS.addEventListener("touchmove",this._onTouchMove),On.TARGET_CANVAS.addEventListener("mousedown",this._onMouseDown),On.TARGET_CANVAS.addEventListener("touchstart",this._onTouchDown),On.TARGET_CANVAS.addEventListener("mouseup",this._onUp),On.TARGET_CANVAS.addEventListener("touchend",this._onUp)},li.prototype.onRemoved=function(){var t=/Firefox/i.test(navigator.userAgent)?"DOMMouseScroll":"mousewheel";On.TARGET_CANVAS.removeEventListener(t,this._onMouseWheel),On.TARGET_CANVAS.removeEventListener("mousemove",this._onMouseMove),On.TARGET_CANVAS.removeEventListener("touchmove",this._onTouchMove),On.TARGET_CANVAS.removeEventListener("mousedown",this._onMouseDown),On.TARGET_CANVAS.removeEventListener("touchstart",this._onTouchDown),On.TARGET_CANVAS.removeEventListener("mouseup",this._onUp),On.TARGET_CANVAS.removeEventListener("touchend",this._onUp)},li.prototype.onUpdate=function(t){this._localVelocity.x*=this.dampen,this._localVelocity.y*=this.dampen,this._localVelocity.z*=this.dampen,this._localVelocity.x+=this._localAcceleration.x,this._localVelocity.y+=this._localAcceleration.y,this._localVelocity.z+=this._localAcceleration.z,this._localAcceleration.x=0,this._localAcceleration.y=0,this._localAcceleration.z=0,this._coords.add(this._localVelocity),this._coords.y=yn.clamp(this._coords.y,.1,Math.PI-.1),this._coords.z=yn.clamp(this._coords.z,this.minRadius,this.maxRadius);var e=this.entity.matrix,i=new h;i.fromSphericalCoordinates(this._coords.z,this._coords.x,this._coords.y),i.w=0,i.add(this.lookAtTarget),e.lookAt(this.lookAtTarget,i),this.entity.matrix=e},li.prototype.setAzimuthImpulse=function(t){this._localAcceleration.x=t},li.prototype.setPolarImpulse=function(t){this._localAcceleration.y=t},li.prototype.setZoomImpulse=function(t){this._localAcceleration.z=t},li.prototype._updateMove=function(t,e){if(void 0!==this._oldMouseX){var i=this._oldMouseX-t,n=this._oldMouseY-e;this.setAzimuthImpulse(.0015*i),this.setPolarImpulse(.0015*n)}this._oldMouseX=t,this._oldMouseY=e},ci.LITTLE_ENDIAN=!0,ci.BIG_ENDIAN=!1,ci.prototype={get offset(){return this._offset},set offset(t){this._offset=t},get endian(){return this._endian},set endian(t){this._endian=t},get byteLength(){return this._dataView.byteLength},get bytesAvailable(){return this._dataView.byteLength-this._offset},getChar:function(){return String.fromCharCode(this.getUint8())},getUint8:function(){return this._dataView.getUint8(this._offset++)},getUint16:function(){var t=this._dataView.getUint16(this._offset,this._endian);return this._offset+=2,t},getUint32:function(){var t=this._dataView.getUint32(this._offset,this._endian);return this._offset+=4,t},getInt8:function(){return this._dataView.getInt8(this._offset++)},getInt16:function(){var t=this._dataView.getInt16(this._offset,this._endian);return this._offset+=2,t},getInt32:function(){var t=this._dataView.getInt32(this._offset,this._endian);return this._offset+=4,t},getInt64AsFloat64:function(){var t,e;return this._endian===ci.LITTLE_ENDIAN?(t=this._dataView.getUint32(this._offset,this._endian),e=this._dataView.getInt32(this._offset+4,this._endian)):(e=this._dataView.getInt32(this._offset,this._endian),t=this._dataView.getUint32(this._offset+4,this._endian)),this._offset+=8,t+4294967296*e},getFloat32:function(){var t=this._dataView.getFloat32(this._offset,this._endian);return this._offset+=4,t},getFloat64:function(){var t=this._dataView.getFloat64(this._offset,this._endian);return this._offset+=8,t},getUint8Array:function(t){return this._readArray(t,Uint8Array,this.getUint8)},getUint16Array:function(t){return this._readArray(t,Uint16Array,this.getUint16)},getUint32Array:function(t){return this._readArray(t,Uint32Array,this.getUint32)},getInt8Array:function(t){return this._readArray(t,Int8Array,this.getInt8)},getInt16Array:function(t){return this._readArray(t,Int16Array,this.getInt16)},getInt32Array:function(t){return this._readArray(t,Int32Array,this.getInt32)},getInt64AsFloat64Array:function(t){return this._readArray(t,Float64Array,this.getInt64AsFloat64)},getFloat32Array:function(t){return this._readArray(t,Float32Array,this.getFloat32)},getFloat64Array:function(t){return this._readArray(t,Float64Array,this.getFloat64)},getString:function(t){if(!t)return this._get0String();for(var e="",i=0;i<t;++i)e+=this.getChar();return e},_get0String:function(){var t="";do{var e=this.getUint8();e&&(t+=String.fromCharCode(e))}while(0!==e);return t},_readArray:function(t,e,i){for(var n=new e(t),r=0;r<t;++r)n[r]=i.call(this);return n}},ui.prototype=Object.create(st.prototype),ui.prototype.setMesh=function(t){this._mesh!==t&&(this._mesh=t,this._vertexLayout=new Pt(this._mesh,this))},ui.prototype.updateRenderState=function(t){var e=t._camera;this.updateInstanceRenderState(e),this.updatePassRenderState(e,t),this._mesh._vertexBuffers[0].bind(),this._mesh._indexBuffer.bind();for(var i=this._vertexLayout,n=i.attributes,r=n.length,o=0;o<r;++o){var s=n[o];vn.gl.vertexAttribPointer(s.index,s.numComponents,vn.gl.FLOAT,!1,s.stride,s.offset)}vn.enableAttributes(i._numAttributes)},fi.prototype=Object.create(ui.prototype),fi.prototype._initWeights=function(t){this._weights=[];for(var e=vt.fromRadius(t,.01),i=0,n=0;n<=t;++n)this._weights[n]=e.getValueAt(n),i+=n>0?2*this._weights[n]:1;for(i=1/i,n=0;n<=t;++n)this._weights[n]*=i},Re.create(di,{needsNormalDepth:{get:function(){return this._needsNormalDepth},set:function(t){this._needsNormalDepth=t}},hdrTarget:{get:function(){return this._renderer._hdrFront.fbo}},hdrSource:{get:function(){return this._renderer._hdrBack.texture}}}),di.prototype.isSupported=function(){return this._isSupported},di.prototype.render=function(t,e){this._renderer=t,this.draw(e)},di.prototype.draw=function(t){throw new Error("Abstract method error!")},di.prototype._drawPass=function(t){t.updateRenderState(this._renderer),vn.drawElements(vn.gl.TRIANGLES,6,0)},di.prototype.onAdded=function(){this._entity._registerEffect(this)},di.prototype.onRemoved=function(){this._entity._unregisterEffect(this)},di.prototype._swapHDRFrontAndBack=function(){this._renderer._swapHDRFrontAndBack()},pi.prototype=Object.create(di.prototype,{strength:{get:function(){return this._strength},set:function(t){this._strength=t,this._compositePass.setUniform("strength",this._strength)}},thresholdLuminance:{get:function(){return this._thresholdLuminance},set:function(t){this._thresholdLuminance=t,this._thresholdPass.setUniform("threshold",t)}}}),pi.prototype._initTextures=function(){for(var t=0;t<2;++t)this._thresholdWidth=Math.ceil(this._targetWidth/this._downScale),this._thresholdHeight=Math.ceil(this._targetHeight/this._downScale),this._thresholdMaps[t].initEmpty(this._thresholdWidth,this._thresholdHeight,Zn.RGB,Un.HDR_FORMAT),this._smallFBOs[t].init()},pi.prototype.draw=function(t){this._renderer._width===this._targetWidth&&this._renderer._height===this._targetHeight||(this._targetWidth=this._renderer._width,this._targetHeight=this._renderer._height,this._initTextures()),vn.setRenderTarget(this._smallFBOs[0]),vn.clear(),this._drawPass(this._thresholdPass),vn.setRenderTarget(this._smallFBOs[1]),vn.clear(),this._blurSourceSlot.texture=this._thresholdMaps[0],this._blurPass.setUniform("stepSize",{x:1/this._thresholdWidth,y:0}),this._drawPass(this._blurPass),vn.setRenderTarget(this._smallFBOs[0]),vn.clear(),this._blurSourceSlot.texture=this._thresholdMaps[1],this._blurPass.setUniform("stepSize",{x:0,y:this._anisotropy/this._thresholdHeight}),this._drawPass(this._blurPass),vn.setRenderTarget(this.hdrTarget),vn.clear(),this._drawPass(this._compositePass)},mi.prototype=Object.create(di.prototype,{radius:{get:function(){return this._radius},set:function(t){this._radius=t}}}),mi.prototype.draw=function(t){var e=this._radius/this._numSamples;vn.setRenderTarget(this.hdrTarget),vn.clear(),this._blurSourceSlot.texture=this.hdrSource,this._blurPass.setUniform("stepSize",{x:e/this.hdrSource.width,y:0}),this._drawPass(this._blurPass),this._swapHDRFrontAndBack(),vn.setRenderTarget(this.hdrTarget),vn.clear(),this._blurSourceSlot.texture=this.hdrSource,this._blurPass.setUniform("stepSize",{x:0,y:e/this.hdrSource.height}),this._drawPass(this._blurPass)},gi.prototype=Object.create(ui.prototype),gi.prototype.setSourceTexture=function(t){this.setTexture("sampler",t)},xi.prototype=Object.create(di.prototype,{exposure:{get:function(){return this._exposure},set:function(t){this._exposure=t,this._isSupported&&this._toneMapPass.setUniform("hx_exposure",Math.pow(2,t))}},key:{get:function(){return this._key},set:function(t){this._key=t,this._isSupported&&this._toneMapPass.setUniform("hx_key",t)}},adaptationRate:{get:function(){return this._adaptationRate},set:function(t){this._adaptationRate=t}}}),xi.prototype._createToneMapPass=function(){throw new Error("Abstract method called!")},xi.prototype.draw=function(t){if(this._adaptive){var e=this._adaptationRate>0?t/this._adaptationRate:1;e>1&&(e=1),this._extractLuminancePass.blendState.color.a=e,vn.setRenderTarget(this._luminanceFBO),this._drawPass(this._extractLuminancePass),this._luminanceMap.generateMipmap()}vn.setRenderTarget(this.hdrTarget),vn.clear(),this._drawPass(this._toneMapPass)},vi.prototype=Object.create(xi.prototype),vi.prototype._createToneMapPass=function(){var t={},e="";return this._adaptive&&(t.HX_ADAPTIVE=1,e="#texturelod\n"),new ui(null,e+on.get("snippets_tonemap.glsl",t)+"\n"+on.get("tonemap_filmic_fragment.glsl"))},Si.prototype=Object.create(xi.prototype),Si.prototype._createToneMapPass=function(){var t={HX_ACES:1},e="";return this._adaptive&&(t.HX_ADAPTIVE=1,e="#texturelod\n"),new ui(null,e+on.get("snippets_tonemap.glsl",t)+"\n"+on.get("tonemap_filmic_fragment.glsl"))},Ti.prototype=Object.create(di.prototype,{density:{get:function(){return this._density},set:function(t){this._density=t,this._fogPass.setUniform("density",t)}},tint:{get:function(){return this._tint},set:function(t){this._tint.copyFrom(t),On.OPTIONS.useGammaCorrection&&this._tint.gammaToLinear(),this._fogPass.setUniform("tint",{x:t.r,y:t.g,z:t.b})}},startDistance:{get:function(){return this._startDistance},set:function(t){this._startDistance=t,this._fogPass.setUniform("startDistance",t)}},heightFallOff:{get:function(){return this._heightFallOff},set:function(t){this._heightFallOff=t,this._fogPass.setUniform("heightFallOff",t)}}}),Ti.prototype.draw=function(t){vn.setRenderTarget(this.hdrTarget),vn.clear(),this._drawPass(this._fogPass)},Ei.prototype=Object.create(di.prototype),Ei.prototype.draw=function(t){vn.setRenderTarget(this.hdrTarget),vn.clear(),this._drawPass(this._pass)},yi.prototype=Object.create(di.prototype,{sampleRadius:{get:function(){return this._radius},set:function(t){this._radius=t,this._aoPass&&this._aoPass.setUniform("halfSampleRadius",.5*this._radius)}},fallOffDistance:{get:function(){return this._fallOffDistance},set:function(t){this._fallOffDistance=t,this._aoPass&&this._aoPass.setUniform("rcpFallOffDistance",1/this._fallOffDistance)}},strength:{get:function(){return this._strength},set:function(t){this._strength=t,this._aoPass&&this._aoPass.setUniform("strengthPerRay",this._strength/this._numRays)}},bias:{get:function(){return this._bias},set:function(t){this._bias=t,this._aoPass&&this._aoPass.setUniform("bias",this._bias)}},scale:{get:function(){return this._scale},set:function(t){this._scale=t}}}),yi.prototype.init=function(){this._aoPass=new ui(on.get("hbao_vertex.glsl"),on.get("hbao_fragment.glsl",{NUM_RAYS:this._numRays,NUM_SAMPLES_PER_RAY:this._numSamplesPerRay})),this._blurPass=new ui(on.get("ao_blur_vertex.glsl"),on.get("ao_blur_fragment.glsl")),this._initSampleDirTexture(),this._initDitherTexture(),this._aoPass.setUniform("strengthPerRay",this._strength/this._numRays),this._aoPass.setUniform("rcpFallOffDistance",1/this._fallOffDistance),this._aoPass.setUniform("halfSampleRadius",.5*this._radius),this._aoPass.setUniform("bias",this._bias),this._aoPass.setTexture("ditherTexture",this._ditherTexture),this._aoPass.setTexture("sampleDirTexture",this._sampleDirTexture),this._sourceTextureSlot=this._blurPass.getTextureSlot("source"),this._aoTexture=new Y,this._aoTexture.filter=Hn.BILINEAR_NOMIP,this._aoTexture.wrapMode=Xn.CLAMP,this._backTexture=new Y,this._backTexture.filter=Hn.BILINEAR_NOMIP,this._backTexture.wrapMode=Xn.CLAMP,this._fbo1=new q(this._backTexture),this._fbo2=new q(this._aoTexture)},yi.prototype.getAOTexture=function(){return this._aoTexture},yi.prototype.draw=function(t){var e=this._renderer._width*this._scale,i=this._renderer._height*this._scale;Ln.assureSize(e,i,this._aoTexture,this._fbo2)&&(Ln.assureSize(e,i,this._backTexture,this._fbo1),this._aoPass.setUniform("ditherScale",{x:.25*e,y:.25*i})),vn.setClearColor(n.WHITE),vn.setRenderTarget(this._fbo1),vn.clear(),this._drawPass(this._aoPass),vn.setRenderTarget(this._fbo2),vn.clear(),this._blurPass.setUniform("pixelSize",{x:1/e,y:1/i}),this._sourceTextureSlot.texture=this._backTexture,this._drawPass(this._blurPass),vn.setClearColor(n.BLACK)},yi.prototype._initSampleDirTexture=function(){this._sampleDirTexture=new Y;for(var t=[],e=0,i=0;i<256;++i){var n=i/256*2*Math.PI,r=.5*Math.cos(n)+.5,o=.5*Math.sin(n)+.5;t[e]=Math.round(255*r),t[e+1]=Math.round(255*o),t[e+2]=0,t[e+3]=255,e+=4}this._sampleDirTexture.uploadData(new Uint8Array(t),256,1,!1),this._sampleDirTexture.filter=Hn.NEAREST_NOMIP,this._sampleDirTexture.wrapMode=Xn.REPEAT},yi.prototype._initDitherTexture=function(){this._ditherTexture=new Y;var t,e=[],i=0,n=[],r=[];for(t=0;t<16;++t)n.push(t/16),r.push(t/15);sn.shuffle(n),sn.shuffle(r),t=0;for(var o=0;o<4;++o)for(var s=0;s<4;++s){var a=n[t],h=r[t];++t,e[i]=Math.round(255*a),e[i+1]=Math.round(255*h),e[i+2]=0,e[i+3]=255,i+=4}this._ditherTexture.uploadData(new Uint8Array(e),4,4,!1),this._ditherTexture.filter=Hn.NEAREST_NOMIP,this._ditherTexture.wrapMode=Xn.REPEAT},wi.prototype=Object.create(di.prototype,{sampleRadius:{get:function(){return this._radius},set:function(t){this._radius=t,this._ssaoPass&&this._ssaoPass.setUniform("sampleRadius",this._radius)}},fallOffDistance:{get:function(){return this._fallOffDistance},set:function(t){this._fallOffDistance=t,this._ssaoPass&&this._ssaoPass.setUniform("rcpFallOffDistance",1/this._fallOffDistance)}},strength:{get:function(){return this._strength},set:function(t){this._strength=t,this._ssaoPass&&this._ssaoPass.setUniform("strengthPerSample",2*this._strength/this._numSamples)}},scale:{get:function(){return this._scale},set:function(t){this._scale=t}}}),wi.prototype.init=function(){this._ssaoPass=new ui(null,on.get("ssao_fragment.glsl",{NUM_SAMPLES:this._numSamples})),this._blurPass=new ui(on.get("ao_blur_vertex.glsl"),on.get("ao_blur_fragment.glsl")),this._initSamples(),this._initDitherTexture(),this._ssaoPass.setUniform("strengthPerSample",2*this._strength/this._numSamples),this._ssaoPass.setUniform("rcpFallOffDistance",1/this._fallOffDistance),this._ssaoPass.setUniform("sampleRadius",this._radius),this._ssaoPass.setTexture("ditherTexture",this._ditherTexture),this._sourceTextureSlot=this._blurPass.getTextureSlot("source"),this._ssaoTexture=new Y,this._ssaoTexture.filter=Hn.BILINEAR_NOMIP,this._ssaoTexture.wrapMode=Xn.CLAMP,this._backTexture=new Y,this._backTexture.filter=Hn.BILINEAR_NOMIP,this._backTexture.wrapMode=Xn.CLAMP,this._fbo1=new q(this._backTexture),this._fbo2=new q(this._ssaoTexture)},wi.prototype.getAOTexture=function(){return this._ssaoTexture},wi.prototype._initSamples=function(){for(var t=[],e=0,i=_.DEFAULT.getPoints(),n=0;n<this._numSamples;++n){var r=i[n];t[e++]=Math.pow(r.x,2),t[e++]=Math.pow(r.y,2),t[e++]=Math.pow(r.z,2)}this._ssaoPass.setUniformArray("samples",new Float32Array(t))},wi.prototype.draw=function(t){var e=this._renderer._width*this._scale,i=this._renderer._height*this._scale;Ln.assureSize(e,i,this._ssaoTexture,this._fbo2)&&(Ln.assureSize(e,i,this._backTexture,this._fbo1),this._ssaoPass.setUniform("ditherScale",{x:.25*e,y:.25*i})),vn.setClearColor(n.WHITE),vn.setRenderTarget(this._fbo1),vn.clear(),this._drawPass(this._ssaoPass),vn.setRenderTarget(this._fbo2),vn.clear(),this._blurPass.setUniform("pixelSize",{x:1/e,y:1/i}),this._sourceTextureSlot.texture=this._backTexture,this._drawPass(this._blurPass),vn.setClearColor(n.BLACK)},wi.prototype._initDitherTexture=function(){var t=[126,255,126,255,135,253,105,255,116,51,26,255,137,57,233,255,139,254,121,255,56,61,210,255,227,185,73,255,191,179,30,255,107,245,173,255,205,89,34,255,191,238,138,255,56,233,125,255,198,228,161,255,85,13,164,255,140,248,168,255,147,237,65,255];this._ditherTexture=new Y,this._ditherTexture.uploadData(new Uint8Array(t),4,4,!1),this._ditherTexture.filter=Hn.NEAREST_NOMIP,this._ditherTexture.wrapMode=Xn.REPEAT},Ai.prototype=Object.create(xi.prototype),Ai.prototype._createToneMapPass=function(){var t={},e="";return this._adaptive&&(t.HX_ADAPTIVE=1,e+="#texturelod\n"),new ui(null,e+on.get("snippets_tonemap.glsl",t)+"\n"+on.get("tonemap_reinhard_fragment.glsl"))};var nr={extractPathAndFilename:function(t){var e=t.lastIndexOf("/"),i={};return e>=0?(i.path=t.substr(0,e+1),i.filename=t.substr(e+1)):(i.path="./",i.filename=t),i}};Mi.ERROR_TIME_OUT=408,Mi.METHOD_GET="get",Mi.METHOD_POST="post",Mi.DATA_TEXT=0,Mi.DATA_BINARY=1,Mi.prototype={get type(){return this._type},set type(t){this._type=t},get method(){return this._method},set method(t){this._method=t},get timeoutDuration(){return this._timeout},set timeoutDuration(t){this._timeout=t},get parameters(){return this._params},set parameters(t){this._params=t},get data(){return this._data},setRequestHeader:function(t,e){this._headers[t]=e},load:function(t){var e=new XMLHttpRequest;e.open(this._method,t,!0);for(var i in this._headers)this._headers.hasOwnProperty(i)&&e.setRequestHeader(i,this._headers[i]);this._timeout&&(e.timeout=this._timeout,e.ontimeout=function(){n.onError(Mi.ERROR_TIME_OUT)}),this._type===Mi.DATA_BINARY?e.responseType="arraybuffer":e.overrideMimeType("application/json");var n=this;e.onreadystatechange=function(){var t=this.DONE||4;this.readyState===t&&(200===this.status?(this._data=n._type===Mi.DATA_TEXT?e.responseText:new DataView(e.response),n.onComplete&&n.onComplete(this._data)):n.onError&&n.onError(this.status))},e.send(this._params)},onComplete:function(t){},onError:function(t){}},Pi.prototype={get dataType(){return this._dataType},createContainer:function(){return new this._containerType},parse:function(t,e){},_notifyComplete:function(t){this.onComplete&&(this.onComplete instanceof e?this.onComplete.dispatch(t):this.onComplete(t))},_notifyProgress:function(t){this.onProgress&&(this.onProgress instanceof e?this.onProgress.dispatch(t):this.onProgress(t))},_notifyFailure:function(t){this.onFail instanceof e?(this.onFail.hasListeners||console.error(t),this.onFail.dispatch(t)):this.onFail(t)},_correctURL:function(t){return this.path+(this.fileMap.hasOwnProperty(t)?this.fileMap[t]:t).replace("\\","/")}},Pi.TYPE_TEXT=Mi.DATA_TEXT,Pi.TYPE_BINARY=Mi.DATA_BINARY,Pi.TYPE_IMAGE=2,bi.prototype={setRequestHeader:function(t,e){this._headers[t]=e},load:function(t,i){function n(i){console.warn("Failed loading "+t+". Error code: "+i),this.onFail&&(this.onFail instanceof e?this.onFail.dispatch(i):this.onFail(i))}var r=new this._importerType;i=i||r.createContainer(),r.onComplete=this.onComplete,r.onProgress=this.onProgress,r.onFail=this.onFail,r.fileMap=this.fileMap,r.options=this.options;var o=nr.extractPathAndFilename(t);if(r.path=o.path,r.filename=o.filename,r.dataType===Pi.TYPE_IMAGE){var s=document.createElementNS("http://www.w3.org/1999/xhtml","img");s.crossOrigin=this.options.crossOrigin,s.addEventListener("load",function(){r.parse(s,i)}),s.addEventListener("error",function(){console.warn("Failed loading texture '"+t+"'"),n.call(this)}),s.src=t}else{var a=this,h=new Mi(this._headers);h.type=r.dataType,h.onComplete=function(t){r.parse(t,i)},h.onError=function(t){n.call(a,t)},h.load(t)}return i}},Li.Type={JSON:0,ASSET:1,PLAIN_TEXT:2,RAW_BINARY:3},Li.prototype={get onComplete(){return this._onComplete},get onProgress(){return this._onProgress},get basePath(){return this._basePath},get crossOrigin(){return this._crossOrigin},queueAsset:function(t,e,i,n,r,o){this._queue.push({id:t,filename:this._basePath+e,type:i,parser:n,options:r,target:o})},load:function(){if(0===this._queue.length)return void this.onComplete.dispatch();var t=this._queue[this._numLoaded];switch(t.type){case Li.Type.JSON:this._json(t.filename,t.id);break;case Li.Type.PLAIN_TEXT:this._plainText(t.filename,t.id);break;case Li.Type.RAW_BINARY:this._rawBinary(t.filename,t.id);break;case Li.Type.ASSET:this._asset(t.filename,t.id,t.parser,t.options,t.target);break;default:throw new Error("Unknown asset type "+t.type+"!")}},get:function(t){return this._assets[t]},addAsset:function(t,e){this._assets[t]=e},mergeLibrary:function(t){sn.forEach(t._assets,function(t,e){this.addAsset(e,t)}.bind(this))},_json:function(t,e){var i=this,n=new XMLHttpRequest;n.overrideMimeType("application/json"),n.open("GET",t,!0),n.onreadystatechange=function(){4===n.readyState&&200===n.status&&(i._assets[e]=JSON.parse(n.responseText),i._onAssetLoaded())},n.send(null)},_plainText:function(t,e){var i=this,n=new XMLHttpRequest;n.overrideMimeType("application/json"),n.open("GET",t,!0),n.onreadystatechange=function(){4===n.readyState&&200===n.status&&(i._assets[e]=n.responseText,i._onAssetLoaded())},n.send(null)},_rawBinary:function(t,e){var i=this,n=new Mi;n.type=Mi.DATA_BINARY,n.onComplete=function(t){i._assets[e]=t,i._onAssetLoaded()},n.load(t)},_asset:function(t,e,i,n,r){var o=new bi(i);o.fileMap=this.fileMap,o.options=n||{},o.options.crossOrigin=this._crossOrigin,o.onComplete.bind(function(){this._onAssetLoaded()},this),o.onProgress.bind(function(t){this._onProgress.dispatch((this._numLoaded+t)/this._queue.length)},this),this._assets[e]=o.load(t,r)},_onAssetLoaded:function(){++this._numLoaded,this._onProgress.dispatch(this._numLoaded/this._queue.length),this._numLoaded===this._queue.length?this._onComplete.dispatch(this):this.load()}},Ri.prototype=Object.create(Pi.prototype),Ri.VERSION="0.1.0",Ri.VALUE_TYPE_SKELETON_POSE=1,Ri.VALUE_TYPE_NUMBER=2,Ri.VALUE_TYPE_FLOAT3=3,Ri.VALUE_TYPE_QUATERNION=4,Ri.prototype.parse=function(t,e){var i=new ci(t),n=i.getString(7);if("HX_CLIP"!==n)throw new Error("Invalid file hash!");for(var r=(i.getUint16Array(3).join("."),i.getUint8()),o=i.getUint32(),s=i.getUint8(),a=0;a<o;++a){var h=new HX.KeyFrame;h.time=i.getUint32(),h.value=this._readValue(i,r,s),e.addKeyFrame(h)}this._notifyComplete(e)},Ri.prototype._readValue=function(t,e,i){if(e===Ri.VALUE_TYPE_SKELETON_POSE){for(var n=i,r=new Ct,o=0;o<n;++o){var s=new Nt;s.position.set(t.getFloat32(),t.getFloat32(),t.getFloat32()),s.rotation.set(t.getFloat32(),t.getFloat32(),t.getFloat32(),t.getFloat32()),s.scale.set(t.getFloat32(),t.getFloat32(),t.getFloat32()),r.setJointPose(o,s)}return r}return e===AnimationClipExporter.VALUE_TYPE_FLOAT3?new HX.Float4(t.getFloat32(),t.getFloat32(),t.getFloat32(),0):e===AnimationClipExporter.VALUE_TYPE_QUATERNION?new HX.Quaternion(t.getFloat32(),t.getFloat32(),t.getFloat32(),t.getFloat32()):e===AnimationClipExporter.VALUE_TYPE_NUMBER?t.getFloat32():void 0},Oi.prototype=Object.create(Pi.prototype),Oi.prototype.parse=function(t,e){var i=JSON.parse(t),n=[i.files.posX,i.files.negX,i.files.posY,i.files.negY,i.files.posZ,i.files.negZ];i.loadMips?this._loadMipChain(n,e):this._loadFaces(n,e)},Oi.prototype._loadFaces=function(t,e){for(var i=void 0===this.options.generateMipmaps||this.options.generateMipmaps,n=[],r=this,o=function(){r._notifyFailure("Failed loading texture '"+t[0]+"'")},s=function(){r._notifyProgress(this.nextID/6),n[this.nextID].src=r.path+t[this.nextID]},a=function(){e.uploadImages(n,i),r._notifyComplete(e)},h=0;h<6;++h){var _=document.createElementNS("http://www.w3.org/1999/xhtml","img");_.crossOrigin=this.options.crossOrigin,_.nextID=h+1,h<5?_.addEventListener("load",s):_.addEventListener("load",a),_.addEventListener("error",o),n[h]=_}n[0].src=r.path+t[0]},Oi.prototype._loadMipChain=function(t,e){function i(){for(var i=[],s=6*n,h=1,_=0,l=1;l<n;++l){for(var c=0;c<6;++c)a.push(t[c].replace("%m",l.toString())),i.push(h),_+=h;h*=.5}var u=function(){o._notifyFailure("Failed loading texture")},f=function(){o._notifyProgress(i[this.nextID]/_),r[this.nextID].src=o.path+a[this.nextID]},d=function(){for(var t=0;t<n;++t)e.uploadImagesToMipLevel(r.slice(6*t,6*t+6),t);e._isReady=!0,o._notifyComplete(e)};for(l=1;l<s;++l){var p=document.createElementNS("http://www.w3.org/1999/xhtml","img");p.crossOrigin=o.options.crossOrigin,p.nextID=l+1,l<s-1?p.addEventListener("load",f):p.addEventListener("load",d),p.addEventListener("onError",u),r[l]=p}r[1].src=o.path+a[1]}for(var n,r=[],o=this,s=document.createElementNS("http://www.w3.org/1999/xhtml","img"),a=[],h=0;h<6;++h)a[h]=t[h].replace("%m","0");s.addEventListener("load",function(){s.naturalWidth===s.naturalHeight&&yn.isPowerOfTwo(s.naturalWidth)?(n=yn.log2(s.naturalWidth)+1,i(),r[0]=s):o._notifyFailure("Failed loading mipchain: incorrect dimensions")}),s.addEventListener("error",function(){o._notifyFailure("Failed loading texture")}),s.src=o.path+a[0]},Di.prototype=Object.create(Pi.prototype),Di.prototype.parse=function(t,e){var i=void 0===this.options.generateMipmaps||this.options.generateMipmaps;e.uploadImage(t,t.naturalWidth,t.naturalHeight,i),this._notifyComplete(e)};var rr=Di;Ii.prototype=Object.create(Pi.prototype),Ii.prototype.parse=function(t,e){t=JSON.parse(t),t["class"]?(this._isClass=!0,this._applyClass(t["class"],e)):this._isClass=!1,this._loadShaders(t,e)},Ii.prototype._applyClass=function(t,e){var i;switch(t){case"BasicMaterial":i=be;break;default:throw new Error("Unknown material class!")}Object.assign(e,i.prototype);for(var n in i.prototype)Object.prototype.hasOwnProperty.call(i.prototype,n)&&(e[n]=i.prototype[n]);for(var r=Object.getOwnPropertyNames(i.prototype),o=0;o<r.length;++o){var s=r[o],a=Object.getOwnPropertyDescriptor(i.prototype,s);Object.defineProperty(e,s,a)}i.call(e)},Ii.prototype._gatherShaderFiles=function(t){var e=[];if(!this._isClass){var i=t.geometry,n=i.vertexShader,r=i.fragmentShader;e.indexOf(n)<0&&e.push(this._correctURL(n)),e.indexOf(r)<0&&e.push(this._correctURL(r))}var o=t.lightingModel;return o&&e.indexOf(o)<0&&e.push(this._correctURL(o)),e},Ii.prototype._loadShaders=function(t,e){var i=this._gatherShaderFiles(t);this._shaderLibrary=new Li(null,this.options.crossOrigin),this._shaderLibrary.fileMap=this.fileMap;for(var n=0;n<i.length;++n)this._shaderLibrary.queueAsset(i[n],i[n],Li.Type.PLAIN_TEXT);this._shaderLibrary.onComplete.bind(function(){this._processMaterial(t,e),this._loadTextures(t,e)},this),this._shaderLibrary.load()},Ii.prototype._processMaterial=function(t,e){var i="";if(!this._isClass){this.options.defines&&sn.forEach(this.options.defines,function(t,e){i+="#define "+e+" "+t+"\n"}.bind(this));var n=i+this._shaderLibrary.get(this._correctURL(t.geometry.vertexShader)),r=i+this._shaderLibrary.get(this._correctURL(t.geometry.fragmentShader));e._geometryVertexShader=n,e._geometryFragmentShader=r,e.init()}if(t.lightingModel&&(e.lightingModel=this._shaderLibrary.get(this._correctURL(t.lightingModel))),this._applyUniforms(t,e),this._isClass&&this._applyProperties(t,e),t.hasOwnProperty("elementType")&&(e.elementType=Ii._PROPERTY_MAP[t.elementType]),t.hasOwnProperty("cullMode")&&(e.cullMode=Ii._PROPERTY_MAP[t.cullMode]),t.hasOwnProperty("writeDepth")&&(e.writeDepth=t.writeDepth),t.hasOwnProperty("blend")){var o=new Z,s=t.blend;s.hasOwnProperty("source")&&(o.srcFactor=Ii._PROPERTY_MAP[s.source]),s.hasOwnProperty("destination")&&(o.dstFactor=Ii._PROPERTY_MAP[s.destination]),s.hasOwnProperty("operator")&&(o.operator=Ii._PROPERTY_MAP[s.operator]),e.blendState=o}},Ii.prototype._applyProperties=function(t,e){if(t.properties)for(var i in t.properties)if(t.properties.hasOwnProperty(i)){var r=t.properties[i],o=typeof e[i];if("number"===o||"boolean"===o)e[i]=r;else if(e[i]instanceof n)e[i]=new n(r[0],r[1],r[2],r[3]);else if(e[i]instanceof s)e[i]=new n(r[0],r[1]);else{if(!(e[i]instanceof h))throw new Error("Unsupport property format!");e[i]=new h(r[0],r[1],r[2],r[3])}}},Ii.prototype._applyUniforms=function(t,e){if(t.uniforms)for(var i in t.uniforms)if(t.uniforms.hasOwnProperty(i)){var n=t.uniforms[i];isNaN(n)?e.setUniform(i,{x:n[0],y:n[1],z:n[2],w:n[3]},!1):e.setUniform(i,n,!1)}},Ii.prototype._loadTextures=function(t,e){
var i=[];for(var n in t.textures)t.textures.hasOwnProperty(n)&&(i.push(this._correctURL(t.textures[n])),e.setTexture(n,Y.DEFAULT));this._textureLibrary=new Li(null,this.options.crossOrigin),this._textureLibrary.fileMap=this.fileMap;for(var r=0;r<i.length;++r)this._textureLibrary.queueAsset(i[r],i[r],Li.Type.ASSET,Di);this._textureLibrary.onComplete.bind(function(){for(var i in t.textures)t.textures.hasOwnProperty(i)&&(this._isClass?e[i]=this._textureLibrary.get(this._correctURL(t.textures[i])):e.setTexture(i,this._textureLibrary.get(this._correctURL(t.textures[i]))));this._notifyComplete(e)},this),this._textureLibrary.load()},Ii._PROPERTY_MAP=null,Ii._initPropertyMap=function(){Ii._PROPERTY_MAP=Ii._PROPERTY_MAP||{back:jn.BACK,front:jn.FRONT,both:jn.ALL,none:null,lines:Gn.LINES,points:Gn.POINTS,triangles:Gn.TRIANGLES,one:kn.ONE,zero:kn.ZERO,sourceColor:kn.SOURCE_COLOR,oneMinusSourceColor:kn.ONE_MINUS_SOURCE_COLOR,sourceAlpha:kn.SOURCE_ALPHA,oneMinusSourceAlpha:kn.ONE_MINUS_SOURCE_ALPHA,destinationAlpha:kn.DST_ALPHA,oneMinusDestinationAlpha:kn.ONE_MINUS_DESTINATION_ALPHA,destinationColor:kn.DESTINATION_COLOR,sourceAlphaSaturate:kn.SOURCE_ALPHA_SATURATE,add:Yn.ADD,subtract:Yn.SUBTRACT,reverseSubtract:Yn.REVERSE_SUBTRACT,always:Vn.ALWAYS,disabled:Vn.DISABLED,equal:Vn.EQUAL,greater:Vn.GREATER,greaterEqual:Vn.GREATER_EQUAL,less:Vn.LESS,lessEqual:Vn.LESS_EQUAL,never:Vn.NEVER,notEqual:Vn.NOT_EQUAL}},Ni.prototype=Object.create(Pi.prototype),Ni.VERSION="0.1.0",Ni.prototype.parse=function(t,e){var i=new ci(t),n=i.getString(8);if("HX_MODEL"!==n)throw new Error("Invalid file hash!");for(var r=(i.getUint16Array(3).join("."),i.getUint16()),o=0;o<r;++o){var s=this._parseMesh(i);e.addMesh(s)}e.skeleton=this._parseSkeleton(i),this._notifyComplete(e)},Ni.prototype._parseMesh=function(t){var e,i=new k,n=t.getUint32(),r=t.getUint8();e=16===r?t.getUint16Array(n):t.getUint32Array(n),i.setIndexData(e);for(var o=(t.getUint32(),t.getUint8()),s=0;s<o;++s){var a=t.getUint8(),h=t.getString(a),_=t.getUint8(),l=t.getUint8();i.addVertexAttribute(h,l,_)}var c=t.getUint8();for(s=0;s<c;++s){var u=t.getUint32(),f=t.getFloat32Array(u);i.setVertexData(f,s)}return i},Ni.prototype._parseSkeleton=function(t){var e=t.getUint8();if(0===e)return null;for(var i=new ti,n=0;n<e;++n){var r=new ai,o=t.getUint8();0!==o&&(r.name=t.getString(o));var s=t.getUint8();r.parentIndex=255===s?-1:s;for(var a=0;a<16;++a)r.inverseBindPose._m[a]=t.getFloat32();i.addJoint(r)}return i};var or={toCube:function(t,e,i,n){i=i||!0,e=e||t.height,or._EQUI_TO_CUBE_SHADER||(or._EQUI_TO_CUBE_SHADER=new H(on.get("2d_to_cube_vertex.glsl"),on.get("equirectangular_to_cube_fragment.glsl"))),this._createRenderCubeGeometry();var r=vn.gl;n=n||new W,n.initEmpty(e,t.format,t.dataType);var o=[Jn.POSITIVE_X,Jn.NEGATIVE_X,Jn.POSITIVE_Y,Jn.NEGATIVE_Y,Jn.POSITIVE_Z,Jn.NEGATIVE_Z];or._EQUI_TO_CUBE_SHADER.updatePassRenderState();var s=or._EQUI_TO_CUBE_SHADER.getUniformLocation("source"),a=or._EQUI_TO_CUBE_SHADER.getAttributeLocation("hx_position"),h=or._EQUI_TO_CUBE_SHADER.getAttributeLocation("corner");r.uniform1i(s,0),t.bind(0),or._TO_CUBE_VERTICES.bind(),or._TO_CUBE_INDICES.bind(),r.vertexAttribPointer(a,2,r.FLOAT,!1,20,0),r.vertexAttribPointer(h,3,r.FLOAT,!1,20,8),vn.enableAttributes(2);for(var _=vn.getCurrentRenderTarget(),l=0;l<6;++l){var c=new q(n,null,o[l]);c.init(),vn.setRenderTarget(c),vn.drawElements(r.TRIANGLES,6,6*l)}return vn.setRenderTarget(_),i&&n.generateMipmap(),Un.EXT_SHADER_TEXTURE_LOD||(n.filter=Hn.BILINEAR_NOMIP),n},_createRenderCubeGeometry:function(){if(!or._TO_CUBE_VERTICES){var t=[1,1,1,-1,-1,-1,1,1,-1,1,-1,-1,1,1,1,1,-1,1,1,-1,1,1,-1,-1,1,-1,1,-1,-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,1,1,-1,1,-1,1,-1,-1,1,-1,-1,-1,1,1,1,-1,1,1,1,1,1,-1,-1,-1,-1,1,1,-1,-1,-1,-1,1,1,-1,1,-1,-1,1,-1,-1,-1,-1,1,-1,1,-1,1,1,-1,1,1,1,1,1,-1,1,-1,1,1,-1,-1,-1,-1,1,1,-1,1,-1,1,1,1,1,-1,-1,-1,1,-1,-1,-1],e=[0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,8,10,11,12,13,14,12,14,15,16,17,18,16,18,19,20,21,22,20,22,23];or._TO_CUBE_VERTICES=new G,or._TO_CUBE_INDICES=new V,or._TO_CUBE_VERTICES.uploadData(new Float32Array(t)),or._TO_CUBE_INDICES.uploadData(new Uint16Array(e))}}};Ci.prototype=Object.create(Pi.prototype),Ci.prototype.parse=function(t,e){var i=new Y;i.wrapMode=Xn.REPEAT,i.uploadImage(t,t.naturalWidth,t.naturalHeight,!0);var n=void 0===this.options.generateMipmaps||this.options.generateMipmaps;or.toCube(i,this.options.size,n,e),this._notifyComplete(e)};var sr=Ci,ar={from8BitTexture:function(t,e,i){var n=vn.gl;e=e||!0;var r=i||new Y;r.initEmpty(t.width,t.height);var o=new q(r);o.init();var s=new Y;s.initEmpty(t.width,t.height);var a=new q(s);a.init();var h=new X(on.get("greyscale_to_rgba8.glsl")),_=vn.getCurrentRenderTarget();vn.setRenderTarget(o),vn.clear(),h.execute(bn.DEFAULT,t),e&&i.generateMipmap();var l=new X(on.get("smooth_heightmap_fragment.glsl")),c=n.getUniformLocation(l._program,"reference"),u=n.getUniformLocation(l._program,"stepSize");return n.uniform1i(c,1),t.bind(1),vn.setRenderTarget(a),vn.clear(),n.uniform2f(u,1/t.width,0),l.execute(bn.DEFAULT,r),s.generateMipmap(),vn.setRenderTarget(o),vn.clear(),n.uniform2f(u,0,1/t.height),l.execute(bn.DEFAULT,s),e&&i.generateMipmap(),vn.setRenderTarget(_),r}};Fi.prototype=Object.create(Pi.prototype),Fi.prototype.parse=function(t,e){var i=new Y;i.wrapMode=Xn.REPEAT,i.uploadImage(t,t.naturalWidth,t.naturalHeight,!0);var n=void 0===this.options.generateMipmaps||this.options.generateMipmaps;ar.from8BitTexture(i,n,e),this._notifyComplete(e)};var hr=Fi;Ui.prototype=Object.create(It.prototype,{color:{get:function(){return this._color},set:function(t){this._color=isNaN(t)?t:new n(t),this._updateScaledIrradiance()}},intensity:{get:function(){return this._intensity},set:function(t){this._intensity=t,this._updateScaledIrradiance()}}}),Ui.prototype.acceptVisitor=function(t){It.prototype.acceptVisitor.call(this,t),t.visitAmbientLight(this)},Ui.prototype._updateWorldBounds=function(){this._worldBounds.clear(Tt.EXPANSE_INFINITE)},Ui.prototype._updateScaledIrradiance=function(){On.OPTIONS.useGammaCorrection?this._color.gammaToLinear(this._scaledIrradiance):this._scaledIrradiance.copyFrom(this._color),this._scaledIrradiance.r*=this._intensity,this._scaledIrradiance.g*=this._intensity,this._scaledIrradiance.b*=this._intensity},Bi.DebugMode={NONE:0,SSAO:1,GBUFFER_ALBEDO:2,GBUFFER_NORMAL_DEPTH:3,GBUFFER_SPECULAR:4,LIGHT_ACCUMULATION:5},Bi.HDRBuffers=function(t){this.texture=new Y,this.texture.filter=Hn.BILINEAR_NOMIP,this.texture.wrapMode=Xn.CLAMP,this.fbo=new q(this.texture),this.fboDepth=new q(this.texture,t)},Bi.HDRBuffers.prototype={resize:function(t,e){this.texture.initEmpty(t,e,Zn.RGBA,Un.HDR_FORMAT),this.fbo.init(),this.fboDepth.init()}},Bi.prototype={get debugMode(){return this._debugMode},set debugMode(t){this._debugMode=t},get backgroundColor(){return this._backgroundColor},set backgroundColor(t){t instanceof n?this._backgroundColor.copyFrom(t):this._backgroundColor.set(t)},get camera(){return this._camera},render:function(t,e,i,r){this._gammaApplied=Bn.GAMMA_CORRECT_LIGHTS,this._camera=t,this._scene=e,this._updateSize(r),t._setRenderTargetResolution(this._width,this._height),this._renderCollector.collect(t,e),this._ambientColor=this._renderCollector._ambientColor,this._renderShadowCasters(),vn.setClearColor(n.BLACK),vn.setDepthMask(!0),vn.setColorMask(!0),this._renderGBuffer(),this._renderAO(),this._renderDeferredLighting(),(this._renderCollector.needsForwardPath||this._debugMode!==Bi.DebugMode.LIGHT_ACCUMULATION)&&(vn.setRenderTarget(this._hdrFront.fboDepth),vn.setClearColor(this._backgroundColor),vn.clear(),tr.renderPass(this,st.BASE_PASS,this._renderCollector.getOpaqueRenderList(er.FORWARD_FIXED)),tr.renderPass(this,st.BASE_PASS,this._renderCollector.getOpaqueRenderList(er.DEFERRED)),this._renderForwardDynamicLit(),this._renderCollector.needsBackbuffer&&this._copyToBackBuffer(),this._renderForwardTransparent(),this._swapHDRFrontAndBack(),this._renderEffects(i)),vn.setColorMask(!0),this._renderToScreen(r),vn.setBlendState(),vn.setDepthMask(!0)},_renderForwardDynamicLit:function(){var t=this._renderCollector.getOpaqueRenderList(er.FORWARD_DYNAMIC);if(0!==t.length){tr.renderPass(this,st.BASE_PASS,t);for(var e=this._renderCollector.getLights(),i=e.length,n=0;n<i;++n){var r=e[n];if(r instanceof ce)tr.renderPass(this,st.LIGHT_PROBE_PASS,t,r);else if(r instanceof Qt){var o=r.castShadows?st.DIR_LIGHT_SHADOW_PASS:st.DIR_LIGHT_PASS;tr.renderPass(this,o,t,r)}else if(r instanceof _e){var o=r.castShadows?st.POINT_LIGHT_SHADOW_PASS:st.POINT_LIGHT_PASS;this._renderLightPassIfIntersects(r,o,t)}else if(r instanceof xe){var o=r.castShadows?st.SPOT_LIGHT_SHADOW_PASS:st.SPOT_LIGHT_PASS;this._renderLightPassIfIntersects(r,o,t)}}}},_renderForwardTransparent:function(){for(var t=this._renderCollector.getLights(),e=t.length,i=this._renderCollector.getTransparentRenderList(),n=i.length,r=0;r<n;++r){var o=i[r];this._renderSingleItem(st.BASE_PASS,o);var s=o.material;if(s._renderPath===er.FORWARD_DYNAMIC)for(var a=0;a<e;++a){var h=t[a];if(h instanceof ce)this._renderSingleItem(st.LIGHT_PROBE_PASS,o,h);else if(h instanceof Qt){var _=h.castShadows?st.DIR_LIGHT_SHADOW_PASS:st.DIR_LIGHT_PASS;this._renderSingleItem(_,o,h)}else h instanceof _e?this._renderLightPassIfIntersects(h,st.POINT_LIGHT_PASS,i):h instanceof xe&&this._renderLightPassIfIntersects(h,st.SPOT_LIGHT_PASS,i)}}vn.setBlendState()},_renderLightPassIfIntersects:function(t,e,i){for(var n=t.worldBounds,r=i.length,o=0;o<r;++o){var s=i[o],a=s.material,h=a.getPass(e);h&&n.intersectsBound(s.worldBounds)&&this._renderSingleItem(e,s,t)}},_renderSingleItem:function(t,e,i){var n=e.material.getPass(t);if(n){var r=e.meshInstance;n.updatePassRenderState(e.camera,this,i),n.updateInstanceRenderState(e.camera,e,i),r.updateRenderState(t);var o=r._mesh;vn.drawElements(n._elementType,o._numIndices,0,o._indexType)}},_renderGBuffer:function(t){var e=this._renderCollector,i=e.getOpaqueRenderList(er.DEFERRED),r=e.getOpaqueRenderList(er.FORWARD_DYNAMIC),o=e.getOpaqueRenderList(er.FORWARD_FIXED);i.length>0?(Un.GBUFFER_MRT?(vn.setRenderTarget(this._gbuffer.mrt),vn.setClearColor(n.BLUE),vn.clear(),tr.renderPass(this,st.GBUFFER_PASS,i),e.needsNormalDepth&&(tr.renderPass(this,st.GBUFFER_PASS,r),tr.renderPass(this,st.GBUFFER_PASS,o))):(this._renderGBufferPlane(i,K.ALBEDO,st.GBUFFER_ALBEDO_PASS,n.BLACK),this._renderGBufferPlane(i,K.SPECULAR,st.GBUFFER_SPECULAR_PASS,n.BLACK),vn.setRenderTarget(this._gbuffer.fbos[K.NORMAL_DEPTH]),vn.setClearColor(n.BLUE),vn.clear(),tr.renderPass(this,st.GBUFFER_NORMAL_DEPTH_PASS,i),e.needsNormalDepth&&(tr.renderPass(this,st.GBUFFER_NORMAL_DEPTH_PASS,r),tr.renderPass(this,st.GBUFFER_NORMAL_DEPTH_PASS,o))),vn.setClearColor(n.BLACK)):e.needsNormalDepth&&(vn.setRenderTarget(this._gbuffer.fbos[K.NORMAL_DEPTH]),vn.setClearColor(n.BLUE),vn.clear(),tr.renderPass(this,st.GBUFFER_NORMAL_DEPTH_PASS,i),tr.renderPass(this,st.GBUFFER_NORMAL_DEPTH_PASS,r),tr.renderPass(this,st.GBUFFER_NORMAL_DEPTH_PASS,o),vn.setClearColor(n.BLACK))},_renderGBufferPlane:function(t,e,i,n){vn.setRenderTarget(this._gbuffer.fbos[e]),vn.setClearColor(n),vn.clear(),tr.renderPass(this,i,t)},_renderDeferredLighting:function(){if(0!==this._renderCollector.getOpaqueRenderList(er.DEFERRED).length){var t=this._renderCollector.getLights(),e=t.length;vn.setRenderTarget(this._hdrFront.fbo),vn.clear(),vn.setBlendState(Z.ADD),vn.setDepthTest(Vn.DISABLED);var i=this._ambientColor;0===i.r&&0===i.g&&0===i.b||this._renderAmbientShader.execute(this,i);for(var n=0;n<e;++n)t[n].renderDeferredLighting(this);this._swapHDRFrontAndBack(),vn.setBlendState()}},_renderAO:function(){var t=On.OPTIONS.ambientOcclusion;t&&(this._ssaoTexture=t.getAOTexture(),t.render(this,0))},_renderShadowCasters:function(){for(var t=this._renderCollector._shadowCasters,e=t.length,i=0;i<e;++i)t[i].render(this._camera,this._scene)},_renderEffect:function(t,e){this._gammaApplied=this._gammaApplied||t._outputsGamma,t.render(this,e)},_renderToScreen:function(t){if(vn.setRenderTarget(t),vn.clear(),this._debugMode){var e;switch(this._debugMode){case Bi.DebugMode.GBUFFER_ALBEDO:e=this._gbuffer.textures[0];break;case Bi.DebugMode.GBUFFER_NORMAL_DEPTH:e=this._gbuffer.textures[1];break;case Bi.DebugMode.GBUFFER_SPECULAR:e=this._gbuffer.textures[2];break;case Bi.DebugMode.SSAO:e=this._ssaoTexture;break;case Bi.DebugMode.LIGHT_ACCUMULATION:e=this._hdrBack.texture}return void this._copyTextureShader.execute(bn.DEFAULT,e)}this._gammaApplied?this._copyTextureShader.execute(bn.DEFAULT,this._hdrBack.texture):this._applyGamma.execute(bn.DEFAULT,this._hdrBack.texture)},_renderEffects:function(t){var e=this._renderCollector._effects;if(e)for(var i=e.length,n=0;n<i;++n){var r=e[n];r.isSupported()&&(this._renderEffect(r,t),this._swapHDRFrontAndBack())}},_updateSize:function(t){var e,i;t?(e=t.width,i=t.height):(e=On.TARGET_CANVAS.width,i=On.TARGET_CANVAS.height),this._width===e&&this._height===i||(this._width=e,this._height=i,this._depthBuffer.init(this._width,this._height,!0),this._hdrBack.resize(this._width,this._height),this._hdrFront.resize(this._width,this._height),this._gbuffer.resize(this._width,this._height))},_swapHDRFrontAndBack:function(){var t=this._hdrBack;this._hdrBack=this._hdrFront,this._hdrFront=t},_createDepthBuffer:function(){return new Zt},_copyToBackBuffer:function(){vn.setRenderTarget(this._hdrBack.fbo),vn.clear(),this._copyTextureShader.execute(bn.DEFAULT,this._hdrFront.texture),vn.setRenderTarget(this._hdrFront.fboDepth)}},Hi.prototype=Object.create(ce.prototype),Hi.prototype.render=function(){var t=this._specularTexture,e=this._diffuseTexture;this._specularTexture=Fn.DARK_CUBE_TEXTURE,this._diffuseTexture=Fn.DARK_CUBE_TEXTURE;var i=this.worldMatrix.getColumn(3);vn.setInvertCulling(!0);for(var n=0;n<6;++n)this._cameras[n].position.copyFrom(i),this._renderer.render(this._cameras[n],this._scene,0,this._specularFBOs[n]);for(t.generateMipmap(),n=0;n<6;++n)this._renderer.render(this._cameras[n],this._diffuseScene,0,this._diffuseFBOs[n]);e.generateMipmap(),vn.setInvertCulling(!1),this._diffuseTexture=e,this._specularTexture=t},Xi.prototype=Object.create(H.prototype),Xi.prototype.execute=function(t,e,i,n){var r=vn.gl;vn.setDepthTest(Vn.DISABLED),vn.setCullMode(jn.NONE),t._vertexBuffers[0].bind(),t._indexBuffer.bind(),this.updatePassRenderState(),e.bind(0),r.vertexAttribPointer(this._positionAttributeLocation,2,r.FLOAT,!1,16,0),r.vertexAttribPointer(this._texCoordAttributeLocation,2,r.FLOAT,!1,16,8),vn.enableAttributes(2),r.uniform2f(this._directionLocation,i,n),vn.drawElements(Gn.TRIANGLES,6,0)},ji.prototype=Object.create(r.prototype,{blurRadius:{get:function(){return this._blurRadius},set:function(t){this._blurRadius=t,this._invalidateBlurShader()}},darkeningFactor:{get:function(){return this._darkeningFactor},set:function(t){this._darkeningFactor=t}},expScaleFactor:{get:function(){return this._expScaleFactor},set:function(t){this._expScaleFactor=t}}}),ji.prototype.getShadowMapFormat=function(){return Zn.RGB},ji.prototype.getShadowMapDataType=function(){return qn.FLOAT},ji.prototype.getGLSL=function(){var t=this._getDefines();return on.get("dir_shadow_esm.glsl",t)},ji.prototype._getDefines=function(){return{HX_ESM_CONSTANT:"float("+this._expScaleFactor+")",HX_ESM_DARKENING:"float("+this._darkeningFactor+")"}},ji.prototype._createBlurShader=function(){return new Xi(this._blurRadius)},zi.prototype=Object.create(r.prototype,{softness:{get:function(){return this._softness},set:function(t){this._softness!==t&&(this._softness=t)}},numShadowSamples:{get:function(){return this._numShadowSamples},set:function(t){t=yn.clamp(t,1,32),this._numShadowSamples!==t&&(this._numShadowSamples=t)}},dither:{get:function(){return this._dither},set:function(t){this._dither!==t&&(this._dither=t)}}}),zi.prototype.getGLSL=function(){var t={HX_DIR_PCF_NUM_SHADOW_SAMPLES:this._numShadowSamples,HX_DIR_PCF_RCP_NUM_SHADOW_SAMPLES:"float("+1/this._numShadowSamples+")",HX_DIR_PCF_SOFTNESS:this._softness};return this._dither&&(t.HX_DIR_PCF_DITHER_SHADOWS=1),on.get("dir_shadow_pcf.glsl",t)},Vi.prototype=Object.create(H.prototype),Vi.prototype.execute=function(t,e,i,n){var r=vn.gl;vn.setDepthTest(Vn.DISABLED),vn.setCullMode(jn.NONE),t._vertexBuffers[0].bind(),t._indexBuffer.bind(),this.updatePassRenderState(),e.bind(0),r.vertexAttribPointer(this._positionAttributeLocation,2,qn.FLOAT,!1,16,0),r.vertexAttribPointer(this._texCoordAttributeLocation,2,qn.FLOAT,!1,16,8),vn.enableAttributes(2),r.uniform2f(this._directionLocation,i,n),vn.drawElements(r.TRIANGLES,6,0)},Gi.prototype=Object.create(r.prototype,{minVariance:{get:function(){return this._minVariance},set:function(t){this._minVariance=t}},blurRadius:{get:function(){return this._blurRadius},set:function(t){this._blurRadius=t,this._invalidateBlurShader()}},lightBleedReduction:{get:function(){return this._lightBleedReduction},set:function(t){this._lightBleedReduction=t}},useHalfFloat:{get:function(){return this._useHalfFloat},set:function(t){this._useHalfFloat=t}}}),Gi.prototype.getGLSL=function(){var t=this._getDefines();return on.get("dir_shadow_vsm.glsl",t)},Gi.prototype.getShadowMapFormat=function(){return Un.HALF_FLOAT_FBO||Un.FLOAT_FBO?Zn.RGB:Zn.RGBA},Gi.prototype.getShadowMapDataType=function(){return Un.HALF_FLOAT_FBO&&this._useHalfFloat?qn.HALF_FLOAT:Un.FLOAT_FBO?qn.FLOAT:qn.UNSIGNED_BYTE},Gi.prototype._createBlurShader=function(){return new Vi(this._blurRadius)},Gi.prototype._getDefines=function(){var t=1-this._lightBleedReduction;return{HX_DIR_VSM_MIN_VARIANCE:"float("+this._minVariance+")",HX_DIR_VSM_LIGHT_BLEED_REDUCTION:"float("+this._lightBleedReduction+")",HX_DIR_VSM_RCP_LIGHT_BLEED_REDUCTION_RANGE:"float("+1/t+")"}},ki.prototype=Object.create(r.prototype,{softness:{get:function(){return this._softness},set:function(t){this._softness!==t&&(this._softness=t)}},numShadowSamples:{get:function(){return this._numShadowSamples},set:function(t){t=yn.clamp(t,1,32),this._numShadowSamples!==t&&(this._numShadowSamples=t)}},dither:{get:function(){return this._dither},set:function(t){this._dither!==t&&(this._dither=t)}}}),ki.prototype.getGLSL=function(){var t={HX_SPOT_PCF_NUM_SHADOW_SAMPLES:this._numShadowSamples,HX_SPOT_PCF_RCP_NUM_SHADOW_SAMPLES:"float("+1/this._numShadowSamples+")",HX_SPOT_PCF_SOFTNESS:this._softness};return this._dither&&(t.HX_SPOT_PCF_DITHER_SHADOWS=1),on.get("spot_shadow_pcf.glsl",t)},Yi.prototype=Object.create(r.prototype,{softness:{get:function(){return this._softness},set:function(t){this._softness!==t&&(this._softness=t)}},numShadowSamples:{get:function(){return this._numShadowSamples},set:function(t){t=yn.clamp(t,1,32),this._numShadowSamples!==t&&(this._numShadowSamples=t)}},dither:{get:function(){return this._dither},set:function(t){this._dither!==t&&(this._dither=t)}}}),Yi.prototype.getGLSL=function(){var t={HX_POINT_PCF_NUM_SHADOW_SAMPLES:this._numShadowSamples,HX_POINT_PCF_RCP_NUM_SHADOW_SAMPLES:"float("+1/this._numShadowSamples+")",HX_POINT_PCF_SOFTNESS:this._softness};return this._dither&&(t.HX_POINT_PCF_DITHER_SHADOWS=1),on.get("point_shadow_pcf.glsl",t)};var _r={create:function(t,e){var i,n,r,o=new k,s=t._indexData;o._vertexUsage=t._vertexUsage,o._indexUsage=t._indexUsage;var a=t._vertexAttributes,h=t.numStreams;for(n=0;n<a.length;++n){var _=a[n];o.addVertexAttribute(_.name,_.numComponents,_.streamIndex)}o.addVertexAttribute("hx_instanceID",1,h);var l=[],c=0,u=t.numVertices;for(i=s.length,n=0;n<e;++n)for(r=0;r<i;++r)l[c++]=s[r]+u*n;for(o.setIndexData(l),n=0;n<t.numStreams;++n){var f=[],d=t.getVertexData(n);for(i=d.length,c=0,r=0;r<e;++r)for(var p=0;p<i;++p)f[c++]=d[p];o.setVertexData(f,n)}var m=[];for(c=0,r=0;r<e;++r)for(n=0;n<u;++n)m[c++]=r;return o.setVertexData(m,h),o}};Wi.prototype=Object.create(wt.prototype),Wi.ALIGN_XZ=1,Wi.ALIGN_XY=2,Wi.ALIGN_YZ=3,Wi.prototype._generate=function(t,e){e=e||{};var i=e.alignment||Wi.ALIGN_XY,n=e.numSegmentsW||1,r=e.numSegmentsH||1,o=e.width||1,s=e.height||1,a=void 0!==e.doubleSided&&e.doubleSided,h=t.positions,_=t.uvs,l=t.normals,c=t.indices,u=1/n,f=1/r,d=0,p=0,m=0,g=0,x=0,v=0,S=0,T=0;i===Wi.ALIGN_XY?v=1:i===Wi.ALIGN_XZ?x=1:g=1;for(var E=0;E<=r;++E)for(var y=(E*f-.5)*s,w=0;w<=n;++w){var A=(w*u-.5)*o;if(i===Wi.ALIGN_XY?(d=A,p=y,S=1-w*u,T=E*f):i===Wi.ALIGN_XZ?(d=A,m=y,S=1-w*u,T=E*f):(p=A,m=y,S=1-w*u,T=E*f),h.push(d,p,m),l&&l.push(g,x,v),_&&_.push(S,T),a&&(h.push(d,p,m),l&&l.push(-g,-x,-v),_&&_.push(1-S,T)),w!==n&&E!==r){var M=n+1,P=w+E*M,b=a?1:0;c.push(P<<b,P+M+1<<b,P+M<<b),c.push(P<<b,P+1<<b,P+M+1<<b),a&&(c.push((P+M<<b)+1,(P+M+1<<b)+1,(P<<b)+1),c.push((P+M+1<<b)+1,(P+1<<b)+1,(P<<b)+1))}}},Zi.prototype=Object.create(wt.prototype),Zi.ALIGN_XY=1,Zi.ALIGN_XZ=2,Zi.ALIGN_YZ=3,Zi.prototype._generate=function(t,e){e=e||{};for(var i=e.numSegmentsW||15,n=e.numSegmentsH||20,r=e.radius||.5,o=e.tubeRadius||.1,s=e.alignment||Zi.ALIGN_XY,a=void 0!==e.doubleSided&&e.doubleSided,h=t.positions,_=t.uvs,l=t.normals,c=1/i,u=1/n,f=0;f<=n;++f)for(var d=f*u,p=d*Math.PI*2,m=Math.cos(p),g=Math.sin(p),x=0;x<=i;++x){var v=x*c,S=v*Math.PI*2,T=Math.cos(S),E=Math.sin(S),y=r+m*o;switch(s){case Zi.ALIGN_XZ:h.push(T*y,-g*o,E*y),l&&l.push(T*m,-g,E*m);break;case Zi.ALIGN_XY:h.push(T*y,E*y,g*o),l&&l.push(T*m,E*m,g);break;case Zi.ALIGN_YZ:h.push(g*o,T*y,E*y),l&&l.push(g,T*m,E*m)}_&&_.push(v,1-d)}for(var w=t.indices,A=0;A<n;++A)for(var M=0;M<i;++M){var P=i+1,b=M+A*P;w.push(b,b+P+1,b+P),w.push(b,b+1,b+P+1),a&&(w.push(b,b+P,b+P+1),w.push(b,b+P+1,b+1))}},Ki.prototype={addView:function(t){t._renderer=new Bi,t._texture=new Y,t._texture.filter=Hn.BILINEAR_NOMIP,t._texture.wrapMode=Xn.CLAMP,t._fbo=new q(t._texture),this._views.push(t)},removeView:function(t){t._fbo=null,t._texture=null,t._renderer=null;var e=this._views.indexOf(t);this._views.splice(e,1)},render:function(t,e){for(var i=On.TARGET_CANVAS.clientWidth,n=On.TARGET_CANVAS.clientHeight,r=this._views.length,o=0;o<r;++o){var s=this._views[o],a=Math.floor(i*s.widthRatio),h=Math.floor(n*s.heightRatio);s._texture.width===a&&s._texture.height===h||(s._texture.initEmpty(a,h),s._fbo.init()),s._renderer.render(s.camera,s.scene,t,s._fbo)}vn.setRenderTarget(e),vn.clear();var _=new qt;for(o=0;o<r;++o)s=this._views[o],_.x=Math.floor(s.xRatio*i),_.y=Math.floor((1-s.yRatio-s.heightRatio)*n),_.width=s._texture.width,_.height=s._texture.height,vn.setViewport(_),Fn.COPY_SHADER.execute(bn.DEFAULT,s._texture)}},Qi.prototype={queue:function(t,e){var i=1===arguments.length?[arguments[0]]:Array.apply(null,arguments);this._queue.push({func:t,args:i.slice(1)})},addChildQueue:function(t){this._childQueues.push(t)},execute:function(){if(this._isRunning)throw new Error("Already running!");this._isRunning=!0,this._currentIndex=0,this._executeTask()},_executeTask:function(){setTimeout(this._executeImpl.bind(this))},_executeImpl:function(){if(this.onProgress.dispatch(this._currentIndex/this._queue.length),this._childQueues.length>0){var t=this._childQueues.shift();t.onComplete.bind(this._executeImpl,this),t.execute()}else if(this._queue.length===this._currentIndex)this.onComplete.dispatch();else{var e=this._queue[this._currentIndex];e.func.apply(this,e.args),++this._currentIndex,this._executeTask()}}};var lr={getFromImage:function(t){var e=document.createElement("canvas");e.width=t.naturalWidth,e.height=t.naturalHeight;var i=e.getContext("2d");return i.drawImage(t,0,0),e.getImageData(0,0,e.width,e.height)}},cr={merge:function(t,e,i){var r=new Y;r.initEmpty(t.width,t.height);var o=new q(r);vn.setRenderTarget(o),vn.setClearColor(n.WHITE),vn.clear();var s=vn.gl;return t&&(s.colorMask(!0,!1,!1,!1),Fn.COPY_SHADER.execute(bn.DEFAULT,t)),e&&(s.colorMask(!1,!0,!1,!1),Fn.COPY_SHADER.execute(bn.DEFAULT,e)),i&&(s.colorMask(!1,!1,!0,!1),Fn.COPY_SHADER.execute(bn.DEFAULT,i)),s.colorMask(!0,!0,!0,!0),vn.setRenderTarget(null),vn.setClearColor(n.BLACK),r}},ur={_isMobile:void 0,get isMobile(){if(void 0===this._isMobile){var t=/AppleWebKit/.test(navigator.userAgent)&&/Mobile\/\w+/.test(navigator.userAgent);this._isMobile=t||/Android|webOS|BlackBerry|Opera Mini|Opera Mobi|IEMobile/i.test(navigator.userAgent)}return this._isMobile}};en.prototype=Object.create(Lt.prototype),en.prototype.cast=function(t,e){this._potentials=[],this._ray=t,this._scene=e,this._potentialPool.reset(),e.acceptVisitor(this),this._potentials.sort(this._sortPotentialFunc);var i=this._findClosest();return i.object?i:null},en.prototype.qualifies=function(t){return t.visible&&t.worldBounds.intersectsRay(this._ray)},en.prototype.visitModelInstance=function(t,e){var i=this._potentialPool.getItem();i.modelInstance=t;var n=this._ray.direction,r=n.x,o=n.y,s=n.z,a=this._ray.origin,h=t.worldBounds,_=h.center,l=h._halfExtentX,c=h._halfExtentY,u=h._halfExtentZ;l=r>0?_.x-l:_.x+l,c=o>0?_.y-c:_.y+c,u=s>0?_.z-u:_.z+u,l-=a.x,c-=a.y,u-=a.z,i.closestDistanceSqr=l*r+c*o+u*s,i.objectMatrix.inverseAffineOf(t.worldMatrix),this._potentials.push(i)},en.prototype._findClosest=function(){for(var t=this._potentials,e=t.length,i=new $i,n=this._ray,r=this._localRay,o=0;o<e;++o){var s=t[o];if(s.closestDistanceSqr>i.t*i.t)break;r.transformFrom(n,s.objectMatrix);for(var a=s.modelInstance.model,h=a.numMeshes,_=0;_<h;++_)this._testMesh(r,a.getMesh(_),i)&&(i.object=s.modelInstance)}return i.object&&i.object.worldMatrix.transformPoint(i.point,i.point),i},en.prototype._testMesh=function(t,e,i){for(var n=t.direction,r=t.origin,o=r.x,s=r.y,a=r.z,h=n.x,_=n.y,l=n.z,c=e.getVertexAttributeByName("hx_position"),u=e.getVertexData(c.streamIndex),f=e.getIndexData(),d=e.getVertexStride(c.streamIndex),p=f.length,m=c.offset,g=!1,x=0;x<p;x+=3){var v=f[x]*d+m,S=f[x+1]*d+m,T=f[x+2]*d+m,E=u[v],y=u[v+1],w=u[v+2],A=u[S],M=u[S+1],P=u[S+2],b=u[T],L=u[T+1],R=u[T+2],O=A-E,D=M-y,I=P-w,N=b-E,C=L-y,F=R-w,U=I*C-D*F,B=O*F-I*N,H=D*N-O*C,X=U*h+B*_+H*l;if(!(X>=0)){var j=-(U*E+B*y+H*w),z=U*o+B*s+H*a+j;if(!(z<0||(z/=-X,z>=i.t))){var V=z*h+o,G=z*_+s,k=z*l+a,Y=V-E,W=G-y,Z=k-w,q=O*O+D*D+I*I,K=N*N+C*C+F*F,J=O*N+D*C+I*F,Q=q*K-J*J;if(0!==Q){var $=Y*O+W*D+Z*I,tt=Y*N+W*C+Z*F,et=1/Q,it=(K*$-J*tt)*et,nt=(q*tt-J*$)*et;it>=0&&nt>=0&&it+nt<=1&&(i.point.set(V,G,k,1),i.t=z,g=!0)}}}}return g},en.prototype._sortPotentialFunc=function(t,e){return t.closestDistanceSqr-e.closestDistanceSqr},nn.prototype={update:function(t){this._currentFPS=1e3/t,this._runningSum-=this._frames[this._index],this._runningSum+=this._currentFPS,this._averageFPS=this._runningSum/this._numFrames,this._frames[this._index++]=this._currentFPS,this._index===this._numFrames&&(this._index=0),(void 0===this._maxFPS||this._currentFPS>this._maxFPS)&&(this._maxFPS=this._currentFPS),(void 0===this._minFPS||this._currentFPS<this._minFPS)&&(this._minFPS=this._currentFPS)},get lastFrameFPS(){return Math.round(this._currentFPS)},get averageFPS(){return Math.round(this._averageFPS)},get maxFPS(){return Math.round(this._maxFPS)},get minFPS(){return Math.round(this._minFPS)},reset:function(){this._maxFPS=void 0,this._minFPS=void 0}},rn.prototype={remove:function(){this._elm.parentNode.removeChild(this._elm)},_update:function(t){this._fpsCounter.update(t);var e=this._context;e.fillStyle="rgba(0, 0, 0, .5)",e.fillRect(0,0,this._pixelWidth,this._pixelHeight);var i=Nn.toFixed(1),n=t.toFixed(1);e.fillStyle="#fff",e.fillText("FPS: "+this._fpsCounter.averageFPS,10*this._dpr,15*this._dpr),e.fillText("Time: "+i+" ("+n+") ",10*this._dpr,30*this._dpr),e.fillText("Draws: "+mn.numDrawCalls,10*this._dpr,45*this._dpr),e.fillText("Tris: "+mn.numTriangles,10*this._dpr,60*this._dpr),e.fillText("Clears: "+mn.numClears,10*this._dpr,75*this._dpr)}},t.ShaderLibrary=on,t.init=lt,t.destroy=ut,t.start=ft,t.stop=dt,t.META=On,t.capabilities=Un,t.onPreFrame=Dn,t.onFrame=In,t.TextureFilter=Hn,t.CullMode=jn,t.StencilOp=zn,t.Comparison=Vn,t.ElementType=Gn,t.BlendFactor=kn,t.BlendOperation=Yn,t.ClearMask=Wn,t.InitOptions=_t,t.TextureFormat=Zn,t.DataType=qn,t.BufferUsage=Kn,t.CubeFace=Jn,t.Float2=s,t.Float4=h,t.CenteredGaussianCurve=vt,t.MathX=yn,t.Matrix4x4=f,t.PlaneSide=Qn,t.PoissonDisk=a,t.PoissonSphere=_,t.Quaternion=l,t.Ray=St,t.Transform=u,t.Debug=An,t.DebugAxes=Le,t.DebugBoundsComponent=Ie,t.DebugSkeletonComponent=Ne,t.Profiler=Mn,t.BoundingVolume=Tt,t.BoundingAABB=Mt,t.BoundingSphere=re,t.SceneNode=Ot,t.Scene=Ue,t.SceneVisitor=Lt,t.Skybox=He,t.Terrain=Xe,t.Entity=It,t.EntitySystem=je,t.EntitySet=Ce,t.Component=Re,t.CompositeComponent=ze,t.KeyFrame=Ve,t.AnimationClip=Ge,t.AnimationPlayhead=ke,t.LayeredAnimation=Ye,t.AnimationLayer=We,t.AnimationLayerFloat4=Ze,t.AnimationLayerQuat=qe,t.AnimationLayerMorphTarget=Ke,t.MorphAnimation=Qe,t.MorphPose=Je,t.MorphTarget=$e,t.Skeleton=ti,t.SkeletonAnimation=ri,t.SkeletonBinaryLerpNode=oi,t.SkeletonBlendNode=ei,t.SkeletonBlendTree=ni,t.SkeletonClipNode=ii,t.SkeletonFreePoseNode=si,t.SkeletonJoint=ai,t.SkeletonJointPose=Nt,t.SkeletonPose=Ct,t.SkeletonXFadeNode=hi,t.Camera=Yt,t.Frustum=kt,t.PerspectiveCamera=se,t.OrthographicOffCenterCamera=Wt,t.FloatController=_i,t.OrbitController=li,t.Color=n,t.DataStream=ci,t.GL=vn,t.Signal=e,t.Bloom=pi,t.Blur=mi,t.CopyTexturePass=gi,t.Effect=di,t.EffectPass=ui,t.FilmicToneMapping=vi,t.ACESToneMapping=Si,t.Fog=Ti,t.FXAA=Ei,t.GaussianBlurPass=fi,t.HBAO=yi,t.SSAO=wi,t.ReinhardToneMapping=Ai,t.AssetLibrary=Li,t.AssetLoader=bi,t.URLLoader=Mi,t.HCLIP=Ri,t.HCM=Oi,t.HMAT=Ii,t.HMODEL=Ni,t.Importer=Pi,t.JPG_EQUIRECTANGULAR=Ci,t.PNG_EQUIRECTANGULAR=sr,t.JPG_HEIGHTMAP=Fi,t.PNG_HEIGHTMAP=hr,t.JPG=Di,t.PNG=rr,t.AmbientLight=Ui,t.DirectionalLight=Qt,t.Light=jt,t.LightProbe=ce,t.DynamicLightProbe=Hi,t.PointLight=_e,t.SpotLight=xe,t.ShadowFilter=r,t.ExponentialDirectionalShadowFilter=ji,t.HardDirectionalShadowFilter=o,t.PCFDirectionalShadowFilter=zi,t.VarianceDirectionalShadowFilter=Gi,t.HardSpotShadowFilter=at,t.PCFSpotShadowFilter=ki,t.HardPointShadowFilter=ht,t.PCFPointShadowFilter=Yi,t.MaterialPass=st,t.Material=Pe,t.BasicMaterial=be,t.SkyboxMaterial=Be,t.ModelInstance=Ft,t.Model=Et,t.Mesh=k,t.MeshBatch=_r,t.MeshInstance=bt,t.SpherePrimitive=ne,t.BoxPrimitive=At,t.Primitive=wt,t.ConePrimitive=ue,t.CylinderPrimitive=Ut,t.PlanePrimitive=Wi,t.TorusPrimitive=Zi,t.BlendState=Z,t.Renderer=Bi,t.LightingModel=Sn,t.View=qi,t.MultiRenderer=Ki,t.StencilState=Ji,t.Texture2D=Y,t.TextureCube=W,t.TextureUtils=Ln,t.WriteOnlyDepthBuffer=Zt,t.AsyncTaskQueue=Qi,t.ArrayUtils=sn,t.EquirectangularTexture=or,t.HeightMap=ar,t.ImageData=lr,t.MergeSpecularTextures=cr,t.NormalTangentGenerator=yt,t.Platform=ur,t.RayCaster=en,t.StatsDisplay=rn,Object.defineProperty(t,"__esModule",{value:!0})});