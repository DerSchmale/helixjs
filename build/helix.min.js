HX={VERSION:"0.1",TypedArray:"undefined"!=typeof Float32Array?Float32Array:Array},HX.InitOptions=function(){this.useHDR=!1,this.useLinearSpace=!0,this.ignoreDrawBuffersExtension=!1,this.ignoreDepthTexturesExtension=!1},HX.ShaderLibrary={get:function(t){return HX.ShaderLibrary[t]}},HX._numActiveAttributes=0,HX._numActiveTextures=0,HX.initFromContext=function(t,e){HX.OPTIONS=e||new HX.InitOptions,HX.GL=t;var i="";HX.OPTIONS.useLinearSpace!==!1&&(i+="#define HX_LINEAR_SPACE\n"),HX.OPTIONS.ignoreDrawBuffersExtension||(HX.EXT_DRAW_BUFFERS=HX.GL.getExtension("WEBGL_draw_buffers")),HX.EXT_DRAW_BUFFERS||(i+="#define HX_SEPARATE_GEOMETRY_PASSES\n",console.warn("WEBGL_draw_buffers extension not supported!")),HX.MaterialPass.NUM_TOTAL_PASS_TYPES=HX.MaterialPass.NUM_PASS_TYPES+(HX.EXT_DRAW_BUFFERS?0:2),HX.EXT_FLOAT_TEXTURES=HX.GL.getExtension("OES_texture_float"),HX.EXT_FLOAT_TEXTURES||console.warn("OES_texture_float extension not supported!"),HX.EXT_HALF_FLOAT_TEXTURES=HX.GL.getExtension("OES_texture_half_float"),HX.EXT_HALF_FLOAT_TEXTURES||console.warn("OES_texture_half_float extension not supported!"),HX.EXT_FLOAT_TEXTURES_LINEAR=HX.GL.getExtension("OES_texture_float_linear"),HX.EXT_FLOAT_TEXTURES_LINEAR||console.warn("OES_texture_float_linear extension not supported!"),HX.EXT_HALF_FLOAT_TEXTURES_LINEAR=HX.GL.getExtension("OES_texture_half_float_linear"),HX.EXT_HALF_FLOAT_TEXTURES_LINEAR||console.warn("OES_texture_half_float_linear extension not supported!"),HX.OPTIONS.ignoreDepthTexturesExtension||(HX.EXT_DEPTH_TEXTURE=HX.GL.getExtension("WEBGL_depth_texture")),HX.EXT_DEPTH_TEXTURE||(i+="#define HX_STORE_EXPLICIT_DEPTH\n",console.warn("WEBGL_depth_texture extension not supported!")),HX.EXT_STANDARD_DERIVATIVES=HX.GL.getExtension("OES_standard_derivatives"),HX.EXT_STANDARD_DERIVATIVES||console.warn("OES_standard_derivatives extension not supported!"),HX.EXT_SHADER_TEXTURE_LOD=HX.GL.getExtension("EXT_shader_texture_lod"),HX.EXT_SHADER_TEXTURE_LOD||console.warn("EXT_shader_texture_lod extension not supported!"),HX.EXT_TEXTURE_FILTER_ANISOTROPIC=HX.GL.getExtension("EXT_texture_filter_anisotropic"),HX.EXT_TEXTURE_FILTER_ANISOTROPIC||console.warn("EXT_texture_filter_anisotropic extension not supported!"),HX.DEFAULT_TEXTURE_MAX_ANISOTROPY=HX.EXT_TEXTURE_FILTER_ANISOTROPIC?HX.GL.getParameter(HX.EXT_TEXTURE_FILTER_ANISOTROPIC.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,HX.EXT_HALF_FLOAT_TEXTURES_LINEAR&&HX.EXT_HALF_FLOAT_TEXTURES||(HX.OPTIONS.useHDR=!1),HX.GLSLIncludeGeneral=i+HX.GLSLIncludeGeneral,HX.TEXTURE_FILTER={},HX.TEXTURE_FILTER.NEAREST={min:HX.GL.NEAREST_MIPMAP_NEAREST,mag:HX.GL.NEAREST},HX.TEXTURE_FILTER.BILINEAR={min:HX.GL.LINEAR_MIPMAP_NEAREST,mag:HX.GL.LINEAR},HX.TEXTURE_FILTER.TRILINEAR={min:HX.GL.LINEAR_MIPMAP_LINEAR,mag:HX.GL.LINEAR},HX.EXT_TEXTURE_FILTER_ANISOTROPIC&&(HX.TEXTURE_FILTER.TRILINEAR_ANISOTROPIC={min:HX.GL.LINEAR_MIPMAP_LINEAR,mag:HX.GL.LINEAR}),HX.TEXTURE_FILTER.NEAREST_NOMIP={min:HX.GL.NEAREST,mag:HX.GL.NEAREST},HX.TEXTURE_FILTER.BILINEAR_NOMIP={min:HX.GL.LINEAR,mag:HX.GL.LINEAR},HX.TEXTURE_WRAP_MODE={},HX.TEXTURE_WRAP_MODE.REPEAT={s:HX.GL.REPEAT,t:HX.GL.REPEAT},HX.TEXTURE_WRAP_MODE.CLAMP={s:HX.GL.CLAMP_TO_EDGE,t:HX.GL.CLAMP_TO_EDGE},HX.DEFAULT_TEXTURE_WRAP_MODE=HX.TEXTURE_WRAP_MODE.REPEAT,HX.DEFAULT_TEXTURE_FILTER=HX.TEXTURE_FILTER.TRILINEAR;var r=new Uint8Array([255,0,255,255]);HX.DEFAULT_TEXTURE_2D=new HX.Texture2D,HX.DEFAULT_TEXTURE_2D.uploadData(r,1,1),HX.DEFAULT_TEXTURE_2D.setFilter(HX.TEXTURE_FILTER.NEAREST_NOMIP),HX.DEFAULT_TEXTURE_CUBE=new HX.TextureCube,HX.DEFAULT_TEXTURE_CUBE.uploadData([r,r,r,r,r,r],1);var n=new HX.PoissonDisk,s=new HX.PoissonSphere;n.generatePoints(64),s.generatePoints(64),HX.DEFAULT_POISSON_DISK=new Float32Array(128),HX.DEFAULT_POISSON_SPHERE=new Float32Array(192);for(var a=n.getPoints(),o=s.getPoints(),h=0;64>h;++h){var _=a[h];HX.DEFAULT_POISSON_DISK[2*h]=_.x,HX.DEFAULT_POISSON_DISK[2*h+1]=_.y,_=o[h],HX.DEFAULT_POISSON_SPHERE[3*h]=_.x,HX.DEFAULT_POISSON_SPHERE[3*h+1]=_.y,HX.DEFAULT_POISSON_SPHERE[3*h+2]=_.z}HX._init2DDitherTexture(32,32)},HX.createRenderer=function(){return HX.EXT_DRAW_BUFFERS?new HX.MRTRenderer:new HX.MultiPassRenderer},HX.initFromCanvas=function(t,e){var e={antialias:!1,premultipliedAlpha:!1},i=t.getContext("webgl",e)||t.getContext("experimental-webgl",e);if(HX.initFromContext(i,e),!HX.GL)throw"WebGL not supported";HX.GL.clearColor(0,0,0,1)},HX.clear=function(){HX.GL.clear(HX.GL.COLOR_BUFFER_BIT|HX.GL.DEPTH_BUFFER_BIT)},HX.unbindTextures=function(){for(var t=0;t<HX._numActiveTextures;++t)HX.GL.activeTexture(HX.GL.TEXTURE0+t),HX.GL.bindTexture(HX.GL.TEXTURE_2D,null);HX._numActiveTextures=0},HX.setRenderTarget=function(t){t?(HX.GL.bindFramebuffer(HX.GL.FRAMEBUFFER,t._fbo),t._numColorTextures>1&&HX.EXT_DRAW_BUFFERS.drawBuffersWEBGL(t._drawBuffers)):HX.GL.bindFramebuffer(HX.GL.FRAMEBUFFER,null)},HX.enableAttributes=function(t){var e=HX._numActiveAttributes;if(t>e)for(var i=e;t>i;++i)HX.GL.enableVertexAttribArray(i);else if(e>t){t+=1;for(var i=t;e>i;++i)HX.GL.disableVertexAttribArray(i)}HX._numActiveAttributes=2},HX._init2DDitherTexture=function(t,e){HX.DEFAULT_2D_DITHER_TEXTURE=new HX.Texture2D;for(var i=t*e,r=[],n=0,s=[],a=0;i>a;++a)s.push(a/i*Math.PI*2);HX.shuffle(s);for(var a=0;i>a;++a){var o=s[a],h=Math.cos(o),_=Math.sin(o);r[n++]=h,r[n++]=-_,r[n++]=_,r[n++]=h}HX.DEFAULT_2D_DITHER_TEXTURE.uploadData(new Float32Array(r),t,e,!1,HX.GL.RGBA,HX.GL.FLOAT),HX.DEFAULT_2D_DITHER_TEXTURE.setFilter(HX.TEXTURE_FILTER.NEAREST_NOMIP),HX.DEFAULT_2D_DITHER_TEXTURE.setWrapMode(HX.TEXTURE_WRAP_MODE.REPEAT)},HX.ShaderLibrary["copy_fragment.glsl"]="varying vec2 uv;\n\nuniform sampler2D sampler;\n\nvoid main()\n{\n    // extractChannel comes from a macro\n   gl_FragColor = vec4(extractChannels(texture2D(sampler, uv)));\n}\n",HX.ShaderLibrary["copy_to_gamma_fragment.glsl"]="varying vec2 uv;\n\nuniform sampler2D sampler;\n\nvoid main()\n{\n   gl_FragColor = hx_linearToGamma(texture2D(sampler, uv));\n}",HX.ShaderLibrary["copy_vertex.glsl"]="attribute vec4 hx_position;\nattribute vec2 hx_texCoord;\n\nvarying vec2 uv;\n\nvoid main()\n{\n    uv = hx_texCoord;\n    gl_Position = hx_position;\n}",HX.ShaderLibrary["debug_depth_fragment.glsl"]="varying vec2 uv;\n\nuniform sampler2D sampler;\n\nvoid main()\n{\n   gl_FragColor = vec4(hx_RGBA8ToFloat(texture2D(sampler, uv)));\n}",HX.ShaderLibrary["default_albedo_fragment.glsl"]="#if defined(ALBEDO_MAP)\nvarying vec2 texCoords;\n\nuniform sampler2D albedoMap;\n#endif\n\nuniform vec3 albedoColor;\n\nvoid main()\n{\n    #ifdef ALBEDO_MAP\n        gl_FragColor = texture2D(albedoMap, texCoords);\n    #else\n        gl_FragColor = vec4(albedoColor, 1.0);\n    #endif\n}",HX.ShaderLibrary["default_albedo_vertex.glsl"]="attribute vec4 hx_position;\n\nuniform mat4 hx_wvpMatrix;\n\n#if defined(ALBEDO_MAP)\nattribute vec2 hx_texCoord;\n\nvarying vec2 texCoords;\n#endif\n\nvoid main()\n{\n    gl_Position = hx_wvpMatrix * hx_position;\n\n    #if defined(ALBEDO_MAP)\n    texCoords = hx_texCoord;\n    #endif\n}",HX.ShaderLibrary["default_geometry_mrt_fragment.glsl"]="#extension GL_EXT_draw_buffers : require\n\n#if defined(ALBEDO_MAP) || defined(NORMAL_GLOSS_MAP)\nvarying vec2 texCoords;\n#endif\n\nvarying vec3 normal;\n\n#ifdef ALBEDO_MAP\nuniform sampler2D albedoMap;\n#endif\n\nuniform vec3 albedoColor;\nuniform float specularNormalReflection;\nuniform float metallicness;\nuniform float roughness;\n\nvoid main()\n{\n    vec4 albedo;\n    #ifdef ALBEDO_MAP\n        albedo = texture2D(albedoMap, texCoords);\n    #else\n        albedo = vec4(albedoColor, 1.0);\n    #endif\n\n    hx_processGeometry(albedo, normal, gl_FragCoord.z / gl_FragCoord.w, metallicness, specularNormalReflection, roughness);\n}",HX.ShaderLibrary["default_geometry_mrt_vertex.glsl"]="attribute vec4 hx_position;\nattribute vec3 hx_normal;\n\nuniform mat4 hx_wvpMatrix;\nuniform mat3 hx_normalWorldMatrix;\n\n#if defined(ALBEDO_MAP) || defined(NORMAL_GLOSS_MAP)\nattribute vec2 hx_texCoord;\n\nvarying vec2 texCoords;\n#endif\n\nvarying vec3 normal;\n\nvoid main()\n{\n    gl_Position = hx_wvpMatrix * hx_position;\n    normal = hx_normalWorldMatrix * hx_normal;\n\n    #if defined(ALBEDO_MAP) || defined(NORMAL_GLOSS_MAP)\n    texCoords = hx_texCoord;\n    #endif\n}",HX.ShaderLibrary["default_normals_fragment.glsl"]="varying vec3 normal;\n\nvoid main()\n{\n    gl_FragColor = vec4(normal * .5 + .5, 1.0);\n}",HX.ShaderLibrary["default_normals_vertex.glsl"]="attribute vec4 hx_position;\nattribute vec3 hx_normal;\n\nuniform mat4 hx_wvpMatrix;\nuniform mat3 hx_normalWorldMatrix;\n\nvarying vec3 normal;\n\nvoid main()\n{\n    gl_Position = hx_wvpMatrix * hx_position;\n    normal = hx_normalWorldMatrix * hx_normal;\n}",HX.ShaderLibrary["default_specular_fragment.glsl"]="uniform float specularNormalReflection;\nuniform float metallicness;\nuniform float roughness;\n\nvoid main()\n{\n    vec4 specularData;\n    specularData.x = metallicness;\n    specularData.y = specularNormalReflection;\n    specularData.z = roughness;\n    specularData.w = 1.0;\n\n    gl_FragColor = hx_encodeSpecular(specularData);\n}",HX.ShaderLibrary["default_specular_vertex.glsl"]="attribute vec4 hx_position;\n\nuniform mat4 hx_wvpMatrix;\n\nvoid main()\n{\n    gl_Position = hx_wvpMatrix * hx_position;\n}",HX.ShaderLibrary["linearize_depth_fragment.glsl"]="varying vec2 uv;\n\nuniform sampler2D sampler;\nuniform float hx_rcpCameraFrustumRange;\nuniform mat4 hx_projectionMatrix;\n\nvoid main()\n{\n	float depth = hx_readDepth(sampler, uv);\n	float linear = hx_depthToViewZ(depth, hx_projectionMatrix) * hx_rcpCameraFrustumRange;\n	gl_FragColor = hx_floatToRGBA8(linear);\n}",HX.ShaderLibrary["linearize_depth_vertex.glsl"]="attribute vec4 hx_position;\nattribute vec2 hx_texCoord;\n\nvarying vec2 uv;\n\nvoid main()\n{\n	uv = hx_texCoord;\n	gl_Position = hx_position;\n}",HX.ShaderLibrary["lighting_blinn_phong.glsl"]="float hx_lightVisibility(in vec3 normal, in vec3 viewDir, float roughness, float nDotLClamped)\n{\n	float nDotV = max(-dot(normal, viewDir), 0.0);\n	// roughness remapping, this is essentially: sqrt(2 * roughness * roughness / PI)\n	// this remaps beckman distribution roughness to SmithSchlick\n	roughness *= .63772;\n	float g1 = nDotV*(1.0 - roughness) + roughness;\n	float g2 = nDotLClamped*(1.0 - roughness) + roughness;\n	return 1.0/(g1*g2);\n}\n\nvoid hx_lighting(in vec3 normal, in vec3 lightDir, in vec3 viewDir, in vec3 lightColor, vec3 specularNormalReflection, float roughness, float transmittance, out vec3 diffuseColor, out vec3 specularColor) \n{\n	float nDotL = -dot(lightDir, normal);\n	float nDotLClamped = max(nDotL, 0.0);\n	vec3 irradiance = nDotLClamped * lightColor;	// in fact irradiance / PI\n\n	vec3 halfVector = normalize(lightDir + viewDir);\n	float halfDotLight = dot(halfVector, lightDir);\n\n	float roughSqr = roughness*roughness;\n	roughSqr *= roughSqr;\n	float specular = max(-dot(halfVector, normal), 0.0);\n	float distribution = pow(specular, 2.0/roughSqr - 2.0)/roughSqr;\n\n	float visibility = hx_lightVisibility(normal, lightDir, roughness, nDotLClamped);\n	float microfacet = .25 * distribution * visibility;\n\n	float cosAngle = 1.0 - halfDotLight;\n	// to the 5th power\n	float power = cosAngle*cosAngle;\n	power *= power;\n	power *= cosAngle;\n	vec3 fresnel = specularNormalReflection + (1.0 - specularNormalReflection)*power;\n\n	//approximated fresnel-based energy conservation\n	diffuseColor = irradiance * (1.0 - fresnel) + max(-nDotL, 0.0) * lightColor * transmittance;\n	specularColor = irradiance * fresnel * microfacet;\n}\n\nvoid hx_lighting(in vec3 normal, in vec3 lightDir, in vec3 viewDir, in vec3 lightColor, vec3 specularNormalReflection, float roughness, float transmittance, out vec3 diffuseColor, out vec3 specularColor)\n{\n	float nDotL = -dot(lightDir, normal);\n	float nDotLClamped = max(nDotL, 0.0);\n	vec3 irradiance = nDotLClamped * lightColor;	// in fact irradiance / PI\n	//approximated fresnel-based energy conservation\n	float roughSqr = roughness*roughness;\n	roughSqr *= roughSqr;\n	vec3 halfVector = normalize(lightDir + viewDir);\n	float specular = max(-dot(halfVector, normal), 0.0);\n	float distribution = pow(specular, 2.0/roughSqr - 2.0)/roughSqr;\n	float microfacet = pow(specular, 2.0/roughSqr - 2.0);\n\n	diffuseColor = irradiance;\n	specularColor = irradiance * microfacet;\n}",HX.ShaderLibrary["snippets_general.glsl"]="precision mediump float;\n\n#define hx_processGeometry(albedo, normal, depth, metallicness, specularNormalReflection, roughness) { hx_processGeometryMRT(albedo, normal, depth, metallicness, specularNormalReflection, roughness, gl_FragData[0], gl_FragData[1], gl_FragData[2]); }\n\n// see Aras' blog post: http://aras-p.info/blog/2009/07/30/encoding-floats-to-rgba-the-final/\n// Only for 0 - 1\nvec4 hx_floatToRGBA8(float value)\n{\n    vec4 enc = vec4(1.0, 255.0, 65025.0, 16581375.0) * value;\n    enc = fract(enc);\n    return enc - enc.yzww * vec4(1.0/255.0,1.0/255.0,1.0/255.0,0.0);\n}\n\nfloat hx_RGBA8ToFloat(vec4 rgba)\n{\n    return dot(rgba, vec4(1.0, 1.0/255.0, 1.0/65025.0, 1.0/16581375.0));\n}\n\nvec2 hx_floatToRG8(float value)\n{\n    vec2 enc = vec2(1.0, 255.0) * value;\n    enc = fract(enc);\n    enc.x -= enc.y / 255.0;\n    return enc;\n}\n\nfloat hx_RG8ToFloat(vec2 rgba)\n{\n    return dot(rgba, vec2(1.0, 1.0/255.0));\n}\n\nvec4 hx_encodeNormalDepth(vec3 normal, float depth)\n{\n	#ifdef HX_STORE_EXPLICIT_DEPTH\n    	vec4 data;\n    	// xy contain normal\n		data.xy = normal.xy * .5 + .5;\n		data.zw = hx_floatToRG8(depth);\n		// use some of the lower precision depth to encode store normal sign\n		data.w *= sign(normal.z) * data.w * .5 + .5;\n		return data;\n	#else\n		return vec4(normal * .5 + .5, 1.0);\n    #endif\n}\n\nfloat hx_readDepth(sampler2D sampler, vec2 uv)\n{\n	#ifdef HX_STORE_EXPLICIT_DEPTH\n		vec4 data = texture2D(sampler, uv);\n		data.w = data.w * 2.0 - 1.0;\n		data.w *= sign(data.w);\n		return hx_RG8ToFloat(data);\n    #else\n    	return texture2D(sampler, uv).x;\n    #endif\n}\n\nvoid hx_decodeNormalDepth(vec4 data, out vec3 normal, out float depth)\n{\n	#ifdef HX_STORE_EXPLICIT_DEPTH\n    	normal.xy = data.xy;\n		normal.z = sqrt(1.0 - data.x * data.x - data.y * data.y);\n		data.w = data.w * 2.0 - 1.0;\n		normal.z *= sign(data.w);\n		data.w *= sign(data.w);\n		depth = hx_RG8ToFloat(data.zw);\n    #else\n    	normal = data.xyz * 2.0 - 1.0;\n    #endif\n}\n\nvoid hx_processGeometryMRT(vec4 albedo, vec3 normal, float depth, float metallicness, float specularNormalReflection, float roughness, out vec4 albedoData, out vec4 normalData, out vec4 specularData)\n{\n    albedoData = albedo;\n	normalData = hx_encodeNormalDepth(normal, depth);\n\n    specularData.x = metallicness;\n    // scale specular reflectivity by 5 to have better precision since we only need the range ~[0, .2] (.17 = diamond)\n    specularData.y = specularNormalReflection * 5.0;\n    specularData.z = roughness;\n    specularData.w = 1.0;\n}\n\nvec4 hx_gammaToLinear(vec4 color)\n{\n    #ifdef HX_LINEAR_SPACE\n        color.x = pow(color.x, 2.2);\n        color.y = pow(color.y, 2.2);\n        color.z = pow(color.z, 2.2);\n    #endif\n    return color;\n}\n\nvec3 hx_gammaToLinear(vec3 color)\n{\n    #ifdef HX_LINEAR_SPACE\n        color.x = pow(color.x, 2.2);\n        color.y = pow(color.y, 2.2);\n        color.z = pow(color.z, 2.2);\n    #endif\n    return color;\n}\n\nvec4 hx_linearToGamma(vec4 linear)\n{\n    #ifdef HX_LINEAR_SPACE\n        linear.x = pow(linear.x, 0.45);\n        linear.y = pow(linear.y, 0.45);\n        linear.z = pow(linear.z, 0.45);\n    #endif\n    return linear;\n}\n\nvec3 hx_linearToGamma(vec3 linear)\n{\n    #ifdef HX_LINEAR_SPACE\n        linear.x = pow(linear.x, 0.45);\n        linear.y = pow(linear.y, 0.45);\n        linear.z = pow(linear.z, 0.45);\n    #endif\n    return linear;\n}\n\nfloat hx_sampleLinearDepth(sampler2D tex, vec2 uv)\n{\n    return hx_RGBA8ToFloat(texture2D(tex, uv));\n}\n\nvec3 hx_getFrustumVector(vec2 position, mat4 unprojectionMatrix)\n{\n    vec4 unprojNear = unprojectionMatrix * vec4(position, -1.0, 1.0);\n    vec4 unprojFar = unprojectionMatrix * vec4(position, 1.0, 1.0);\n    return unprojFar.xyz/unprojFar.w - unprojNear.xyz/unprojNear.w;\n}\n\nvec3 hx_getLinearDepthViewVector(vec2 position, mat4 unprojectionMatrix)\n{\n    vec4 unproj = unprojectionMatrix * vec4(position, 0.0, 1.0);\n    unproj /= unproj.w;\n    return -unproj.xyz / unproj.z;\n}\n\n// THIS IS FOR NON_LINEAR DEPTH!\nfloat hx_depthToViewZ(float depthSample, mat4 projectionMatrix)\n{\n    return -projectionMatrix[3][2] / (depthSample * 2.0 - 1.0 + projectionMatrix[2][2]);\n}\n\nvec4 hx_decodeSpecular(vec4 data)\n{\n    // scale specular reflectivity by 5 to have better precision since we only need the range ~[0, .2] (.17 = diamond)\n    data.y *= .2;\n    return data;\n}\n\nvec3 hx_getNormalSpecularReflectance(float metallicness, float insulatorNormalSpecularReflectance, vec3 albedo)\n{\n    return mix(vec3(insulatorNormalSpecularReflectance), albedo, metallicness);\n}\n\nvoid hx_decodeReflectionData(in vec4 albedoSample, in vec4 specularSample, out vec3 normalSpecularReflectance, out float roughness)\n{\n    normalSpecularReflectance = mix(vec3(specularSample.y * .2), albedoSample.xyz, specularSample.x);\n    //prevent from being 0 \n    roughness = clamp(specularSample.z, .01, .99);\n}\n\nvec3 hx_fresnel(vec3 normalSpecularReflectance, vec3 lightDir, vec3 halfVector)\n{\n    float cosAngle = 1.0 - max(dot(halfVector, lightDir), 0.0);\n    // to the 5th power\n    float power = pow(cosAngle, 5.0);\n    return normalSpecularReflectance + (1.0 - normalSpecularReflectance) * power;\n}\n\nfloat hx_luminance(vec4 color)\n{\n    return dot(color.xyz, vec3(.30, 0.59, .11));\n}\n\nfloat hx_luminance(vec3 color)\n{\n    return dot(color, vec3(.30, 0.59, .11));\n}\n\n",HX.GLSLIncludeGeneral=HX.ShaderLibrary.get("snippets_general.glsl"),HX.DEFERRED_LIGHT_MODEL=HX.ShaderLibrary.get("lighting_blinn_phong.glsl"),HX.Shader=function(t,e){this._ready=!1,this._vertexShader=null,this._fragmentShader=null,this._program=null,this._renderOrderHint=++HX.Shader.ID_COUNTER,t&&e&&this.init(t,e)},HX.Shader.ID_COUNTER=0,HX.Shader.prototype={constructor:HX.Shader,isReady:function(){return this._ready},init:function(t,e){return t=HX.GLSLIncludeGeneral+t,e=HX.GLSLIncludeGeneral+e,this._vertexShader=HX.GL.createShader(HX.GL.VERTEX_SHADER),this._initShader(this._vertexShader,t)?(this._fragmentShader=HX.GL.createShader(HX.GL.FRAGMENT_SHADER),this._initShader(this._fragmentShader,e)?(this._program=HX.GL.createProgram(),HX.GL.attachShader(this._program,this._vertexShader),HX.GL.attachShader(this._program,this._fragmentShader),HX.GL.linkProgram(this._program),HX.GL.getProgramParameter(this._program,HX.GL.LINK_STATUS)?void(this._ready=!0):(console.warn("Error in program linking:"+HX.GL.getProgramInfoLog(this._program)),void this.dispose())):(console.log("Failed generating fragment shader:"),console.log(e),void this.dispose())):(console.log("Failed generating vertex shader"),console.log(t),void this.dispose())},updateRenderState:function(){HX.GL.useProgram(this._program)},_initShader:function(t,e){return HX.GL.shaderSource(t,e),HX.GL.compileShader(t),HX.GL.getShaderParameter(t,HX.GL.COMPILE_STATUS)?!0:(console.warn(HX.GL.getShaderInfoLog(t)),!1)},dispose:function(){HX.GL.deleteShader(this._vertexShader),HX.GL.deleteShader(this._fragmentShader),HX.GL.deleteProgram(this._program),this._ready=!1},getProgram:function(){return this._program},getVertexAttributeIndex:function(t){return HX.GL.getAttribLocation(this._program,t)}},HX.TextureSlot=function(){this.location=-1,this.texture=null},HX.MaterialPass=function(t){this._shader=t,this._textureSlots=[],this._uniforms={},this._elementType=HX.GL.TRIANGLES,this._cullMode=HX.GL.BACK,this._blending=!1,this._blendSource=HX.GL.ONE,this._blendDest=HX.GL.ZERO,this._blendOperator=HX.GL.FUNC_ADD,this._gbuffer=null,this._enabled=!0,this._storeUniforms()},HX.MaterialPass.GEOMETRY_PASS=0,HX.MaterialPass.GEOMETRY_POST_ALBEDO_PASS=1,HX.MaterialPass.GEOMETRY_POST_NORMAL_PASS=2,HX.MaterialPass.GEOMETRY_POST_SPECULAR_PASS=3,HX.MaterialPass.PRE_EFFECT_PASS=4,HX.MaterialPass.POST_PASS=5,HX.MaterialPass.NUM_PASS_TYPES=6,HX.MaterialPass.GEOMETRY_ALBEDO_PASS=HX.MaterialPass.GEOMETRY_PASS,HX.MaterialPass.GEOMETRY_NORMAL_PASS=HX.MaterialPass.NUM_PASS_TYPES++,HX.MaterialPass.GEOMETRY_SPECULAR_PASS=HX.MaterialPass.NUM_PASS_TYPES++,HX.MaterialPass.prototype={constructor:HX.MaterialPass,getShader:function(){return this._shader},setElementType:function(t){this._elementType=t},getElementType:function(){return this._elementType},setCullMode:function(t){this._cullMode=t},getCullMode:function(){return this._cullMode},disableBlendMode:function(){this._blending=!1},setBlendMode:function(t,e,i){this._blending=!0,this._blendSource=t,this._blendDest=e,this._blendOperator=i},assignGBuffer:function(t){this._gbuffer!=t&&(this._gbuffer=t,this.setTexture("hx_gbufferAlbedo",t[0]),this.setTexture("hx_gbufferNormals",t[1]),this.setTexture("hx_gbufferSpecular",t[2]),this.setTexture("hx_gbufferDepth",t[3]))},updateRenderState:function(){this._shader.updateRenderState();for(var t=this._textureSlots.length,e=0;t>e;++e){var i=this._textureSlots[e],r=i.texture;r.isReady()?r.bind(e):r._default.bind(e)}},_storeUniforms:function(){for(var t=HX.GL.getProgramParameter(this._shader._program,HX.GL.ACTIVE_UNIFORMS),e=0;t>e;++e){var i=HX.GL.getActiveUniform(this._shader._program,e),r=i.name,n=HX.GL.getUniformLocation(this._shader._program,r);this._uniforms[r]={type:i.type,location:n,size:i.size}}},getTextureSlot:function(t){if(!this._uniforms.hasOwnProperty(t))return null;HX.GL.useProgram(this._shader._program);for(var e=this._uniforms[t],i=e.location,r=null,n=this._textureSlots.length,s=0;n>s;++s)if(this._textureSlots[s].location==i){r=this._textureSlots[s];break}return null==r&&(r=new HX.TextureSlot,this._textureSlots.push(r),HX.GL.uniform1i(i,s),r.location=i),r},setTexture:function(t,e){var i=this.getTextureSlot(t);i&&(i.texture=e)},getUniformLocation:function(t){return this._uniforms.hasOwnProperty(t)?this._uniforms[t].location:void 0},setUniformArray:function(t,e){if(t+="[0]",this._uniforms.hasOwnProperty(t)){var i=this._uniforms[t];switch(HX.GL.useProgram(this._shader._program),i.type){case HX.GL.FLOAT:HX.GL.uniform1fv(i.location,e);break;case HX.GL.FLOAT_VEC2:HX.GL.uniform2fv(i.location,e);break;case HX.GL.FLOAT_VEC3:HX.GL.uniform3fv(i.location,e);break;case HX.GL.FLOAT_VEC4:HX.GL.uniform4fv(i.location,e);break;case HX.GL.INT:HX.GL.uniform1iv(i.location,e);break;case HX.GL.INT_VEC2:HX.GL.uniform2iv(i.location,e);break;case HX.GL.INT_VEC3:HX.GL.uniform3iv(i.location,e);break;case HX.GL.INT_VEC4:HX.GL.uniform1iv(i.location,e);break;case HX.GL.BOOL:HX.GL.uniform1bv(i.location,e);break;case HX.GL.BOOL_VEC2:HX.GL.uniform2bv(i.location,e);break;case HX.GL.BOOL_VEC3:HX.GL.uniform3bv(i.location,e);break;case HX.GL.BOOL_VEC4:HX.GL.uniform4bv(i.location,e);break;default:throw"Unsupported uniform format for setting. May be a todo."}}},setUniform:function(t,e){if(this._uniforms.hasOwnProperty(t)){var i=this._uniforms[t];switch(HX.GL.useProgram(this._shader._program),i.type){case HX.GL.FLOAT:HX.GL.uniform1f(i.location,e);break;case HX.GL.FLOAT_VEC2:HX.GL.uniform2f(i.location,e.x,e.y);break;case HX.GL.FLOAT_VEC3:HX.GL.uniform3f(i.location,e.x||e.r,e.y||e.g,e.z||e.b);break;case HX.GL.FLOAT_VEC4:HX.GL.uniform4f(i.location,e.x||e.r,e.y||e.g,e.z||e.b,e.w||e.a);break;case HX.GL.INT:HX.GL.uniform1i(i.location,e);break;case HX.GL.INT_VEC2:HX.GL.uniform2i(i.location,e.x,e.y);break;case HX.GL.INT_VEC3:HX.GL.uniform3i(i.location,e.x,e.y,e.z);break;case HX.GL.INT_VEC4:HX.GL.uniform1i(i.location,e.x,e.y,e.z,e.w);break;case HX.GL.BOOL:HX.GL.uniform1i(i.location,e);break;case HX.GL.BOOL_VEC2:HX.GL.uniform2i(i.location,e.x,e.y);break;case HX.GL.BOOL_VEC3:HX.GL.uniform3i(i.location,e.x,e.y,e.z);break;case HX.GL.BOOL_VEC4:HX.GL.uniform4i(i.location,e.x,e.y,e.z,e.w);break;default:throw"Unsupported uniform format for setting. May be a todo."}}},isEnabled:function(){return this._enabled},setEnabled:function(t){this._enabled=t}},HX.Material=function(){this._passes=new Array(HX.Material.NUM_TOTAL_PASS_TYPES),this._renderOrderHint=++HX.Material.ID_COUNTER,this.onChange=new HX.Signal,this._textures={},this._uniforms={}},HX.Material.parseFromXML=function(t){var e=new HX.Material;return HX.Material._parseXMLTo(t,e),e},HX.Material._parseXMLTo=function(t,e){HX.EXT_DRAW_BUFFERS?HX.Material._parsePassFromXML(t,HX.MaterialPass.GEOMETRY_PASS,"geometry",e):(HX.Material._parsePassFromXML(t,HX.MaterialPass.GEOMETRY_ALBEDO_PASS,"geometryAlbedo",e),HX.Material._parsePassFromXML(t,HX.MaterialPass.GEOMETRY_NORMAL_PASS,"geometryNormals",e),HX.Material._parsePassFromXML(t,HX.MaterialPass.GEOMETRY_SPECULAR_PASS,"geometrySpecular",e)),HX.Material._parsePassFromXML(t,HX.MaterialPass.GEOMETRY_POST_ALBEDO_PASS,"geometryPostAlbedo",e),HX.Material._parsePassFromXML(t,HX.MaterialPass.GEOMETRY_POST_NORMAL_PASS,"geometryPostNormal",e),HX.Material._parsePassFromXML(t,HX.MaterialPass.GEOMETRY_POST_SPECULAR_PASS,"geometryPostSpecular",e),HX.Material._parsePassFromXML(t,HX.MaterialPass.PRE_EFFECT_PASS,"preEffect",e),HX.Material._parsePassFromXML(t,HX.MaterialPass.POST_PASS,"post",e);var i=t.getElementsByTagName("uniforms")[0];if(i)for(var r=i.firstChild;r;){if("#text"!=r.nodeName){var n=r.getAttribute("value").split(",");1==n.length?e.setUniform(r.nodeName,Number(n[0]),!1):e.setUniform(r.nodeName,{x:Number(n[0]),y:Number(n[1]),z:Number(n[2]),w:Number(n[3])},!1)}r=r.nextSibling}e.setTexture("hx_dither2D",HX.DEFAULT_2D_DITHER_TEXTURE)},HX.Material._translateProperty=function(t){return HX.Material._properties||(HX.Material._properties={back:HX.GL.BACK,front:HX.GL.FRONT,both:HX.GL.FRONT_AND_BACK,disabled:null,lines:HX.GL.LINES,points:HX.GL.POINTS,triangles:HX.GL.TRIANGLES,one:HX.GL.ONE,zero:HX.GL.ZERO,sourceColor:HX.GL.SRC_COLOR,oneMinusSourceColor:HX.GL.ONE_MINUS_SRC_COLOR,sourceAlpha:HX.GL.SRC_ALPHA,oneMinusSourceAlpha:HX.GL.ONE_MINUS_SRC_ALPHA,destinationAlpha:HX.GL.DST_ALPHA,oneMinusDestinationAlpha:HX.GL.ONE_MINUS_DST_ALPHA,destinationColor:HX.GL.DST_COLOR,sourceAlphaSaturate:HX.GL.SRC_ALPHA_SATURATE,add:HX.GL.FUNC_ADD,subtract:HX.GL.FUNC_SUBTRACT,reverseSubtract:HX.GL.FUNC_REVERSE_SUBTRACT}),HX.Material._properties[t]},HX.MaterialPass.DST_ALPHA="disabled",HX.MaterialPass.ONE_MINUS_SRC_COLOR="disabled",HX.Material._decodeHTML=function(t){var e=document.createElement("div");return e.innerHTML=t,0===e.childNodes.length?"":e.childNodes[0].nodeValue},HX.Material._parsePassFromXML=function(t,e,i,r){var n=t.getElementsByTagName("common")[0];n=n?n.innerHTML:"";var s=t.getElementsByTagName(i);if(void 0!==s&&0!==s.length){var a=s[0],o=a.getElementsByTagName("vertex")[0].innerHTML,h=a.getElementsByTagName("fragment")[0].innerHTML,_=a.getElementsByTagName("element")[0],l=a.getElementsByTagName("cullmode")[0],u=a.getElementsByTagName("blend")[0],c=n+t.querySelector("[id="+o+"]").innerHTML,m=n+t.querySelector("[id="+h+"]").innerHTML;c=HX.Material._decodeHTML(c),m=HX.Material._decodeHTML(m);var f=new HX.Shader(c,m),d=new HX.MaterialPass(f);if(_&&d.setElementType(HX.Material._translateProperty(_.innerHTML)),l&&d.setCullMode(HX.Material._translateProperty(l.innerHTML)),u){var p=u.getElementsByTagName("source")[0],X=u.getElementsByTagName("destination")[0],H=u.getElementsByTagName("operator")[0];p=p?HX.Material._translateProperty(p.innerHTML):HX.GL.ONE,X=X?HX.Material._translateProperty(X.innerHTML):HX.GL.ZERO,H=p?HX.Material._translateProperty(H.innerHTML):HX.GL.FUNC_ADD,d.setBlendMode(p,X,H)}r.setPass(e,d)}},HX.Material.ID_COUNTER=0,HX.Material.prototype={constructor:HX.Material,getPass:function(t){return this._passes[t]},setPass:function(t,e){if(this._passes[t]=e,e){e._renderOrderHint=this._renderOrderHint;for(var i in this._textures)this._textures.hasOwnProperty(i)&&e.setTexture(i,this._textures[i]);for(var r in this._uniforms)this._uniforms.hasOwnProperty(r)&&("]"==r.charAt(r.length-1)?e.setUniformArray(r.substr(0,r.length-3),this._uniforms[r]):e.setUniform(r,this._uniforms[r]))}this.onChange.dispatch()},hasPass:function(t){return void 0!==this._passes[t]},setTexture:function(t,e){this._textures[t]=e;for(var i=0;i<HX.MaterialPass.NUM_TOTAL_PASS_TYPES;++i)this._passes[i]&&this._passes[i].setTexture(t,e)},setUniform:function(t,e,i){if(void 0===i&&(i=!0),i||!this._uniforms.hasOwnProperty(t)){this._uniforms[t]=e;for(var r=0;r<HX.MaterialPass.NUM_TOTAL_PASS_TYPES;++r)this._passes[r]&&this._passes[r].setUniform(t,e)}},setUniformArray:function(t,e,i){if(void 0===i&&(i=!0),i||!this._uniforms.hasOwnProperty(t+"[0]")){this._uniforms[t+"[0]"]=e;for(var r=0;r<HX.MaterialPass.NUM_TOTAL_PASS_TYPES;++r)this._passes[r]&&this._passes[r].setUniformArray(t,e)}}},HX.FileMaterial=function(t,e,i){HX.Material.call(this);var r=new HX.URLLoader,n=this;r.onComplete=function(t){var i=new DOMParser,r=i.parseFromString(t,"text/xml");HX.Material._parseXMLTo(r,n),e&&e()},r.onError=function(e){console.warn("Failed loading "+t+". Error code: "+e),i&&i(e)},r.load(t)},HX.FileMaterial.prototype=Object.create(HX.Material.prototype),HX.SceneNode=function(){this._effects=null,this._transformMatrix=new HX.Matrix4x4,this._worldTransformMatrix=new HX.Matrix4x4,this._worldBoundsInvalid=!0,this._worldTransformationInvalid=!0,this._parent=null,this._worldBounds=this._createBoundingVolume(),this._debugBounds=null,this._renderOrderHint=0},HX.SceneNode.prototype={constructor:HX.SceneNode,getEffects:function(t){return this._effects},setEffects:function(t){this._effects=t},getTransformationMatrix:function(){return this._transformMatrix},setTransformationMatrix:function(t){this._transformMatrix=t,this._invalidateWorldTransformation()},getWorldMatrix:function(){return this._worldTransformationInvalid&&this._updateWorldTransformationMatrix(),this._worldTransformMatrix},getWorldBounds:function(){return this._worldBoundsInvalid&&(this._updateWorldBounds(),this._worldBoundsInvalid=!1),this._worldBounds},acceptVisitor:function(t){this._effects&&t.visitEffects(this._effects,this),this._debugBounds&&this._debugBounds.acceptVisitor(t)},getShowDebugBounds:function(){return null!==this._debugBounds},setShowDebugBounds:function(t){this.getShowDebugBounds()!==t&&(t?(this._debugBounds=new HX.ModelNode(this._worldBounds.getDebugModelInstance()),this._updateDebugBounds()):this._debugBounds=null)},_invalidateWorldTransformation:function(){this._worldTransformationInvalid=!0,this._invalidateWorldBounds()},_invalidateWorldBounds:function(t){this._worldBoundsInvalid||(this._worldBoundsInvalid=!0,t!==!1&&this._parent&&this._parent._invalidateWorldBounds())},_updateWorldBounds:function(){this._debugBounds&&this._updateDebugBounds()},_updateDebugBounds:function(){var t=this._debugBounds.getTransformationMatrix(),e=this._worldBounds;t.scaleMatrix(2*e._halfExtentX,2*e._halfExtentY,2*e._halfExtentZ),t.appendTranslation(e._centerX,e._centerY,e._centerZ),this._debugBounds.setTransformationMatrix(t)},_updateWorldTransformationMatrix:function(){this._parent?this._worldTransformMatrix.product(this._parent.getWorldMatrix(),this._transformMatrix):this._worldTransformMatrix.copyFrom(this._transformMatrix),this._worldTransformationInvalid=!1},_createBoundingVolume:function(){return new HX.BoundingAABB}},HX.BoundingHierarchyNode=function(){HX.SceneNode.call(this),this._children=[]},HX.BoundingHierarchyNode.prototype=Object.create(HX.SceneNode.prototype),HX.BoundingHierarchyNode.prototype.attach=function(t){if(t._parent)throw"Child is already parented!";t._parent=this,this._children.push(t),this._invalidateWorldBounds()},HX.BoundingHierarchyNode.prototype.detach=function(t){var e=this._children.indexOf(t);if(0>e)throw"Trying to remove a scene object that is not a child";t._parent=null,this._children.splice(e,1),this._invalidateWorldBounds()},HX.BoundingHierarchyNode.prototype.numChildren=function(){return this._children.length},HX.BoundingHierarchyNode.prototype.getChild=function(t){
return this._children[t]},HX.BoundingHierarchyNode.prototype.acceptVisitor=function(t){HX.SceneNode.prototype.acceptVisitor.call(this,t);for(var e=this._children.length,i=0;e>i;++i){var r=this._children[i];t.qualifies(r)&&r.acceptVisitor(t)}},HX.BoundingHierarchyNode.prototype._invalidateWorldBounds=function(){HX.SceneNode.prototype._invalidateWorldBounds.call(this);for(var t=this._children.length,e=0;t>e;++e)this._children[e]._invalidateWorldBounds(!1)},HX.BoundingHierarchyNode.prototype._invalidateWorldTransformation=function(){HX.SceneNode.prototype._invalidateWorldTransformation.call(this);for(var t=this._children.length,e=0;t>e;++e)this._children[e]._invalidateWorldTransformation()},HX.BoundingHierarchyNode.prototype._updateWorldBounds=function(){this._worldBounds.clear();for(var t=this._children.length,e=0;t>e;++e)this._worldBounds.growToIncludeBound(this._children[e].getWorldBounds());HX.SceneNode.prototype._updateWorldBounds.call(this)},HX.Scene=function(t){this._rootNode=t||new HX.BoundingHierarchyNode,this._skyBox=null},HX.Scene.prototype={constructor:HX.Scene,getSkyBox:function(){return this._skyBox},setSkyBox:function(t){this._skyBox=t},getEffects:function(t){return this._rootNode._effects},setEffects:function(t){this._rootNode._effects=t},attach:function(t){this._rootNode.attach(t)},detach:function(t){this._rootNode.detach(t)},numChildren:function(){return this._rootNode.numChildren()},getChild:function(t){return this._rootNode.getChild(t)},contains:function(t){this._rootNode.contains(t)},acceptVisitor:function(t){t.visitScene(this),this._rootNode.acceptVisitor(t)}},HX.ModelNode=function(t){HX.SceneNode.call(this),this.setModelInstance(t)},HX.ModelNode.prototype=Object.create(HX.SceneNode.prototype),HX.ModelNode.prototype.acceptVisitor=function(t){HX.SceneNode.prototype.acceptVisitor.call(this,t),t.visitModelInstance(this._modelInstance,this.getWorldMatrix(),this.getWorldBounds())},HX.ModelNode.prototype.getModelInstance=function(){return this._modelInstance},HX.ModelNode.prototype.setModelInstance=function(t){this._modelInstance&&this._modelInstance.onChange.unbind(this,HX.ModelNode.prototype._invalidateWorldBounds),this._modelInstance=t,this._modelInstance.onChange.bind(this,HX.ModelNode.prototype._invalidateWorldBounds),this._invalidateWorldBounds()},HX.ModelNode.prototype._updateWorldBounds=function(){this._modelInstance&&this._worldBounds.transformFrom(this._modelInstance.getLocalBounds(),this.getWorldMatrix()),HX.SceneNode.prototype._updateWorldBounds.call(this)},HX.Light=function(t){HX.SceneNode.call(this),this._luminance=1,this._luminanceBound=1/255,this._type=t,this._color=new HX.Color(1,1,1),this._scaledIrradiance=new HX.Color,this._castsShadows=!1,this._updateScaledIrradiance()},HX.Light.prototype=Object.create(HX.SceneNode.prototype),HX.Light.prototype.acceptVisitor=function(t){HX.SceneNode.prototype.acceptVisitor.call(this,t),t.visitLight(this)},HX.Light.prototype.getLuminance=function(){return this._luminance},HX.Light.prototype.setLuminance=function(t){this._luminance=t,this._updateScaledIrradiance()},HX.Light.prototype.getColor=function(){return this._color},HX.Light.prototype.activate=function(t,e,i){},HX.Light.prototype.renderBatch=function(t,e,i,r,n){throw"Abstract method!"},HX.Light.prototype.setColor=function(t){this._color=isNaN(t)?t:new HX.Color(t),this._updateScaledIrradiance()},HX.Light.prototype.getLuminanceBound=function(){return this._luminanceBound},HX.Light.prototype.setLuminanceBound=function(t){this._luminanceBound=t,this._updateWorldBounds()},HX.Light.prototype.luminance=function(){return this._color.luminance()*this._luminance},HX.Light.prototype._updateScaledIrradiance=function(){var t=this._luminance/(Math.PI*this._color.luminance());this._scaledIrradiance.r=this._color.r*t,this._scaledIrradiance.g=this._color.g*t,this._scaledIrradiance.b=this._color.b*t,this._invalidateWorldBounds()},HX.RenderItem=function(){this.worldMatrix=null,this.meshInstance=null,this.pass=null,this.camera=null,this.uniformSetters=null},HX.RenderItem.prototype={draw:function(){if(this.uniformSetters)for(var t=this.uniformSetters.length,e=0;t>e;++e)this.uniformSetters[e].execute(this.worldMatrix,this.camera);HX.GL.drawElements(this.pass._elementType,this.meshInstance._mesh.numIndices(),HX.GL.UNSIGNED_SHORT,0)}},HX.SceneVisitor=function(){},HX.SceneVisitor.prototype={collect:function(t,e){},qualifies:function(t){},visitLight:function(t){},visitModelInstance:function(t,e){},visitScene:function(t){},visitEffects:function(t,e){}},HX.Renderer=function(){},HX.Renderer.prototype={constructor:HX.Renderer,render:function(t,e,i){},dispose:function(){},_renderPass:function(t,e){for(var i=e.length,r=null,n=null,s=null,a=0;i>a;++a){var o=e[a],h=o.meshInstance,_=o.pass,l=_._shader;l!==r&&(l.updateRenderState(),r=l),_!==n&&(this._switchPass(n,_),n=_,s=null),s!=h._mesh&&(h.updateRenderState(t),s=h._mesh),o.draw()}n&&n._blending&&HX.GL.disable(HX.GL.BLEND)},_switchPass:function(t,e){t&&t._cullMode===t._cullMode||(null==e._cullMode?HX.GL.disable(HX.GL.CULL_FACE):(HX.GL.enable(HX.GL.CULL_FACE),HX.GL.cullFace(e._cullMode))),t&&t._blending===t._blending||(e._blending?(HX.GL.enable(HX.GL.BLEND),HX.GL.blendFunc(e._blendSource,e._blendDest),HX.GL.blendEquation(e._blendOperator)):HX.GL.disable(HX.GL.BLEND)),e.updateRenderState()}},HX.ScreenRenderer=function(){HX.Renderer.call(this),this._viewportX=0,this._viewportY=0,this._viewportWidth=0,this._viewportHeight=0,this._copyTexture=new HX.CopyTextureShader,this._copyXChannel=new HX.CopyTextureShader("x"),this._copyYChannel=new HX.CopyTextureShader("y"),this._copyZChannel=new HX.CopyTextureShader("z"),this._copyWChannel=new HX.CopyTextureShader("w"),this._debugDepth=new HX.DebugDepthShader,this._applyGamma=new HX.ApplyGammaShader,this._gammaApplied=!1,this._linearizeDepthShader=new HX.LinearizeDepthShader,this._rectMesh=HX.RectMesh.create({alignment:HX.PlanePrimitive.ALIGN_XY}),this._renderCollector=new HX.RenderCollector,this._gbufferFBO=null,this._linearDepthFBO=null,this._hdrSourceIndex=0,this._hdrTargets=null,this._hdrTargetsDepth=null,this._depthBuffer=null,this._aoEffect=null,this._localReflections=null,this._passSourceTexture=null,this._createGBuffer(),this._createHDRBuffers(),this._linearDepthInvalid=!0,this._debugMode=HX.ScreenRenderer.DEBUG_NONE,this._camera=null},HX.ScreenRenderer.prototype=Object.create(HX.Renderer.prototype),HX.ScreenRenderer.DEBUG_NONE=0,HX.ScreenRenderer.DEBUG_ALBEDO=1,HX.ScreenRenderer.DEBUG_NORMALS=2,HX.ScreenRenderer.DEBUG_METALLICNESS=3,HX.ScreenRenderer.DEBUG_SPECULAR_NORMAL_REFLECTION=4,HX.ScreenRenderer.DEBUG_ROUGHNESS=5,HX.ScreenRenderer.DEBUG_DEPTH=6,HX.ScreenRenderer.DEBUG_LIGHT_ACCUM=7,HX.ScreenRenderer.DEBUG_AO=8,HX.ScreenRenderer.prototype.setDebugMode=function(t){this._debugMode=t},HX.ScreenRenderer.prototype.getAmbientOcclusion=function(){return this._aoEffect},HX.ScreenRenderer.prototype.setAmbientOcclusion=function(t){this._aoEffect=t,this._aoEffect.setMesh(this._rectMesh)},HX.ScreenRenderer.prototype.setLocalReflections=function(t){this._localReflections=t,this._localReflections.setMesh(this._rectMesh)},HX.ScreenRenderer.prototype.setViewportRect=function(t,e,i,r){(this._viewportWidth!=i||this._viewportHeight!=r)&&(this._updateGBuffer(i,r),this._updateHDRBuffers(i,r)),this._viewportX=0,this._viewportY=0,this._viewportWidth=i,this._viewportHeight=r},HX.ScreenRenderer.prototype.render=function(t,e,i){this._gammaApplied=!1,this._passSourceTexture=null,this._hdrSourceIndex=0,this._camera=t,this._scene=e,HX.GL.enable(HX.GL.DEPTH_TEST),HX.GL.enable(HX.GL.CULL_FACE),HX.GL.cullFace(HX.GL.BACK),HX.GL.depthFunc(HX.GL.LESS),t._setRenderTargetResolution(this._viewportWidth,this._viewportHeight),this._renderCollector.collect(t,e),this._renderShadowCasters(),HX.GL.viewport(this._viewportX,this._viewportY,this._viewportWidth,this._viewportHeight),this._renderToGBuffer(),this._linearizeDepth(),this._renderPostToGBuffer(),this._linearDepthInvalid&&this._linearizeDepth(),HX.GL.disable(HX.GL.BLEND),HX.GL.disable(HX.GL.DEPTH_TEST),HX.GL.disable(HX.GL.CULL_FACE),null!=this._aoEffect&&this._renderEffect(this._aoEffect,i),HX.GL.viewport(this._viewportX,this._viewportY,this._viewportWidth,this._viewportHeight),this._renderToScreen(i)},HX.ScreenRenderer.prototype._renderShadowCasters=function(){HX.GL.colorMask(!1,!1,!1,!1);for(var t=this._renderCollector.getShadowCasters(),e=t.length,i=0;e>i;++i)t[i].render(this._camera,this._scene);HX.GL.colorMask(!0,!0,!0,!0)},HX.ScreenRenderer.prototype._renderToGBuffer=function(){throw"Abstract method"},HX.ScreenRenderer.prototype._linearizeDepth=function(){HX.GL.disable(HX.GL.DEPTH_TEST),HX.GL.disable(HX.GL.CULL_FACE),HX.setRenderTarget(this._linearDepthFBO),this._linearizeDepthShader.execute(this._rectMesh,HX.EXT_DEPTH_TEXTURE?this._depthBuffer:this._gbuffer[2],this._camera),this._linearDepthInvalid=!1},HX.ScreenRenderer.prototype._renderEffect=function(t,e){this._gammaApplied=this._gammaApplied||t._outputsGamma,this._hdrSourceIndex=t.render(this,e)},HX.ScreenRenderer.prototype._renderPostToGBuffer=function(){HX.GL.enable(HX.GL.CULL_FACE),HX.GL.enable(HX.GL.DEPTH_TEST),HX.GL.depthFunc(HX.GL.LEQUAL),this._renderPostGBufferPass(1,HX.MaterialPass.GEOMETRY_POST_NORMAL_PASS),this._renderPostGBufferPass(0,HX.MaterialPass.GEOMETRY_POST_ALBEDO_PASS),this._renderPostGBufferPass(2,HX.MaterialPass.GEOMETRY_POST_SPECULAR_PASS)},HX.ScreenRenderer.prototype._renderPostGBufferPass=function(t,e){this._renderCollector.getRenderList(e).length>0&&(HX.setRenderTarget(this._gbufferSingleFBOs[t]),this._renderPass(e),this._linearDepthInvalid=!0)},HX.ScreenRenderer.prototype._renderToScreen=function(t){switch(this._debugMode){case HX.ScreenRenderer.DEBUG_ALBEDO:HX.setRenderTarget(null),this._copyTexture.execute(this._rectMesh,this._gbuffer[0]);break;case HX.ScreenRenderer.DEBUG_NORMALS:HX.setRenderTarget(null),this._copyTexture.execute(this._rectMesh,this._gbuffer[1]);break;case HX.ScreenRenderer.DEBUG_METALLICNESS:HX.setRenderTarget(null),this._copyXChannel.execute(this._rectMesh,this._gbuffer[2]);break;case HX.ScreenRenderer.DEBUG_SPECULAR_NORMAL_REFLECTION:HX.setRenderTarget(null),this._copyYChannel.execute(this._rectMesh,this._gbuffer[2]);break;case HX.ScreenRenderer.DEBUG_ROUGHNESS:HX.setRenderTarget(null),this._copyZChannel.execute(this._rectMesh,this._gbuffer[2]);break;case HX.ScreenRenderer.DEBUG_DEPTH:HX.setRenderTarget(null),this._debugDepth.execute(this._rectMesh,this._gbuffer[3]);break;case HX.ScreenRenderer.DEBUG_LIGHT_ACCUM:this._renderLightAccumulation(),HX.setRenderTarget(null),this._applyGamma.execute(this._rectMesh,this._hdrBuffers[0]);break;case HX.ScreenRenderer.DEBUG_AO:HX.setRenderTarget(null),this._copyWChannel.execute(this._rectMesh,this._aoEffect.getAOTexture());break;default:this._renderLightAccumulation(t),this._renderPostPass(this._hdrTargetsDepth[this._hdrSourceIndex],HX.MaterialPass.PRE_EFFECT_PASS),this._renderEffects(t,this._renderCollector._effects),this._renderPostPass(this._hdrTargetsDepth[this._hdrSourceIndex],HX.MaterialPass.POST_PASS),this._renderEffects(t,this._camera._effects),HX.setRenderTarget(null),this._gammaApplied?this._copyTexture.execute(this._rectMesh,this._hdrBuffers[this._hdrSourceIndex]):this._applyGamma.execute(this._rectMesh,this._hdrBuffers[this._hdrSourceIndex])}},HX.ScreenRenderer.prototype._renderLightAccumulation=function(t){HX.GL.enable(HX.GL.BLEND),HX.GL.blendFunc(HX.GL.ONE,HX.GL.ONE),HX.GL.blendEquation(HX.GL.FUNC_ADD),HX.setRenderTarget(this._hdrTargets[this._hdrSourceIndex]),HX.clear(),this._renderLights(),this._renderGI(t),HX.GL.disable(HX.GL.BLEND)},HX.ScreenRenderer.prototype._renderLights=function(){for(var t=this._renderCollector.getLights(),e=t.length,i=void 0,r=0,n=this._camera,s=this._gbuffer,a=this._aoEffect?this._aoEffect.getAOTexture():null;e>r;){var o=t[r];o._type!==i&&(o.activate(n,s,a),i=o._type),r=o.renderBatch(t,r,n,s,a)}},HX.ScreenRenderer.prototype._renderGI=function(t){var e=this._aoEffect?this._aoEffect.getAOTexture():null;HX.GL.disable(HX.GL.CULL_FACE),this._renderCollector._globalIrradianceProbe&&this._renderCollector._globalIrradianceProbe.render(this._camera,this._gbuffer,e),null!=this._localReflections&&(HX.GL.disable(HX.GL.BLEND),this._renderEffect(this._localReflections,t),HX.setRenderTarget(this._hdrTargets[this._hdrSourceIndex]),HX.GL.enable(HX.GL.BLEND)),HX.GL.blendFunc(HX.GL.DST_ALPHA,HX.GL.ONE),this._renderCollector._globalSpecularProbe&&this._renderCollector._globalSpecularProbe.render(this._camera,this._gbuffer,e)},HX.ScreenRenderer.prototype._renderPass=function(t,e){e=e||this._renderCollector.getRenderList(t),HX.Renderer.prototype._renderPass.call(this,t,e)},HX.ScreenRenderer.prototype._renderPostPass=function(t,e){0!=this._renderCollector.getRenderList(e).length&&(this._copySource(),HX.GL.enable(HX.GL.CULL_FACE),HX.GL.enable(HX.GL.DEPTH_TEST),HX.GL.depthFunc(HX.GL.LEQUAL),HX.setRenderTarget(t),this._renderPass(e))},HX.ScreenRenderer.prototype._copySource=function(){var t=this._hdrBuffers[this._hdrSourceIndex],e=1-this._hdrSourceIndex;HX.setRenderTarget(this._hdrTargets[e]),HX.GL.disable(HX.GL.BLEND),HX.GL.disable(HX.GL.DEPTH_TEST),HX.GL.disable(HX.GL.CULL_FACE),this._copyTexture.execute(this._rectMesh,t),this._passSourceTexture=this._hdrBuffers[e]},HX.ScreenRenderer.prototype._renderEffects=function(t,e){if(e&&0!=e.length){HX.GL.disable(HX.GL.DEPTH_TEST),HX.GL.disable(HX.GL.CULL_FACE);for(var i=e.length,r=0;i>r;++r){var n=e[r];n.setMesh(this._rectMesh),this._renderEffect(n,t)}}},HX.ScreenRenderer.prototype._createGBuffer=function(){HX.EXT_DEPTH_TEXTURE?(this._depthBuffer=new HX.Texture2D,this._depthBuffer.setFilter(HX.TEXTURE_FILTER.BILINEAR_NOMIP),this._depthBuffer.setWrapMode(HX.TEXTURE_WRAP_MODE.CLAMP)):this._depthBuffer=HX.GL.createRenderbuffer(),this._gbuffer=[];for(var t=0;4>t;++t)this._gbuffer[t]=new HX.Texture2D,this._gbuffer[t].setFilter(HX.TEXTURE_FILTER.BILINEAR_NOMIP),this._gbuffer[t].setWrapMode(HX.TEXTURE_WRAP_MODE.CLAMP);this._gbufferSingleFBOs=[];for(var t=0;3>t;++t)this._gbufferSingleFBOs[t]=new HX.FrameBuffer([this._gbuffer[t]],HX.FrameBuffer.DEPTH_MODE_READ_WRITE,this._depthBuffer);this._createGBufferFBO(),this._linearDepthFBO=new HX.FrameBuffer(this._gbuffer[3],HX.FrameBuffer.DEPTH_MODE_DISABLED,null)},HX.ScreenRenderer.prototype._createGBufferFBO=function(){throw"Abstract method"},HX.ScreenRenderer.prototype._createHDRBuffers=function(){this._hdrBuffers=[new HX.Texture2D,new HX.Texture2D],this._hdrTargets=[];for(var t=0;t<this._hdrBuffers.length;++t)this._hdrBuffers[t].setFilter(HX.TEXTURE_FILTER.BILINEAR_NOMIP),this._hdrBuffers[t].setWrapMode(HX.TEXTURE_WRAP_MODE.CLAMP),this._hdrTargets[t]=new HX.FrameBuffer([this._hdrBuffers[t]],HX.FrameBuffer.DEPTH_MODE_DISABLED);this._hdrTargetsDepth=[],this._hdrTargetsDepth[0]=new HX.FrameBuffer([this._hdrBuffers[0]],HX.FrameBuffer.DEPTH_MODE_READ_WRITE,this._depthBuffer),this._hdrTargetsDepth[1]=new HX.FrameBuffer([this._hdrBuffers[1]],HX.FrameBuffer.DEPTH_MODE_READ_WRITE,this._depthBuffer)},HX.ScreenRenderer.prototype._updateGBuffer=function(t,e){HX.EXT_DEPTH_TEXTURE&&this._depthBuffer.initEmpty(t,e,HX.GL.DEPTH_STENCIL,HX.EXT_DEPTH_TEXTURE.UNSIGNED_INT_24_8_WEBGL);for(var i=0;i<this._gbuffer.length;++i)this._gbuffer[i].initEmpty(t,e,HX.GL.RGBA,HX.GL.UNSIGNED_BYTE);for(var i=0;i<this._gbufferSingleFBOs.length;++i)this._gbufferSingleFBOs[i].init();this._updateGBufferFBO(),this._linearDepthFBO.init()},HX.ScreenRenderer.prototype._updateGBufferFBO=function(){throw"Abstract method"},HX.ScreenRenderer.prototype._updateHDRBuffers=function(t,e){for(var i=HX.OPTIONS.useHDR?HX.EXT_HALF_FLOAT_TEXTURES.HALF_FLOAT_OES:HX.GL.UNSIGNED_BYTE,r=0;r<this._hdrBuffers.length;++r)this._hdrBuffers[r].initEmpty(t,e,HX.GL.RGBA,i),this._hdrTargets[r].init(),this._hdrTargetsDepth[r].init()},HX.ScreenRenderer.prototype.dispose=function(){this._applyGamma.dispose(),this._copyTexture.dispose(),this._copyXChannel.dispose(),this._copyYChannel.dispose(),this._copyZChannel.dispose(),this._copyWChannel.dispose(),this._rectMesh.dispose();for(var t=0;t<this._hdrBuffers.length;++t)this._hdrBuffers[t].dispose(),this._hdrTargets[t].dispose(),this._hdrTargetsDepth[t].dispose();for(var t=0;t<this._gbuffer.length;++t)this._gbuffer[t].dispose();for(var t=0;t<this._gbufferFBO.length;++t)this._gbufferFBO[t].dispose()},HX.ScreenRenderer.prototype._switchPass=function(t,e){HX.Renderer.prototype._switchPass.call(this,t,e),e.assignGBuffer(this._gbuffer),this._passSourceTexture&&e.setTexture("hx_source",this._passSourceTexture)},HX.Float2=function(t,e){this.x=t||0,this.y=e||0},HX.Float2.angle=function(t,e){return Math.acos(HX.dot2(t,e)/(t.length()*e.length()))},HX.Float2.distance=function(t,e){var i=t.x-e.x,r=t.y-e.y;return Math.sqrt(i*i+r*r)},HX.Float2.angleNormalized=function(t,e){return Math.acos(HX.dot2(t,e))},HX.Float2.sum=function(t,e){return new HX.Float2(t.x+e.x,t.y+e.y)},HX.Float2.scale=function(t,e){return new HX.Float2(t.x*e,t.y*e)},HX.Float2.prototype={constructor:HX.Float2,set:function(t,e){this.x=t,this.y=e},lengthSqr:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},normalize:function(){var t=1/this.length();this.x*=t,this.y*=t},clone:function(){return new HX.Float2(this.x,this.y)},add:function(t){this.x+=t.x,this.y+=t.y},subtract:function(t){this.x-=t.x,this.y-=t.y},scale:function(t){this.x*=t,this.y*=t},sum:function(t,e){this.x=t.x+e.x,this.y=t.y+e.y},difference:function(t,e){this.x=t.x-e.x,this.y=t.y-e.y},scaled:function(t,e){this.x=t*e.x,this.y=t*e.y},negate:function(){this.x=-this.x,this.y=-this.y},multiply:function(t){this.x*=t.x,this.y*=t.y},abs:function(){this.x=Math.abs(this.x),this.y=Math.abs(this.y)},lerp:function(t,e,i){var r=t.x,n=t.y;this.x=r+(e.x-r)*factor,this.y=n+(e.y-n)*factor},fromPolarCoordinates:function(t,e){this.x=t*Math.cos(e),this.y=t*Math.sin(e)},copyFrom:function(t){this.x=t.x,this.y=t.y},maximize:function(t){t.x>this.x&&(this.x=t.x),t.y>this.y&&(this.y=t.y)},minimize:function(t){t.x<this.x&&(this.x=t.x),t.y<this.y&&(this.y=t.y)}},HX.Float2.ZERO=new HX.Float2(0,0),HX.Float2.X_AXIS=new HX.Float2(1,0),HX.Float2.Y_AXIS=new HX.Float2(0,1),HX.PlaneSide={FRONT:1,BACK:-1,INTERSECTING:0},HX.Float4=function(t,e,i,r){this.x=t||0,this.y=e||0,this.z=i||0,this.w=void 0===r?1:r},HX.Float4.angle=function(t,e){return Math.acos(HX.dot3(t,e)/(t.length()*e.length()))},HX.Float4.distance=function(t,e){var i=t.x-e.x,r=t.y-e.y,n=t.z-e.z;return Math.sqrt(i*i+r*r+n*n)},HX.Float4.angleNormalized=function(t,e){return Math.acos(HX.dot3(t,e))},HX.Float4.sum=function(t,e){return new HX.Float4(t.x+e.x,t.y+e.y,t.z+e.z,t.w+e.w)},HX.Float4.scale=function(t,e){return new HX.Float4(t.x*e,t.y*e,t.z*e,t.w*e)},HX.Float4.prototype={constructor:HX.Float4,set:function(t,e,i,r){this.x=t,this.y=e,this.z=i,this.w=r},lengthSqr:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},normalize:function(){var t=1/this.length();this.x*=t,this.y*=t,this.z*=t},normalizeAsPlane:function(){var t=1/this.length();this.x*=t,this.y*=t,this.z*=t,this.w*=t},clone:function(){return new HX.Float4(this.x,this.y,this.z,this.w)},add:function(t){this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w},subtract:function(t){this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w},scale:function(t){this.x*=t,this.y*=t,this.z*=t,this.w*=t},sum:function(t,e){this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w},difference:function(t,e){this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w},scaled:function(t,e){this.x=t*e.x,this.y=t*e.y,this.z=t*e.z,this.w=t*e.w},negate:function(){this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w},multiply:function(t){this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w},homogeneousProject:function(){var t=1/w;this.x*=t,this.y*=t,this.z*=t,this.w=1},abs:function(){this.x=Math.abs(this.x),this.y=Math.abs(this.y),this.z=Math.abs(this.z),this.w=Math.abs(this.w)},cross:function(t,e){var i=t.x,r=t.y,n=t.z,s=e.x,a=e.y,o=e.z;this.x=r*o-n*a,this.y=n*s-i*o,this.z=i*a-r*s},lerp:function(t,e,i){var r=t.x,n=t.y,s=t.z,a=t.w;this.x=r+(e.x-r)*factor,this.y=n+(e.y-n)*factor,this.z=s+(e.z-s)*factor,this.w=a+(e.w-a)*factor},fromSphericalCoordinates:function(t,e,i){this.x=t*Math.sin(i)*Math.cos(e),this.y=t*Math.cos(i),this.z=t*Math.sin(i)*Math.sin(e),this.w=0},copyFrom:function(t){this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w},maximize:function(t){t.x>this.x&&(this.x=t.x),t.y>this.y&&(this.y=t.y),t.z>this.z&&(this.z=t.z),t.w>this.w&&(this.w=t.w)},maximize3:function(t){t.x>this.x&&(this.x=t.x),t.y>this.y&&(this.y=t.y),t.z>this.z&&(this.z=t.z)},minimize:function(t){t.x<this.x&&(this.x=t.x),t.y<this.y&&(this.y=t.y),t.z<this.z&&(this.z=t.z),t.w<this.w&&(this.w=t.w)},minimize3:function(t){t.x<this.x&&(this.x=t.x),t.y<this.y&&(this.y=t.y),t.z<this.z&&(this.z=t.z)}},HX.Float4.ORIGIN_POINT=new HX.Float4(0,0,0,1),HX.Float4.ZERO=new HX.Float4(0,0,0,0),HX.Float4.X_AXIS=new HX.Float4(1,0,0,0),HX.Float4.Y_AXIS=new HX.Float4(0,1,0,0),HX.Float4.Z_AXIS=new HX.Float4(0,0,1,0),HX.Gaussian={estimateGaussianRadius:function(t,e){return Math.sqrt(-2*t*Math.log(e))}},HX.CenteredGaussianCurve=function(t){this._amplitude=1/Math.sqrt(2*t*Math.PI),this._expScale=-1/(2*t)},HX.CenteredGaussianCurve.prototype={getValueAt:function(t){return this._amplitude*Math.pow(Math.E,t*t*this._expScale)}},HX.CenteredGaussianCurve.fromRadius=function(t,e){e=e||.01;var i=t/Math.sqrt(-2*Math.log(e));return new HX.CenteredGaussianCurve(i*i)},HX.dot2=function(t,e){return t.x*e.x+t.y*e.y},HX.dot3=function(t,e){return t.x*e.x+t.y*e.y+t.z*e.z},HX.dot4=function(t,e){return t.x*e.x+t.y*e.y+t.z*e.z+t.w*e.w},HX.Matrix4x4=function(t,e,i,r,n,s,a,o,h,_,l,u,c,m,f,d){this._m=new HX.TypedArray(16),this._m[0]=void 0===t?1:0,this._m[1]=n||0,this._m[2]=h||0,this._m[3]=c||0,this._m[4]=e||0,this._m[5]=void 0===s?1:0,this._m[6]=_||0,this._m[7]=m||0,this._m[8]=i||0,this._m[9]=a||0,this._m[10]=void 0===l?1:0,this._m[11]=f||0,this._m[12]=r||0,this._m[13]=o||0,this._m[14]=u||0,this._m[15]=void 0===d?1:0},HX.Matrix4x4.prototype={constructor:HX.Matrix4x4,transform:function(t){var e=t.x,i=t.y,r=t.z,n=t.w;return new HX.Float4(this._m[0]*e+this._m[4]*i+this._m[8]*r+this._m[12]*n,this._m[1]*e+this._m[5]*i+this._m[9]*r+this._m[13]*n,this._m[2]*e+this._m[6]*i+this._m[10]*r+this._m[14]*n,this._m[3]*e+this._m[7]*i+this._m[11]*r+this._m[15]*n)},transformPoint:function(t){var e=t.x,i=t.y,r=t.z;return new HX.Float4(this._m[0]*e+this._m[4]*i+this._m[8]*r+this._m[12],this._m[1]*e+this._m[5]*i+this._m[9]*r+this._m[13],this._m[2]*e+this._m[6]*i+this._m[10]*r+this._m[14],1)},transformVector:function(t){var e=t.x,i=t.y,r=t.z;return new HX.Float4(this._m[0]*e+this._m[4]*i+this._m[8]*r,this._m[1]*e+this._m[5]*i+this._m[9]*r,this._m[2]*e+this._m[6]*i+this._m[10]*r,0)},transformExtent:function(t){var e=t.x,i=t.y,r=t.z,n=this._m[0],s=this._m[1],a=this._m[2],o=this._m[4],h=this._m[5],_=this._m[6],l=this._m[8],u=this._m[9],c=this._m[10];return 0>n&&(n=-n),0>s&&(s=-s),0>a&&(a=-a),0>o&&(o=-o),0>h&&(h=-h),0>_&&(_=-_),0>l&&(l=-l),0>u&&(u=-u),0>c&&(c=-c),new HX.Float4(n*e+o*i+l*r,s*e+h*i+u*r,a*e+_*i+c*r,0)},transformTo:function(t,e){var i=t.x,r=t.y,n=t.z,s=t.w,a=this._m[0]*i+this._m[4]*r+this._m[8]*n+this._m[12]*s,o=this._m[1]*i+this._m[5]*r+this._m[9]*n+this._m[13]*s,h=this._m[2]*i+this._m[6]*r+this._m[10]*n+this._m[14]*s,_=this._m[3]*i+this._m[7]*r+this._m[11]*n+this._m[15]*s;e.x=a,e.y=o,e.z=h,e.w=_},transformPointTo:function(t,e){var i=t.x,r=t.y,n=t.z,s=(t.w,this._m[0]*i+this._m[4]*r+this._m[8]*n+this._m[12]),a=this._m[1]*i+this._m[5]*r+this._m[9]*n+this._m[13],o=this._m[2]*i+this._m[6]*r+this._m[10]*n+this._m[14];e.x=s,e.y=a,e.z=o,e.w=1},transformVectorTo:function(t,e){var i=t.x,r=t.y,n=t.z,s=m00*i+m01*r+m02*n,a=m10*i+m11*r+m12*n,o=m20*i+m21*r+m22*n;e.x=s,e.y=a,e.z=o,e.w=0},transformExtentTo:function(t,e){var i=t.x,r=t.y,n=t.z,s=this._m[0],a=this._m[1],o=this._m[2],h=this._m[4],_=this._m[5],l=this._m[6],u=this._m[8],c=this._m[9],m=this._m[10];0>s&&(s=-s),0>a&&(a=-a),0>o&&(o=-o),0>h&&(h=-h),0>_&&(_=-_),0>l&&(l=-l),0>u&&(u=-u),0>c&&(c=-c),0>m&&(m=-m),e.x=s*i+h*r+u*n,e.y=a*i+_*r+c*n,e.z=o*i+l*r+m*n,e.w=0},copyFrom:function(t){this._m[0]=t._m[0],this._m[1]=t._m[1],this._m[2]=t._m[2],this._m[3]=t._m[3],this._m[4]=t._m[4],this._m[5]=t._m[5],this._m[6]=t._m[6],this._m[7]=t._m[7],this._m[8]=t._m[8],this._m[9]=t._m[9],this._m[10]=t._m[10],this._m[11]=t._m[11],this._m[12]=t._m[12],this._m[13]=t._m[13],this._m[14]=t._m[14],this._m[15]=t._m[15]},fromQuaternion:function(t){var e=t.x,i=t.y,r=t.z,n=t.w;this._m[0]=1-2*(i*i+r*r),this._m[1]=2*(e*i+n*r),this._m[2]=2*(e*r-n*i),this._m[3]=0,this._m[4]=2*(e*i-n*r),this._m[5]=1-2*(e*e+r*r),this._m[6]=2*(i*r+n*e),this._m[7]=0,this._m[8]=2*(e*r+n*i),this._m[9]=2*(i*r-n*e),this._m[10]=1-2*(e*e+i*i),this._m[11]=0,this._m[12]=0,this._m[13]=0,this._m[14]=0,this._m[15]=1},product:function(t,e){var i=t._m[0],r=t._m[1],n=t._m[2],s=t._m[3],a=t._m[4],o=t._m[5],h=t._m[6],_=t._m[7],l=t._m[8],u=t._m[9],c=t._m[10],m=t._m[11],f=t._m[12],d=t._m[13],p=t._m[14],X=t._m[15],H=e._m[0],x=e._m[1],g=e._m[2],E=e._m[3],S=e._m[4],T=e._m[5],L=e._m[6],v=e._m[7],P=e._m[8],M=e._m[9],R=e._m[10],A=e._m[11],D=e._m[12],y=e._m[13],w=e._m[14],b=e._m[15];this._m[0]=i*H+a*x+l*g+f*E,this._m[1]=r*H+o*x+u*g+d*E,this._m[2]=n*H+h*x+c*g+p*E,this._m[3]=s*H+_*x+m*g+X*E,this._m[4]=i*S+a*T+l*L+f*v,this._m[5]=r*S+o*T+u*L+d*v,this._m[6]=n*S+h*T+c*L+p*v,this._m[7]=s*S+_*T+m*L+X*v,this._m[8]=i*P+a*M+l*R+f*A,this._m[9]=r*P+o*M+u*R+d*A,this._m[10]=n*P+h*M+c*R+p*A,this._m[11]=s*P+_*M+m*R+X*A,this._m[12]=i*D+a*y+l*w+f*b,this._m[13]=r*D+o*y+u*w+d*b,this._m[14]=n*D+h*y+c*w+p*b,this._m[15]=s*D+_*y+m*w+X*b},productAffine:function(t,e){var i=t._m[0],r=t._m[1],n=t._m[2],s=t._m[4],a=t._m[5],o=t._m[6],h=t._m[8],_=t._m[9],l=t._m[10],u=t._m[12],c=t._m[13],m=t._m[14],f=e._m[0],d=e._m[1],p=e._m[2],X=e._m[4],H=e._m[5],x=e._m[6],g=e._m[8],E=e._m[9],S=e._m[10],T=e._m[12],L=e._m[13],v=e._m[14];this._m[0]=i*f+s*d+h*p,this._m[1]=r*f+a*d+_*p,this._m[2]=n*f+o*d+l*p,this._m[4]=i*X+s*H+h*x,this._m[5]=r*X+a*H+_*x,this._m[6]=n*X+o*H+l*x,this._m[8]=i*g+s*E+h*S,this._m[9]=r*g+a*E+_*S,this._m[10]=n*g+o*E+l*S,this._m[12]=i*T+s*L+h*v+u,this._m[13]=r*T+a*L+_*v+c,this._m[14]=n*T+o*L+l*v+m},sum:function(t,e){this._m[0]=t._m[0]+e._m[0],this._m[1]=t._m[1]+e._m[1],this._m[2]=t._m[2]+e._m[3],this._m[3]=t._m[3]+e._m[3],this._m[4]=t._m[4]+e._m[4],this._m[5]=t._m[5]+e._m[5],this._m[6]=t._m[6]+e._m[6],this._m[7]=t._m[7]+e._m[7],this._m[8]=t._m[8]+e._m[8],this._m[9]=t._m[9]+e._m[9],this._m[10]=t._m[10]+e._m[10],this._m[11]=t._m[11]+e._m[11],this._m[12]=t._m[12]+e._m[12],this._m[13]=t._m[13]+e._m[13],this._m[14]=t._m[14]+e._m[14],this._m[15]=t._m[15]+e._m[15]},sumAffine:function(t,e){this._m[0]=t._m[0]+e._m[0],this._m[1]=t._m[1]+e._m[1],this._m[2]=t._m[2]+e._m[3],this._m[4]=t._m[4]+e._m[4],this._m[5]=t._m[5]+e._m[5],this._m[6]=t._m[6]+e._m[6],this._m[8]=t._m[8]+e._m[8],this._m[9]=t._m[9]+e._m[9],this._m[10]=t._m[10]+e._m[10]},difference:function(t,e){this._m[0]=t._m[0]-e._m[0],this._m[1]=t._m[1]-e._m[1],this._m[2]=t._m[2]-e._m[3],this._m[3]=t._m[3]-e._m[3],this._m[4]=t._m[4]-e._m[4],this._m[5]=t._m[5]-e._m[5],this._m[6]=t._m[6]-e._m[6],this._m[7]=t._m[7]-e._m[7],this._m[8]=t._m[8]-e._m[8],this._m[9]=t._m[9]-e._m[9],this._m[10]=t._m[10]-e._m[10],this._m[11]=t._m[11]-e._m[11],this._m[12]=t._m[12]-e._m[12],this._m[13]=t._m[13]-e._m[13],this._m[14]=t._m[14]-e._m[14],this._m[15]=t._m[15]-e._m[15]},differenceAffine:function(t,e){this._m[0]=t._m[0]-e._m[0],this._m[1]=t._m[1]-e._m[1],this._m[2]=t._m[2]-e._m[3],this._m[4]=t._m[4]-e._m[4],this._m[5]=t._m[5]-e._m[5],this._m[6]=t._m[6]-e._m[6],this._m[8]=t._m[8]-e._m[8],this._m[9]=t._m[9]-e._m[9],this._m[10]=t._m[10]-e._m[10]},rotationX:function(t){var e=Math.cos(t),i=Math.sin(t);this._m[0]=1,this._m[1]=0,this._m[2]=0,this._m[3]=0,this._m[4]=0,this._m[5]=e,this._m[6]=i,this._m[7]=0,this._m[8]=0,this._m[9]=-i,this._m[10]=e,this._m[11]=0,this._m[12]=0,this._m[13]=0,this._m[14]=0,this._m[15]=1},rotationY:function(t){var e=Math.cos(t),i=Math.sin(t);this._m[0]=e,this._m[1]=0,this._m[2]=-i,this._m[3]=0,this._m[4]=0,this._m[5]=1,this._m[6]=0,this._m[7]=0,this._m[8]=i,this._m[9]=0,this._m[10]=e,this._m[11]=0,this._m[12]=0,this._m[13]=0,this._m[14]=0,this._m[15]=1},rotationZ:function(t){var e=Math.cos(t),i=Math.sin(t);this._m[0]=e,this._m[1]=i,this._m[2]=0,this._m[3]=0,this._m[4]=-i,this._m[5]=e,this._m[6]=0,this._m[7]=0,this._m[8]=0,this._m[9]=0,this._m[10]=1,this._m[11]=0,this._m[12]=0,this._m[13]=0,this._m[14]=0,this._m[15]=1},rotationAxisAngle:function(t,e){var i=Math.cos(e),r=Math.sin(e),n=1/t.length(),s=t.x*n,a=t.y*n,o=t.z*n,h=1-i;this._m[0]=h*s*s+i,this._m[1]=h*s*a+r*o,this._m[2]=h*s*o-r*a,this._m[3]=0,this._m[4]=h*s*a-r*o,this._m[5]=h*a*a+i,this._m[6]=h*a*o+r*s,this._m[7]=0,this._m[8]=h*s*o+r*a,this._m[9]=h*a*o-r*s,this._m[10]=h*o*o+i,this._m[11]=0,this._m[12]=0,this._m[13]=0,this._m[14]=0,this._m[15]=1},rotationXYZ:function(t,e,i){var r=Math.cos(t),n=Math.sin(t),s=Math.cos(e),a=Math.sin(e),o=Math.cos(i),h=Math.sin(i);this._m[0]=s*o,this._m[1]=n*a*o-r*h,this._m[2]=r*a*o+n*h,this._m[3]=0,this._m[4]=s*h,this._m[5]=n*a*h+r*o,this._m[6]=r*a*h-n*o,this._m[7]=0,this._m[8]=-a,this._m[9]=n*s,this._m[10]=r*s,this._m[11]=0,this._m[12]=0,this._m[13]=0,this._m[14]=0,this._m[15]=1},rotationPitchYawRoll:function(t,e,i){var r=Math.cos(-t),n=Math.cos(-e),s=Math.cos(i),a=Math.sin(-t),o=Math.sin(-e),h=Math.sin(i),_=-o*r,l=-a,u=n*r,c=-n*h-o*a*s,m=r*s,f=-o*h+a*s*n,d=m*u-f*l,p=f*_-c*u,X=c*l-m*_;this._m[0]=d,this._m[1]=p,this._m[2]=X,this._m[3]=0,this._m[4]=c,this._m[5]=m,this._m[6]=f,this._m[7]=0,this._m[8]=_,this._m[9]=l,this._m[10]=u,this._m[11]=0,this._m[12]=0,this._m[13]=0,this._m[14]=0,this._m[15]=1},translation:function(t,e,i){this._m[0]=1,this._m[1]=0,this._m[2]=0,this._m[3]=0,this._m[4]=0,this._m[5]=1,this._m[6]=0,this._m[7]=0,this._m[8]=0,this._m[9]=0,this._m[10]=1,this._m[11]=0,this._m[12]=t,this._m[13]=e,this._m[14]=i,this._m[15]=1},scaleMatrix:function(t,e,i){this._m[0]=t,this._m[1]=0,this._m[2]=0,this._m[3]=0,this._m[4]=0,this._m[5]=e,this._m[6]=0,this._m[7]=0,this._m[8]=0,this._m[9]=0,this._m[10]=i,this._m[11]=0,this._m[12]=0,this._m[13]=0,this._m[14]=0,this._m[15]=1},perspectiveProjection:function(t,e,i,r){var n=1/Math.tan(.5*t),s=n/e,a=1/(i-r);this._m[0]=s,this._m[1]=0,this._m[2]=0,this._m[3]=0,this._m[4]=0,this._m[5]=n,this._m[6]=0,this._m[7]=0,this._m[8]=0,this._m[9]=0,this._m[10]=(r+i)*a,this._m[11]=-1,this._m[12]=0,this._m[13]=0,this._m[14]=2*i*r*a,this._m[15]=0},orthographicOffCenterProjection:function(t,e,i,r,n,s){var a=1/(e-t),o=1/(i-r),h=1/(n-s);this._m[0]=2*a,this._m[1]=0,this._m[2]=0,this._m[3]=0,this._m[4]=0,this._m[5]=2*o,this._m[6]=0,this._m[7]=0,this._m[8]=0,this._m[9]=0,this._m[10]=2*h,this._m[11]=0,this._m[12]=-(t+e)*a,this._m[13]=-(i+r)*o,this._m[14]=(s+n)*h,this._m[15]=1},orthographicProjection:function(t,e,i,r){var n=Math.tan(.5*vFOV),s=n*aspectRatio,a=1/(i-r);this._m[0]=1/s,this._m[1]=0,this._m[2]=0,this._m[3]=0,this._m[4]=0,this._m[5]=1/n,this._m[6]=0,this._m[7]=0,this._m[8]=0,this._m[9]=0,this._m[10]=2*a,this._m[11]=0,this._m[12]=0,this._m[13]=0,this._m[14]=(r+i)*a,this._m[15]=1},scaled:function(t,e){this._m[0]=e._m[0]*t,this._m[1]=e._m[1]*t,this._m[2]=e._m[2]*t,this._m[3]=e._m[3]*t,this._m[4]=e._m[4]*t,this._m[5]=e._m[5]*t,this._m[6]=e._m[6]*t,this._m[7]=e._m[7]*t,this._m[8]=e._m[8]*t,this._m[9]=e._m[9]*t,this._m[10]=e._m[10]*t,this._m[11]=e._m[11]*t,this._m[12]=e._m[12]*t,this._m[13]=e._m[13]*t,this._m[14]=e._m[14]*t,this._m[15]=e._m[15]*t},add:function(t){this._m[0]+=t._m[0],this._m[1]+=t._m[1],this._m[2]+=t._m[2],this._m[3]+=t._m[3],this._m[4]+=t._m[4],this._m[5]+=t._m[5],this._m[6]+=t._m[6],this._m[7]+=t._m[7],this._m[8]+=t._m[8],this._m[9]+=t._m[9],this._m[10]+=t._m[10],this._m[11]+=t._m[11],this._m[12]+=t._m[12],this._m[13]+=t._m[13],this._m[14]+=t._m[14],this._m[15]+=t._m[15]},subtract:function(t){this._m[0]-=t._m[0],this._m[1]-=t._m[1],this._m[2]-=t._m[2],this._m[3]-=t._m[3],
this._m[4]-=t._m[4],this._m[5]-=t._m[5],this._m[6]-=t._m[6],this._m[7]-=t._m[7],this._m[8]-=t._m[8],this._m[9]-=t._m[9],this._m[10]-=t._m[10],this._m[11]-=t._m[11],this._m[12]-=t._m[12],this._m[13]-=t._m[13],this._m[14]-=t._m[14],this._m[15]-=t._m[15]},clone:function(){return new HX.Matrix4x4(this._m[0],this._m[4],this._m[8],this._m[12],this._m[1],this._m[5],this._m[9],this._m[13],this._m[2],this._m[6],this._m[10],this._m[14],this._m[3],this._m[7],this._m[11],this._m[15])},transpose:function(){var t=this._m[1],e=this._m[2],i=this._m[3],r=this._m[6],n=this._m[7],s=this._m[11];this._m[1]=this._m[4],this._m[2]=this._m[8],this._m[3]=this._m[12],this._m[4]=t,this._m[6]=this._m[9],this._m[7]=this._m[13],this._m[8]=e,this._m[9]=r,this._m[11]=this._m[14],this._m[12]=i,this._m[13]=n,this._m[14]=s},determinant3x3:function(t,e){var i=0==e?4:0,r=2>e?8:4,n=3==e?8:12,s=0==t?1:0,a=2>t?2:1,o=3==t?2:3,h=this._m[i|a],_=this._m[a|r],l=this._m[n|a],u=this._m[i|o],c=this._m[r|o],m=this._m[o|n];return this._m[i|s]*(_*m-l*c)-this._m[r|s]*(h*m-l*u)+this._m[n|s]*(h*c-_*u)},cofactor:function(t,e){var i=1-((t+e&1)<<1);return i*this.determinant3x3(t,e)},getCofactorMatrix:function(t,e){for(var i=new HX.Matrix4x4,r=0;16>r;++r)i._m[r]=this.cofactor(3&r,r>>2);return i},getAdjugate:function(t,e){for(var i=new HX.Matrix4x4,r=0;16>r;++r)i._m[r]=this.cofactor(r>>2,3&r);return i},determinant:function(){return this._m[0]*this.determinant3x3(0,0)-this._m[4]*this.determinant3x3(0,1)+this._m[8]*this.determinant3x3(0,2)-this._m[12]*this.determinant3x3(0,3)},inverseOf:function(t){var e=1/t.determinant();this._m[0]=e*t.cofactor(0,0),this._m[1]=e*t.cofactor(0,1),this._m[2]=e*t.cofactor(0,2),this._m[3]=e*t.cofactor(0,3),this._m[4]=e*t.cofactor(1,0),this._m[5]=e*t.cofactor(1,1),this._m[6]=e*t.cofactor(1,2),this._m[7]=e*t.cofactor(1,3),this._m[8]=e*t.cofactor(2,0),this._m[9]=e*t.cofactor(2,1),this._m[10]=e*t.cofactor(2,2),this._m[11]=e*t.cofactor(2,3),this._m[12]=e*t.cofactor(3,0),this._m[13]=e*t.cofactor(3,1),this._m[14]=e*t.cofactor(3,2),this._m[15]=e*t.cofactor(3,3)},inverseAffineOf:function(t){var e=t._m[0],i=t._m[1],r=t._m[2],n=t._m[4],s=t._m[5],a=t._m[6],o=t._m[8],h=t._m[9],_=t._m[10],l=t._m[12],u=t._m[13],c=t._m[14],m=e*(s*_-h*a)-n*(i*_-h*r)+o*(i*a-s*r),f=1/m,d=(s*_-h*a)*f,p=(h*r-i*_)*f,X=(i*a-s*r)*f,H=(o*a-n*_)*f,x=(e*_-o*r)*f,g=(n*r-e*a)*f,E=(n*h-o*s)*f,S=(o*i-e*h)*f,T=(e*s-n*i)*f;this._m[0]=d,this._m[1]=p,this._m[2]=X,this._m[3]=0,this._m[4]=H,this._m[5]=x,this._m[6]=g,this._m[7]=0,this._m[8]=E,this._m[9]=S,this._m[10]=T,this._m[11]=0,this._m[12]=-d*l-H*u-E*c,this._m[13]=-p*l-x*u-S*c,this._m[14]=-X*l-g*u-T*c,this._m[15]=1},writeNormalMatrix:function(t){var e=this._m[0],i=this._m[1],r=this._m[2],n=this._m[4],s=this._m[5],a=this._m[6],o=this._m[8],h=this._m[9],_=this._m[10],l=e*(s*_-h*a)-this._m[4]*(i*_-h*r)+this._m[8]*(i*a-s*r),u=1/l;t[0]=(s*_-h*a)*u,t[1]=(o*a-n*_)*u,t[2]=(n*h-o*s)*u,t[3]=(h*r-i*_)*u,t[4]=(e*_-o*r)*u,t[5]=(o*i-e*h)*u,t[6]=(i*a-s*r)*u,t[7]=(n*r-e*a)*u,t[8]=(e*s-n*i)*u},invert:function(){var t=1/this.determinant(),e=t*this.cofactor(0,0),i=t*this.cofactor(0,1),r=t*this.cofactor(0,2),n=t*this.cofactor(0,3),s=t*this.cofactor(1,0),a=t*this.cofactor(1,1),o=t*this.cofactor(1,2),h=t*this.cofactor(1,3),_=t*this.cofactor(2,0),l=t*this.cofactor(2,1),u=t*this.cofactor(2,2),c=t*this.cofactor(2,3),m=t*this.cofactor(3,0),f=t*this.cofactor(3,1),d=t*this.cofactor(3,2),p=t*this.cofactor(3,3);this._m[0]=e,this._m[1]=i,this._m[2]=r,this._m[3]=n,this._m[4]=s,this._m[5]=a,this._m[6]=o,this._m[7]=h,this._m[8]=_,this._m[9]=l,this._m[10]=u,this._m[11]=c,this._m[12]=m,this._m[13]=f,this._m[14]=d,this._m[15]=p},invertAffine:function(){var t=this._m[0],e=this._m[1],i=this._m[2],r=this._m[4],n=this._m[5],s=this._m[6],a=this._m[8],o=this._m[9],h=this._m[10],_=this._m[12],l=this._m[13],u=this._m[14],c=t*(n*h-o*s)-r*(e*h-o*i)+a*(e*s-n*i),m=1/c,f=(n*h-o*s)*m,d=(o*i-e*h)*m,p=(e*s-n*i)*m,X=(a*s-r*h)*m,H=(t*h-a*i)*m,x=(r*i-t*s)*m,g=(r*o-a*n)*m,E=(a*e-t*o)*m,S=(t*n-r*e)*m;this._m[0]=f,this._m[1]=d,this._m[2]=p,this._m[4]=X,this._m[5]=H,this._m[6]=x,this._m[8]=g,this._m[9]=E,this._m[10]=S,this._m[12]=-f*_-X*l-g*u,this._m[13]=-d*_-H*l-E*u,this._m[14]=-p*_-x*l-S*u},append:function(t){this.product(this,t)},prepend:function(t){this.product(t,this)},appendAffine:function(t){this.productAffine(t,this)},prependAffine:function(t){this.productAffine(this,t)},add:function(t){this._m[0]+=t._m[0],this._m[1]+=t._m[1],this._m[2]+=t._m[2],this._m[3]+=t._m[3],this._m[4]+=t._m[4],this._m[5]+=t._m[5],this._m[6]+=t._m[6],this._m[7]+=t._m[7],this._m[8]+=t._m[8],this._m[9]+=t._m[9],this._m[10]+=t._m[10],this._m[11]+=t._m[11],this._m[12]+=t._m[12],this._m[13]+=t._m[13],this._m[14]+=t._m[14],this._m[15]+=t._m[15]},addAffine:function(t){this._m[0]+=t._m[0],this._m[1]+=t._m[1],this._m[2]+=t._m[2],this._m[4]+=t._m[4],this._m[5]+=t._m[5],this._m[6]+=t._m[6],this._m[8]+=t._m[8],this._m[9]+=t._m[9],this._m[10]+=t._m[10]},subtract:function(t){this._m[0]-=t._m[0],this._m[1]-=t._m[1],this._m[2]-=t._m[2],this._m[3]-=t._m[3],this._m[4]-=t._m[4],this._m[5]-=t._m[5],this._m[6]-=t._m[6],this._m[7]-=t._m[7],this._m[8]-=t._m[8],this._m[9]-=t._m[9],this._m[10]-=t._m[10],this._m[11]-=t._m[11],this._m[12]-=t._m[12],this._m[13]-=t._m[13],this._m[14]-=t._m[14],this._m[15]-=t._m[15]},subtractAffine:function(t){this._m[0]-=t._m[0],this._m[1]-=t._m[1],this._m[2]-=t._m[2],this._m[4]-=t._m[4],this._m[5]-=t._m[5],this._m[6]-=t._m[6],this._m[8]-=t._m[8],this._m[9]-=t._m[9],this._m[10]-=t._m[10]},appendScale:function(t,e,i){this._m[0]*=t,this._m[1]*=e,this._m[2]*=i,this._m[4]*=t,this._m[5]*=e,this._m[6]*=i,this._m[8]*=t,this._m[9]*=e,this._m[10]*=i,this._m[12]*=t,this._m[13]*=e,this._m[14]*=i},prependScale:function(t,e,i){this._m[0]*=t,this._m[1]*=t,this._m[2]*=t,this._m[3]*=t,this._m[4]*=e,this._m[5]*=e,this._m[6]*=e,this._m[7]*=e,this._m[8]*=i,this._m[9]*=i,this._m[10]*=i,this._m[11]*=i},appendTranslation:function(t,e,i){this._m[12]+=t,this._m[13]+=e,this._m[14]+=i},prependTranslation:function(t,e,i){this._m[12]+=this._m[0]*t+this._m[4]*e+this._m[8]*i,this._m[13]+=this._m[1]*t+this._m[5]*e+this._m[9]*i,this._m[14]+=this._m[2]*t+this._m[6]*e+this._m[10]*i,this._m[15]+=this._m[3]*t+this._m[7]*e+this._m[11]*i},appendRotationQuaternion:function(t){var e=t.x,i=t.y,r=t.z,n=t.w,s=1-2*(i*i+r*r),a=2*(e*i+n*r),o=2*(e*r-n*i),h=2*(e*i-n*r),_=1-2*(e*e+r*r),l=2*(i*r+n*e),u=2*(e*r+n*i),c=2*(i*r-n*e),m=1-2*(e*e+i*i),f=this._m[0],d=this._m[1],p=this._m[2],X=this._m[4],H=this._m[5],x=this._m[6],g=this._m[8],E=this._m[9],S=this._m[10],T=this._m[12],L=this._m[13],v=this._m[14];this._m[0]=s*f+h*d+u*p,this._m[1]=a*f+_*d+c*p,this._m[2]=o*f+l*d+m*p,this._m[4]=s*X+h*H+u*x,this._m[5]=a*X+_*H+c*x,this._m[6]=o*X+l*H+m*x,this._m[8]=s*g+h*E+u*S,this._m[9]=a*g+_*E+c*S,this._m[10]=o*g+l*E+m*S,this._m[12]=s*T+h*L+u*v,this._m[13]=a*T+_*L+c*v,this._m[14]=o*T+l*L+m*v},prependRotationQuaternion:function(t){var e=t.x,i=t.y,r=t.z,n=t.w,s=this._m[0],a=this._m[1],o=this._m[2],h=this._m[4],_=this._m[5],l=this._m[6],u=this._m[8],c=this._m[9],m=this._m[10],f=1-2*(i*i+r*r),d=2*(e*i+n*r),p=2*(e*r-n*i),X=2*(e*i-n*r),H=1-2*(e*e+r*r),x=2*(i*r+n*e),g=2*(e*r+n*i),E=2*(i*r-n*e),S=1-2*(e*e+i*i);this._m[0]=s*f+h*d+u*p,this._m[1]=a*f+_*d+c*p,this._m[2]=o*f+l*d+m*p,this._m[4]=s*X+h*H+u*x,this._m[5]=a*X+_*H+c*x,this._m[6]=o*X+l*H+m*x,this._m[8]=s*g+h*E+u*S,this._m[9]=a*g+_*E+c*S,this._m[10]=o*g+l*E+m*S},appendRotationAxisAngle:function(t,e){var i=Math.cos(e),r=Math.sin(e),n=1/t.length(),s=t.x*n,a=t.y*n,o=t.z*n,h=1-i,_=h*s*s+i,l=h*s*a+r*o,u=h*s*o-r*a,c=h*s*a-r*o,m=h*a*a+i,f=h*a*o+r*s,d=h*s*o+r*a,p=h*a*o-r*s,X=h*o*o+i,H=this._m[0],x=this._m[1],g=this._m[2],E=this._m[4],S=this._m[5],T=this._m[6],L=this._m[8],v=this._m[9],P=this._m[10],M=this._m[12],R=this._m[13],A=this._m[14];this._m[0]=_*H+c*x+d*g,this._m[1]=l*H+m*x+p*g,this._m[2]=u*H+f*x+X*g,this._m[4]=_*E+c*S+d*T,this._m[5]=l*E+m*S+p*T,this._m[6]=u*E+f*S+X*T,this._m[8]=_*L+c*v+d*P,this._m[9]=l*L+m*v+p*P,this._m[10]=u*L+f*v+X*P,this._m[12]=_*M+c*R+d*A,this._m[13]=l*M+m*R+p*A,this._m[14]=u*M+f*R+X*A},prependRotationAxisAngle:function(t,e){var i=Math.cos(e),r=Math.sin(e),n=1/t.length(),s=t.x*n,a=t.y*n,o=t.z*n,h=1-i,_=this._m[0],l=this._m[1],u=this._m[2],c=this._m[4],m=this._m[5],f=this._m[6],d=this._m[8],p=this._m[9],X=this._m[10],H=h*s*s+i,x=h*s*a+r*o,g=h*s*o-r*a,E=h*s*a-r*o,S=h*a*a+i,T=h*a*o+r*s,L=h*s*o+r*a,v=h*a*o-r*s,P=h*o*o+i;this._m[0]=_*H+c*x+d*g,this._m[1]=l*H+m*x+p*g,this._m[2]=u*H+f*x+X*g,this._m[4]=_*E+c*S+d*T,this._m[5]=l*E+m*S+p*T,this._m[6]=u*E+f*S+X*T,this._m[8]=_*L+c*v+d*P,this._m[9]=l*L+m*v+p*P,this._m[10]=u*L+f*v+X*P},getRow:function(t){return new HX.Float4(this._m[t],this._m[4|t],this._m[8|t],this._m[12|t])},setRow:function(t,e){this._m[t]=e.x,this._m[4|t]=e.y,this._m[8|t]=e.z,this._m[12|t]=e.w},getElement:function(t,e){return this._m[t|e<<2]},setElement:function(t,e,i){this._m[t|e<<2]=i},getColumn:function(t){return t<<=2,new HX.Float4(this._m[t],this._m[1|t],this._m[2|t],this._m[3|t])},setColumn:function(t,e){t<<=2,this._m[t]=e.x,this._m[1|t]=e.y,this._m[2|t]=e.z,this._m[3|t]=e.w},lookAt:function(t,e,i){var r=new HX.Float4;r.difference(e,t),r.normalize();var n=new HX.Float4;if(n.cross(i,r),Math.abs(n.lengthSqr())>1e-4)n.normalize();else{var s=new HX.Float4(i.x,i.z,i.y,0);n.cross(s,r),Math.abs(n.lengthSqr())<=1e-4&&(s.set(i.z,i.y,i.z,0),n.cross(s,r)),n.normalize()}var a=new HX.Float4;a.cross(r,n),this._m[0]=n.x,this._m[1]=n.y,this._m[2]=n.z,this._m[3]=0,this._m[4]=a.x,this._m[5]=a.y,this._m[6]=a.z,this._m[7]=0,this._m[8]=r.x,this._m[9]=r.y,this._m[10]=r.z,this._m[11]=0,this._m[12]=e.x,this._m[13]=e.y,this._m[14]=e.z,this._m[15]=1},decompose:function(){var t=this._m[0],e=this._m[1],i=this._m[2],r=(this._m[3],this._m[4]),n=this._m[5],s=this._m[6],a=(this._m[7],this._m[8]),o=this._m[9],h=this._m[10],_=(this._m[11],new HX.Float4);_.x=Math.sqrt(t*t+e*e+i*i),_.y=Math.sqrt(r*r+n*n+s*s),_.z=Math.sqrt(a*a+o*o+h*h);var l=new HX.Quaternion;l.fromMatrix(this);var u=this.getColumn(3);return[_,l,u]}},HX.Matrix4x4.IDENTITY=new HX.Matrix4x4,HX.Matrix4x4.ZERO=new HX.Matrix4x4(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),HX.PoissonDisk=function(t,e,i,r){this._mode=void 0===t?HX.PoissonDisk.CIRCULAR:t,this._initialDistance=e||1,this._decayFactor=i||.99,this._maxTests=r||2e4,this._currentDistance=0,this._points=null,this.reset()},HX.PoissonDisk.SQUARE=0,HX.PoissonDisk.CIRCULAR=1,HX.PoissonDisk.prototype={getPoints:function(){return this._points},reset:function(){this._currentDistance=this._initialDistance,this._points=[]},generatePoints:function(t){for(var e=0;t>e;++e)this.generatePoint()},generatePoint:function(){for(;;){for(var t=0,e=this._currentDistance*this._currentDistance;t++<this._maxTests;){var i=this._getCandidate();if(this._isValid(i,e))return this._points.push(i),i}this._currentDistance*=this._decayFactor}},_getCandidate:function(){for(;;){var t=2*Math.random()-1,e=2*Math.random()-1;if(this._mode==HX.PoissonDisk.SQUARE||1>=t*t+e*e)return new HX.Float2(t,e)}},_isValid:function(t,e){for(var i=this._points.length,r=0;i>r;++r){var n=this._points[r],s=t.x-n.x,a=t.y-n.y;if(e>s*s+a*a)return!1}return!0}},HX.PoissonSphere=function(t,e,i,r){this._mode=void 0===t?HX.PoissonSphere.CIRCULAR:t,this._initialDistance=e||1,this._decayFactor=i||.99,this._maxTests=r||2e4,this._currentDistance=0,this._points=null,this.reset()},HX.PoissonSphere.BOX=0,HX.PoissonSphere.CIRCULAR=1,HX.PoissonSphere.prototype={getPoints:function(){return this._points},reset:function(){this._currentDistance=this._initialDistance,this._points=[]},generatePoints:function(t){for(var e=0;t>e;++e)this.generatePoint()},generatePoint:function(){for(;;){for(var t=0,e=this._currentDistance*this._currentDistance;t++<this._maxTests;){var i=this._getCandidate();if(this._isValid(i,e))return this._points.push(i),i}this._currentDistance*=this._decayFactor}},_getCandidate:function(){for(;;){var t=2*Math.random()-1,e=2*Math.random()-1,i=2*Math.random()-1;if(this._mode==HX.PoissonDisk.BOX||1>=t*t+e*e+i*i)return new HX.Float4(t,e,i,0)}},_isValid:function(t,e){for(var i=this._points.length,r=0;i>r;++r){var n=this._points[r],s=t.x-n.x,a=t.y-n.y,o=t.z-n.z;if(e>s*s+a*a+o*o)return!1}return!0}},HX.Quaternion=function(){this.x=0,this.y=0,this.z=0,this.w=1},HX.Quaternion.fromAxisAngle=function(t,e){var i=new HX.Quaternion;return i.fromAxisAngle(t,e),i},HX.Quaternion.fromPitchYawRoll=function(t,e,i){var r=new HX.Quaternion;return r.fromPitchYawRoll(t,e,i),r},HX.Quaternion.prototype={fromAxisAngle:function(t,e){var i=Math.sin(.5*e)/t.length();this.x=t.x*i,this.y=t.y*i,this.z=t.z*i,this.w=Math.cos(.5*angle)},fromPitchYawRoll:function(t,e,i){var r=new HX.Matrix4x4;r.fromPitchYawRoll(t,e,i),this.fromMatrix(r)},fromMatrix:function(t){var e=t._m[0],i=t._m[5],r=t._m[10],n=e+i+r;if(n>0){n+=1;var s=1/Math.sqrt(n)*.5;this.x=s*(t._m.getColumn(1,2)-t._m(2,1)),this.y=s*(t._m(2,0)-t._m[2]),this.z=s*(t._m[1]-t._m(1,0)),this.w=s*n}else if(e>i&&e>r){n=e-i-r+1;var s=1/Math.sqrt(n)*.5;this.x=s*n,this.y=s*(t._m[1]+t._m[4]),this.z=s*(t._m[8]+t._m[2]),this.w=s*(t._m[6]-t._m[9])}else if(i>r){n=i-e-r+1;var s=1/Math.sqrt(n)*.5;this.x=s*(t._m[1]+t._m[4]),this.y=s*n,this.z=s*(t._m[6]+t._m[9]),this.w=s*(t._m[8]-t._m[2])}else{n=r-e-i+1;var s=1/Math.sqrt(n)*.5;this.x=s*(t._m[8]+t._m[2]),this.y=s*(t._m[6]+t._m[9]),this.z=s*n,this.w=s*(t._m[1]-t._m[4])}},rotate:function(t){var e=t.x,i=t.y,r=t.z,n=-this.x*e-this.y*i-this.z*r,s=w*e+this.y*r-this.z*i,a=w*i-this.x*r+this.z*e,o=w*r+this.x*i-this.y*e;return new HX.Float4(-n*this.x+s*this.w-a*this.z+o*this.y,-n*this.y+s*this.z+a*this.w-o*this.x,-n*this.z-s*this.y+a*this.x+o*this.w,t.w)},lerp:function(t,e,i){var r=t.w,n=t.x,s=t.y,a=t.z,o=e.w,h=e.x,_=e.y,l=e.z;0>r*o+n*h+s*_+a*l&&(o=-o,h=-h,_=-_,l=-l),this.x=n+i*(h-n),this.y=s+i*(_-s),this.z=a+i*(l-a),this.w=r+i*(o-r),this.normalize()},slerp:function(t,e,i){var r=t.w,n=t.x,s=t.y,a=t.z,o=e.w,h=e.x,_=e.y,l=e.z,u=r*o+n*h+s*_+a*l;if(0>u&&(u=-u,o=-o,h=-h,_=-_,l=-l),.95>u){var c=Math.acos(u),m=i*c;this.x=h-n*u,this.y=_-s*u,this.z=l-a*u,this.w=o-r*u,this.normalize();var f=Math.cos(m),d=Math.sin(m);this.x=n*f+this.x*d,this.y=s*f+this.y*d,this.z=a*f+this.z*d,this.w=r*f+this.w*d}else this.x=n+i*(h-n),this.y=s+i*(_-s),this.z=a+i*(l-a),this.w=r+i*(o-r),this.normalize()},negate:function(){this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w},set:function(t,e,i,r){this.x=t,this.y=e,this.z=i,this.w=r},normSquared:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},norm:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},normalize:function(){var t=1/Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);this.x*=t,this.y*=t,this.z*=t,this.w*=t},conjugateOf:function(t){this.x=-t.x,this.y=-t.y,this.z=-t.z,this.w=t.w},inverseOf:function(t){var e=t.x,i=t.y,r=t.z,n=t.w,s=1/(e*e+i*i+r*r+n*n);this.x=-e*s,this.y=-i*s,this.z=-r*s,this.w=n*s},invert:function(t){var e=this.x,i=this.y,r=this.z,n=this.w,s=1/(e*e+i*i+r*r+n*n);this.x=-e*s,this.y=-i*s,this.z=-r*s,this.w=n*s},product:function(t,e){var i=t.w,r=t.x,n=t.y,s=t.z,a=e.w,o=e.x,h=e.y,_=e.z;this.x=i*o+r*a+n*_-s*h,this.y=i*h-r*_+n*a+s*o,this.z=i*_+r*h-n*o+s*a,this.w=i*a-r*o-n*h-s*_},append:function(t){this.product(t,this)},prepend:function(t){this.product(this,t)}},HX.shuffle=function(t){for(var e,i,r=t.length;0!==r;)i=Math.floor(Math.random()*r),r-=1,e=t[r],t[r]=t[i],t[i]=e;return t},HX.BoundingVolume=function(t){this._type=t,this._expanse=HX.BoundingVolume.EXPANSE_EMPTY,this._minimumX=0,this._minimumY=0,this._minimumZ=0,this._maximumX=0,this._maximumY=0,this._maximumZ=0,this._halfExtentX=0,this._halfExtentY=0,this._halfExtentZ=0,this._centerX=0,this._centerY=0,this._centerZ=0},HX.BoundingVolume.EXPANSE_EMPTY=0,HX.BoundingVolume.EXPANSE_INFINITE=1,HX.BoundingVolume.EXPANSE_FINITE=2,HX.BoundingVolume._testAABBToSphere=function(t,e){var i=e._maximumX,r=e._maximumY,n=e._maximumZ,s=t._minimumX,a=t._minimumY,o=t._minimumZ,h=e._halfExtentX,_=this._centerX,l=this._centerY,u=this._centerZ,c=0;if(s>_){var m=_-s;c+=m*m}else if(_>i){var m=_-i;c+=m*m}if(a>l){var m=l-a;c+=m*m}else if(l>r){var m=l-r;c+=m*m}if(o>u){var m=u-o;c+=m*m}else if(u>n){var m=u-n;c+=m*m}return h*h>c},HX.BoundingVolume.prototype={getExpanse:function(){return this._expanse},type:function(){return this._type},growToIncludeMesh:function(t){throw"Abstract method!"},growToIncludeBound:function(t){throw"Abstract method!"},growToIncludeMinMax:function(t,e){throw"Abstract method!"},clear:function(t){this._minimumX=this._minimumY=this._minimumZ=0,this._maximumX=this._maximumY=this._maximumZ=0,this._centerX=this._centerY=this._centerZ=0,this._halfExtentX=this._halfExtentY=this._halfExtentZ=0,this._expanse=void 0===t?HX.BoundingVolume.EXPANSE_EMPTY:t},getMinimum:function(){return new HX.Float4(this._minimumX,this._minimumY,this._minimumZ,1)},getMaximum:function(){return new HX.Float4(this._maximumX,this._maximumY,this._maximumZ,1)},getCenter:function(){return new HX.Float4(this._centerX,this._centerY,this._centerZ,1)},getHalfExtent:function(){return new HX.Float4(this._halfExtentX,this._halfExtentY,this._halfExtentZ,0)},getRadius:function(){throw"Abstract method!"},transformFrom:function(t,e){throw"Abstract method!"},intersectsConvexSolid:function(t,e){throw"Abstract method!"},intersectsBound:function(t){throw"Abstract method!"},classifyAgainstPlane:function(t){throw"Abstract method!"},createDebugModelInstance:function(){throw"Abstract method!"},getDebugModelInstance:function(){return void 0===this._type._debugModel&&(this._type._debugModel=this.createDebugModelInstance()),this._type._debugModel},getDebugMaterial:function(){if(void 0===HX.BoundingVolume._debugMaterial){var t=new DOMParser,e=t.parseFromString(HX.BoundingVolume._debugMaterialXML,"text/xml");HX.BoundingVolume._debugMaterial=HX.Material.parseFromXML(e)}return HX.BoundingVolume._debugMaterial}},HX.BoundingAABB=function(){HX.BoundingVolume.call(this,HX.BoundingAABB)},HX.BoundingAABB.prototype=Object.create(HX.BoundingVolume.prototype),HX.BoundingAABB.prototype.growToIncludeMesh=function(t){if(this._expanse!==HX.BoundingVolume.EXPANSE_INFINITE){var e,i,r,n,s,a,o=t.getVertexAttribute("hx_position"),h=o.offset,_=o.stride,l=t._vertexData,u=l.length;for(this._expanse===HX.BoundingVolume.EXPANSE_EMPTY?(n=e=l[h],s=i=l[h+1],a=r=l[h+2],h+=_):(e=this._minimumX,i=this._minimumY,r=this._minimumZ,n=this._maximumX,s=this._maximumY,a=this._maximumZ);u>h;h+=_){var c=l[h],m=l[h+1],f=l[h+2];c>n?n=c:e>c&&(e=c),m>s?s=m:i>m&&(i=m),f>a?a=f:r>f&&(r=f)}this._minimumX=e,this._minimumY=i,this._minimumZ=r,this._maximumX=n,this._maximumY=s,this._maximumZ=a,this._expanse=HX.BoundingVolume.EXPANSE_FINITE,this._updateCenterAndExtent()}},HX.BoundingAABB.prototype.growToIncludeBound=function(t){t._expanse!==HX.BoundingVolume.EXPANSE_EMPTY&&this._expanse!==HX.BoundingVolume.EXPANSE_INFINITE&&(t._expanse===HX.BoundingVolume.EXPANSE_INFINITE?this._expanse=HX.BoundingVolume.EXPANSE_INFINITE:this._expanse==HX.BoundingVolume.EXPANSE_EMPTY?(this._minimumX=t._minimumX,this._minimumY=t._minimumY,this._minimumZ=t._minimumZ,this._maximumX=t._maximumX,this._maximumY=t._maximumY,this._maximumZ=t._maximumZ,this._expanse=HX.BoundingVolume.EXPANSE_FINITE):(t._minimumX<this._minimumX&&(this._minimumX=t._minimumX),t._minimumY<this._minimumY&&(this._minimumY=t._minimumY),t._minimumZ<this._minimumZ&&(this._minimumZ=t._minimumZ),t._maximumX>this._maximumX&&(this._maximumX=t._maximumX),t._maximumY>this._maximumY&&(this._maximumY=t._maximumY),t._maximumZ>this._maximumZ&&(this._maximumZ=t._maximumZ)),this._updateCenterAndExtent())},HX.BoundingAABB.prototype.growToIncludeMinMax=function(t,e){this._expanse!==HX.BoundingVolume.EXPANSE_INFINITE&&(this._expanse==HX.BoundingVolume.EXPANSE_EMPTY?(this._minimumX=t.x,this._minimumY=t.y,this._minimumZ=t.z,this._maximumX=e.x,this._maximumY=e.y,this._maximumZ=e.z,this._expanse=HX.BoundingVolume.EXPANSE_FINITE):(t.x<this._minimumX&&(this._minimumX=t.x),t.y<this._minimumY&&(this._minimumY=t.y),t.z<this._minimumZ&&(this._minimumZ=t.z),e.x>this._maximumX&&(this._maximumX=e.x),e.y>this._maximumY&&(this._maximumY=e.y),e.z>this._maximumZ&&(this._maximumZ=e.z)),this._updateCenterAndExtent())},HX.BoundingAABB.prototype.transformFrom=function(t,e){if(t._expanse==HX.BoundingVolume.EXPANSE_INFINITE||t._expanse==HX.BoundingVolume.EXPANSE_EMPTY)this.clear(t._expanse);else{var i=e._m,r=i[0],n=i[1],s=i[2],a=i[4],o=i[5],h=i[6],_=i[8],l=i[9],u=i[10],c=t._centerX,m=t._centerY,f=t._centerZ;this._centerX=r*c+a*m+_*f+i[12],this._centerY=n*c+o*m+l*f+i[13],this._centerZ=s*c+h*m+u*f+i[14],0>r&&(r=-r),0>n&&(n=-n),0>s&&(s=-s),0>a&&(a=-a),0>o&&(o=-o),0>h&&(h=-h),0>_&&(_=-_),0>l&&(l=-l),0>u&&(u=-u),c=t._halfExtentX,m=t._halfExtentY,f=t._halfExtentZ,this._halfExtentX=r*c+a*m+_*f,this._halfExtentY=n*c+o*m+l*f,this._halfExtentZ=s*c+h*m+u*f,this._minimumX=this._centerX-this._halfExtentX,this._minimumY=this._centerY-this._halfExtentY,this._minimumZ=this._centerZ-this._halfExtentZ,this._maximumX=this._centerX+this._halfExtentX,this._maximumY=this._centerY+this._halfExtentY,this._maximumZ=this._centerZ+this._halfExtentZ,this._expanse=t._expanse}},HX.BoundingAABB.prototype.intersectsConvexSolid=function(t,e){if(this._expanse==HX.BoundingVolume.EXPANSE_INFINITE)return!0;if(this._expanse==HX.BoundingVolume.EXPANSE_EMPTY)return!1;for(var i=this._minimumX,r=this._minimumY,n=this._minimumZ,s=this._maximumX,a=this._maximumY,o=this._maximumZ,h=0;e>h;++h){var _=t[h],l=_.x,u=_.y,c=_.z,m=_.w,f=0>l?i:s,d=0>u?r:a,p=0>c?n:o,X=l*f+u*d+c*p+m;if(0>X)return!1}return!0},HX.BoundingAABB.prototype.intersectsBound=function(t){return this._expanse==HX.BoundingVolume.EXPANSE_EMPTY||t._expanse==HX.BoundingVolume.EXPANSE_EMPTY?!1:this._expanse==HX.BoundingVolume.EXPANSE_INFINITE||t._expanse==HX.BoundingVolume.EXPANSE_INFINITE?!0:t._type===this._type?this._maximumX>t._minimumX&&this._minimumX<t._maximumX&&this._maximumY>t._minimumY&&this._minimumY<t._maximumY&&this._maximumZ>t._minimumZ&&this._minimumZ<t._maximumZ:HX.BoundingVolume._testAABBToSphere(this,t)},HX.BoundingAABB.prototype.classifyAgainstPlane=function(t){var e=t.x,i=t.y,r=t.z,n=n,s=e*this._centerX+i*this._centerY+r*this._centerZ+n;0>e&&(e=-e),0>i&&(i=-i),0>r&&(r=-r);var a=e*this._halfExtentX+i*this._halfExtentY+r*this._halfExtentZ;return s>a?HX.PlaneSide.FRONT:-a>s?HX.PlaneSide.BACK:HX.PlaneSide.INTERSECTING},HX.BoundingAABB.prototype.setExplicit=function(t,e){this._minimumX=t.x,this._minimumY=t.y,this._minimumZ=t.z,this._maximumX=e.x,this._maximumY=e.y,this._maximumZ=e.z,this._expanse=HX.BoundingVolume.EXPANSE_FINITE,this._updateCenterAndExtent()},HX.BoundingAABB.prototype._updateCenterAndExtent=function(){var t=this._minimumX,e=this._minimumY,i=this._minimumZ,r=this._maximumX,n=this._maximumY,s=this._maximumZ;this._centerX=.5*(t+r),this._centerY=.5*(e+n),this._centerZ=.5*(i+s),this._halfExtentX=.5*(r-t),this._halfExtentY=.5*(n-e),this._halfExtentZ=.5*(s-i)},HX.BoundingAABB.prototype.getRadius=function(){return Math.sqrt(this._halfExtentX*this._halfExtentX+this._halfExtentY*this._halfExtentY+this._halfExtentZ*this._halfExtentZ)},HX.BoundingAABB.prototype.createDebugModelInstance=function(){return new HX.ModelInstance(HX.BoxPrimitive.create({doubleSided:!0}),[this.getDebugMaterial()])},HX.BoundingSphere=function(){HX.BoundingVolume.call(this,HX.BoundingSphere)},HX.BoundingSphere.prototype=Object.create(HX.BoundingVolume.prototype),HX.BoundingSphere.prototype.setExplicit=function(t,e){this._centerX=t.x,this._centerY=t.y,this._centerZ=t.z,this._halfExtentX=this._halfExtentY=this._halfExtentZ=e,this._expanse=HX.BoundingVolume.EXPANSE_FINITE,this._updateMinAndMax()},HX.BoundingSphere.prototype.growToIncludeMesh=function(t){if(this._expanse!==HX.BoundingVolume.EXPANSE_INFINITE){var e,i,r,n,s,a,o=t.getVertexAttribute("hx_position"),h=o.offset,_=o.stride,l=o._vertexData,u=l.length();for(this._expanse===HX.BoundingVolume.EXPANSE_EMPTY?(n=e=l[h],s=i=l[h+1],a=r=l[h+2],h+=_):(e=this._minimumX,i=this._minimumY,r=this._minimumZ,n=this._maximumX,s=this._maximumY,a=this._maximumZ);u>h;h+=_){var c=l[h],m=l[h+1],f=l[h+2];c>n?n=c:e>c&&(e=c),m>s?s=m:i>m&&(i=m),f>a?a=f:r>f&&(r=f)}var d=.5*(n+e),p=.5*(s+i),X=.5*(a+r),H=0;for(h=o.offset;u>h;h+=_){var x=d-l[h],g=p-l[h+1],E=X-l[h+2],S=x*x+g*g+E*E;S>H&&(H=S)}this._centerX=d,this._centerY=p,this._centerZ=X;var T=Math.sqrt(H);this._halfExtentX=T,this._halfExtentY=T,this._halfExtentZ=T,this._expanse=HX.BoundingVolume.EXPANSE_FINITE,this._updateMinAndMax()}},HX.BoundingSphere.prototype.growToIncludeBound=function(t){if(t._expanse!==HX.BoundingVolume.EXPANSE_EMPTY&&this._expanse!==HX.BoundingVolume.EXPANSE_INFINITE){if(t._expanse===HX.BoundingVolume.EXPANSE_INFINITE)this._expanse=HX.BoundingVolume.EXPANSE_INFINITE;else if(expanse==HX.BoundingVolume.EXPANSE_EMPTY)this._centerX=t._centerX,this._centerY=t._centerY,this._centerZ=t._centerZ,t._type==this._type?(this._halfExtentX=t._halfExtentX,this._halfExtentY=t._halfExtentY,this._halfExtentZ=t._halfExtentZ):this._halfExtentX=this._halfExtentY=this._halfExtentZ=t.getRadius(),this._expanse=HX.BoundingVolume.EXPANSE_FINITE;else{var e=this._minimumX,i=this._minimumY,r=this._minimumZ,n=this._maximumX,s=this._maximumY,a=this._maximumZ;t._maximumX>n&&(n=t._maximumX),t._maximumY>s&&(s=t._maximumY),t._maximumZ>a&&(a=t._maximumZ),t._minimumX<e&&(e=t._minimumX),t._minimumY<i&&(i=t._minimumY),t._minimumZ<r&&(r=t._minimumZ),this._centerX=.5*(e+n),this._centerY=.5*(i+s),this._centerZ=.5*(r+a);var o=n-this._centerX,h=s-this._centerY,_=a-this._centerZ,l=Math.sqrt(o*o+h*h+_*_);this._halfExtentX=this._halfExtentY=this._halfExtentZ=l}this._updateMinAndMax()}},HX.BoundingSphere.prototype.growToIncludeMinMax=function(t,e){var i=new HX.BoundingAABB;i.growToIncludeMinMax(t,e),this.growToIncludeBound(i)},HX.BoundingSphere.prototype.getRadius=function(){return this._halfExtentX},HX.BoundingSphere.prototype.transformFrom=function(t,e){if(t._expanse==HX.BoundingVolume.EXPANSE_INFINITE||t._expanse==HX.BoundingVolume.EXPANSE_EMPTY)this.clear(t._expanse);else{var i=e._m,r=i[0],n=i[1],s=i[2],a=i[4],o=i[5],h=i[6],_=i[8],l=i[9],u=i[10],c=t._centerX,m=t._centerY,f=t._centerZ;this._centerX=r*c+a*m+_*f+i[12],this._centerY=n*c+o*m+l*f+i[13],this._centerZ=s*c+h*m+u*f+i[14],0>r&&(r=-r),0>n&&(n=-n),0>s&&(s=-s),0>a&&(a=-a),0>o&&(o=-o),0>h&&(h=-h),0>_&&(_=-_),0>l&&(l=-l),0>u&&(u=-u),c=t._halfExtentX,m=t._halfExtentY,f=t._halfExtentZ;var d=r*c+a*m+_*f,p=n*c+o*m+l*f,X=s*c+h*m+u*f,H=Math.sqrt(d*d+p*p+X*X);this._halfExtentX=this._halfExtentY=this._halfExtentZ=H,this._minimumX=this._centerX-this._halfExtentX,this._minimumY=this._centerY-this._halfExtentY,this._minimumZ=this._centerZ-this._halfExtentZ,this._maximumX=this._centerX+this._halfExtentX,this._maximumY=this._centerX+this._halfExtentY,this._maximumZ=this._centerX+this._halfExtentZ,this._expanse=HX.BoundingVolume.EXPANSE_FINITE}},HX.BoundingSphere.prototype.intersectsConvexSolid=function(t,e){if(this._expanse==HX.BoundingVolume.EXPANSE_INFINITE)return!0;if(this._expanse==HX.BoundingVolume.EXPANSE_EMPTY)return!1;for(var i=this._centerX,r=this._centerY,n=this._centerZ,s=-this._halfExtentX,a=0;e>a;++a){var o=t[a],h=o.x*i+o.y*r+o.z*n+o.w;if(s>h)return!1}return!0},HX.BoundingSphere.prototype.intersectsBound=function(t){if(this._expanse==HX.BoundingVolume.EXPANSE_EMPTY||t._expanse==HX.BoundingVolume.EXPANSE_EMPTY)return!1;if(this._expanse==HX.BoundingVolume.EXPANSE_INFINITE||t._expanse==HX.BoundingVolume.EXPANSE_INFINITE)return!0;if(t._type===this._type){var e=this._centerX-t._centerX,i=this._centerY-t._centerY,r=this._centerZ-t._centerZ,n=this._halfExtentX+t._halfExtentX;return n*n>e*e+i*i+r*r}return HX.BoundingVolume._testAABBToSphere(t,this)},HX.BoundingSphere.prototype.classifyAgainstPlane=function(t){var e=t.x*this._centerX+t.y*this._centerY+t.z*this._centerZ+t.w,i=this._halfExtentX;return e>i?HX.PlaneSide.FRONT:-i>e?HX.PlaneSide.BACK:HX.PlaneSide.INTERSECTING},HX.BoundingSphere.prototype._updateMinAndMax=function(){var t=this._centerX,e=this._centerY,i=this._centerZ,r=this._halfExtentX;this._minimumX=t-r,this._minimumY=e-r,this._minimumZ=i-r,this._maximumX=t+r,this._maximumY=e+r,this._maximumZ=i+r},HX.BoundingSphere.prototype.createDebugModelInstance=function(){return new HX.ModelInstance(HX.SpherePrimitive.create({doubleSided:!0}),[this.getDebugMaterial()])},HX.FixedAABB=function(){HX.BoundingAABB.call(this)},HX.FixedAABB.prototype=Object.create(HX.BoundingAABB.prototype),HX.BoundingVolume._debugMaterialXML='\r\n<?xml version="1.0" encoding="UTF-8"?>\n\r\n<material>\n\r\n    <shaders>\n\r\n        <shader id="vertexShader">\n\r\n            attribute vec4 hx_position;\n\r\n            \n\r\n            uniform mat4 hx_wvpMatrix;\n\r\n            \n\r\n            void main()\n\r\n            {\n\r\n                gl_Position = hx_wvpMatrix * hx_position;\n\r\n            }\n\r\n        </shader>\n\r\n        <shader id="fragmentShader">\n\r\n            precision mediump float;\n\r\n            \n\r\n            uniform vec4 color;\n\r\n            \n\r\n            void main()\n\r\n            {\n\r\n                gl_FragColor = color;\n\r\n            }\n\r\n        </shader>\n\r\n    </shaders>\n\r\n    <passes>\n\r\n        <preEffect>\n\r\n            <element>lines</element>\n\r\n            <vertex>vertexShader</vertex>\n\r\n            <fragment>fragmentShader</fragment>\n\r\n        </preEffect>\n\r\n    </passes>\n\r\n    <uniforms>\n\r\n        <color value="1.0, 0.0, 1.0, 1.0"/>\n\r\n    </uniforms>\n\r\n</material>',HX.Color=function(t,e,i,r){this.set(t,e,i,r)},HX.Color.prototype={set:function(t,e,i,r){void 0===t?(this.a=1,this.r=1,this.g=1,this.b=1):void 0===e?(this.a=1,this.r=((16711680&t)>>>16)/255,this.g=((65280&t)>>>8)/255,this.b=(255&t)/255):(this.r=t,this.g=e,this.b=i,this.a=void 0===r?1:r)},hex:function(){var t=255*Math.min(this.r,1),e=255*Math.min(this.g,1),i=255*Math.min(this.b,1);return t<<16|e<<8|i},luminance:function(){return.3*this.r+.59*this.g+.11*this.b},gammaToLinear:function(){return new HX.Color(Math.pow(this.r,2.2),Math.pow(this.g,2.2),Math.pow(this.b,2.2),this.a)},linearToGamma:function(){return new HX.Color(Math.pow(this.r,.454545),Math.pow(this.g,.454545),Math.pow(this.b,.454545),this.a)}},HX.IndexBuffer=function(){this._buffer=HX.GL.createBuffer()},HX.IndexBuffer.prototype={constructor:HX.IndexBuffer,uploadData:function(t,e){void 0===e&&(e=HX.GL.STATIC_DRAW),this.bind(),HX.GL.bufferData(HX.GL.ELEMENT_ARRAY_BUFFER,t,e)},dispose:function(){this._buffer&&(HX.GL.deleteBuffer(this._buffer),this._buffer=0)},bind:function(){HX.GL.bindBuffer(HX.GL.ELEMENT_ARRAY_BUFFER,this._buffer)}},HX.Signal=function(){this._listeners=[],this._lookUp={}},HX.Signal.prototype={bind:function(t,e){this._lookUp[e]=this._listeners.length,this._listeners.push(e.bind(t))},unbind:function(t){var e=this._lookUp[t];this._listeners.splice(e,1),delete this._lookUp[t]},dispatch:function(){for(var t=this._listeners.length,e=0;t>e;++e)this._listeners[e]()}},HX.URLLoader=function(){this._params=void 0,this._data=null,this._timeout=5e3,this._method="GET",this._type=HX.URLLoader.DATA_TEXT},HX.URLLoader.ERROR_TIME_OUT=408,HX.URLLoader.METHOD_GET="get",HX.URLLoader.METHOD_POST="post",HX.URLLoader.DATA_TEXT=0,HX.URLLoader.DATA_BINARY=1,HX.URLLoader.prototype={getType:function(){return this._type},setType:function(t){this._type=t},getData:function(){return this._data},getMethod:function(){return this._method},setMethod:function(t){this._method=t},getTimeoutDuration:function(){return this._timeout},setTimeoutDuration:function(t){this._timeout=t},setParameters:function(t){this._params=t},load:function(t){var e=new XMLHttpRequest;e.open(this._method,t,!0),e.timeout=this._timeout;var i=this;e.ontimeout=function(){i.onError(HX.URLLoader.ERROR_TIME_OUT)},e.onreadystatechange=function(){var t=this.DONE||4;this.readyState===t&&(200==this.status?(this._data=this._type==HX.URLLoader.DATA_TEXT?e.responseText:e.response,i.onComplete&&i.onComplete(this._data)):i.onError&&i.onError(this.status))},e.send(this._params)},onComplete:function(t){},onError:function(t){}
},HX.VertexBuffer=function(){this._buffer=HX.GL.createBuffer()},HX.VertexBuffer.prototype={constructor:HX.VertexBuffer,uploadData:function(t,e){void 0===e&&(e=HX.GL.STATIC_DRAW),this.bind(),HX.GL.bufferData(HX.GL.ARRAY_BUFFER,t,e)},dispose:function(){this._buffer&&(HX.GL.deleteBuffer(this._buffer),this._buffer=0)},bind:function(){HX.GL.bindBuffer(HX.GL.ARRAY_BUFFER,this._buffer)}},HX.EffectPass=function(t,e,i){t=t||HX.EffectPass.DEFAULT_VERTEX_SHADER;var r=new HX.Shader(t,e);HX.MaterialPass.call(this,r),this._uniformSetters=HX.UniformSetter.getSetters(this._shader),this._gbuffer=null,this._mesh=null,this._vertexLayout=null,void 0!=i&&this.setMesh(i),this.setTexture("hx_dither2D",HX.DEFAULT_2D_DITHER_TEXTURE),this._sourceSlot=this.getTextureSlot("hx_source")},HX.EffectPass.prototype=Object.create(HX.MaterialPass.prototype),HX.EffectPass.prototype.setMesh=function(t){this._mesh!=t&&(this._mesh=t,this._vertexLayout=new HX.VertexLayout(this._mesh,this))},HX.EffectPass.prototype.updateRenderState=function(){HX.MaterialPass.prototype.updateRenderState.call(this),this._mesh._vertexBuffer.bind(),this._mesh._indexBuffer.bind();for(var t=this._vertexLayout,e=t.attributes,i=e.length,r=0;i>r;++r){var n=e[r];HX.GL.vertexAttribPointer(n.index,n.numComponents,HX.GL.FLOAT,!1,n.stride,n.offset)}HX.enableAttributes(t._numAttributes)},HX.EffectPass.prototype.updateGlobalState=function(t,e,i){this._shader.updateRenderState(),this._sourceSlot&&(this._sourceSlot.texture=i),this.assignGBuffer(e);for(var r=this._uniformSetters.length,n=0;r>n;++n)this._uniformSetters[n].execute(null,t)},HX.Effect=function(){this._passes=[],this._mesh=null,this._hdrSourceIndex=-1,this._outputsGamma=!1},HX.Effect.prototype={getPass:function(t){return this._passes[t]},render:function(t,e){return this._camera=t._camera,this._gbuffer=t._gbuffer,this._hdrSourceIndex=t._hdrSourceIndex,this._hdrSources=t._hdrBuffers,this._hdrTargets=t._hdrTargets,this._hdrSource=this._hdrSources[this._hdrSourceIndex],this._hdrTarget=this._hdrTargets[1-this._hdrSourceIndex],this.draw(e),this._hdrSourceIndex},draw:function(t){for(var e=this._passes.length,i=0;e>i;++i)HX.setRenderTarget(this._hdrTarget),this._drawPass(this._passes[i]),this._swapHDRBuffers()},_drawPass:function(t){t.updateGlobalState(this._camera,this._gbuffer,this._hdrSource),t.updateRenderState(),HX.GL.drawElements(HX.GL.TRIANGLES,6,HX.GL.UNSIGNED_SHORT,0)},_swapHDRBuffers:function(){this._hdrTarget=this._hdrTargets[this._hdrSourceIndex],this._hdrSourceIndex=1-this._hdrSourceIndex,this._hdrSource=this._hdrSources[this._hdrSourceIndex]},removePass:function(t){var e=this._passes.indexOf(t);this._passes.splice(e,1)},addPass:function(t){this._passes.push(t)},numPasses:function(){return this._passes.length},setUniform:function(t,e){for(var i=this._passes.length,r=0;i>r;++r)this._passes[r]&&this._passes[r].setUniform(t,e)},setMesh:function(t){if(this._mesh!=t){this._mesh=t;for(var e=this._passes.length,i=0;e>i;++i)this._passes[i]&&this._passes[i].setMesh(t)}}},HX.EffectPass.DEFAULT_VERTEX_SHADER="precision mediump float;\r\n        \r\n        attribute vec4 hx_position;\r\n        attribute vec2 hx_texCoord;\r\n        \r\n        varying vec2 uv;\r\n        \r\n        void main()\r\n        {\r\n                uv = hx_texCoord;\n\r\n                gl_Position = hx_position;\n\r\n        }",HX.PBRMaterial=function(){HX.Material.call(this),this._diffuseColor=new HX.Color,this._diffuseTexture=null,this._updatePasses(),this.setMetallicness(0),this.setRoughness(.5),this.setSpecularNormalReflection(.027)},HX.PBRMaterial.prototype=Object.create(HX.Material.prototype),HX.PBRMaterial.prototype.setDiffuseColor=function(t){this._diffuseColor=isNaN(t)?t:new HX.Color(t),this.setUniform("albedoColor",this._diffuseColor)},HX.PBRMaterial.prototype.setDiffuseMap=function(t){this._diffuseTexture=t,this._passesInvalid=!0},HX.PBRMaterial.prototype.hasPass=function(t){return this._passesInvalid&&this._updatePasses(),HX.Material.prototype.hasPass.call(this,t)},HX.PBRMaterial.prototype.getPass=function(t){return this._passesInvalid&&this._updatePasses(),HX.Material.prototype.getPass.call(this,t)},HX.PBRMaterial.prototype._updatePasses=function(){var t=this._generateAlbedoDefines(),e=this._generateNormalDefines(),i=this._generateSpecularDefines();if(HX.EXT_DRAW_BUFFERS){var r=t+e+i;this._initPass(HX.MaterialPass.GEOMETRY_PASS,r,"default_geometry_mrt_vertex.glsl","default_geometry_mrt_fragment.glsl")}else this._initPass(HX.MaterialPass.GEOMETRY_ALBEDO_PASS,t,"default_albedo_vertex.glsl","default_albedo_fragment.glsl"),this._initPass(HX.MaterialPass.GEOMETRY_NORMAL_PASS,e,"default_normals_vertex.glsl","default_normals_fragment.glsl"),this._initPass(HX.MaterialPass.GEOMETRY_SPECULAR_PASS,i,"default_specular_vertex.glsl","default_specular_fragment.glsl");this.setUniform("albedoColor",this._diffuseColor),this.setTexture("albedoMap",this._diffuseTexture),this._passesInvalid=!1},HX.PBRMaterial.prototype._generateAlbedoDefines=function(){var t="";return this._diffuseTexture&&(t+="#define ALBEDO_MAP\n"),t},HX.PBRMaterial.prototype._generateNormalDefines=function(){var t="";return t},HX.PBRMaterial.prototype._generateSpecularDefines=function(){var t="";return t},HX.PBRMaterial.prototype._initPass=function(t,e,i,r){var n=e+HX.ShaderLibrary.get(i),s=e+HX.ShaderLibrary.get(r),a=new HX.Shader(n,s),o=new HX.MaterialPass(a);this.setPass(t,o)},HX.PBRMaterial.prototype.setMetallicness=function(t){this.setUniform("metallicness",t)},HX.PBRMaterial.prototype.setSpecularNormalReflection=function(t){this.setUniform("specularNormalReflection",t)},HX.PBRMaterial.prototype.setRoughness=function(t){this.setUniform("roughness",t)},HX.UniformSetter={},HX.UniformSetter.getSetters=function(t){return void 0===HX.UniformSetter._table&&HX.UniformSetter._init(),HX.UniformSetter._findSetters(t)},HX.UniformSetter._findSetters=function(t){var e=[];for(var i in HX.UniformSetter._table){var r=HX.GL.getUniformLocation(t._program,i);if(null!=r){var n=new HX.UniformSetter._table[i];e.push(n),n.location=r}}return e},HX.UniformSetter._init=function(){HX.UniformSetter._table={},HX.UniformSetter._table.hx_worldMatrix=HX.WorldMatrixSetter,HX.UniformSetter._table.hx_worldViewMatrix=HX.WorldViewMatrixSetter,HX.UniformSetter._table.hx_wvpMatrix=HX.WorldViewProjectionSetter,HX.UniformSetter._table.hx_viewMatrix=HX.ViewMatrixSetter,HX.UniformSetter._table.hx_projectionMatrix=HX.ProjectionSetter,HX.UniformSetter._table.hx_inverseProjectionMatrix=HX.InverseProjectionSetter,HX.UniformSetter._table.hx_inverseWVPMatrix=HX.InverseWVPSetter,HX.UniformSetter._table.hx_viewProjectionMatrix=HX.ViewProjectionSetter,HX.UniformSetter._table.hx_inverseViewProjectionMatrix=HX.InverseViewProjectionSetter,HX.UniformSetter._table.hx_normalWorldMatrix=HX.NormalWorldMatrixSetter,HX.UniformSetter._table.hx_normalWorldViewMatrix=HX.NormalWorldViewMatrixSetter,HX.UniformSetter._table.hx_cameraWorldPosition=HX.CameraWorldPosSetter,HX.UniformSetter._table.hx_cameraWorldMatrix=HX.CameraWorldMatrixSetter,HX.UniformSetter._table.hx_cameraFrustumRange=HX.CameraFrustumRangeSetter,HX.UniformSetter._table.hx_cameraNearPlaneDistance=HX.CameraNearPlaneDistanceSetter,HX.UniformSetter._table.hx_cameraFarPlaneDistance=HX.CameraFarPlaneDistanceSetter,HX.UniformSetter._table.hx_renderTargetResolution=HX.RenderTargetResolutionSetter,HX.UniformSetter._table.hx_rcpRenderTargetResolution=HX.RCPRenderTargetResolutionSetter,HX.UniformSetter._table.hx_dither2DTextureScale=HX.Dither2DTextureScaleSetter,HX.UniformSetter._table["hx_poissonDisk[0]"]=HX.PoissonDiskSetter},HX.WorldMatrixSetter=function(){},HX.WorldMatrixSetter.prototype.execute=function(t,e){HX.GL.uniformMatrix4fv(this.location,!1,t._m)},HX.ViewProjectionSetter=function(){},HX.ViewProjectionSetter.prototype.execute=function(t,e){var i=e.getViewProjectionMatrix();HX.GL.uniformMatrix4fv(this.location,!1,i._m)},HX.InverseViewProjectionSetter=function(){},HX.InverseViewProjectionSetter.prototype.execute=function(t,e){var i=e.getInverseViewProjectionMatrix();HX.GL.uniformMatrix4fv(this.location,!1,i._m)},HX.InverseWVPSetter=function(){},HX.InverseWVPSetter.prototype.execute=function(t,e){var i=e.getInverseViewProjectionMatrix();HX.GL.uniformMatrix4fv(this.location,!1,i._m)},HX.ProjectionSetter=function(){},HX.ProjectionSetter.prototype.execute=function(t,e){var i=e.getProjectionMatrix();HX.GL.uniformMatrix4fv(this.location,!1,i._m)},HX.InverseProjectionSetter=function(){},HX.InverseProjectionSetter.prototype.execute=function(t,e){var i=e.getInverseProjectionMatrix();HX.GL.uniformMatrix4fv(this.location,!1,i._m)},HX.WorldViewProjectionSetter=function(){this._matrix=new HX.Matrix4x4},HX.WorldViewProjectionSetter.prototype.execute=function(t,e){this._matrix.product(e.getViewProjectionMatrix(),t),HX.GL.uniformMatrix4fv(this.location,!1,this._matrix._m)},HX.WorldViewMatrixSetter=function(){this._matrix=new HX.Matrix4x4},HX.WorldViewMatrixSetter.prototype.execute=function(t,e){this._matrix.product(e.getViewMatrix(),t),HX.GL.uniformMatrix4fv(this.location,!1,this._matrix._m)},HX.NormalWorldMatrixSetter=function(){this._data=new Float32Array(9)},HX.NormalWorldMatrixSetter.prototype.execute=function(t,e){t.writeNormalMatrix(this._data),HX.GL.uniformMatrix3fv(this.location,!1,this._data)},HX.NormalWorldViewMatrixSetter=function(){this._matrix=new HX.Matrix4x4,this._data=new Float32Array(9)},HX.NormalWorldViewMatrixSetter.prototype.execute=function(t,e){this._matrix.product(e.getViewMatrix(),t),this._matrix.writeNormalMatrix(this._data),HX.GL.uniformMatrix3fv(this.location,!1,this._data)},HX.CameraWorldPosSetter=function(){},HX.CameraWorldPosSetter.prototype.execute=function(t,e){var i=e.getWorldMatrix()._m;HX.GL.uniform3f(this.location,i[12],i[13],i[14])},HX.CameraWorldMatrixSetter=function(){},HX.CameraWorldMatrixSetter.prototype.execute=function(t,e){var i=e.getWorldMatrix();HX.GL.uniformMatrix4fv(this.location,!1,i._m)},HX.CameraFrustumRangeSetter=function(){},HX.CameraFrustumRangeSetter.prototype.execute=function(t,e){HX.GL.uniform1f(this.location,e.getFarDistance()-e.getNearDistance())},HX.CameraNearPlaneDistanceSetter=function(){},HX.CameraNearPlaneDistanceSetter.prototype.execute=function(t,e){HX.GL.uniform1f(this.location,e.getNearDistance())},HX.CameraFarPlaneDistanceSetter=function(){},HX.CameraFarPlaneDistanceSetter.prototype.execute=function(t,e){HX.GL.uniform1f(this.location,e.getFarDistance())},HX.ViewMatrixSetter=function(){},HX.ViewMatrixSetter.prototype.execute=function(t,e){var i=e.getViewMatrix();HX.GL.uniformMatrix4fv(this.location,!1,i._m)},HX.RenderTargetResolutionSetter=function(){},HX.RenderTargetResolutionSetter.prototype.execute=function(t,e){HX.GL.uniform2f(this.location,e._renderTargetWidth,e._renderTargetHeight)},HX.RCPRenderTargetResolutionSetter=function(){},HX.RCPRenderTargetResolutionSetter.prototype.execute=function(t,e){HX.GL.uniform2f(this.location,1/e._renderTargetWidth,1/e._renderTargetHeight)},HX.Dither2DTextureScaleSetter=function(){},HX.Dither2DTextureScaleSetter.prototype.execute=function(t,e){HX.GL.uniform2f(this.location,e._renderTargetWidth/HX.DEFAULT_2D_DITHER_TEXTURE.width(),e._renderTargetHeight/HX.DEFAULT_2D_DITHER_TEXTURE.height())},HX.PoissonDiskSetter=function(){},HX.PoissonDiskSetter.prototype.execute=function(t,e){HX.GL.uniform2fv(this.location,HX.DEFAULT_POISSON_DISK)},HX.AmbientLight=function(){HX.Light.call(this,HX.AmbientLight),HX.Light._rectMesh=HX.Light._rectMesh||new HX.RectMesh.create,this._lightPass=null,this._useAO=!1,this.setColor(new HX.Color(.1,.1,.1))},HX.AmbientLight.prototype=Object.create(HX.Light.prototype),HX.AmbientLight.prototype.activate=function(t,e,i){var r=null!=i;this._lightPass&&this._useAO==r||(this._useAO=r,this._initLightPass()),HX.GL.disable(HX.GL.DEPTH_TEST),HX.GL.disable(HX.GL.CULL_FACE),HX.AmbientLight._lightPass.updateGlobalState(t,e,i),HX.AmbientLight._lightPass.updateRenderState()},HX.AmbientLight.prototype.renderBatch=function(t,e,i,r,n){this._occlusion=n;for(var s=0,a=0,o=0,h=t.length,_=e;h>_;++_){var l=t[_],u=l._scaledIrradiance;if(l._type!=this._type){h=_;break}s+=u.r,a+=u.g,o+=u.b}return HX.GL.uniform3f(HX.AmbientLight._colorLocation,s,a,o),HX.GL.drawElements(HX.GL.TRIANGLES,6,HX.GL.UNSIGNED_SHORT,0),h},HX.AmbientLight.prototype._updateWorldBounds=function(){this._worldBounds.clear(HX.BoundingVolume.EXPANSE_INFINITE),HX.Light.prototype._updateWorldBounds.call(this)},HX.AmbientLight.prototype._initLightPass=function(){var t=new HX.EffectPass(HX.AmbientLight.vertexShader,HX.AmbientLight.getFragmentShader(this._useAO),HX.Light._rectMesh);HX.AmbientLight._colorLocation=t.getUniformLocation("lightColor"),HX.AmbientLight._lightPass=t},HX.AmbientLight.vertexShader="precision mediump float;\r\n    \r\n    attribute vec4 hx_position;\r\n    attribute vec2 hx_texCoord;\r\n    \r\n    varying vec2 uv;\r\n    \r\n    void main()\r\n    {\r\n            uv = hx_texCoord;\r\n            gl_Position = hx_position;\r\n    }",HX.AmbientLight.getFragmentShader=function(t){return(t?"#define USE_AO\n":"")+"precision mediump float;\n\r\n            uniform vec3 lightColor;\n\r\n            \n\r\n            uniform sampler2D hx_gbufferAlbedo;\n\r\n            #ifdef USE_AO\n\r\n            uniform sampler2D hx_source;    // contains AO \n\r\n            #endif\n\r\n            \n\r\n            varying vec2 uv;\n\r\n            \n\r\n            void main()\n\r\n            {\n\r\n                vec3 albedoSample = texture2D(hx_gbufferAlbedo, uv).xyz;\n\r\n                #ifdef USE_AO\n\r\n                float occlusionSample = texture2D(hx_source, uv).w;\n\r\n                albedoSample *= occlusionSample;\n\r\n                #endif\n\r\n                \n\r\n                albedoSample = hx_gammaToLinear(albedoSample);\n\r\n                \n\r\n                gl_FragColor = vec4(lightColor * albedoSample, 0.0);\n\r\n            }"},HX.Frustum=function(){this._planes=new Array(6),this._corners=new Array(8);for(var t=0;6>t;++t)this._planes[t]=new HX.Float4;for(var t=0;8>t;++t)this._corners[t]=new HX.Float4},HX.Frustum.PLANE_LEFT=0,HX.Frustum.PLANE_RIGHT=1,HX.Frustum.PLANE_BOTTOM=2,HX.Frustum.PLANE_TOP=3,HX.Frustum.PLANE_NEAR=4,HX.Frustum.PLANE_FAR=5,HX.Frustum.CLIP_SPACE_CORNERS=[new HX.Float4(-1,-1,-1,1),new HX.Float4(1,-1,-1,1),new HX.Float4(1,1,-1,1),new HX.Float4(-1,1,-1,1),new HX.Float4(-1,-1,1,1),new HX.Float4(1,-1,1,1),new HX.Float4(1,1,1,1),new HX.Float4(-1,1,1,1)],HX.Frustum.prototype={getPlanes:function(){return this._planes},getCorners:function(){return this._corners},update:function(t,e){this._updatePlanes(t),this._updateCorners(e)},_updatePlanes:function(t){var e=t.getRow(0),i=t.getRow(1),r=t.getRow(2),n=t.getRow(3);this._planes[HX.Frustum.PLANE_LEFT].sum(n,e),this._planes[HX.Frustum.PLANE_RIGHT].difference(n,e),this._planes[HX.Frustum.PLANE_BOTTOM].sum(n,i),this._planes[HX.Frustum.PLANE_TOP].difference(n,i),this._planes[HX.Frustum.PLANE_NEAR].sum(n,r),this._planes[HX.Frustum.PLANE_FAR].difference(n,r);for(var s=0;6>s;++s)this._planes[s].normalizeAsPlane()},_updateCorners:function(t){for(var e=0;8>e;++e){var i=this._corners[e];t.transformTo(HX.Frustum.CLIP_SPACE_CORNERS[e],i),i.scale(1/i.w)}}},HX.Camera=function(){HX.SceneNode.call(this),this._renderTargetWidth=0,this._renderTargetHeight=0,this._viewProjectionMatrixInvalid=!0,this._viewProjectionMatrix=new HX.Matrix4x4,this._inverseProjectionMatrix=new HX.Matrix4x4,this._inverseViewProjectionMatrix=new HX.Matrix4x4,this._projectionMatrix=new HX.Matrix4x4,this._viewMatrix=new HX.Matrix4x4,this._projectionMatrixDirty=!0,this._nearDistance=.1,this._farDistance=1e3,this._frustum=new HX.Frustum;var t=new HX.Matrix4x4;t.translation(0,0,1),this.setTransformationMatrix(t)},HX.Camera.prototype=Object.create(HX.SceneNode.prototype),HX.Camera.prototype.getViewProjectionMatrix=function(){return this._viewProjectionMatrixInvalid&&this._updateViewProjectionMatrix(),this._viewProjectionMatrix},HX.Camera.prototype.getFrustum=function(){return this._viewProjectionMatrixInvalid&&this._updateViewProjectionMatrix(),this._frustum},HX.Camera.prototype.getInverseViewProjectionMatrix=function(){return this._viewProjectionMatrixInvalid&&this._updateViewProjectionMatrix(),this._inverseViewProjectionMatrix},HX.Camera.prototype.getInverseProjectionMatrix=function(){return this._projectionMatrixDirty&&this._updateProjectionMatrix(),this._inverseProjectionMatrix},HX.Camera.prototype.getProjectionMatrix=function(){return this._projectionMatrixDirty&&this._updateProjectionMatrix(),this._projectionMatrix},HX.Camera.prototype.getViewMatrix=function(){return this._viewProjectionMatrixInvalid&&this._updateViewProjectionMatrix(),this._viewMatrix},HX.Camera.prototype.getNearDistance=function(){return this._nearDistance},HX.Camera.prototype.setNearDistance=function(t){this._nearDistance=t,this._invalidateProjectionMatrix()},HX.Camera.prototype.getFarDistance=function(){return this._farDistance},HX.Camera.prototype.setFarDistance=function(t){this._farDistance=t,this._invalidateProjectionMatrix()},HX.Camera.prototype._setRenderTargetResolution=function(t,e){this._renderTargetWidth=t,this._renderTargetHeight=e},HX.Camera.prototype._invalidateViewProjectionMatrix=function(){this._viewProjectionMatrixInvalid=!0},HX.Camera.prototype._invalidateWorldTransformation=function(){HX.SceneNode.prototype._invalidateWorldTransformation.call(this),this._invalidateViewProjectionMatrix()},HX.Camera.prototype._updateViewProjectionMatrix=function(){this._viewMatrix.inverseAffineOf(this.getWorldMatrix()),this._viewProjectionMatrix.product(this.getProjectionMatrix(),this._viewMatrix),this._inverseProjectionMatrix.inverseOf(this._projectionMatrix),this._inverseViewProjectionMatrix.inverseOf(this._viewProjectionMatrix),this._frustum.update(this._viewProjectionMatrix,this._inverseViewProjectionMatrix),this._viewProjectionMatrixInvalid=!1},HX.Camera.prototype._invalidateProjectionMatrix=function(){this._projectionMatrixDirty=!0,this._invalidateViewProjectionMatrix()},HX.Camera.prototype._updateProjectionMatrix=function(){throw"Abstract method!"},HX.Camera.prototype._updateWorldBounds=function(){this._worldBounds.clear(HX.BoundingVolume.EXPANSE_INFINITE)},HX.PerspectiveCamera=function(){HX.Camera.call(this),this._vFOV=1.047198,this._aspectRatio=0},HX.PerspectiveCamera.prototype=Object.create(HX.Camera.prototype),HX.PerspectiveCamera.prototype.getVerticalFOV=function(){return this._vFOV},HX.PerspectiveCamera.prototype.setVerticalFOV=function(t){this._nearDistance=t,this._invalidateProjectionMatrix()},HX.PerspectiveCamera.prototype._setAspectRatio=function(t){this._aspectRatio!=t&&(this._aspectRatio=t,this._invalidateProjectionMatrix())},HX.PerspectiveCamera.prototype._setRenderTargetResolution=function(t,e){HX.Camera.prototype._setRenderTargetResolution.call(this,t,e),this._setAspectRatio(t/e)},HX.PerspectiveCamera.prototype._updateProjectionMatrix=function(){this._projectionMatrix.perspectiveProjection(this._vFOV,this._aspectRatio,this._nearDistance,this._farDistance),this._projectionMatrixDirty=!1},HX.OrthographicOffCenterCamera=function(){HX.Camera.call(this),this._left=-1,this._right=1,this._top=1,this._bottom=-1},HX.OrthographicOffCenterCamera.prototype=Object.create(HX.Camera.prototype),HX.OrthographicOffCenterCamera.prototype.setBounds=function(t,e,i,r){this._left=t,this._right=e,this._top=i,this._bottom=r,this._invalidateProjectionMatrix()},HX.OrthographicOffCenterCamera.prototype._updateProjectionMatrix=function(){this._projectionMatrix.orthographicOffCenterProjection(this._left,this._right,this._top,this._bottom,this._nearDistance,this._farDistance),this._projectionMatrixDirty=!1},HX.DirectionalLight=function(){HX.Light.call(this,HX.DirectionalLight),HX.Light._rectMesh=HX.Light._rectMesh||new HX.RectMesh.create,this._numCascades=3,this._shadowMapSize=1024,this._numShadowSamples=1,this._shadowSoftness=.05,this._depthBias=.01,this.setDirection(new HX.Float4(1,-1,1,0)),this._matrixData=null,this._shadowSoftnessData=null,this._dirLocation=null,this._colorLocation=null,this._splitDistancesLocation=null,this._shadowMatrixLocation=null,this._depthBiasLocation=null,this._shadowSoftnessLocation=null},HX.DirectionalLight.prototype=Object.create(HX.Light.prototype),HX.DirectionalLight.prototype.getDirection=function(){var t=this.getWorldMatrix().getColumn(2);return t.x=-t.x,t.y=-t.y,t.z=-t.z,t},HX.DirectionalLight.prototype.setCastsShadows=function(t){this._castsShadows!=t&&(this._castsShadows=t,t?this._shadowMapRenderer=new HX.CascadeShadowMapRenderer(this,this._numCascades,this._shadowMapSize):(this._shadowMapRenderer.dispose(),this._shadowMapRenderer=null),this._invalidateLightPass())},HX.DirectionalLight.prototype.getNumCascades=function(){return this._numCascades},HX.DirectionalLight.prototype.setNumCascades=function(t){t>4&&(console.warn("setNumCascades called with value greater than 4. Real value will be set to 4."),t=4),this._numCascades=t,this._castsShadows&&this._invalidateLightPass(),this._shadowMapRenderer&&this._shadowMapRenderer.setNumCascades(t)},HX.DirectionalLight.prototype.getShadowMapSize=function(){return this._shadowMapSize},HX.DirectionalLight.prototype.setShadowMapSize=function(t){this._shadowMapSize=t,this._shadowMapRenderer&&this._shadowMapRenderer.setShadowMapSize(t)},HX.DirectionalLight.prototype.getDepthBias=function(){return this._depthBias},HX.DirectionalLight.prototype.setDepthBias=function(t){this._depthBias=t},HX.DirectionalLight.prototype.setShadowSoftness=function(t){this._shadowSoftness=t},HX.DirectionalLight.prototype.setNumShadowSamples=function(t){1>t&&(t=1,console.warn("setNumShadowSamples called with value smaller than 1. Real value will be set to 1.")),this._numShadowSamples=t,this._castsShadows&&this._invalidateLightPass()},HX.DirectionalLight.prototype.setDirection=function(t){var e=new HX.Matrix4x4,i=this.getWorldMatrix().getColumn(3),r=HX.Float4.sum(t,i);e.lookAt(r,i,HX.Float4.Y_AXIS),this.setTransformationMatrix(e)},HX.DirectionalLight.prototype.activate=function(t,e,i){},HX.DirectionalLight.prototype.renderBatch=function(t,e,i,r,n){this._lightPass||this._initLightPass(),this._lightPass.updateGlobalState(i,r,n),this._lightPass.updateRenderState();var s=t[e],a=s.getDirection(),o=s._scaledIrradiance;if(HX.GL.uniform3f(this._dirLocation,a.x,a.y,a.z),HX.GL.uniform3f(this._colorLocation,o.r,o.g,o.b),this._castsShadows){var h=this._shadowMapRenderer.getSplitDistances();HX.GL.uniform1fv(this._splitDistancesLocation,new Float32Array(h)),HX.GL.uniform1f(this._depthBiasLocation,s.getDepthBias());for(var _=0,l=0,u=this._numCascades,c=0;u>c;++c){for(var m=this._shadowMapRenderer.getShadowMatrix(c)._m,f=0;16>f;++f)this._matrixData[_++]=m[f];this._numShadowSamples>1&&(this._shadowSoftnessData[l++]=m[0]*this._shadowSoftness*.5,this._shadowSoftnessData[l++]=m[5]*this._shadowSoftness*.5)}HX.GL.uniformMatrix4fv(this._shadowMatrixLocation,!1,this._matrixData),this._numShadowSamples>1&&HX.GL.uniform2fv(this._shadowSoftnessLocation,this._shadowSoftnessData)}return HX.GL.drawElements(HX.GL.TRIANGLES,6,HX.GL.UNSIGNED_SHORT,0),e+1},HX.DirectionalLight.prototype._updateWorldBounds=function(){this._worldBounds.clear(HX.BoundingVolume.EXPANSE_INFINITE),HX.Light.prototype._updateWorldBounds.call(this)},HX.DirectionalLight.prototype._initLightPass=function(){var t=HX.DirectionalLight.getVertexShader(this._castsShadows),e=HX.DirectionalLight.getFragmentShader(this._castsShadows?this._numCascades:0,this._numShadowSamples),i=new HX.EffectPass(t,e,HX.Light._rectMesh);this._dirLocation=i.getUniformLocation("lightWorldDirection"),this._colorLocation=i.getUniformLocation("lightColor"),this._lightPass=i,this._castsShadows&&(this._matrixData=new Float32Array(16*this._numCascades),this._lightPass.setTexture("shadowMap",this._shadowMapRenderer._shadowMap),this._splitDistancesLocation=this._lightPass.getUniformLocation("splitDistances[0]"),this._shadowMatrixLocation=this._lightPass.getUniformLocation("shadowMapMatrices[0]"),this._depthBiasLocation=this._lightPass.getUniformLocation("depthBias"),this._numShadowSamples>1&&(this._shadowSoftnessLocation=this._lightPass.getUniformLocation("shadowMapSoftnesses[0]"),this._shadowSoftnessData=new Float32Array(2*this._numCascades)))},HX.DirectionalLight.prototype._invalidateLightPass=function(){this._lightPass&&(this._lightPass._shader.dispose(),this._lightPass=null,this._dirLocation=null,this._colorLocation=null,this._splitDistancesLocation=null,this._shadowMatrixLocation=null,this._depthBiasLocation=null,this._shadowSoftnessLocation=null,this._matrixData=null)},HX.DirectionalLight.getVertexShader=function(t){return(t?"#define CAST_SHADOWS\n":"")+"precision mediump float;\n\r\n    \n\r\n    attribute vec4 hx_position;\n\r\n    attribute vec2 hx_texCoord;\n\r\n    \n\r\n    #ifdef CAST_SHADOWS\n\r\n    uniform mat4 hx_inverseProjectionMatrix;\n\r\n    uniform mat4 hx_cameraWorldMatrix;\n\r\n    #else\n\r\n    uniform mat4 hx_inverseViewProjectionMatrix;\n\r\n    uniform vec3 hx_cameraWorldPosition;\n\r\n    #endif\n\r\n    \n\r\n    varying vec2 uv;\n\r\n    varying vec3 viewWorldDir;\n\r\n    \n\r\n    void main()\n\r\n    {\n\r\n            uv = hx_texCoord;\n\r\n            #ifdef CAST_SHADOWS\n\r\n                vec4 unproj = hx_inverseProjectionMatrix * vec4(hx_position.xy, 0.0, 1.0);\n\r\n                vec3 viewDir = unproj.xyz / unproj.w;\n\r\n                viewDir /= viewDir.z;\n\r\n                viewWorldDir = mat3(hx_cameraWorldMatrix) * viewDir;\n\r\n            #else\n\r\n                vec4 unproj = hx_inverseViewProjectionMatrix * vec4(hx_position.xy, 0.0, 1.0);\n\r\n                unproj /= unproj.w;\n\r\n                viewWorldDir = unproj.xyz - hx_cameraWorldPosition;\n\r\n            #endif\n\r\n            gl_Position = hx_position;\n\r\n    }"},HX.DirectionalLight.getFragmentShader=function(t,e){return(t>0?"#define NUM_CASCADES "+t+"\n":"")+(e>1?"#define NUM_SHADOW_SAMPLES "+e+"\n":"")+HX.DEFERRED_LIGHT_MODEL+"varying vec2 uv;\n\r\n    varying vec3 viewWorldDir;\n\r\n    \n\r\n    uniform vec3 lightColor;\n\r\n    uniform vec3 lightWorldDirection;\n\r\n    \n\r\n    uniform sampler2D hx_gbufferAlbedo;\n\r\n    uniform sampler2D hx_gbufferNormals;\n\r\n    uniform sampler2D hx_gbufferSpecular;\n\r\n    \n\r\n    #ifdef NUM_CASCADES\n\r\n        uniform sampler2D shadowMap;\n\r\n        uniform sampler2D hx_gbufferDepth;\n\r\n        uniform float hx_cameraFrustumRange;\n\r\n        \n\r\n        uniform vec3 hx_cameraWorldPosition;\n\r\n        uniform mat4 hx_projectionMatrix;\n\r\n        uniform mat4 shadowMapMatrices[NUM_CASCADES];\n\r\n        uniform float splitDistances[NUM_CASCADES];\n\r\n        uniform float depthBias;\n\r\n        \n\r\n        #ifdef NUM_SHADOW_SAMPLES\n\r\n            uniform sampler2D hx_dither2D;\n\r\n            uniform vec2 hx_dither2DTextureScale;\n\r\n            \n\r\n            uniform vec2 shadowMapSoftnesses[NUM_CASCADES];\n\r\n            uniform vec2 hx_poissonDisk[NUM_SHADOW_SAMPLES];\n\r\n        #endif\n\r\n        \n\r\n        // view-space position\n\r\n        #ifdef NUM_SHADOW_SAMPLES\n\r\n        void getShadowMapCoord(in vec3 worldPos, in float viewZ, out vec4 coord, out vec2 softness)\n\r\n        #else\n\r\n        void getShadowMapCoord(in vec3 worldPos, in float viewZ, out vec4 coord)\n\r\n        #endif\n\r\n        {\n\r\n            mat4 shadowMapMatrix = shadowMapMatrices[NUM_CASCADES - 1];\n\r\n            \n\r\n            for (int i = 0; i < NUM_CASCADES - 1; ++i) {\n\r\n                if (viewZ < splitDistances[i]) {\n\r\n                    shadowMapMatrix = shadowMapMatrices[i];\n\r\n                    #ifdef NUM_SHADOW_SAMPLES\n\r\n                        softness = shadowMapSoftnesses[i];\n\r\n                    #endif\n\r\n                    break;\n\r\n                }\n\r\n            }\n\r\n            coord = shadowMapMatrix * vec4(worldPos, 1.0);\n\r\n        }\n\r\n    #endif\n\r\n    \n\r\n    void main()\n\r\n    {\n\r\n        vec4 albedoSample = texture2D(hx_gbufferAlbedo, uv);\n\r\n        vec4 normalSample = texture2D(hx_gbufferNormals, uv);\n\r\n        vec4 specularSample = texture2D(hx_gbufferSpecular, uv);\n\r\n        vec3 normal = normalize(normalSample.xyz - .5);\n\r\n        vec3 normalSpecularReflectance;\n\r\n        \n\r\n        albedoSample = hx_gammaToLinear(albedoSample);\n\r\n        vec3 normalizedWorldView = normalize(viewWorldDir);\n\r\n        #ifdef NUM_CASCADES\n\r\n            normalizedWorldView = -normalizedWorldView;\n\r\n        #endif\n\r\n        \n\r\n        float roughness;\n\r\n        hx_decodeReflectionData(albedoSample, specularSample, normalSpecularReflectance, roughness);\n\r\n        vec3 diffuseReflection;\n\r\n        vec3 specularReflection;\n\r\n        hx_lighting(normal, lightWorldDirection, normalizedWorldView, lightColor, normalSpecularReflectance, roughness, normalSample.w, diffuseReflection, specularReflection);\n\r\n        diffuseReflection *= albedoSample.xyz * (1.0 - specularSample.x);\n\r\n        vec3 totalReflection = diffuseReflection + specularReflection;\n\r\n        \n\r\n        #ifdef NUM_CASCADES\n\r\n            float depth = hx_sampleLinearDepth(hx_gbufferDepth, uv);\n\r\n            float viewZ = -depth * hx_cameraFrustumRange;\n\r\n            vec3 worldPos = hx_cameraWorldPosition + viewZ * viewWorldDir;\n\r\n            \n\r\n            vec4 shadowMapCoord;\n\r\n            #ifdef NUM_SHADOW_SAMPLES\n\r\n                vec2 radii;\n\r\n                getShadowMapCoord(worldPos, -viewZ, shadowMapCoord, radii);\n\r\n                float shadowTest = 0.0;\n\r\n                vec4 dither = texture2D(hx_dither2D, uv * hx_dither2DTextureScale);\n\r\n                dither *= radii.xxyy;  // add radius scale\n\r\n                for (int i = 0; i < NUM_SHADOW_SAMPLES; ++i) {\n\r\n                    vec2 offset;\r\n                    offset.x = dot(dither.xy, hx_poissonDisk[i]);\n\r\n                    offset.y = dot(dither.zw, hx_poissonDisk[i]);\n\r\n                    float shadowSample = texture2D(shadowMap, shadowMapCoord.xy + offset).x;\n\r\n                    float diff = shadowMapCoord.z - shadowSample;\n\r\n                    if (diff < depthBias) diff = -1.0;\n\r\n                    shadowTest += float(diff < 0.0);\n\r\n                }\n\r\n                shadowTest /= float(NUM_SHADOW_SAMPLES);\n\r\n                \n\r\n            #else\n\r\n                getShadowMapCoord(worldPos, -viewZ, shadowMapCoord);\n\r\n                float shadowSample = texture2D(shadowMap, shadowMapCoord.xy).x;\n\r\n                float diff = shadowMapCoord.z - shadowSample;\n\r\n                if (diff < .005) diff = -1.0;\n\r\n                float shadowTest = float(diff < 0.0);\n\r\n            #endif\n\r\n            totalReflection *= shadowTest;\n\r\n        \n\r\n        #endif\n\r\n        \n\r\n        gl_FragColor = vec4(totalReflection, 0.0);\n\r\n    }"},HX.GlobalSpecularProbe=function(t){this._texture=t,HX.GlobalSpecularProbe._rectMesh=HX.GlobalSpecularProbe._rectMesh||new HX.RectMesh.create,this._pass=this._initPass()},HX.GlobalSpecularProbe.powerRange0=98e-5,HX.GlobalSpecularProbe.powerRange1=.9921,HX.GlobalSpecularProbe.prototype=Object.create(HX.Light.prototype),HX.GlobalSpecularProbe.prototype.render=function(t,e,i){if(HX.GL.disable(HX.GL.DEPTH_TEST),HX.GL.disable(HX.GL.CULL_FACE),this._pass.updateGlobalState(t,e,i),this._pass.updateRenderState(),this._texture){var r=Math.floor(Math.log(this._texture.size())/Math.log(2)),n=0;HX.GL.uniform1f(this._numMipsLocation,r-n)}HX.GL.drawElements(HX.GL.TRIANGLES,6,HX.GL.UNSIGNED_SHORT,0)},HX.GlobalSpecularProbe.prototype._updateWorldBounds=function(){this._worldBounds.clear(HX.BoundingVolume.EXPANSE_INFINITE),HX.Light.prototype._updateWorldBounds.call(this)},HX.GlobalSpecularProbe.prototype._initPass=function(){var t=new HX.EffectPass(HX.GlobalSpecularProbe.vertexShader,HX.GlobalSpecularProbe.getFragmentShader(this._texture),HX.Light._rectMesh);

this._numMipsLocation=t.getUniformLocation("numMips"),t.setTexture("specularProbeSampler",this._texture);var e=.0014,i=2/(e*e)-2,r=(Math.pow(2,-10/Math.sqrt(i))-HX.GlobalSpecularProbe.powerRange0)/HX.GlobalSpecularProbe.powerRange1;return t.setUniform("maxMipFactor",r),t},HX.GlobalSpecularProbe.vertexShader="precision mediump float;\n\r\n    \n\r\n    attribute vec4 hx_position;\n\r\n    attribute vec2 hx_texCoord;\n\r\n    \n\r\n    uniform mat4 hx_inverseViewProjectionMatrix;\n\r\n    uniform vec3 hx_cameraWorldPosition;\n\r\n    \n\r\n    varying vec3 viewWorldDir;\n\r\n    varying vec2 uv;\n\r\n    \n\r\n    // using rect mesh for rendering skyboxes!\n\r\n    void main()\n\r\n    {\n\r\n        vec4 unproj = hx_inverseViewProjectionMatrix * hx_position;\n\r\n        viewWorldDir = unproj.xyz / unproj.w - hx_cameraWorldPosition;\n\r\n        viewWorldDir.y = viewWorldDir.y;\n\r\n        vec4 pos = hx_position;\n\r\n        pos.z = 1.0;\n\r\n        gl_Position = pos;\n\r\n        uv = hx_texCoord;\n\r\n    }",HX.GlobalSpecularProbe.getFragmentShader=function(t){return(HX.EXT_SHADER_TEXTURE_LOD?"#extension GL_EXT_shader_texture_lod : require\n#define USE_TEX_LOD\n":"")+(t._hdrInAlphaRange>0?"#define SPECULAR_HDR_FROM_ALPHA float("+t._hdrInAlphaRange+")\n":"")+HX.DEFERRED_LIGHT_MODEL+"#define K0 "+HX.GlobalSpecularProbe.powerRange0+"\n\r\n        #define K1 "+HX.GlobalSpecularProbe.powerRange1+"\n\r\n        varying vec3 viewWorldDir;\n\r\n        varying vec2 uv;\n\r\n        \n\r\n        uniform sampler2D hx_gbufferAlbedo;\n\r\n        uniform sampler2D hx_gbufferNormals;\n\r\n        uniform sampler2D hx_gbufferSpecular;\n\r\n        \n\r\n        uniform samplerCube specularProbeSampler;\n\r\n        uniform float numMips;\n\r\n        uniform float mipOffset;\n\r\n        uniform float maxMipFactor;\n\r\n        \n\r\n        void main()\n\r\n        {\n\r\n            vec4 albedoSample = texture2D(hx_gbufferAlbedo, uv);\n\r\n            vec4 normalSample = texture2D(hx_gbufferNormals, uv);\n\r\n            vec4 specularSample = texture2D(hx_gbufferSpecular, uv);\n\r\n            vec3 normal = normalize(normalSample.xyz - .5);\n\r\n            vec3 totalLight = vec3(0.0);\n\r\n            albedoSample = hx_gammaToLinear(albedoSample);\n\r\n            \n\r\n            vec3 reflectedViewDir = reflect(normalize(viewWorldDir), normal);\n\r\n            vec3 normalSpecularReflectance;\n\r\n            float roughness;\n\r\n            hx_decodeReflectionData(albedoSample, specularSample, normalSpecularReflectance, roughness);\n\r\n            #ifdef USE_TEX_LOD\n\r\n            // knald method:\n\r\n                float power = 2.0/(roughness * roughness) - 2.0;\n\r\n                float factor = (exp2(-10.0/sqrt(power)) - K0)/K1;\n\r\n                float mipLevel = numMips*(1.0 - clamp(factor/maxMipFactor, 0.0, 1.0));\n\r\n                vec4 specProbeSample = textureCubeLodEXT(specularProbeSampler, reflectedViewDir, mipLevel);\n\r\n            #else\n\r\n                vec4 specProbeSample = textureCube(specularProbeSampler, reflectedViewDir);\n\r\n            #endif\n\r\n            specProbeSample = hx_gammaToLinear(specProbeSample);\n\r\n            #ifdef SPECULAR_HDR_FROM_ALPHA\n\r\n                specProbeSample.xyz *= specProbeSample.w * SPECULAR_HDR_FROM_ALPHA;\n\r\n            #endif\n\r\n            vec3 fresnel = hx_fresnel(normalSpecularReflectance, reflectedViewDir, normal);\n\r\n            // not physically correct, but attenuation is required to look good\n\r\n            fresnel *= (1.0 - roughness);\n\r\n            totalLight += fresnel * specProbeSample.xyz;\n\r\n            \n\r\n            gl_FragColor = vec4(totalLight, 1.0);\n\r\n        }"},HX.GlobalIrradianceProbe=function(t){this._texture=t,HX.GlobalIrradianceProbe._rectMesh=HX.GlobalIrradianceProbe._rectMesh||new HX.RectMesh.create,this._usingAO=!1},HX.GlobalIrradianceProbe.prototype=Object.create(HX.Light.prototype),HX.GlobalIrradianceProbe.prototype.render=function(t,e,i){var r=null!=i;this._usingAO==r&&this._pass||(this._usingAO=r,this._pass=this._initPass()),HX.GL.disable(HX.GL.DEPTH_TEST),HX.GL.disable(HX.GL.CULL_FACE),this._pass.updateGlobalState(t,e,i),this._pass.updateRenderState(),HX.GL.drawElements(HX.GL.TRIANGLES,6,HX.GL.UNSIGNED_SHORT,0)},HX.GlobalIrradianceProbe.prototype._updateWorldBounds=function(){this._worldBounds.clear(HX.BoundingVolume.EXPANSE_INFINITE),HX.Light.prototype._updateWorldBounds.call(this)},HX.GlobalIrradianceProbe.prototype._initPass=function(){var t=new HX.EffectPass(HX.GlobalIrradianceProbe.vertexShader,HX.GlobalIrradianceProbe.getFragmentShader(this._texture,this._usingAO),HX.Light._rectMesh);return this._numMipsLocation=t.getUniformLocation("numMips"),t.setTexture("irradianceProbeSampler",this._texture),t},HX.GlobalIrradianceProbe.vertexShader="precision mediump float;\n\r\n    \n\r\n    attribute vec4 hx_position;\n\r\n    attribute vec2 hx_texCoord;\n\r\n    \n\r\n    uniform mat4 hx_inverseViewProjectionMatrix;\n\r\n    uniform vec3 hx_cameraWorldPosition;\n\r\n    \n\r\n    varying vec3 viewWorldDir;\n\r\n    varying vec2 uv;\n\r\n    \n\r\n    // using rect mesh for rendering skyboxes!\n\r\n    void main()\n\r\n    {\n\r\n        vec4 unproj = hx_inverseViewProjectionMatrix * hx_position;\n\r\n        viewWorldDir = unproj.xyz / unproj.w - hx_cameraWorldPosition;\n\r\n        viewWorldDir.y = viewWorldDir.y;\n\r\n        vec4 pos = hx_position;\n\r\n        pos.z = 1.0;\n\r\n        gl_Position = pos;\n\r\n        uv = hx_texCoord;\n\r\n    }",HX.GlobalIrradianceProbe.getFragmentShader=function(t,e){return(e&&t?"#define USE_AO\n":"")+(t._hdrInAlphaRange>0?"#define IRRADIANCE_HDR_FROM_ALPHA float("+t._hdrInAlphaRange+")\n":"")+(HX.OPTIONS.useBentNormals?"#define BENT_NORMALS\n":"")+HX.DEFERRED_LIGHT_MODEL+"varying vec3 viewWorldDir;\n\r\n        varying vec2 uv;\n\r\n        \n\r\n        uniform sampler2D hx_gbufferAlbedo;\n\r\n        uniform sampler2D hx_gbufferNormals;\n\r\n        \n\r\n        #ifdef USE_AO\n\r\n            uniform sampler2D hx_source;    //contains AO \n\r\n        #endif\n\r\n        uniform samplerCube irradianceProbeSampler;\n\r\n        \n\r\n        void main()\n\r\n        {\n\r\n            vec4 albedoSample = texture2D(hx_gbufferAlbedo, uv);\n\r\n            vec4 normalSample = texture2D(hx_gbufferNormals, uv);\n\r\n            vec3 normal = normalize(normalSample.xyz - .5);\n\r\n            vec3 totalLight = vec3(0.0);\n\r\n            albedoSample = hx_gammaToLinear(albedoSample);\n\r\n            \n\r\n            #ifdef USE_AO\n\r\n                vec4 occlusionSample = texture2D(hx_source, uv);\n\r\n                #ifdef BENT_NORMALS\n\r\n                    vec3 irrNormal = occlusionSample.xyz * 2.0 - 1.0; // use bent normal\n\r\n                #else\n\r\n                    vec3 irrNormal = normal;\n\r\n                #endif\n\r\n                albedoSample.xyz *= occlusionSample.w;\n\r\n            #else\n\r\n                vec3 irrNormal = normal;\n\r\n            #endif\n\r\n            vec4 irradianceSample = textureCube(irradianceProbeSampler, irrNormal);\n\r\n            irradianceSample = hx_gammaToLinear(irradianceSample);\n\r\n            #ifdef IRRADIANCE_HDR_FROM_ALPHA\n\r\n                irradianceSample.xyz *= irradianceSample.w * IRRADIANCE_HDR_FROM_ALPHA;\n\r\n            #endif\n\r\n            #ifdef ENABLE_SPECULAR\n\r\n                irradianceSample.xyz *= (vec3(1.0) - fresnel);\n\r\n            #endif\n\r\n            //irradianceSample.xyz *= (1.0 - specularSample.x);\n\r\n            totalLight += irradianceSample.xyz * albedoSample.xyz;\n\r\n            \n\r\n            gl_FragColor = vec4(totalLight, 1.0);\n\r\n        }"},HX.PointLight=function(){HX.Light.call(this,HX.PointLight),HX.Light._rectMesh=HX.Light._rectMesh||new HX.RectMesh.create,HX.PointLight._sphereMesh=HX.PointLight._sphereMesh||new HX.Mesh(HX.MeshBatch.create(new HX.SpherePrimitive.createMeshData({invert:!0,numSegmentsW:HX.PointLight.SPHERE_SEGMENTS_W,numSegmentsH:HX.PointLight.SPHERE_SEGMENTS_H}),HX.PointLight.LIGHTS_PER_BATCH)),void 0===HX.PointLight._fullScreenLightPasses&&this._initLightPasses(),HX.PointLight._positionData=new Float32Array(3*HX.PointLight.LIGHTS_PER_BATCH),HX.PointLight._colorData=new Float32Array(3*HX.PointLight.LIGHTS_PER_BATCH),HX.PointLight._attenuationData=new Float32Array(2*HX.PointLight.LIGHTS_PER_BATCH),HX.PointLight._radiusData=new Float32Array(HX.PointLight.LIGHTS_PER_BATCH),this._luminanceBound=1/255,this._attenuationFix=1,this._radius=1},HX.PointLight.LIGHTS_PER_BATCH=40,HX.PointLight.SPHERE_SEGMENTS_W=16,HX.PointLight.SPHERE_SEGMENTS_H=10,HX.PointLight.NUM_SPHERE_INDICES=HX.PointLight.SPHERE_SEGMENTS_W*HX.PointLight.SPHERE_SEGMENTS_H*6,HX.PointLight.prototype=Object.create(HX.Light.prototype),HX.PointLight.prototype.activate=function(t,e,i){HX.GL.disable(HX.GL.DEPTH_TEST),this._camera=t,this._gbuffer=e,this._occlusion=i,HX.PointLight._sphericalLightPass.updateGlobalState(t,e,i)},HX.PointLight.prototype.renderBatch=function(t,e,i,r,n){var s=t[e]._renderOrderHint<0;return s?this._renderFullscreenBatch(t,e):this._renderSphereBatch(t,e)},HX.PointLight.prototype._renderSphereBatch=function(t,e){HX.PointLight._sphericalLightPass.updateRenderState(),HX.GL.enable(HX.GL.CULL_FACE);var i=e+HX.PointLight.LIGHTS_PER_BATCH;i>t.length&&(i=t.length);for(var r=HX.PointLight._positionData,n=HX.PointLight._colorData,s=HX.PointLight._attenuationData,a=HX.PointLight._radiusData,o=0,h=0,_=0,l=e;i>l;++l){var u=t[l];if(u._type!=this._type||u._renderOrderHint<0)i=l;else{var c=u.getWorldMatrix().getColumn(3),m=u._scaledIrradiance;r[_]=c.x,n[_++]=m.r,r[_]=c.y,n[_++]=m.g,r[_]=c.z,n[_++]=m.b,s[h++]=u._attenuationFix,s[h++]=1/(1-u._attenuationFix),a[o++]=2*u._radius*1.0001}}return HX.GL.uniform3fv(HX.PointLight._sphericalPositionLocation,r),HX.GL.uniform3fv(HX.PointLight._sphericalColorLocation,n),HX.GL.uniform2fv(HX.PointLight._sphericalAttenuationFixFactorsLocation,s),HX.GL.uniform1fv(HX.PointLight._sphericalLightRadiusLocation,a),HX.GL.drawElements(HX.GL.TRIANGLES,HX.PointLight.NUM_SPHERE_INDICES*(i-e),HX.GL.UNSIGNED_SHORT,0),i},HX.PointLight.prototype._renderFullscreenBatch=function(t,e){HX.GL.disable(HX.GL.CULL_FACE);var i=e+HX.PointLight.LIGHTS_PER_BATCH;i>t.length&&(i=t.length);for(var r=HX.PointLight._positionData,n=HX.PointLight._colorData,s=HX.PointLight._attenuationData,a=0,o=0,h=e;i>h;++h){var _=t[h];if(_._type==this._type){var l=_.getWorldMatrix().getColumn(3),u=_._scaledIrradiance;r[a]=l.x,n[a++]=u.r,r[a]=l.y,n[a++]=u.g,r[a]=l.z,n[a++]=u.b,s[o++]=_._attenuationFix,s[o++]=1/(1-_._attenuationFix)}else i=h}var c=h-e-1;return HX.PointLight._fullScreenLightPasses[c].updateGlobalState(camera,this._gbuffer,this._occlusion),HX.PointLight._fullScreenLightPasses[c].updateRenderState(),HX.GL.uniform3fv(HX.PointLight._fullScreenPositionLocations[c],r),HX.GL.uniform3fv(HX.PointLight._fullScreenColorLocations[c],n),HX.GL.uniform2fv(HX.PointLight._fullScreenAttenuationFixFactorsLocations[c],s),HX.GL.drawElements(HX.GL.TRIANGLES,6,HX.GL.UNSIGNED_SHORT,0),i},HX.PointLight.prototype._updateScaledIrradiance=function(){HX.Light.prototype._updateScaledIrradiance.call(this),this._attenuationFix=this._luminanceBound/this._luminance,this._radius=Math.sqrt(1/this._attenuationFix),this._invalidateWorldBounds()},HX.PointLight.prototype._createBoundingVolume=function(){return new HX.BoundingSphere},HX.PointLight.prototype._updateWorldBounds=function(){this._worldBounds.setExplicit(this.getWorldMatrix().getColumn(3),this._radius),HX.Light.prototype._updateWorldBounds.call(this)},HX.PointLight.prototype.getRadius=function(){return this._worldBounds.getRadius()},HX.PointLight.prototype._initLightPasses=function(){HX.PointLight._fullScreenLightPasses=[],HX.PointLight._fullScreenPositionLocations=[],HX.PointLight._fullScreenColorLocations=[],HX.PointLight._fullScreenAttenuationFixFactorsLocations=[];for(var t,e=0;e<HX.PointLight.LIGHTS_PER_BATCH;++e)t=new HX.EffectPass(HX.PointLight.fullScreenVertexShader,HX.PointLight.getFullScreenFragmentShader(e+1),HX.Light._rectMesh),HX.PointLight._fullScreenPositionLocations[e]=t.getUniformLocation("lightWorldPosition[0]"),HX.PointLight._fullScreenColorLocations[e]=t.getUniformLocation("lightColor[0]"),HX.PointLight._fullScreenAttenuationFixFactorsLocations[e]=t.getUniformLocation("attenuationFixFactors[0]"),HX.PointLight._fullScreenLightPasses[e]=t;t=new HX.EffectPass(HX.PointLight.sphericalVertexShader,HX.PointLight.sphericalFragmentShader,HX.PointLight._sphereMesh),HX.PointLight._sphericalLightPass=t,HX.PointLight._sphericalPositionLocation=t.getUniformLocation("lightWorldPosition[0]"),HX.PointLight._sphericalColorLocation=t.getUniformLocation("lightColor[0]"),HX.PointLight._sphericalAttenuationFixFactorsLocation=t.getUniformLocation("attenuationFixFactors[0]"),HX.PointLight._sphericalLightRadiusLocation=t.getUniformLocation("lightRadius[0]")},HX.PointLight.fullScreenVertexShader="precision mediump float;\r\n    \r\n    attribute vec4 hx_position;\r\n    attribute vec2 hx_texCoord;\r\n    \r\n    uniform mat4 hx_inverseProjectionMatrix;\r\n    uniform mat4 hx_cameraWorldMatrix;\r\n    \r\n    varying vec2 uv;\r\n    varying vec3 viewWorldDir;\r\n    \r\n    void main()\r\n    {\r\n            uv = hx_texCoord;\r\n            vec3 frustumVector = hx_getLinearDepthViewVector(hx_position.xy, hx_inverseProjectionMatrix);\r\n            viewWorldDir = mat3(hx_cameraWorldMatrix) * frustumVector;\r\n            gl_Position = hx_position;\r\n    }",HX.PointLight.getFullScreenFragmentShader=function(t){return HX.DEFERRED_LIGHT_MODEL+"#define LIGHTS_PER_BATCH "+t+"\nvarying vec2 uv;\r\n        varying vec3 viewWorldDir;\r\n        \r\n        uniform vec3 lightColor[LIGHTS_PER_BATCH];\r\n        uniform vec3 lightWorldPosition[LIGHTS_PER_BATCH];\r\n        uniform vec2 attenuationFixFactors[LIGHTS_PER_BATCH];\r\n        \r\n        uniform mat4 hx_projectionMatrix;\r\n        uniform vec3 hx_cameraWorldPosition;\r\n        uniform float hx_cameraFrustumRange;\n\r\n        uniform float hx_cameraNearPlaneDistance;\n\r\n        \r\n        uniform sampler2D hx_gbufferAlbedo;\r\n        uniform sampler2D hx_gbufferNormals;\r\n        uniform sampler2D hx_gbufferSpecular;\r\n        uniform sampler2D hx_gbufferDepth;\r\n        \r\n        void main()\r\n        {\r\n            vec4 albedoSample = texture2D(hx_gbufferAlbedo, uv);\r\n            vec4 normalSample = texture2D(hx_gbufferNormals, uv);\r\n            vec4 specularSample = texture2D(hx_gbufferSpecular, uv);\r\n            float depth = hx_sampleLinearDepth(hx_gbufferDepth, uv);\r\n            float absViewZ = hx_cameraNearPlaneDistance + depth * hx_cameraFrustumRange;\n\r\n            \r\n            vec3 worldPosition = hx_cameraWorldPosition + absViewZ * viewWorldDir;\r\n            \r\n            vec3 normal = normalize(normalSample.xyz - .5);\r\n            \r\n            albedoSample = hx_gammaToLinear(albedoSample);\r\n            vec3 viewDir = normalize(viewWorldDir);\r\n            \r\n            vec3 normalSpecularReflectance;\r\n            float roughness;\r\n            hx_decodeReflectionData(albedoSample, specularSample, normalSpecularReflectance, roughness);\r\n            vec3 totalDiffuse = vec3(0.0);\r\n            vec3 totalSpecular = vec3(0.0);\r\n            vec3 diffuseReflection;\r\n            vec3 specularReflection;\r\n            \r\n            for (int i = 0; i < LIGHTS_PER_BATCH; ++i) {\r\n                vec3 lightWorldDirection = worldPosition - lightWorldPosition[i];\r\n                float attenuation = 1.0/dot(lightWorldDirection, lightWorldDirection);\r\n                /* normalize:*/\r\n                lightWorldDirection *= sqrt(attenuation);\r\n                \r\n                /*rescale attenuation so that irradiance at bounding edge really is 0*/ \r\n                attenuation = max(0.0, (attenuation - attenuationFixFactors[i].x) * attenuationFixFactors[i].y);\r\n                hx_lighting(normal, lightWorldDirection, viewDir, lightColor[i] * attenuation, normalSpecularReflectance, roughness, normalSample.w, diffuseReflection, specularReflection);\r\n                totalDiffuse += diffuseReflection;\r\n                totalSpecular += specularReflection;\r\n            }\r\n            totalDiffuse *= albedoSample.xyz * (1.0 - specularSample.x);\r\n            gl_FragColor = vec4(totalDiffuse + totalSpecular, 1.0);\r\n        }"},HX.PointLight.sphericalVertexShader="#define LIGHTS_PER_BATCH "+HX.PointLight.LIGHTS_PER_BATCH+"\n\r\n    precision mediump float;\r\n    \r\n    attribute vec4 hx_position;\r\n    attribute float hx_instanceID;\r\n    \r\n    uniform mat4 hx_viewMatrix;\r\n    uniform mat4 hx_projectionMatrix;\r\n    uniform mat4 hx_cameraWorldMatrix;\r\n    \r\n    uniform float lightRadius[LIGHTS_PER_BATCH];\r\n    uniform vec3 lightWorldPosition[LIGHTS_PER_BATCH];\r\n    uniform vec3 lightColor[LIGHTS_PER_BATCH];\r\n    uniform vec2 attenuationFixFactors[LIGHTS_PER_BATCH];\r\n    \r\n    varying vec2 uv;\r\n    varying vec3 viewWorldDir;\r\n    varying vec3 lightColorVar;\r\n    varying vec3 lightPositionVar;\r\n    varying vec2 attenuationFixVar;\r\n    \r\n    void main()\r\n    {\r\n            int instance = int(hx_instanceID);\r\n            vec4 worldPos = hx_position;\r\n            lightPositionVar = lightWorldPosition[instance];\r\n            lightColorVar = lightColor[instance];\r\n            attenuationFixVar = attenuationFixFactors[instance];\r\n            worldPos.xyz *= lightRadius[instance];\r\n            worldPos.xyz += lightPositionVar;\r\n            \r\n            vec4 viewPos = hx_viewMatrix * worldPos;\r\n            vec4 proj = hx_projectionMatrix * viewPos;\r\n            \r\n            viewWorldDir = mat3(hx_cameraWorldMatrix) * (viewPos.xyz / viewPos.z);\r\n            \r\n            /* render as flat disk, prevent clipping */ \r\n            proj /= proj.w;\r\n            proj.z = 0.0;\r\n            uv = proj.xy/proj.w * .5 + .5;\r\n            gl_Position = proj;\r\n    }",HX.PointLight.sphericalFragmentShader=HX.DEFERRED_LIGHT_MODEL+"\r\n    uniform mat4 hx_projectionMatrix;\r\n    uniform vec3 hx_cameraWorldPosition;\r\n    \r\n    uniform sampler2D hx_gbufferAlbedo;\r\n    uniform sampler2D hx_gbufferNormals;\r\n    uniform sampler2D hx_gbufferSpecular;\r\n    uniform sampler2D hx_gbufferDepth;\r\n    \r\n    varying vec2 uv;\r\n    varying vec3 viewWorldDir;\r\n    varying vec3 lightColorVar;\r\n    varying vec3 lightPositionVar;\r\n    varying vec2 attenuationFixVar;\r\n    \r\n    void main()\r\n    {\r\n        vec4 albedoSample = texture2D(hx_gbufferAlbedo, uv);\r\n        vec4 normalSample = texture2D(hx_gbufferNormals, uv);\r\n        vec4 specularSample = texture2D(hx_gbufferSpecular, uv);\r\n        float depth = texture2D(hx_gbufferDepth, uv).x;\r\n        \r\n        float zView = hx_depthToViewZ(depth, hx_projectionMatrix);\r\n        vec3 worldPosition = hx_cameraWorldPosition + zView * viewWorldDir;\r\n        \r\n        vec3 normal = normalize(normalSample.xyz - .5);\r\n        albedoSample = hx_gammaToLinear(albedoSample);\r\n        vec3 viewDir = -normalize(viewWorldDir);\r\n        \r\n        vec3 normalSpecularReflectance;\r\n        float roughness;\r\n        hx_decodeReflectionData(albedoSample, specularSample, normalSpecularReflectance, roughness);\r\n        vec3 diffuseReflection;\r\n        vec3 specularReflection;\r\n        \r\n        vec3 lightWorldDirection = worldPosition - lightPositionVar;\r\n        float attenuation = 1.0/dot(lightWorldDirection, lightWorldDirection);\r\n        /* normalize:*/\r\n        lightWorldDirection *= sqrt(attenuation);\r\n        \r\n        /*rescale attenuation so that irradiance at bounding edge really is 0*/ \r\n        attenuation = max(0.0, (attenuation - attenuationFixVar.x) * attenuationFixVar.y);\r\n        hx_lighting(normal, lightWorldDirection, viewDir, lightColorVar * attenuation, normalSpecularReflectance, roughness, normalSample.w, diffuseReflection, specularReflection);\r\n        \r\n        diffuseReflection *= albedoSample.xyz * (1.0 - specularSample.x);\r\n        gl_FragColor = vec4(diffuseReflection + specularReflection, 0.0);\r\n    }",HX.SkyBox=function(t){this._modelInstance=new HX.ModelInstance(HX.PlanePrimitive.create({alignment:HX.PlanePrimitive.ALIGN_XY,width:2,height:2}),[t]),this._globalSpecularProbe=null,this._globalIrradianceProbe=null},HX.SkyBox.prototype={getGlobalSpecularProbe:function(){return this._globalSpecularProbe},setGlobalSpecularProbe:function(t){this._globalSpecularProbe=t},getGlobalIrradianceProbe:function(){return this._globalIrradianceProbe},setGlobalIrradianceProbe:function(t){this._globalIrradianceProbe=t}},HX.MeshBatch={create:function(t,e){var i=HX.MeshData.createDefaultBatchEmpty(),r=[],n=[],s=t._vertexData,a=t._indexData,o=s.length,h=0,_=0;i.vertexUsage=t.vertexUsage,i.indexUsage=t.vertexUsage;for(var l=0;e>l;++l){var u=_/HX.MeshData.DEFAULT_BATCHED_VERTEX_SIZE;o=s.length;for(var c=0;o>c;){for(var m=0;m<HX.MeshData.DEFAULT_VERTEX_SIZE;++m)r[_++]=s[c++];r[_++]=l}for(o=a.length,c=0;o>c;++c)n[h++]=a[c]+u}return i.setVertexData(r),i.setIndexData(n),i}},HX.MeshData=function(){this._vertexData=void 0,this._indexData=void 0,this.vertexUsage=HX.GL.STATIC_DRAW,this.indexUsage=HX.GL.STATIC_DRAW,this._vertexAttributes=[]},HX.MeshData.DEFAULT_VERTEX_SIZE=14,HX.MeshData.DEFAULT_BATCHED_VERTEX_SIZE=15,HX.MeshData.createDefaultEmpty=function(){var t=new HX.MeshData;return t.addVertexAttribute("hx_position",0,3,HX.MeshData.DEFAULT_VERTEX_SIZE),t.addVertexAttribute("hx_normal",3,3,HX.MeshData.DEFAULT_VERTEX_SIZE),t.addVertexAttribute("hx_tangent",6,3,HX.MeshData.DEFAULT_VERTEX_SIZE),t.addVertexAttribute("hx_bitangent",9,3,HX.MeshData.DEFAULT_VERTEX_SIZE),t.addVertexAttribute("hx_texCoord",12,2,HX.MeshData.DEFAULT_VERTEX_SIZE),t},HX.MeshData.createDefaultBatchEmpty=function(){var t=new HX.MeshData;return t.addVertexAttribute("hx_position",0,3,HX.MeshData.DEFAULT_BATCHED_VERTEX_SIZE),t.addVertexAttribute("hx_normal",3,3,HX.MeshData.DEFAULT_BATCHED_VERTEX_SIZE),t.addVertexAttribute("hx_tangent",6,3,HX.MeshData.DEFAULT_BATCHED_VERTEX_SIZE),t.addVertexAttribute("hx_bitangent",9,3,HX.MeshData.DEFAULT_BATCHED_VERTEX_SIZE),t.addVertexAttribute("hx_texCoord",12,2,HX.MeshData.DEFAULT_BATCHED_VERTEX_SIZE),t.addVertexAttribute("hx_instanceID",14,1,HX.MeshData.DEFAULT_BATCHED_VERTEX_SIZE),t},HX.MeshData.prototype={constructor:HX.MeshData,setVertexData:function(t){this._vertexData=new Float32Array(t)},setIndexData:function(t){this._indexData=new Uint16Array(t)},addVertexAttribute:function(t,e,i,r){this._vertexAttributes.push({name:t,offset:e,numComponents:i,stride:r})},getVertexAttribute:function(t){for(var e=this._vertexAttributes.length,i=0;e>i;++i)if(this._vertexAttributes[i].name===t)return this._vertexAttributes[i]}},HX.Mesh=function(t){this._vertexBuffer=new HX.VertexBuffer,this._indexBuffer=new HX.IndexBuffer,this._vertexBuffer.uploadData(t._vertexData,t.vertexUsage),this._indexBuffer.uploadData(t._indexData,t.indexUsage),this._numIndices=t._indexData.length,this._vertexAttributes=t._vertexAttributes,this._renderOrderHint=++HX.Mesh.ID_COUNTER},HX.Mesh.ID_COUNTER=0,HX.Mesh.prototype={constructor:HX.Mesh,dispose:function(){this._vertexBuffer.dispose(),this._indexBuffer.dispose()},numIndices:function(){return this._numIndices},numVertexAttributes:function(){return this._vertexAttributes.length},getVertexAttribute:function(t){return this._vertexAttributes[t]}},HX.ModelData=function(){this._meshDataList=[]},HX.ModelData.prototype={constructor:HX.ModelData,numMeshes:function(){return this._meshDataList.length},getMeshData:function(t){return this._meshDataList[t]},addMeshData:function(t){this._meshDataList.push(t)}},HX.Model=function(t){this._localBounds=new HX.BoundingAABB,this.onChange=new HX.Signal,t?(this._meshes=null,this._setModelData(t)):this._meshes=[]},HX.Model.prototype={constructor:HX.Model,numMeshes:function(){return this._meshes.length},getMesh:function(t){return this._meshes[t]},dispose:function(){if(this._meshes)for(var t=0;t<this._meshes.length;++t)this._meshes[t].dispose()},getLocalBounds:function(){return this._localBounds},_setModelData:function(t){this.dispose(),this._localBounds.clear(),this._meshes=[];for(var e=0;e<t.numMeshes();++e){var i=t.getMeshData(e);this._localBounds.growToIncludeMesh(i),this._meshes.push(new HX.Mesh(i))}this.onChange.dispatch()}},HX.FileModel=function(t){HX.Model.call(this);var e=this,i=function(t){e._setModelData(t)};HX.ModelParser.parse(t,i)},HX.FileModel.prototype=Object.create(HX.Model.prototype),HX.VertexLayout=function(t,e){var i=e.getShader();this.attributes=[],this._numAttributes=-1;for(var r=0;r<t.numVertexAttributes();++r){var n=t.getVertexAttribute(r),s=i.getVertexAttributeIndex(n.name);this._numAttributes=Math.max(this._numAttributes,s),s>=0&&this.attributes.push({index:s,offset:4*n.offset,numComponents:n.numComponents,stride:4*n.stride})}++this._numAttributes},HX.VertexLayout.prototype={constructor:HX.VertexLayout},HX.MeshInstance=function(t,e){this._mesh=t,this._meshMaterialLinkInvalid=!1,this.setMaterial(e)},HX.MeshInstance.prototype={constructor:HX.MeshInstance,getMaterial:function(){return this._material},setMaterial:function(t){this._material&&this._material.onChange.unbind(this._onMaterialChange),this._material=t,this._material&&this._material.onChange.bind(this,this._onMaterialChange),this._linkMeshWithMaterial()},updateRenderState:function(t){this._meshMaterialLinkInvalid&&this._linkMeshWithMaterial(),this._mesh._vertexBuffer.bind(),this._mesh._indexBuffer.bind();for(var e=this._vertexLayouts[t],i=e.attributes,r=i.length,n=0;r>n;++n){var s=i[n];HX.GL.vertexAttribPointer(s.index,s.numComponents,HX.GL.FLOAT,!1,s.stride,s.offset)}HX.enableAttributes(e._numAttributes)},_initVertexLayouts:function(){this._vertexLayouts=new Array(HX.MaterialPass.NUM_TOTAL_PASS_TYPES);for(var t=0;t<HX.MaterialPass.NUM_TOTAL_PASS_TYPES;++t){var e=this._material.getPass(t);e&&(this._vertexLayouts[t]=new HX.VertexLayout(this._mesh,e))}},_linkMeshWithMaterial:function(){this._initVertexLayouts(),this._uniformSetters=new Array(HX.MaterialPass.NUM_TOTAL_PASS_TYPES);for(var t=0;t<HX.MaterialPass.NUM_TOTAL_PASS_TYPES;++t)if(this._material.hasPass(t)){var e=this._material.getPass(t);this._uniformSetters[t]=HX.UniformSetter.getSetters(e._shader)}this._meshMaterialLinkInvalid=!1},_onMaterialChange:function(){this._meshMaterialLinkInvalid=!0}},HX.ModelInstance=function(t,e){this._model=t,this._meshInstances=[],this._castsShadows=!0,this.onChange=new HX.Signal,this._model.onChange.bind(this,this._onModelChange),this._materials=e instanceof Array?e:[e],this._onModelChange()},HX.ModelInstance.prototype={constructor:HX.ModelInstance,getModel:function(){return this._model},getCastsShadows:function(){return this._castsShadows},setCastsShadows:function(t){this._castsShadows=t},numMeshInstances:function(){return this._meshInstances.length},getMeshInstance:function(t){return this._meshInstances[t]},getLocalBounds:function(){return this._model.getLocalBounds()},_addMeshInstance:function(t,e){this._meshInstances.push(new HX.MeshInstance(t,e))},_onModelChange:function(){for(var t=this._materials.length-1,e=0;e<this._model.numMeshes();++e)this._addMeshInstance(this._model.getMesh(e),this._materials[Math.min(e,t)]);this.onChange.dispatch()}},HX.BoxPrimitive={},HX.BoxPrimitive._createMeshData=function(t){var e,i=t.numSegmentsW||1,r=t.numSegmentsH||1,n=t.numSegmentsD||1,s=t.width||1,a=t.height||s,o=t.depth||s,h=t.scaleU||1,_=t.scaleV||1,l=t.invert?-1:1,u=void 0===t.doubleSided?!1:t.doubleSided,c=HX.MeshData.DEFAULT_VERTEX_SIZE,m=new HX.MeshData.createDefaultEmpty,f=6,d=[],p=[],X=0,H=1/i,x=1/r,g=1/n,E=.5*s,S=.5*a,T=.5*o;e=X+(i+1)*(r+1)*c;for(var L=0;r>=L;++L){var v=L*x,P=a*v-S;0>l&&(v=1-v);for(var M=0;i>=M;++M){var R=M*H,A=s*R-E;0>l&&(R=1-R),d[X]=A*l,d[X+1]=P*l,d[X+2]=T*l,d[X+3]=0,d[X+4]=0,d[X+5]=1,d[X+6]=1,d[X+7]=0,d[X+8]=0,d[X+9]=0,d[X+10]=1,d[X+11]=0,d[X+12]=R*h,d[X+13]=v*_,d[e]=-A*l,d[e+1]=P*l,d[e+2]=-T*l,d[e+3]=0,d[e+4]=0,d[e+5]=-1,d[e+6]=-1,d[e+7]=0,d[e+8]=0,d[e+9]=0,d[e+10]=1,d[e+11]=0,d[e+12]=R*h,d[e+13]=v*_,X+=c,e+=c}}X=e,e=X+(n+1)*(r+1)*c;for(var L=0;r>=L;++L)for(var v=L*x,P=a*v-S,D=0;n>=D;++D){var R=D*g,y=o*R-T;d[X]=-E,d[X+1]=P,d[X+2]=y*l,d[X+3]=-l,d[X+4]=0,d[X+5]=0,d[X+6]=0,d[X+7]=0,d[X+8]=l,d[X+9]=0,d[X+10]=1,d[X+11]=0,d[X+12]=R*h,d[X+13]=v*_,d[e]=E,d[e+1]=P,d[e+2]=-y*l,d[e+3]=l,d[e+4]=0,d[e+5]=0,d[e+6]=0,d[e+7]=0,d[e+8]=-l,d[e+9]=0,d[e+10]=1,d[e+11]=0,d[e+12]=R*h,d[e+13]=v*_,X+=c,e+=c}X=e,e=X+(i+1)*(n+1)*c;for(var D=0;n>=D;++D)for(var v=D*g,y=o*v-T,M=0;i>=M;++M){var R=M*H,A=s*R-E;d[X]=A,d[X+1]=S,d[X+2]=-y*l,d[X+3]=0,d[X+4]=l,d[X+5]=0,d[X+6]=1,d[X+7]=0,d[X+8]=0,d[X+9]=0,d[X+10]=0,d[X+11]=-l,d[X+12]=R*h,d[X+13]=v*_,d[e]=A,d[e+1]=-S,d[e+2]=y*l,d[e+3]=0,d[e+4]=-l,d[e+5]=0,d[e+6]=1,d[e+7]=0,d[e+8]=0,d[e+9]=0,d[e+10]=0,d[e+11]=l,d[e+12]=R*h,d[e+13]=v*_,X+=c,e+=c}for(var w=0,b=0,G=0;f>G;++G){for(var F=2==G||3==G?n:i,C=4==G||5==G?n:r,B=0;C>B;++B)for(var I=0;F>I;++I){var O=F+1,N=w+I+B*O;p[b]=N,p[b+1]=N+O+1,p[b+2]=N+O,p[b+3]=N,p[b+4]=N+1,p[b+5]=N+O+1,b+=6}w+=(F+1)*(C+1)}if(u)for(var U=0,V=b;V>U;)p[b+U]=p[U],p[b+U+1]=p[U+2],p[b+U+2]=p[U+1],p[b+U+3]=p[U+3],p[b+U+4]=p[U+5],p[b+U+5]=p[U+4],U+=6;return m.setVertexData(d),m.setIndexData(p),m},HX.BoxPrimitive.createMesh=function(t){var e=HX.BoxPrimitive._createMeshData(t);return new HX.Mesh(e)},HX.BoxPrimitive.create=function(t){t=t||{};var e=HX.BoxPrimitive._createMeshData(t),i=new HX.ModelData;return i.addMeshData(e),new HX.Model(i)},HX.PlanePrimitive={},HX.PlanePrimitive.ALIGN_XZ=1,HX.PlanePrimitive.ALIGN_XY=2,HX.PlanePrimitive.ALIGN_YZ=3,HX.PlanePrimitive.create=function(t){t=t||{};var e=t.alignment||HX.PlanePrimitive.ALIGN_XZ,i=t.numSegmentsW||1,r=t.numSegmentsH||1,n=t.width||1,s=t.height||1,a=t.scaleU||1,o=t.scaleV||1,h=void 0===t.doubleSided?!1:t.doubleSided,_=HX.MeshData.DEFAULT_VERTEX_SIZE,l=new HX.MeshData.createDefaultEmpty,u=r*i*6,c=(r+1)*(i+1);h&&(u*=2,c*=2);var m=new Array(c*_),f=new Array(u),d=0,p=0,X=1/i,H=1/r,x=0,g=0,E=0,S=0,T=0,L=0,v=0,P=0,M=0,R=0,A=0,D=0,y=0,w=0;e==HX.PlanePrimitive.ALIGN_XY?(L=-1,v=1,A=1):e==HX.PlanePrimitive.ALIGN_XZ?(T=1,v=-1,D=1):(S=1,M=1,A=1);for(var b=0;r>=b;++b)for(var G=(b*H-.5)*s,F=0;i>=F;++F){var C=(F*X-.5)*n;if(e==HX.PlanePrimitive.ALIGN_XY?(x=C,g=G,y=1-F*X,w=b*H):e==HX.PlanePrimitive.ALIGN_XZ?(x=C,E=G,y=1-F*X,w=b*H):(g=G,E=C,y=1-F*X,w=b*H),y*=a,w*=o,m[d]=x,m[d+1]=g,m[d+2]=E,m[d+3]=S,m[d+4]=T,m[d+5]=L,m[d+6]=v,m[d+7]=P,m[d+8]=M,m[d+9]=R,m[d+10]=A,m[d+11]=D,m[d+12]=y,m[d+13]=w,d+=_,h&&(m[d]=x,m[d+1]=g,m[d+2]=E,m[d+3]=-S,m[d+4]=-T,m[d+5]=-L,m[d+6]=-v,m[d+7]=-P,m[d+8]=-M,m[d+9]=R,m[d+10]=A,m[d+11]=D,m[d+12]=1-y,m[d+13]=w,d+=_),F!=i&&b!=r){var B=i+1,I=F+b*B,O=h?1:0;f[p]=I<<O,f[p+1]=I+B<<O,f[p+2]=I+B+1<<O,f[p+3]=I<<O,f[p+4]=I+B+1<<O,f[p+5]=I+1<<O,p+=6,h&&(f[p]=(I+B+1<<O)+1,f[p+1]=(I+B<<O)+1,f[p+2]=(I<<O)+1,f[p+3]=(I+1<<O)+1,f[p+4]=(I+B+1<<O)+1,f[p+5]=(I<<O)+1,p+=6)}}l.setVertexData(m),l.setIndexData(f);var N=new HX.ModelData;return N.addMeshData(l),new HX.Model(N)},HX.RectMesh={},HX.RectMesh.create=function(){var t=new HX.MeshData;return t.addVertexAttribute("hx_position",0,2,4),t.addVertexAttribute("hx_texCoord",2,2,4),t.setVertexData([-1,1,0,1,1,1,1,1,1,-1,1,0,-1,-1,0,0]),t.setIndexData([0,1,2,0,2,3]),new HX.Mesh(t)},HX.SpherePrimitive={},HX.SpherePrimitive.createMeshData=function(t){for(var e=t.numSegmentsW||16,i=t.numSegmentsH||10,r=t.radius||.5,n=t.scaleU||1,s=t.scaleV||1,a=t.invert?-1:1,o=void 0===t.doubleSided?!1:t.doubleSided,h=HX.MeshData.DEFAULT_VERTEX_SIZE,_=new HX.MeshData.createDefaultEmpty,l=i*e*6,u=(i+1)*(e+1),c=new Array(u*h),m=new Array(l),f=0,d=0,p=1/e,X=1/i,H=0;i>=H;++H){var x=H*X,g=x*Math.PI,E=-Math.cos(g),S=Math.sin(g);0>a&&(x=1-x);for(var T=0;e>=T;++T){var L=T*p,v=L*Math.PI*2;a&&(L=1-L);var P=Math.cos(v)*S*a,M=E*a,R=Math.sin(v)*S*a;

c[f]=P*r,c[f+1]=M*r,c[f+2]=R*r,c[f+3]=P*a,c[f+4]=M*a,c[f+5]=R*a,c[f+6]=-R,c[f+7]=0,c[f+8]=P,c[f+9]=0,c[f+10]=M*a,c[f+11]=-R*a,c[f+12]=1-L*n,c[f+13]=x*s,f+=h}}for(var H=0;i>H;++H)for(var T=0;e>T;++T){var A=e+1,D=T+H*A;m[d]=D,m[d+1]=D+A,m[d+2]=D+A+1,m[d+3]=D,m[d+4]=D+A+1,m[d+5]=D+1,d+=6,o&&(m[d]=D,m[d+1]=D+A+1,m[d+2]=D+A,m[d+3]=D,m[d+4]=D+1,m[d+5]=D+A+1)}return _.setVertexData(c),_.setIndexData(m),_},HX.SpherePrimitive.createMesh=function(t){var e=HX.SpherePrimitive.createMeshData(t);return new HX.Mesh(e)},HX.SpherePrimitive.create=function(t){t=t||{};var e=HX.SpherePrimitive.createMeshData(t),i=new HX.ModelData;return i.addMeshData(e),new HX.Model(i)},HX.FrameBuffer=function(t,e,i){if(t&&void 0===t[0]&&(t=[t]),this._depthMode=void 0===e?HX.FrameBuffer.DEPTH_MODE_WRITE_ONLY:e,this._colorTextures=t,this._numColorTextures=this._colorTextures?this._colorTextures.length:0,this._colorTextures&&this._numColorTextures>1){this._drawBuffers=new Array(this._numColorTextures);for(var r=0;r<this._numColorTextures;++r)this._drawBuffers[r]=HX.EXT_DRAW_BUFFERS.COLOR_ATTACHMENT0_WEBGL+r}else this._drawBuffers=null;this._fbo=HX.GL.createFramebuffer(),this._depthBuffer=this._depthMode==HX.FrameBuffer.DEPTH_MODE_WRITE_ONLY?i||HX.GL.createRenderbuffer():i},HX.FrameBuffer.DEPTH_MODE_DISABLED=0,HX.FrameBuffer.DEPTH_MODE_WRITE_ONLY=1,HX.FrameBuffer.DEPTH_MODE_READ_WRITE=2,HX.FrameBuffer.prototype={constructor:HX.FrameBuffer,width:function(){return this._width},height:function(){return this._height},init:function(){HX.setRenderTarget(this),this._colorTextures?(this._width=this._colorTextures[0]._width,this._height=this._colorTextures[0]._height):(this._width=this._depthBuffer._width,this._height=this._depthBuffer._height);for(var t=0;t<this._numColorTextures;++t){var e=this._colorTextures[t];HX.EXT_DRAW_BUFFERS?HX.GL.framebufferTexture2D(HX.GL.FRAMEBUFFER,HX.EXT_DRAW_BUFFERS.COLOR_ATTACHMENT0_WEBGL+t,HX.GL.TEXTURE_2D,e._texture,0):HX.GL.framebufferTexture2D(HX.GL.FRAMEBUFFER,HX.GL.COLOR_ATTACHMENT0+t,HX.GL.TEXTURE_2D,e._texture,0)}this._depthMode==HX.FrameBuffer.DEPTH_MODE_WRITE_ONLY?(HX.GL.bindRenderbuffer(HX.GL.RENDERBUFFER,this._depthBuffer),HX.GL.renderbufferStorage(HX.GL.RENDERBUFFER,HX.GL.DEPTH_STENCIL,this._colorTextures[0].width(),this._colorTextures[0].height()),HX.GL.framebufferRenderbuffer(HX.GL.FRAMEBUFFER,HX.GL.DEPTH_STENCIL_ATTACHMENT,HX.GL.RENDERBUFFER,this._depthBuffer)):this._depthMode==HX.FrameBuffer.DEPTH_MODE_READ_WRITE&&HX.GL.framebufferTexture2D(HX.GL.FRAMEBUFFER,HX.GL.DEPTH_STENCIL_ATTACHMENT,HX.GL.TEXTURE_2D,this._depthBuffer._texture,0);var i=HX.GL.checkFramebufferStatus(HX.GL.FRAMEBUFFER);switch(i){case HX.GL.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:console.warn("Failed to initialize FBO: FRAMEBUFFER_INCOMPLETE_ATTACHMENT");break;case HX.GL.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:console.warn("Failed to initialize FBO: FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT");break;case HX.GL.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:console.warn("Failed to initialize FBO: FRAMEBUFFER_INCOMPLETE_DIMENSIONS");break;case HX.GL.FRAMEBUFFER_UNSUPPORTED:console.warn("Failed to initialize FBO: FRAMEBUFFER_UNSUPPORTED")}HX.setRenderTarget(null)},dispose:function(){HX.GL.deleteFramebuffer(this._fbo),this._depthMode===HX.FrameBuffer.DEPTH_MODE_WRITE_ONLY&&HX.GL.deleteRenderBuffer(this._depthBuffer)}},HX.Texture2D=function(){this._default=HX.DEFAULT_TEXTURE_2D,this._texture=HX.GL.createTexture(),this._width=0,this._height=0,this.bind(),HX.GL.texParameteri(HX.GL.TEXTURE_2D,HX.GL.TEXTURE_MIN_FILTER,HX.DEFAULT_TEXTURE_FILTER.min),HX.GL.texParameteri(HX.GL.TEXTURE_2D,HX.GL.TEXTURE_MAG_FILTER,HX.DEFAULT_TEXTURE_FILTER.mag),HX.GL.texParameteri(HX.GL.TEXTURE_2D,HX.GL.TEXTURE_WRAP_S,HX.DEFAULT_TEXTURE_WRAP_MODE.s),HX.GL.texParameteri(HX.GL.TEXTURE_2D,HX.GL.TEXTURE_WRAP_T,HX.DEFAULT_TEXTURE_WRAP_MODE.t),HX.EXT_TEXTURE_FILTER_ANISOTROPIC&&HX.DEFAULT_TEXTURE_MAX_ANISOTROPY>0&&HX.GL.texParameteri(HX.GL.TEXTURE_2D,HX.EXT_TEXTURE_FILTER_ANISOTROPIC.TEXTURE_MAX_ANISOTROPY_EXT,HX.DEFAULT_TEXTURE_MAX_ANISOTROPY),this._isReady=!1},HX.Texture2D.prototype={constructor:HX.Texture2D,dispose:function(){HX.GL.deleteTexture(this._texture),this._isReady=!1},generateMipmap:function(){this.bind(),HX.GL.generateMipmap(HX.GL.TEXTURE_2D)},setFilter:function(t){this.bind(),HX.GL.texParameteri(HX.GL.TEXTURE_2D,HX.GL.TEXTURE_MIN_FILTER,t.min),HX.GL.texParameteri(HX.GL.TEXTURE_2D,HX.GL.TEXTURE_MAG_FILTER,t.mag)},setWrapMode:function(t){this.bind(),HX.GL.texParameteri(HX.GL.TEXTURE_2D,HX.GL.TEXTURE_WRAP_S,t.s),HX.GL.texParameteri(HX.GL.TEXTURE_2D,HX.GL.TEXTURE_WRAP_T,t.t)},setMaxAnisotropy:function(t){HX.EXT_TEXTURE_FILTER_ANISOTROPIC&&HX.GL.texParameteri(HX.GL.TEXTURE_2D,HX.EXT_TEXTURE_FILTER_ANISOTROPIC.TEXTURE_MAX_ANISOTROPY_EXT,t)},width:function(){return this._width},height:function(){return this._height},initEmpty:function(t,e,i,r){i=i||HX.GL.RGBA,r=r||HX.GL.UNSIGNED_BYTE,this.bind(),this._width=t,this._height=e,HX.GL.texImage2D(HX.GL.TEXTURE_2D,0,i,t,e,0,i,r,null),this._isReady=!0,HX.GL.bindTexture(HX.GL.TEXTURE_2D,null)},uploadData:function(t,e,i,r,n,s){this._width=e,this._height=i,n=n||HX.GL.RGBA,s=s||HX.GL.UNSIGNED_BYTE,r=void 0===r?!1:r,this.bind(),HX.GL.texImage2D(HX.GL.TEXTURE_2D,0,n,e,i,0,n,s,t),r&&HX.GL.generateMipmap(HX.GL.TEXTURE_2D),this._isReady=!0,HX.GL.bindTexture(HX.GL.TEXTURE_2D,null)},uploadImage:function(t,e,i,r,n,s){this._width=e,this._height=i,n=n||HX.GL.RGBA,s=s||HX.GL.UNSIGNED_BYTE,r=void 0===r?!0:r,this.bind(),t&&HX.GL.pixelStorei(HX.GL.UNPACK_FLIP_Y_WEBGL,1),HX.GL.texImage2D(HX.GL.TEXTURE_2D,0,n,n,s,t),r&&HX.GL.generateMipmap(HX.GL.TEXTURE_2D),this._isReady=!0,HX.GL.bindTexture(HX.GL.TEXTURE_2D,null)},isReady:function(){return this._isReady},bind:function(t){void 0!==t&&HX.GL.activeTexture(HX.GL.TEXTURE0+t),HX.GL.bindTexture(HX.GL.TEXTURE_2D,this._texture),t>HX._numActiveTextures&&(HX._numActiveTextures=t)}},HX.FileTexture2D=function(t,e,i,r){HX.Texture2D.call(this),e=void 0===e?!0:e;var n=new Image,s=this;n.onload=function(){s.uploadImage(n,n.naturalWidth,n.naturalHeight,e),i&&i()},n.onError=function(){console.warn("Failed loading texture '"+t+"'"),r&&r()},n.src=t},HX.FileTexture2D.prototype=Object.create(HX.Texture2D.prototype),HX.TextureCube=function(){this._default=HX.DEFAULT_TEXTURE_CUBE,this._hdrInAlphaRange=0,this._texture=HX.GL.createTexture(),this._size=0,this.bind(),HX.GL.texParameteri(HX.GL.TEXTURE_CUBE_MAP,HX.GL.TEXTURE_MIN_FILTER,HX.DEFAULT_TEXTURE_FILTER.min),HX.GL.texParameteri(HX.GL.TEXTURE_CUBE_MAP,HX.GL.TEXTURE_MAG_FILTER,HX.DEFAULT_TEXTURE_FILTER.mag),HX.EXT_TEXTURE_FILTER_ANISOTROPIC&&HX.DEFAULT_TEXTURE_MAX_ANISOTROPY>0&&HX.GL.texParameteri(HX.GL.TEXTURE_2D,HX.EXT_TEXTURE_FILTER_ANISOTROPIC.TEXTURE_MAX_ANISOTROPY_EXT,HX.DEFAULT_TEXTURE_MAX_ANISOTROPY),this._isReady=!1},HX.TextureCube.prototype={constructor:HX.TextureCube,dispose:function(){HX.GL.deleteTexture(this._texture),this._isReady=!1},hdrInAlphaRange:function(){return this._hdrInAlphaRange},generateMipmap:function(){this.bind(),HX.GL.generateMipmap(HX.GL.TEXTURE_CUBE_MAP)},setFilter:function(t){this.bind(),HX.GL.texParameteri(HX.GL.TEXTURE_CUBE_MAP,HX.GL.TEXTURE_MIN_FILTER,t.min),HX.GL.texParameteri(HX.GL.TEXTURE_CUBE_MAP,HX.GL.TEXTURE_MAG_FILTER,t.mag)},size:function(){return this._size},initEmpty:function(t,e,i){e=e||HX.GL.RGBA,i=i||HX.GL.UNSIGNED_BYTE,this._size=t,this.bind(),HX.GL.texImage2D(HX.GL.TEXTURE_CUBE_MAP_POSITIVE_X,0,e,t,t,0,e,i,null),HX.GL.texImage2D(HX.GL.TEXTURE_CUBE_MAP_NEGATIVE_X,0,e,t,t,0,e,i,null),HX.GL.texImage2D(HX.GL.TEXTURE_CUBE_MAP_POSITIVE_Y,0,e,t,t,0,e,i,null),HX.GL.texImage2D(HX.GL.TEXTURE_CUBE_MAP_NEGATIVE_Y,0,e,t,t,0,e,i,null),HX.GL.texImage2D(HX.GL.TEXTURE_CUBE_MAP_POSITIVE_Z,0,e,t,t,0,e,i,null),HX.GL.texImage2D(HX.GL.TEXTURE_CUBE_MAP_NEGATIVE_Z,0,e,t,t,0,e,i,null),this._isReady=!0,HX.GL.bindTexture(HX.GL.TEXTURE_2D,null)},uploadData:function(t,e,i,r,n){this._size=e,r=r||HX.GL.RGBA,n=n||HX.GL.UNSIGNED_BYTE,i=void 0===i?!0:i,this.bind(),HX.GL.pixelStorei(HX.GL.UNPACK_FLIP_Y_WEBGL,0),HX.GL.texImage2D(HX.GL.TEXTURE_CUBE_MAP_POSITIVE_X,0,r,e,e,0,r,n,t[0]),HX.GL.texImage2D(HX.GL.TEXTURE_CUBE_MAP_NEGATIVE_X,0,r,e,e,0,r,n,t[1]),HX.GL.texImage2D(HX.GL.TEXTURE_CUBE_MAP_POSITIVE_Y,0,r,e,e,0,r,n,t[2]),HX.GL.texImage2D(HX.GL.TEXTURE_CUBE_MAP_NEGATIVE_Y,0,r,e,e,0,r,n,t[3]),HX.GL.texImage2D(HX.GL.TEXTURE_CUBE_MAP_POSITIVE_Z,0,r,e,e,0,r,n,t[4]),HX.GL.texImage2D(HX.GL.TEXTURE_CUBE_MAP_NEGATIVE_Z,0,r,e,e,0,r,n,t[5]),i&&HX.GL.generateMipmap(HX.GL.TEXTURE_CUBE_MAP),this._isReady=!0,HX.GL.bindTexture(HX.GL.TEXTURE_CUBE_MAP,null)},uploadImages:function(t,e,i,r){e=void 0===e?!0:e,this.uploadImagesToMipLevel(t,0,i,r),e&&(this.bind(),HX.GL.generateMipmap(HX.GL.TEXTURE_CUBE_MAP)),this._isReady=!0,HX.GL.bindTexture(HX.GL.TEXTURE_CUBE_MAP,null)},uploadImagesToMipLevel:function(t,e,i,r){i=i||HX.GL.RGBA,r=r||HX.GL.UNSIGNED_BYTE,0==e&&(this._size=t[0].naturalWidth),this.bind(),HX.GL.pixelStorei(HX.GL.UNPACK_FLIP_Y_WEBGL,0),HX.GL.texImage2D(HX.GL.TEXTURE_CUBE_MAP_POSITIVE_X,e,i,i,r,t[0]),HX.GL.texImage2D(HX.GL.TEXTURE_CUBE_MAP_NEGATIVE_X,e,i,i,r,t[1]),HX.GL.texImage2D(HX.GL.TEXTURE_CUBE_MAP_POSITIVE_Y,e,i,i,r,t[2]),HX.GL.texImage2D(HX.GL.TEXTURE_CUBE_MAP_NEGATIVE_Y,e,i,i,r,t[3]),HX.GL.texImage2D(HX.GL.TEXTURE_CUBE_MAP_POSITIVE_Z,e,i,i,r,t[4]),HX.GL.texImage2D(HX.GL.TEXTURE_CUBE_MAP_NEGATIVE_Z,e,i,i,r,t[5]),HX.GL.bindTexture(HX.GL.TEXTURE_CUBE_MAP,null)},isReady:function(){return this._isReady},bind:function(t){void 0!==t&&HX.GL.activeTexture(HX.GL.TEXTURE0+t),HX.GL.bindTexture(HX.GL.TEXTURE_CUBE_MAP,this._texture),t>HX._numActiveTextures&&(HX._numActiveTextures=t)}},HX.FileTextureCube=function(t,e,i,r,n){HX.TextureCube.call(this),this._hdrInAlphaRange=i||0,e=void 0===e?!0:e;for(var s=[],a=this,o=0;6>o;++o){var h=new Image;h.nextID=o+1,h.onload=5>o?function(){s[this.nextID].src=t[this.nextID]}:function(){a.uploadImages(s,this.naturalWidth,e),r&&r()},h.onError=function(){console.warn("Failed loading texture '"+url+"'"),n&&n()},s[o]=h}s[0].src=t[0]},HX.FileTextureCube.prototype=Object.create(HX.TextureCube.prototype),HX.MippedTextureCube=function(t,e,i,r,n,s){HX.TextureCube.call(this),this._hdrInAlphaRange=r||0;var a=[],o=this,h=6*i,_=[],l="/"===t.charAt(-1)?"":"/";t+=l;for(var u=0;i>u;++u){var c=t+u+"/";_.push(c+"posX."+e),_.push(c+"negX."+e),_.push(c+"posY."+e),_.push(c+"negY."+e),_.push(c+"posZ."+e),_.push(c+"negZ."+e)}for(var u=0;h>u;++u){var m=new Image;m.nextID=u+1,m.onload=h-1>u?function(){a[this.nextID].src=_[this.nextID]}:function(){for(var t=0;i>t;++t)o.uploadImagesToMipLevel(a.slice(6*t,6*t+6),t);o._isReady=!0,n&&n()},m.onError=function(){console.warn("Failed loading texture '"+url+"'"),s&&s()},a[u]=m}a[0].src=_[0]},HX.MippedTextureCube.prototype=Object.create(HX.TextureCube.prototype),HX.CascadeShadowCasterCollector=function(t){HX.SceneVisitor.call(this),this._renderCameras=null,this._bounds=new HX.BoundingAABB,this._numCascades=t,this._cullPlanes=null,this._numCullPlanes=0,this._renderLists=[]},HX.CascadeShadowCasterCollector.prototype=Object.create(HX.SceneVisitor.prototype),HX.CascadeShadowCasterCollector.prototype.getRenderList=function(t){return this._renderLists[t]},HX.CascadeShadowCasterCollector.prototype.collect=function(t,e){this._collectorCamera=t,this._bounds.clear();for(var i=0;i<this._numCascades;++i)this._renderLists[i]=[];e.acceptVisitor(this)},HX.CascadeShadowCasterCollector.prototype.getBounds=function(){return this._bounds},HX.CascadeShadowCasterCollector.prototype.setRenderCameras=function(t){this._renderCameras=t},HX.CascadeShadowCasterCollector.prototype.setCullPlanes=function(t,e){this._cullPlanes=t,this._numCullPlanes=e},HX.CascadeShadowCasterCollector.prototype.visitModelInstance=function(t,e,i){if(0!=t._castsShadows){this._bounds.growToIncludeBound(i);for(var r=HX.MaterialPass.GEOMETRY_PASS,n=this._numCascades,s=t.numMeshInstances(),a=n-1,o=a;o>=0;--o){var h=this._renderLists[o],_=this._renderCameras[o];if(o==a||i.intersectsConvexSolid(this._cullPlanes,this._numCullPlanes))for(var l=0;s>l;++l){var u=t.getMeshInstance(l),c=u.getMaterial();if(c.hasPass(r)){var m=new HX.RenderItem;m.pass=c.getPass(r),m.meshInstance=u,m.worldMatrix=e,m.camera=_,m.uniformSetters=u._uniformSetters[r],h.push(m)}}else o=0}}},HX.CascadeShadowCasterCollector.prototype.qualifies=function(t){return t.getWorldBounds().intersectsConvexSolid(this._cullPlanes,this._numCullPlanes)},HX.CascadeShadowMapRenderer=function(t,e,i){HX.Renderer.call(this),this._light=t,this._numCascades=e||3,this._numCascades>4&&(this._numCascades=4),this._shadowMapSize=i||1024,this._shadowMapInvalid=!0,this._shadowMap=new HX.Texture2D,this._fbo=new HX.FrameBuffer(null,HX.FrameBuffer.DEPTH_MODE_READ_WRITE,this._shadowMap),this._shadowMap.setFilter(HX.TEXTURE_FILTER.NEAREST_NOMIP),this._shadowMap.setWrapMode(HX.TEXTURE_WRAP_MODE.CLAMP),this._shadowMatrices=[new HX.Matrix4x4,new HX.Matrix4x4,new HX.Matrix4x4,new HX.Matrix4x4],this._transformToUV=[new HX.Matrix4x4,new HX.Matrix4x4,new HX.Matrix4x4,new HX.Matrix4x4],this._inverseLightMatrix=new HX.Matrix4x4,this._splitRatios=null,this._splitDistances=null,this._shadowMapCameras=null,this._collectorCamera=new HX.OrthographicOffCenterCamera,this._minZ=0,this._numCullPlanes=0,this._cullPlanes=[],this._localBounds=new HX.BoundingAABB,this._casterCollector=new HX.CascadeShadowCasterCollector(this._numCascades),this._initSplitRatios(),this._initCameras(),this._viewports=[]},HX.CascadeShadowMapRenderer.prototype=Object.create(HX.Renderer.prototype),HX.CascadeShadowMapRenderer.prototype.setNumCascades=function(t){this._numCascades!=t&&(this._numCascades=t,this._invalidateShadowMap(),this._initSplitRatios(),this._initCameras(),this._casterCollector=new HX.CascadeShadowCasterCollector(t))},HX.CascadeShadowMapRenderer.prototype.setShadowMapSize=function(t){this._setShadowMapSize!=t&&(this._setShadowMapSize=t,this._invalidateShadowMap())},HX.CascadeShadowMapRenderer.prototype.render=function(t,e){this._shadowMapInvalid&&this._initShadowMap(),this._inverseLightMatrix.inverseAffineOf(this._light.getWorldMatrix()),this._updateCollectorCamera(t),this._updateSplitDistances(t),this._updateCullPlanes(t),this._collectShadowCasters(e),this._updateCascadeCameras(t,this._casterCollector.getBounds()),HX.setRenderTarget(this._fbo),HX.GL.clear(HX.GL.DEPTH_BUFFER_BIT);for(var i=0;i<this._numCascades;++i){var r=this._viewports[i];HX.GL.viewport(r.x,r.y,r.width,r.height),this._renderPass(HX.MaterialPass.GEOMETRY_PASS,this._casterCollector.getRenderList(i))}},HX.CascadeShadowMapRenderer.prototype._updateCollectorCamera=function(t){var e=t.getFrustum()._corners,i=new HX.Float4,r=new HX.Float4,n=new HX.Float4;this._inverseLightMatrix.transformPointTo(e[0],i),r.copyFrom(i);for(var s=1;8>s;++s)this._inverseLightMatrix.transformPointTo(e[s],n),i.minimize(n),r.maximize(n);this._minZ=i.z,this._collectorCamera.getTransformationMatrix().copyFrom(this._light.getWorldMatrix()),this._collectorCamera._invalidateWorldTransformation(),this._collectorCamera.setBounds(i.x,r.x+1,r.y+1,i.y),this._collectorCamera._setRenderTargetResolution(this._shadowMap._width,this._shadowMap._height)},HX.CascadeShadowMapRenderer.prototype._updateSplitDistances=function(t){for(var e=t.getNearDistance(),i=t.getFarDistance()-e,r=0;r<this._numCascades;++r)this._splitDistances[r]=e+this._splitRatios[r]*i},HX.CascadeShadowMapRenderer.prototype._updateCascadeCameras=function(t,e){this._localBounds.transformFrom(e,this._inverseLightMatrix);for(var i=this._localBounds.getMinimum(),r=this._localBounds.getMaximum(),n=1,s=new HX.Float4,a=new HX.Float4,o=new HX.Float4,h=new HX.Float4,_=t.getFrustum().getCorners(),l=0;l<this._numCascades;++l){var u=this._splitRatios[l],c=this._shadowMapCameras[l];c.setNearDistance(-r.z),c.getTransformationMatrix().copyFrom(this._light.getWorldMatrix()),c._invalidateWorldTransformation();for(var m=0;4>m;++m){var f=_[m],d=_[m+4];a.x=f.x+(d.x-f.x)*u,a.y=f.y+(d.y-f.y)*u,a.z=f.z+(d.z-f.z)*u,this._inverseLightMatrix.transformPointTo(f,s),this._inverseLightMatrix.transformPointTo(a,a),0==m?(o.copyFrom(s),h.copyFrom(s)):(o.minimize(s),h.maximize(s)),o.minimize(a),h.maximize(a)}o.z=Math.max(this._minZ,o.z);var p=Math.max(o.x,i.x),X=Math.min(h.x,r.x),H=Math.max(o.y,i.y),x=Math.min(h.y,r.y),g=X-p,E=x-H;g=Math.ceil(g/n)*n,E=Math.ceil(E/n)*n,g=Math.max(g,n),E=Math.max(E,n);var S=this._shadowMap._width/g*.5,T=this._shadowMap._height/E*.5;p=Math.floor(p*S)/S,H=Math.floor(H*T)/T,X=p+g,x=H+E;var L=0;c.setBounds(p-L,X+L,x+L,H-L),c.setFarDistance(-o.z),c._setRenderTargetResolution(this._shadowMap._width,this._shadowMap._height),this._shadowMatrices[l].product(this._transformToUV[l],c.getViewProjectionMatrix())}},HX.CascadeShadowMapRenderer.prototype._updateCullPlanes=function(t){for(var e=this._collectorCamera.getFrustum(),i=e._planes,r=0;4>r;++r)this._cullPlanes[r]=i[r];this._numCullPlanes=4,e=t.getFrustum(),i=e._planes;for(var n=this._light.getDirection(),s=0;6>s;++s){var a=i[s];HX.dot3(a,n)<-.001&&(this._cullPlanes[this._numCullPlanes++]=a)}},HX.CascadeShadowMapRenderer.prototype._collectShadowCasters=function(t){this._casterCollector.setCullPlanes(this._cullPlanes,this._numCullPlanes),this._casterCollector.setRenderCameras(this._shadowMapCameras),this._casterCollector.collect(this._collectorCamera,t)},HX.CascadeShadowMapRenderer.prototype.getSplitDistances=function(){return this._splitDistances},HX.CascadeShadowMapRenderer.prototype.getShadowMatrix=function(t){return this._shadowMatrices[t]},HX.CascadeShadowMapRenderer.prototype.dispose=function(){HX.Renderer.call.dispose(this),this._shadowMap.dispose(),this._shadowMap=null},HX.CascadeShadowMapRenderer.prototype._invalidateShadowMap=function(){this._shadowMapInvalid=!0},HX.CascadeShadowMapRenderer.prototype._initShadowMap=function(){var t=this._numCascades>1?2:1,e=Math.ceil(this._numCascades/2);this._shadowMap.initEmpty(this._shadowMapSize*t,this._shadowMapSize*e,HX.GL.DEPTH_STENCIL,HX.EXT_DEPTH_TEXTURE.UNSIGNED_INT_24_8_WEBGL),this._fbo.init(),this._shadowMapInvalid=!1,this._viewports=[],this._viewports.push({x:0,y:0,width:this._shadowMapSize,height:this._shadowMapSize}),this._viewports.push({x:this._shadowMapSize,y:0,width:this._shadowMapSize,height:this._shadowMapSize}),this._viewports.push({x:0,y:this._shadowMapSize,width:this._shadowMapSize,height:this._shadowMapSize}),this._viewports.push({x:this._shadowMapSize,y:this._shadowMapSize,width:this._shadowMapSize,height:this._shadowMapSize}),this._initViewportMatrices(1/t,1/e)},HX.CascadeShadowMapRenderer.prototype._initSplitRatios=function(){var t=1;this._splitRatios=[],this._splitDistances=[0,0,0,0];for(var e=this._numCascades-1;e>=0;--e)this._splitRatios[e]=t,this._splitDistances[e]=0,t*=.4},HX.CascadeShadowMapRenderer.prototype._initCameras=function(){this._shadowMapCameras=[];for(var t=this._numCascades-1;t>=0;--t)this._shadowMapCameras[t]=new HX.OrthographicOffCenterCamera},HX.CascadeShadowMapRenderer.prototype._initViewportMatrices=function(t,e){for(var i=0;4>i;++i)this._transformToUV[i].scaleMatrix(.5,.5,.5),this._transformToUV[i].appendTranslation(.5,.5,.5),this._transformToUV[i].appendScale(t,e,1);this._transformToUV[1].appendTranslation(.5,0,0),this._transformToUV[2].appendTranslation(0,.5,0),this._transformToUV[3].appendTranslation(.5,.5,0)},HX.MRTRenderer=function(){HX.ScreenRenderer.call(this)},HX.MRTRenderer.prototype=Object.create(HX.ScreenRenderer.prototype),HX.MRTRenderer.prototype._renderToGBuffer=function(){HX.setRenderTarget(this._gbufferFBO),HX.clear(),this._renderPass(HX.MaterialPass.GEOMETRY_PASS)},HX.MRTRenderer.prototype._createGBufferFBO=function(){var t=[this._gbuffer[0],this._gbuffer[1],this._gbuffer[2]];this._gbufferFBO=new HX.FrameBuffer(t,HX.FrameBuffer.DEPTH_MODE_READ_WRITE,this._depthBuffer)},HX.MRTRenderer.prototype._updateGBufferFBO=function(){this._gbufferFBO.init()},HX.MRTRenderer.prototype.dispose=function(){this._gbufferFBO.dispose(),HX.ScreenRenderer.prototype.dispose.call(this)},HX.MultiPassRenderer=function(){HX.ScreenRenderer.call(this)},HX.MultiPassRenderer.prototype=Object.create(HX.ScreenRenderer.prototype),HX.MultiPassRenderer.prototype._updateGBufferFBO=function(){},HX.MultiPassRenderer.prototype._renderToGBuffer=function(){for(var t=HX.GL.COLOR_BUFFER_BIT|HX.GL.DEPTH_BUFFER_BIT,e=[HX.MaterialPass.GEOMETRY_ALBEDO_PASS,HX.MaterialPass.GEOMETRY_NORMAL_PASS,HX.MaterialPass.GEOMETRY_SPECULAR_PASS],i=0;3>i;++i)HX.setRenderTarget(this._gbufferSingleFBOs[i]),HX.GL.clear(t),this._renderPass(e[i]),0==i&&(t=HX.GL.COLOR_BUFFER_BIT,HX.GL.depthFunc(HX.GL.EQUAL))},HX.MultiPassRenderer.prototype._createGBufferFBO=function(){},HX.RenderCollector=function(){HX.SceneVisitor.call(this),this._passes=new Array(HX.MaterialPass.NUM_TOTAL_PASS_TYPES),this._camera=null,this._frustum=null,this._lights=null,this._shadowCasters=null,this._effects=null,this._globalSpecularProbe=null,this._globalIrradianceProbe=null},HX.RenderCollector.prototype=Object.create(HX.SceneVisitor.prototype),HX.RenderCollector.prototype.getRenderList=function(t){return this._passes[t]},HX.RenderCollector.prototype.getLights=function(){return this._lights},HX.RenderCollector.prototype.getShadowCasters=function(){return this._shadowCasters},HX.RenderCollector.prototype.getSkyBox=function(){return this._skyBox},HX.RenderCollector.prototype.getEffects=function(){return this._effects},HX.RenderCollector.prototype.getGlobalSpecularProbe=function(){return this._globalSpecularProbe},HX.RenderCollector.prototype.getGlobalIrradianceProbe=function(){return this._globalIrradianceProbe},HX.RenderCollector.prototype.collect=function(t,e){this._camera=t,this._frustum=t.getFrustum(),this._nearPlane=this._frustum._planes[HX.Frustum.PLANE_NEAR],this._reset(),e.acceptVisitor(this),this._passes[HX.MaterialPass.GEOMETRY_PASS].sort(this._sortOpaques),this._passes[HX.MaterialPass.GEOMETRY_POST_ALBEDO_PASS].sort(this._sortBlended),this._passes[HX.MaterialPass.GEOMETRY_POST_NORMAL_PASS].sort(this._sortBlended),this._passes[HX.MaterialPass.GEOMETRY_POST_SPECULAR_PASS].sort(this._sortBlended),this._passes[HX.MaterialPass.POST_PASS].sort(this._sortOpaques),HX.EXT_DRAW_BUFFERS||this._copyLegacyPasses(),this._lights.sort(this._sortLights)},HX.RenderCollector.prototype.qualifies=function(t){return t.getWorldBounds().intersectsConvexSolid(this._frustum._planes,6)},HX.RenderCollector.prototype.visitScene=function(t){var e=t._skyBox;e&&(this.visitModelInstance(e._modelInstance,null),this._globalSpecularProbe=e.getGlobalSpecularProbe(),this._globalIrradianceProbe=e.getGlobalIrradianceProbe())},HX.RenderCollector.prototype.visitEffects=function(t,e){if(e!=this._camera)for(var i=t.length,r=0;i>r;++r)this._effects.push(t[r])},HX.RenderCollector.prototype.visitModelInstance=function(t,e,i){for(var r=t.numMeshInstances(),n=0;r>n;++n)for(var s=t.getMeshInstance(n),a=s.getMaterial(),o=0;o<HX.MaterialPass.NUM_PASS_TYPES;++o){var h=a.getPass(o);if(h&&h._enabled){var _=new HX.RenderItem;_.pass=h,_.meshInstance=s,_.worldMatrix=e,_.camera=this._camera,_.uniformSetters=s._uniformSetters[o],this._passes[o].push(_)}}},HX.RenderCollector.prototype.visitLight=function(t){this._lights.push(t),t._castsShadows&&this._shadowCasters.push(t._shadowMapRenderer);var e=t.getWorldBounds(),i=this._nearPlane;t._renderOrderHint=e._centerX*i.x+e._centerY*i.y+e._centerZ*i.z+i.w-e.getRadius()},HX.RenderCollector.prototype._reset=function(){for(var t=0;t<HX.MaterialPass.NUM_TOTAL_PASS_TYPES;++t)this._passes[t]=[];this._lights=[],this._shadowCasters=[],this._effects=[],this._globalIrradianceProbe=null,this._globalSpecularProbe=null},HX.RenderCollector.prototype._sortOpaques=function(t,e){var i=t.pass._shader._renderOrderHint-e.pass._shader._renderOrderHint;if(0!==i)return i;var i=t.pass._renderOrderHint-e.pass._renderOrderHint;return 0!==i?i:t.meshInstance._renderOrderHint-e.meshInstance._renderOrderHint},HX.RenderCollector.prototype._sortBlended=function(t,e){return e.meshInstance._renderOrderHint-t.meshInstance._renderOrderHint},HX.RenderCollector.prototype._sortLights=function(t,e){return t._type==e._type?t._castsShadows==e._castsShadows?t._renderOrderHint-e._renderOrderHint:t._castsShadows?1:-1:t._type<e._type?-1:1},HX.RenderCollector.prototype._copyLegacyPasses=function(t,e){for(var i=this._passes[HX.MaterialPass.GEOMETRY_ALBEDO_PASS],r=this._passes[HX.MaterialPass.GEOMETRY_NORMAL_PASS],n=this._passes[HX.MaterialPass.GEOMETRY_SPECULAR_PASS],s=i.length,a=0;s>a;++a){var o=i[a],h=new HX.RenderItem,_=new HX.RenderItem,l=o.meshInstance,u=l.getMaterial();h.pass=u.getPass(HX.MaterialPass.GEOMETRY_NORMAL_PASS),_.pass=u.getPass(HX.MaterialPass.GEOMETRY_SPECULAR_PASS),h.uniformSetters=l._uniformSetters[HX.MaterialPass.GEOMETRY_NORMAL_PASS],_.uniformSetters=l._uniformSetters[HX.MaterialPass.GEOMETRY_SPECULAR_PASS],h.meshInstance=_.meshInstance=o.meshInstance,h.worldMatrix=_.worldMatrix=o.worldMatrix,h.camera=_.camera=this._camera,r.push(h),n.push(_)}},HX.CopyTextureShader=function(t,e){HX.Shader.call(this),t=t||"xyzw";var i="#define extractChannels(src) ((src)."+t+")\n";this.init(HX.ShaderLibrary.get("copy_vertex.glsl"),i+HX.ShaderLibrary.get("copy_fragment.glsl")),this._textureLocation=HX.GL.getUniformLocation(this._program,"sampler"),this._positionAttributeLocation=HX.GL.getAttribLocation(this._program,"hx_position"),this._texCoordAttributeLocation=HX.GL.getAttribLocation(this._program,"hx_texCoord"),HX.GL.useProgram(this._program),HX.GL.uniform1i(this._textureLocation,0)},HX.CopyTextureShader.prototype=Object.create(HX.Shader.prototype),HX.CopyTextureShader.prototype.execute=function(t,e){HX.GL.disable(HX.GL.DEPTH_TEST),HX.GL.disable(HX.GL.CULL_FACE),t._vertexBuffer.bind(),t._indexBuffer.bind(),this.updateRenderState(),e.bind(0),HX.GL.vertexAttribPointer(this._positionAttributeLocation,2,HX.GL.FLOAT,!1,16,0),HX.GL.vertexAttribPointer(this._texCoordAttributeLocation,2,HX.GL.FLOAT,!1,16,8),HX.enableAttributes(2),HX.GL.drawElements(HX.GL.TRIANGLES,6,HX.GL.UNSIGNED_SHORT,0)},HX.DebugDepthShader=function(t,e){HX.Shader.call(this),this.init(HX.ShaderLibrary.get("copy_vertex.glsl"),HX.ShaderLibrary.get("debug_depth_fragment.glsl")),this._textureLocation=HX.GL.getUniformLocation(this._program,"sampler"),this._positionAttributeLocation=HX.GL.getAttribLocation(this._program,"hx_position"),this._texCoordAttributeLocation=HX.GL.getAttribLocation(this._program,"hx_texCoord"),HX.GL.useProgram(this._program),HX.GL.uniform1i(this._textureLocation,0)},HX.DebugDepthShader.prototype=Object.create(HX.Shader.prototype),HX.DebugDepthShader.prototype.execute=function(t,e){HX.GL.disable(HX.GL.DEPTH_TEST),HX.GL.disable(HX.GL.CULL_FACE),t._vertexBuffer.bind(),t._indexBuffer.bind(),this.updateRenderState(),e.bind(0),HX.GL.vertexAttribPointer(this._positionAttributeLocation,2,HX.GL.FLOAT,!1,16,0),HX.GL.vertexAttribPointer(this._texCoordAttributeLocation,2,HX.GL.FLOAT,!1,16,8),HX.enableAttributes(2),HX.GL.drawElements(HX.GL.TRIANGLES,6,HX.GL.UNSIGNED_SHORT,0)},HX.ApplyGammaShader=function(){HX.Shader.call(this),this.init(HX.ShaderLibrary.get("copy_vertex.glsl"),HX.ShaderLibrary.get("copy_to_gamma_fragment.glsl")),this._textureLocation=HX.GL.getUniformLocation(this._program,"sampler"),this._positionAttributeLocation=HX.GL.getAttribLocation(this._program,"hx_position"),this._texCoordAttributeLocation=HX.GL.getAttribLocation(this._program,"hx_texCoord"),HX.GL.useProgram(this._program),HX.GL.uniform1i(this._textureLocation,0)},HX.ApplyGammaShader.prototype=Object.create(HX.Shader.prototype),HX.ApplyGammaShader.prototype.execute=function(t,e){HX.GL.disable(HX.GL.DEPTH_TEST),HX.GL.disable(HX.GL.CULL_FACE),t._vertexBuffer.bind(),t._indexBuffer.bind(),this.updateRenderState(),e.bind(0),HX.GL.vertexAttribPointer(this._positionAttributeLocation,2,HX.GL.FLOAT,!1,16,0),HX.GL.vertexAttribPointer(this._texCoordAttributeLocation,2,HX.GL.FLOAT,!1,16,8),HX.enableAttributes(2),HX.GL.drawElements(HX.GL.TRIANGLES,6,HX.GL.UNSIGNED_SHORT,0)},HX.DrawNormalsShader=function(){HX.Shader.call(this),this.init(HX.CopyTextureShader._vertexShader,HX.DrawNormalsShader._fragmentShader),this._textureLocation=HX.GL.getUniformLocation(this._program,"sampler"),this._positionAttributeLocation=HX.GL.getAttribLocation(this._program,"hx_position"),this._texCoordAttributeLocation=HX.GL.getAttribLocation(this._program,"hx_texCoord"),HX.GL.useProgram(this._program),HX.GL.uniform1i(this._textureLocation,0)},HX.DrawNormalsShader.prototype=Object.create(HX.Shader.prototype),HX.DrawNormalsShader.prototype.execute=function(t,e){t._vertexBuffer.bind(),t._indexBuffer.bind(),this.updateRenderState(),e.bind(0),HX.GL.vertexAttribPointer(this._positionAttributeLocation,2,HX.GL.FLOAT,!1,16,0),HX.GL.vertexAttribPointer(this._texCoordAttributeLocation,2,HX.GL.FLOAT,!1,16,8),HX.enableAttributes(2),HX.GL.drawElements(HX.GL.TRIANGLES,6,HX.GL.UNSIGNED_SHORT,0)},HX.LinearizeDepthShader=function(){HX.Shader.call(this),this.init(HX.ShaderLibrary.get("linearize_depth_vertex.glsl"),HX.ShaderLibrary.get("linearize_depth_fragment.glsl")),this._textureLocation=HX.GL.getUniformLocation(this._program,"sampler"),this._rcpFrustumRangeLocation=HX.GL.getUniformLocation(this._program,"hx_rcpCameraFrustumRange"),this._projectionLocation=HX.GL.getUniformLocation(this._program,"hx_projectionMatrix"),this._positionAttributeLocation=HX.GL.getAttribLocation(this._program,"hx_position"),this._texCoordAttributeLocation=HX.GL.getAttribLocation(this._program,"hx_texCoord"),HX.GL.useProgram(this._program),HX.GL.uniform1i(this._textureLocation,0)},HX.LinearizeDepthShader.prototype=Object.create(HX.Shader.prototype),HX.LinearizeDepthShader.prototype.execute=function(t,e,i){HX.GL.disable(HX.GL.DEPTH_TEST),HX.GL.disable(HX.GL.CULL_FACE),t._vertexBuffer.bind(),t._indexBuffer.bind(),this.updateRenderState(),e.bind(0),HX.GL.vertexAttribPointer(this._positionAttributeLocation,2,HX.GL.FLOAT,!1,16,0),HX.GL.vertexAttribPointer(this._texCoordAttributeLocation,2,HX.GL.FLOAT,!1,16,8),HX.GL.uniform1f(this._rcpFrustumRangeLocation,1/(i.getNearDistance()-i.getFarDistance())),HX.GL.uniformMatrix4fv(this._projectionLocation,!1,i.getProjectionMatrix()._m),HX.enableAttributes(2),HX.GL.drawElements(HX.GL.TRIANGLES,6,HX.GL.UNSIGNED_SHORT,0)},HX.BloomThresholdPass=function(){HX.EffectPass.call(this,null,HX.BloomThresholdPass._fragmentShader),this.setThresholdLuminance(1)},HX.BloomThresholdPass.prototype=Object.create(HX.EffectPass.prototype),HX.BloomThresholdPass.prototype.setThresholdLuminance=function(t){this._thresholdLuminance=t,this.setUniform("threshold",t)},HX.BloomThresholdPass.prototype.getThresholdLuminance=function(){return this._thresholdLuminance},HX.BloomBlurPass=function(t,e,i,r,n,s){this._initWeights(t,e);var a=HX.BloomBlurPass.getVertexShader(this._kernelSize,i,r,n,s),o=HX.BloomBlurPass.getFragmentShader(this._kernelSize,i,r,n,s);HX.EffectPass.call(this,a,o),this.setUniformArray("gaussianWeights",new Float32Array(this._weights))},HX.BloomBlurPass.prototype=Object.create(HX.EffectPass.prototype),HX.BloomBlurPass.prototype._initWeights=function(t,e){this._kernelSize=0,this._weights=[];for(var i=[],r=0;r<t.length;++r){var n=Math.ceil(.5*t[r]),s=Math.ceil(t[r]);s>this._kernelSize&&(this._kernelSize=s),i[r]=HX.CenteredGaussianCurve.fromRadius(n)}for(var n=Math.ceil(.5*this._kernelSize),a=0;a<this._kernelSize;++a){this._weights[a]=0;for(var r=0;r<t.length;++r)this._weights[a]+=i[r].getValueAt(a-n)*e[r]}},HX.BloomCompositePass=function(){HX.EffectPass.call(this,HX.BloomCompositePass._vertexShader,HX.BloomCompositePass._fragmentShader)},HX.BloomCompositePass.prototype=Object.create(HX.EffectPass.prototype),HX.BloomEffect=function(t,e){HX.Effect.call(this),this._downScale=4,this._targetWidth=-1,this._targetHeight=-1,this._thresholdPass=new HX.BloomThresholdPass,this._compositePass=new HX.BloomCompositePass,this.addPass(this._thresholdPass),this.addPass(null),this.addPass(null),this.addPass(this._compositePass),this._thresholdMaps=[],this._thresholdFBOs=[];for(var i=0;2>i;++i)this._thresholdMaps[i]=new HX.Texture2D,this._thresholdMaps[i].setFilter(HX.TEXTURE_FILTER.BILINEAR_NOMIP),this._thresholdMaps[i].setWrapMode(HX.TEXTURE_WRAP_MODE.CLAMP),
this._thresholdFBOs[i]=new HX.FrameBuffer([this._thresholdMaps[i]],HX.FrameBuffer.DEPTH_MODE_DISABLED);this._blurSizes=t||[512,256],HX.EXT_HALF_FLOAT_TEXTURES_LINEAR&&HX.EXT_HALF_FLOAT_TEXTURES?this._weights=e||[.05,.05]:(this._weights=e||[1.5,5],this.setThresholdLuminance(.9)),this._compositePass.setTexture("bloomTexture",this._thresholdMaps[0])},HX.BloomEffect.prototype=Object.create(HX.Effect.prototype),HX.BloomEffect.prototype.setThresholdLuminance=function(t){this._thresholdLuminance=t,this.setUniform("threshold",t)},HX.BloomEffect.prototype._initTextures=function(){for(var t=HX.OPTIONS.useHDR?HX.EXT_HALF_FLOAT_TEXTURES.HALF_FLOAT_OES:HX.GL.UNSIGNED_BYTE,e=0;2>e;++e)this._thresholdMaps[e].initEmpty(Math.ceil(this._targetWidth/this._downScale),Math.ceil(this._targetHeight/this._downScale),HX.GL.RGB,t),this._thresholdFBOs[e].init()},HX.BloomEffect.prototype._initBlurPass=function(){for(var t=[],e=[],i=this._blurSizes.length,r=0;i>r;++r)t[r]=this._blurSizes[r]/this._downScale,e[r]=this._blurSizes[r]/this._downScale;var n=this._targetWidth/this._downScale,s=this._targetHeight/this._downScale;this._passes[1]=new HX.BloomBlurPass(t,this._weights,1,0,n,s),this._passes[2]=new HX.BloomBlurPass(e,this._weights,0,1,n,s),this._passes[1].setTexture("sourceTexture",this._thresholdMaps[0]),this._passes[2].setTexture("sourceTexture",this._thresholdMaps[1]);var a=this._mesh;a&&(this._mesh=null,this.setMesh(a))},HX.BloomEffect.prototype.draw=function(t){(this._hdrTarget._width!=this._targetWidth||this._hdrTarget._height!=this._targetHeight)&&(this._targetWidth=this._hdrTarget._width,this._targetHeight=this._hdrTarget._height,this._initTextures(),this._initBlurPass());var e=0;HX.GL.viewport(0,0,this._thresholdMaps[0]._width,this._thresholdMaps[0]._height);for(var i=0;3>i;++i)HX.setRenderTarget(this._thresholdFBOs[e]),this._drawPass(this._passes[i]),e=1-e;HX.setRenderTarget(this._hdrTarget),HX.GL.viewport(0,0,this._targetWidth,this._targetHeight),this._drawPass(this._compositePass),this._swapHDRBuffers()},HX.BloomEffect.prototype.dispose=function(){for(var t=0;2>t;++t)this._thresholdFBOs[t].dispose(),this._thresholdMaps[t].dispose();this._thresholdFBOs=null,this._thresholdMaps=null},HX.BloomEffect.prototype.getThresholdLuminance=function(){return this.getPass(0).getThresholdLuminance()},HX.BloomEffect.prototype.setThresholdLuminance=function(t){return this.getPass(0).setThresholdLuminance(t)},HX.BloomThresholdPass._fragmentShader="varying vec2 uv;\n\r\n    \n\r\n    #includeHelix\n\r\n    \n\r\n    uniform sampler2D hx_source;\n\r\n    \n\r\n    uniform float threshold;\n\r\n    \n\r\n    void main()\n\r\n    {\n\r\n        vec4 color = texture2D(hx_source, uv);\n\r\n        float originalLuminance = .05 + hx_luminance(color);\n\r\n        float targetLuminance = max(originalLuminance - threshold, 0.0);\n\r\n        gl_FragColor = color * targetLuminance / originalLuminance;\n\r\n    }",HX.BloomCompositePass._vertexShader="precision mediump float;\r\n       \r\n       attribute vec4 hx_position;\r\n       attribute vec2 hx_texCoord;\r\n       \r\n       varying vec2 uv;\r\n       \r\n       void main()\r\n       {\r\n               uv = hx_texCoord;\n\r\n               gl_Position = hx_position;\n\r\n       }",HX.BloomCompositePass._fragmentShader="varying vec2 uv;\n\r\n    \n\r\n    uniform sampler2D hx_source;\n\r\n    uniform sampler2D bloomTexture;\n\r\n    \n\r\n    void main()\n\r\n    {\n\r\n        gl_FragColor = texture2D(hx_source, uv) + texture2D(bloomTexture, uv);\n\r\n    }",HX.BloomBlurPass.getVertexShader=function(t,e,i,r,n){return"#define SOURCE_RES vec2(float("+r+"), float("+n+"))\n\r\n            #define RADIUS float("+Math.ceil(.5*t)+")\n\r\n            #define DIRECTION vec2("+e+", "+i+")\n\r\n            precision mediump float;\n\r\n            \n\r\n            attribute vec4 hx_position;\n\r\n            attribute vec2 hx_texCoord;\n\r\n            \n\r\n            varying vec2 uv;\n\r\n            \n\r\n            void main()\n\r\n            {\n\r\n                    uv = hx_texCoord - RADIUS * DIRECTION / SOURCE_RES;\n\r\n                    gl_Position = hx_position;\n\r\n            }"},HX.BloomBlurPass.getFragmentShader=function(t,e,i,r,n){return"#define SOURCE_RES vec2(float("+r+"), float("+n+"))\n\r\n            #define NUM_SAMPLES "+t+"\n\r\n            #define DIRECTION vec2("+e+", "+i+")\n\r\n            \n\r\n            varying vec2 uv;\n\r\n            \n\r\n            uniform sampler2D sourceTexture;\n\r\n            \n\r\n            uniform float gaussianWeights[NUM_SAMPLES];\n\r\n            \n\r\n            void main()\n\r\n            {\n\r\n                vec4 total = vec4(0.0);\n\r\n                vec2 sampleUV = uv;\n\r\n                vec2 stepSize = DIRECTION / SOURCE_RES;\n\r\n                float totalWeight = 0.0;\n\r\n                for (int i = 0; i < NUM_SAMPLES; ++i) {\n\r\n                    vec4 sample = texture2D(sourceTexture, sampleUV);\n\r\n                    total += sample * gaussianWeights[i];\n\r\n                    sampleUV += stepSize;\n\r\n                }\n\r\n                gl_FragColor = total;\n\r\n            }"},HX.SeparableGaussianBlurPass=function(t,e,i,r,n,s){n&&(s=s||n),r=r||"hx_source",t=Math.round(t);var a=HX.SeparableGaussianBlurPass.getVertexShader(t,e,i,n,s),o=HX.SeparableGaussianBlurPass.getFragmentShader(t,e,i,r,n,s);HX.EffectPass.call(this,a,o),this._initWeights(t)},HX.SeparableGaussianBlurPass.prototype=Object.create(HX.EffectPass.prototype),HX.SeparableGaussianBlurPass.prototype._initWeights=function(t){for(var e=Math.floor(.5*t),i=[],r=HX.CenteredGaussianCurve.fromRadius(e),n=0;t>n;++n)i[n]=r.getValueAt(n-e);this.setUniformArray("gaussianWeights",new Float32Array(i))},HX.GaussianBlurEffect=function(t,e){HX.Effect.call(this),this.addPass(new HX.SeparableGaussianBlurPass(t,1,0)),this.addPass(new HX.SeparableGaussianBlurPass(e,0,1))},HX.GaussianBlurEffect.prototype=Object.create(HX.Effect.prototype),HX.DirectionalBlurPass=function(t,e,i,r,n,s){t=Math.round(t),n&&(s=s||n),r=r||"hx_source",HX.EffectPass.call(this,HX.DirectionalBlurPass.getVertexShader(t,e,i),HX.DirectionalBlurPass.getFragmentShader(t,e,i,r,n,s))},HX.DirectionalBlurPass.prototype=Object.create(HX.EffectPass.prototype),HX.DirectionalBlurEffect=function(t,e,i){HX.Effect.call(this),this.addPass(new HX.DirectionalBlurPass(t,e,i))},HX.DirectionalBlurEffect.prototype=Object.create(HX.Effect.prototype),HX.BoxBlurEffect=function(t,e){HX.Effect.call(this),this.addPass(new HX.DirectionalBlurPass(t,1,0)),this.addPass(new HX.DirectionalBlurPass(e,0,1))},HX.BoxBlurEffect.prototype=Object.create(HX.Effect.prototype),HX.DirectionalBlurPass.getVertexShader=function(t,e,i,r,n){var s;return s=r?"vec2(float("+r+"), float("+n+"))":"hx_renderTargetResolution","#define SOURCE_RES "+s+"\n\r\n            #define NUM_SAMPLES "+Math.ceil(t/2)+"\n\r\n            #define DIRECTION vec2("+e+", "+i+")\n\r\n    precision mediump float;\n\r\n    \n\r\n    attribute vec4 hx_position;\n\r\n    attribute vec2 hx_texCoord;\n\r\n    \n\r\n    varying vec2 uv;\n\r\n    \n"+(r?"":"uniform vec2 hx_renderTargetResolution;\n")+"\n\r\n    void main()\n\r\n    {\n\r\n            vec2 firstPixel = floor(hx_texCoord * SOURCE_RES - DIRECTION * float(NUM_SAMPLES));\r\n            uv = (firstPixel - .5) / SOURCE_RES;\n\r\n            gl_Position = hx_position;\n\r\n    }"},HX.DirectionalBlurPass.getFragmentShader=function(t,e,i,r,n,s){var a;return a=n?"vec2(float("+n+"), float("+s+"))":"hx_renderTargetResolution","#define SOURCE_RES "+a+"\n\r\n            #define NUM_SAMPLES "+Math.ceil(t/2)+"\n\r\n            #define DIRECTION vec2("+2*e+", "+2*i+")\n\r\n            \n\r\n            varying vec2 uv;\n\r\n            \n"+(n?"":"uniform vec2 hx_renderTargetResolution;\n")+"\n\r\n            uniform sampler2D "+r+";\n\r\n            \n\r\n            void main()\n\r\n            {\n\r\n                vec4 total = vec4(0.0);\n\r\n                vec2 sampleUV = uv;\n\r\n                vec2 stepSize = DIRECTION / SOURCE_RES;\n\r\n                for (int i = 0; i < NUM_SAMPLES; ++i) {\n\r\n                    total += texture2D("+r+", sampleUV);\n\r\n                    sampleUV += stepSize;\n\r\n                }\n\r\n                gl_FragColor = total / float(NUM_SAMPLES);\n\r\n            \n\r\n            }"},HX.SeparableGaussianBlurPass.getVertexShader=function(t,e,i,r,n){var s;return s=r?"vec2(float("+r+"), float("+n+"))":"hx_renderTargetResolution","#define SOURCE_RES "+s+"\n\r\n             #define RADIUS float("+Math.ceil(.5*t)+")\n\r\n             #define DIRECTION vec2("+e+", "+i+")\n\r\n    precision mediump float;\n\r\n    \n\r\n    attribute vec4 hx_position;\n\r\n    attribute vec2 hx_texCoord;\n\r\n    \n\r\n    varying vec2 uv;\n\r\n    \n"+(r?"":"uniform vec2 hx_renderTargetResolution;\n")+"\n\r\n    void main()\n\r\n    {\n\r\n            uv = hx_texCoord - RADIUS * DIRECTION / SOURCE_RES;\n\r\n            gl_Position = hx_position;\n\r\n    }"},HX.SeparableGaussianBlurPass.getFragmentShader=function(t,e,i,r,n,s){var a;return a=n?"vec2(float("+n+"), float("+s+"))":"hx_renderTargetResolution","#define SOURCE_RES "+a+"\n\r\n            #define NUM_SAMPLES "+t+"\n\r\n            #define DIRECTION vec2("+e+", "+i+")\n\r\n            \n\r\n            varying vec2 uv;\n\r\n            \n"+(n?"":"uniform vec2 hx_renderTargetResolution;\n")+"\n\r\n            uniform sampler2D "+r+";\n\r\n            \n\r\n            uniform float gaussianWeights[NUM_SAMPLES];\n\r\n            \n\r\n            void main()\n\r\n            {\n\r\n                vec4 total = vec4(0.0);\n\r\n                vec2 sampleUV = uv;\n\r\n                vec2 stepSize = DIRECTION / SOURCE_RES;\n\r\n                float totalWeight = 0.0;\n\r\n                for (int i = 0; i < NUM_SAMPLES; ++i) {\n\r\n                    total += texture2D("+r+", sampleUV) * gaussianWeights[i];\n\r\n                    sampleUV += stepSize;\n\r\n                }\n\r\n                gl_FragColor = total;\n\r\n            \n\r\n            }"},HX.CopyTexturePass=function(){HX.EffectPass.call(this,null,HX.CopyTexturePass._fragmentShader)},HX.CopyTexturePass.prototype=Object.create(HX.EffectPass.prototype),HX.CopyTexturePass.prototype.setSourceTexture=function(t){this.setTexture("sourceTexture",t)},HX.CopyTexturePass._fragmentShader="varying vec2 uv;\n\r\n    \n\r\n    uniform sampler2D sourceTexture;\n\r\n    \n\r\n    void main()\n\r\n    {\n\r\n        gl_FragColor = texture2D(sourceTexture, uv);\n\r\n    }",HX.FogPass=function(){HX.EffectPass.call(this,HX.FogPass._vertexShader,HX.FogPass._fragmentShader),this.setDensity(.001),this.setTint(new HX.Color(1,1,1,1)),this.setStartDistance(0),this.setHeight(1e3)},HX.FogPass.prototype=Object.create(HX.EffectPass.prototype),HX.FogPass.prototype.getDensity=function(){return this._density},HX.FogPass.prototype.setDensity=function(t){this._density=t,this.setUniform("density",t)},HX.FogPass.prototype.getTint=function(){return this._tint},HX.FogPass.prototype.setTint=function(t){this._tint=t,this.setUniform("tint",{x:t.r,y:t.g,z:t.b})},HX.FogPass.prototype.getStartDistance=function(){return this._startDistance},HX.FogPass.prototype.setStartDistance=function(t){this._startDistance=t,this.setUniform("startDistance",t)},HX.FogPass.prototype.getHeight=function(){return this._height},HX.FogPass.prototype.setHeight=function(t){this._height=t,this.setUniform("height",t)},HX.FogEffect=function(t,e,i,r){HX.Effect.call(this),this._pass=new HX.FogPass,this.addPass(this._pass),t&&this._pass.setDensity(t),e&&this._pass.setTint(e),i&&this._pass.setStartDistance(i),r&&this._pass.setHeight(r)},HX.FogEffect.prototype=Object.create(HX.Effect.prototype),HX.FogEffect.prototype.getDensity=function(){return this._pass.getDensity()},HX.FogEffect.prototype.setDensity=function(t){return this._pass.setDensity(t)},HX.FogEffect.prototype.getTint=function(){return this._pass.getTint()},HX.FogEffect.prototype.setTint=function(t){return this._pass.setTint(t)},HX.FogEffect.prototype.getStartDistance=function(){return this._pass.getStartDistance()},HX.FogEffect.prototype.setStartDistance=function(t){return this._pass.setStartDistance(t)},HX.FogEffect.prototype.getHeight=function(){return this._pass.getHeight()},HX.FogEffect.prototype.setHeight=function(t){return this._pass.setHeight(t)},HX.FogPass._vertexShader="precision mediump float;\n\r\n    \n\r\n    attribute vec4 hx_position;\n\r\n    attribute vec2 hx_texCoord;\n\r\n    \n\r\n    uniform mat4 hx_inverseProjectionMatrix;\n\r\n    uniform mat4 hx_cameraWorldMatrix;\n\r\n    \n\r\n    varying vec2 uv;\n\r\n    varying vec3 viewWorldDir;\n\r\n    \n\r\n    void main()\r\n    {\n\r\n            uv = hx_texCoord;\n\r\n            vec3 frustumVector = hx_getLinearDepthViewVector(hx_position.xy, hx_inverseProjectionMatrix);\n\r\n            viewWorldDir = mat3(hx_cameraWorldMatrix) * frustumVector;\n\r\n            gl_Position = hx_position;\n\r\n    }",HX.FogPass._fragmentShader="varying vec2 uv;\n\r\n    varying vec3 viewWorldDir;\n\r\n    \n\r\n    uniform vec3 tint;\n\r\n    uniform float density;\n\r\n    uniform float startDistance;\n\r\n    uniform float height;\n\r\n    \n\r\n    uniform vec3 hx_cameraWorldPosition;\n\r\n    uniform float hx_cameraFrustumRange;\n\r\n    uniform float hx_cameraNearPlaneDistance;\n\r\n    uniform mat4 hx_projectionMatrix;\n\r\n    \n\r\n    uniform sampler2D hx_source;\n\r\n    uniform sampler2D hx_gbufferDepth;\n\r\n    \n\r\n    void main()\n\r\n    {\n\r\n        vec4 color = texture2D(hx_source, uv);\n\r\n        float depth = hx_sampleLinearDepth(hx_gbufferDepth, uv);\n\r\n        // do not fog up skybox\n\r\n        if (depth == 1.0) depth = -1.0;\n\r\n        float viewZ = hx_cameraNearPlaneDistance + depth * hx_cameraFrustumRange;\n\r\n        vec3 viewDir = viewWorldDir * viewZ;\n\r\n        float worldY = viewDir.y + hx_cameraWorldPosition.y;\n\r\n        float s = sign(hx_cameraWorldPosition.y - height);\n\r\n        \n\r\n        float ratioUnder = clamp(s * (height - worldY) / abs(viewDir.y), 0.0, 1.0);\n\r\n        \n\r\n        if (hx_cameraWorldPosition.y < height)\n\r\n            ratioUnder = 1.0 - ratioUnder;\n\r\n        \n\r\n        float distance = length(viewDir) * ratioUnder;\n\r\n        \n\r\n        distance -= startDistance;\n\r\n        \n\r\n        float fog = clamp(exp2(-distance * density), 0.0, 1.0);\n\r\n        color.xyz = mix(tint, color.xyz, fog);\n\r\n        gl_FragColor = color;\n\r\n    }",HX.FXAAPass=function(){HX.EffectPass.call(this,null,HX.FXAAPass._fragmentShader)},HX.FXAAPass.prototype=Object.create(HX.EffectPass.prototype),HX.FXAA=function(){HX.Effect.call(this),this.addPass(new HX.FXAAPass),this.setUniform("edgeThreshold",1/8),this.setUniform("edgeThresholdMin",1/16),this.setUniform("edgeSharpness",4)},HX.FXAA.prototype=Object.create(HX.Effect.prototype),HX.FXAAPass._fragmentShader="\r\n        varying vec2 uv;\n\r\n        \n\r\n        uniform sampler2D hx_source;\n\r\n        uniform vec2 hx_rcpRenderTargetResolution;\n\r\n        uniform float edgeThreshold;\n\r\n        uniform float edgeThresholdMin;\n\r\n        uniform float edgeSharpness;\n\r\n        \n\r\n        float luminanceHint(vec4 color)\n\r\n        {\n\r\n            return .30/.59 * color.r + color.g;\n\r\n        }\n\r\n        \n\r\n        void main()\n\r\n        {\n\r\n            vec4 center = texture2D(hx_source, uv);\n\r\n            vec2 halfRes = vec2(hx_rcpRenderTargetResolution.x, hx_rcpRenderTargetResolution.y) * .5;\n\r\n            float topLeftLum = luminanceHint(texture2D(hx_source, uv + vec2(-halfRes.x, halfRes.y)));\n\r\n            float bottomLeftLum = luminanceHint(texture2D(hx_source, uv + vec2(-halfRes.x, -halfRes.y)));\n\r\n            float topRightLum = luminanceHint(texture2D(hx_source, uv + vec2(halfRes.x, halfRes.y)));\n\r\n            float bottomRightLum = luminanceHint(texture2D(hx_source, uv + vec2(halfRes.x, -halfRes.y)));\n\r\n            \n\r\n            float centerLum = luminanceHint(center);\n\r\n            float minLum = min(min(topLeftLum, bottomLeftLum), min(topRightLum, bottomRightLum));\n\r\n            float maxLum = max(max(topLeftLum, bottomLeftLum), max(topRightLum, bottomRightLum));\n\r\n            float range = max(centerLum, maxLum) - min(centerLum, minLum);\n\r\n            float threshold = max(edgeThresholdMin, maxLum * edgeThreshold);\n\r\n            float applyFXAA = range < threshold? 0.0 : 1.0;\n\r\n            \n\r\n            float diagDiff1 = bottomLeftLum - topRightLum;\n\r\n            float diagDiff2 = bottomRightLum - topLeftLum;\n\r\n            vec2 dir1 = normalize(vec2(diagDiff1 + diagDiff2, diagDiff1 - diagDiff2));\n\r\n            vec4 sampleNeg1 = texture2D(hx_source, uv - halfRes * dir1);\n\r\n            vec4 samplePos1 = texture2D(hx_source, uv + halfRes * dir1);\n\r\n            \n\r\n            float minComp = min(abs(dir1.x), abs(dir1.y)) * edgeSharpness;\n\r\n            vec2 dir2 = clamp(dir1.xy / minComp, -2.0, 2.0) * 2.0;\n\r\n            vec4 sampleNeg2 = texture2D(hx_source, uv - hx_rcpRenderTargetResolution * dir2);\n\r\n            vec4 samplePos2 = texture2D(hx_source, uv + hx_rcpRenderTargetResolution * dir2);\n\r\n            vec4 tap1 = sampleNeg1 + samplePos1;\n\r\n            vec4 fxaa = (tap1 + sampleNeg2 + samplePos2) * .25;\n\r\n            float fxaaLum = luminanceHint(fxaa);\n\r\n            if ((fxaaLum < minLum) || (fxaaLum > maxLum))\n\r\n                fxaa = tap1 * .5;\n\r\n            gl_FragColor = mix(center, fxaa, applyFXAA);\n\r\n        }",HX.HBAO=function(t,e){t=t||4,e=e||4,t>32&&(t=32),e>32&&(e=32),this._numRays=t,this._numSamplesPerRay=e,this._strength=1,this._bias=.01,this._fallOffDistance=1,this._radius=.5,this._sampleDirTexture=null,this._ditherTexture=null,HX.Effect.call(this),this.addPass(this._aoPass=new HX.EffectPass(HX.HBAO.getVertexShader(),HX.HBAO.getFragmentShader(t,e))),this.addPass(this._blurPassX=new HX.DirectionalBlurPass(4,1,0)),this.addPass(this._blurPassY=new HX.DirectionalBlurPass(4,0,1)),this._initSampleDirTexture(),this._initDitherTexture(),this._aoPass.setUniform("strengthPerRay",3.1415*this._strength/this._numRays),this._aoPass.setUniform("rcpFallOffDistance",1/this._fallOffDistance),this._aoPass.setUniform("halfSampleRadius",.5*this._radius),this._aoPass.setUniform("bias",this._bias),this._aoPass.setTexture("ditherTexture",this._ditherTexture),this._aoPass.setTexture("sampleDirTexture",this._sampleDirTexture),this._aoTexture=new HX.Texture2D,this._aoTexture.setFilter(HX.TEXTURE_FILTER.BILINEAR_NOMIP),this._aoTexture.setWrapMode(HX.TEXTURE_WRAP_MODE.CLAMP),this._fbo=new HX.FrameBuffer(this._aoTexture,HX.FrameBuffer.DEPTH_MODE_DISABLED)},HX.HBAO.prototype=Object.create(HX.Effect.prototype),HX.HBAO.prototype.getAOTexture=function(){return this._aoTexture},HX.HBAO.prototype.setSampleRadius=function(t){this._radius=t,this._aoPass.setUniform("halfSampleRadius",.5*this._radius)},HX.HBAO.prototype.setFallOffDistance=function(t){this._fallOffDistance=t,this._aoPass.setUniform("rcpFallOffDistance",1/this._fallOffDistance)},HX.HBAO.prototype.setStrength=function(t){this._strength=t,this._aoPass.setUniform("strengthPerRay",3.1415*this._strength/this._numRays)},HX.HBAO.prototype.setBias=function(t){this._bias=t,this._aoPass.setUniform("bias",this._bias)},HX.HBAO.prototype._initTargetTexture=function(t,e){this._aoTexture.initEmpty(t,e),this._fbo.init()},HX.HBAO.prototype.draw=function(t){var e=this._hdrTarget.width(),i=this._hdrTarget.height();(e!=this._aoTexture.width()||i!=this._aoTexture.height())&&this._initTargetTexture(e,i),HX.setRenderTarget(this._hdrTarget),this._drawPass(this._aoPass),this._swapHDRBuffers(),HX.setRenderTarget(this._hdrTarget),this._drawPass(this._blurPassX),this._swapHDRBuffers(),HX.setRenderTarget(this._fbo),this._drawPass(this._blurPassY)},HX.HBAO.prototype._initSampleDirTexture=function(){this._sampleDirTexture=new HX.Texture2D;for(var t=[],e=0,i=0;256>i;++i){var r=i/256*2*Math.PI,n=.5*Math.cos(r)+.5,s=.5*Math.sin(r)+.5;t[e]=Math.round(255*n),t[e+1]=Math.round(255*s),t[e+2]=0,t[e+3]=255,e+=4}this._sampleDirTexture.uploadData(new Uint8Array(t),256,1,!1),this._sampleDirTexture.setFilter(HX.TEXTURE_FILTER.NEAREST_NOMIP),this._sampleDirTexture.setWrapMode(HX.TEXTURE_WRAP_MODE.REPEAT)},HX.HBAO.prototype._initDitherTexture=function(){this._ditherTexture=new HX.Texture2D;var t,e=[],i=0,r=[],n=[];for(t=0;16>t;++t)r.push(t/16),n.push(t/15);HX.shuffle(r),HX.shuffle(n),t=0;for(var s=0;4>s;++s)for(var a=0;4>a;++a){var o=r[t],h=n[t];++t,e[i]=Math.round(255*o),e[i+1]=Math.round(255*h),e[i+2]=0,e[i+3]=255,i+=4}this._ditherTexture.uploadData(new Uint8Array(e),4,4,!1),this._ditherTexture.setFilter(HX.TEXTURE_FILTER.NEAREST_NOMIP),this._ditherTexture.setWrapMode(HX.TEXTURE_WRAP_MODE.REPEAT)},HX.HBAO.getVertexShader=function(){},HX.HBAO.getFragmentShader=function(t,e){return"#define NUM_RAYS "+t+"\n#define NUM_SAMPLES_PER_RAY "+e+"\n"},HX.ScreenSpaceReflections=function(t,e){HX.Effect.call(this),t=t||5,e=e||1,this._numSamples=t;var i=new HX.EffectPass(HX.ScreenSpaceReflections._vertexShader,HX.ScreenSpaceReflections.getFragmentShader(t));this.addPass(i),this.setUniform("stepSize",e/t),this.setUniform("nearSampleRatio",.1)},HX.ScreenSpaceReflections.prototype=Object.create(HX.Effect.prototype),HX.ScreenSpaceReflections._vertexShader="precision mediump float;\n\r\n    \n\r\n    attribute vec4 hx_position;\n\r\n    attribute vec2 hx_texCoord;\n\r\n    \n\r\n    uniform mat4 hx_inverseProjectionMatrix;\n\r\n    \n\r\n    varying vec2 uv;\n\r\n    varying vec3 viewDir;\n\r\n    varying vec3 nearViewPos;\n\r\n    \n\r\n    void main()\r\n    {\n\r\n            uv = hx_texCoord;\n\r\n            viewDir = hx_getLinearDepthViewVector(hx_position.xy, hx_inverseProjectionMatrix);\n\r\n            gl_Position = hx_position;\n\r\n    }",HX.ScreenSpaceReflections.getFragmentShader=function(t){return"#define NUM_SAMPLES "+t+"\n\r\n            \n\r\n            varying vec2 uv;\n\r\n            varying vec3 viewDir;\n\r\n            \n\r\n            uniform sampler2D hx_source;\n\r\n            uniform sampler2D hx_gbufferAlbedo;\n\r\n            uniform sampler2D hx_gbufferNormals;\n\r\n            uniform sampler2D hx_gbufferDepth;\n\r\n            uniform sampler2D hx_gbufferSpecular;\n\r\n            \n\r\n            uniform mat4 hx_projectionMatrix;\n\r\n            uniform mat4 hx_viewMatrix;\n\r\n            uniform float hx_cameraFrustumRange;\n\r\n            uniform float hx_cameraNearPlaneDistance;\n\r\n            uniform vec2 hx_renderTargetResolution;\n\r\n            \n\r\n            uniform float stepSize;\n\r\n            uniform float nearSampleRatio;\n\r\n            \n\r\n            void main()\n\r\n            {\n\r\n                vec4 albedoSample = hx_gammaToLinear(texture2D(hx_gbufferAlbedo, uv));\n\r\n                vec4 specularSample = texture2D(hx_gbufferSpecular, uv);\n\r\n                float depth = hx_sampleLinearDepth(hx_gbufferDepth, uv);\n\r\n                vec3 normalSpecularReflectance;\n\r\n                float roughness;\n\r\n                hx_decodeReflectionData(albedoSample, specularSample, normalSpecularReflectance, roughness);\n\r\n                vec3 normal = mat3(hx_viewMatrix) * (texture2D(hx_gbufferNormals, uv).xyz * 2.0 - 1.0);\n\r\n                vec3 reflDir = reflect(normalize(viewDir), normal);\n\r\n                float fadeFactor = clamp(-reflDir.z * 10000.0, 0.0, 1.0); \n\r\n                vec3 fresnel = hx_fresnel(normalSpecularReflectance, reflDir, normal);\n\r\n                // not physically correct, but attenuation is required to look good\n\r\n                fresnel *= (1.0 - roughness);\n\r\n                bool hitFound = false;\n\r\n                // TURNS SAMPLE_POS.z > 0\n\r\n                vec3 projScale = vec3(hx_projectionMatrix[0][0], hx_projectionMatrix[1][1], -1.0);\n\r\n                float absViewZ = hx_cameraNearPlaneDistance + depth * hx_cameraFrustumRange;\n\r\n                vec3 viewPos = absViewZ * viewDir;\n\r\n                vec3 samplePos = viewPos * projScale;\n\r\n                float perspStepSize = stepSize * max(1.0, samplePos.z);\n\r\n                vec3 sampleStep = reflDir * perspStepSize * projScale / length(reflDir.xy);\n\r\n                float depthStep = sampleStep.z / hx_cameraFrustumRange;\n\r\n                \n\r\n                float originalDepth = depth;\n\r\n                float prevDepth = depth;\n\r\n                float finalHitDepth;\n\r\n                float finalPrevHitDepth;\n\r\n                float finalMarchDepth;\n\r\n                vec3 finalSamplePos;\n\r\n                \n\r\n                samplePos += sampleStep * nearSampleRatio;\n\r\n                depth += depthStep * nearSampleRatio;\n\r\n                \n\r\n                for (int i = 0; i < NUM_SAMPLES; ++i) {\n\r\n                    \n\r\n                    vec2 sampleUV = samplePos.xy / samplePos.z * .5 + .5;\n\r\n                    float hitDepth = hx_sampleLinearDepth(hx_gbufferDepth, sampleUV);\n\r\n                    \n\r\n                    if (depth > hitDepth && !hitFound) {\n\r\n                        finalMarchDepth = depth;\n\r\n                        finalSamplePos = samplePos;\n\r\n                        finalHitDepth = hitDepth;\n\r\n                        finalPrevHitDepth = prevDepth;\n\r\n                        hitFound = true;\n\r\n                    }\n\r\n                    prevDepth = hitDepth;\n\r\n                    samplePos += sampleStep;\n\r\n                    depth += depthStep;\n\r\n                }\n\r\n                \n\r\n                // interpolation for first hit breaks for some reason \n\r\n                if (finalPrevHitDepth != originalDepth) {\n\r\n                    float deltaDepth = finalHitDepth - finalPrevHitDepth;\n\r\n                    float d = depthStep - deltaDepth;\n\r\n                    float t = (finalMarchDepth - finalHitDepth) / d;\n\r\n                    finalSamplePos -= sampleStep * t;\n\r\n                }\n\r\n                vec2 sampleUV = finalSamplePos.xy / finalSamplePos.z;\n\r\n                vec2 borderFactors = abs(sampleUV);\n\r\n                borderFactors = (1.0 - borderFactors) * 10.0;\n\r\n                sampleUV = sampleUV * .5 + .5;\n\r\n                fadeFactor *= clamp((finalHitDepth - originalDepth)/.0001, 0.1, 1.1) - .1;\n\r\n                fadeFactor *= clamp(borderFactors.x, 0.0, 1.0) * clamp(borderFactors.y, 0.0, 1.0);\n\r\n                vec4 reflColor = texture2D(hx_source, sampleUV);\n\r\n                vec4 srcColor = texture2D(hx_source, uv);\n\r\n                float amountUsed = hitFound? fadeFactor : 0.0;\n\r\n                gl_FragColor = vec4(srcColor.xyz + fresnel * reflColor.xyz * amountUsed, 1.0 - amountUsed);\n\r\n            }"},HX.SSAO=function(t){t=t||32,t>64&&(t=64),this._numSamples=t,this._strength=1,this._fallOffDistance=1,this._radius=.5,this._ditherTexture=null,HX.Effect.call(this),this.addPass(this._ssaoPass=new HX.EffectPass(null,HX.SSAO.getFragmentShader(t))),this.addPass(this._blurPassX=new HX.DirectionalBlurPass(4,1,0)),this.addPass(this._blurPassY=new HX.DirectionalBlurPass(4,0,1)),this._initSamples(),this._initDitherTexture(),this._ssaoPass.setUniform("strengthPerSample",6.283*this._strength/this._numSamples),this._ssaoPass.setUniform("rcpFallOffDistance",1/this._fallOffDistance),this._ssaoPass.setUniform("sampleRadius",this._radius),this._ssaoPass.setTexture("ditherTexture",this._ditherTexture),this._ssaoTexture=new HX.Texture2D,this._ssaoTexture.setFilter(HX.TEXTURE_FILTER.BILINEAR_NOMIP),this._ssaoTexture.setWrapMode(HX.TEXTURE_WRAP_MODE.CLAMP),this._fbo=new HX.FrameBuffer(this._ssaoTexture,HX.FrameBuffer.DEPTH_MODE_DISABLED)},HX.SSAO.prototype=Object.create(HX.Effect.prototype),HX.SSAO.prototype.getAOTexture=function(){return this._ssaoTexture},HX.SSAO.prototype.setSampleRadius=function(t){this._radius=t,this._ssaoPass.setUniform("sampleRadius",this._radius)},HX.SSAO.prototype.setFallOffDistance=function(t){this._fallOffDistance=t,this._ssaoPass.setUniform("rcpFallOffDistance",1/this._fallOffDistance)},HX.SSAO.prototype.setStrength=function(t){this._strength=t,this._ssaoPass.setUniform("strengthPerSample",6.283*this._strength/this._numSamples)},HX.SSAO.prototype._initSamples=function(){for(var t=[],e=0,i=HX.DEFAULT_POISSON_SPHERE,r=0;r<this._numSamples;++r){var n=i[3*r],s=i[3*r+1],a=i[3*r+2];t[e++]=Math.pow(n,6),t[e++]=Math.pow(s,6),t[e++]=Math.pow(a,6)}this._ssaoPass.setUniformArray("samples",new Float32Array(t))},HX.SSAO.prototype._initTargetTexture=function(t,e){this._ssaoTexture.initEmpty(t,e),this._fbo.init()},HX.SSAO.prototype.draw=function(t){var e=this._hdrTarget.width(),i=this._hdrTarget.height();(e!=this._ssaoTexture.width()||i!=this._ssaoTexture.height())&&this._initTargetTexture(e,i),HX.setRenderTarget(this._hdrTarget),this._drawPass(this._ssaoPass),this._swapHDRBuffers(),HX.setRenderTarget(this._hdrTarget),this._drawPass(this._blurPassX),this._swapHDRBuffers(),HX.setRenderTarget(this._fbo),this._drawPass(this._blurPassY)},HX.SSAO.prototype._initDitherTexture=function(){this._ditherTexture=new HX.Texture2D;var t=[64,29,75,255,202,68,43,255,23,170,68,255,161,209,36,255,93,45,218,255,231,84,186,255,52,186,211,255,190,225,179,255,82,108,9,255,195,35,70,255,136,235,60,255,249,162,120,255,5,92,134,255,118,19,194,255,59,219,184,255,172,146,245,255];this._ditherTexture.uploadData(new Uint8Array(t),4,4,!1),this._ditherTexture.setFilter(HX.TEXTURE_FILTER.NEAREST_NOMIP),this._ditherTexture.setWrapMode(HX.TEXTURE_WRAP_MODE.REPEAT)},HX.SSAO.getFragmentShader=function(t){return"#define NUM_SAMPLES "+t+"\n\r\n        uniform mat4 hx_projectionMatrix;\n\r\n        uniform mat4 hx_viewMatrix;\n\r\n        uniform mat4 hx_cameraWorldMatrix;\n\r\n        uniform vec2 hx_renderTargetResolution;\n\r\n        uniform float hx_cameraFrustumRange;\n\r\n        \n\r\n        uniform float strengthPerSample;\n\r\n        uniform float rcpFallOffDistance;\n\r\n        uniform float sampleRadius;\n\r\n        uniform vec3 samples[NUM_SAMPLES]; // w contains bias\n\r\n        \n\r\n        uniform sampler2D hx_gbufferNormals;\n\r\n        uniform sampler2D hx_gbufferDepth;\n\r\n        uniform sampler2D ditherTexture;\n\r\n        \n\r\n        varying vec2 uv;\n\r\n        \n\r\n        void main()\n\r\n        {\n\r\n            vec4 normalSample = texture2D(hx_gbufferNormals, uv);\n\r\n            vec3 worldNormal = normalSample.xyz - .5;\n\r\n            vec3 centerNormal = mat3(hx_viewMatrix) * worldNormal;\n\r\n            float centerDepth = hx_sampleLinearDepth(hx_gbufferDepth, uv);\n\r\n            float totalOcclusion = 0.0;\n\r\n            vec3 dither = texture2D(ditherTexture, uv * hx_renderTargetResolution * .25).xyz;\n\r\n            vec3 randomPlaneNormal = normalize(dither - .5);\n\r\n            float w = -centerDepth * hx_cameraFrustumRange * hx_projectionMatrix[2][3] + hx_projectionMatrix[3][3];\n\r\n            vec3 sampleRadii;\n\r\n            sampleRadii.x = sampleRadius * .5 * hx_projectionMatrix[0][0] / w;\n\r\n            sampleRadii.y = sampleRadius * .5 * hx_projectionMatrix[1][1] / w;\n\r\n            sampleRadii.z = sampleRadius;\n\r\n            \n\r\n            for (int i = 0; i < NUM_SAMPLES; ++i) {\n\r\n                vec3 sampleOffset = reflect(samples[i], randomPlaneNormal);\n\r\n                vec3 normOffset = normalize(sampleOffset);\n\r\n                float cosFactor = dot(normOffset, centerNormal);\n\r\n                float sign = sign(cosFactor);\n\r\n                sampleOffset *= sign;\n\r\n                cosFactor *= sign;\n\r\n                \n\r\n                vec3 scaledOffset = sampleOffset * sampleRadii;\n\r\n                \n\r\n                vec2 samplePos = uv + scaledOffset.xy;\n\r\n                float occluderDepth = hx_sampleLinearDepth(hx_gbufferDepth, samplePos);\n\r\n                float diffZ = (centerDepth - occluderDepth) * hx_cameraFrustumRange;\n\r\n                \n\r\n                // distanceFactor: from 1 to 0, near to far\n\r\n                float distanceFactor = clamp(diffZ * rcpFallOffDistance, 0.0, 1.0);\n\r\n                distanceFactor = 1.0 - distanceFactor;\n\r\n                \n\r\n                // sampleOcclusion: 1 if occluding, 0 otherwise\n\r\n                float sampleOcclusion = float(diffZ > scaledOffset.z);\n\r\n                totalOcclusion += sampleOcclusion * distanceFactor * cosFactor;\n\r\n                \n\r\n            }\n\r\n            gl_FragColor = vec4(1.0 - totalOcclusion * strengthPerSample);\n\r\n        }";

},HX.ToneMapEffect=function(t){HX.Effect.call(this),this._toneMapPass=t,HX.EXT_HALF_FLOAT_TEXTURES&&(this.addPass(new HX.EffectPass(null,HX.ToneMapEffect._referenceLuminanceFragmentShader)),this.addPass(this._toneMapPass),this._luminanceMap=new HX.Texture2D,this._luminanceMap.initEmpty(256,256,HX.GL.RGBA,HX.EXT_HALF_FLOAT_TEXTURES.HALF_FLOAT_OES),this._luminanceFBO=new HX.FrameBuffer([this._luminanceMap],HX.FrameBuffer.DEPTH_MODE_DISABLED),this._luminanceFBO.init(),this._adaptationRate=500,this._toneMapPass.setTexture("hx_luminanceMap",this._luminanceMap),this._toneMapPass.setUniform("hx_luminanceMipLevel",Math.log(this._luminanceMap._width)/Math.log(2)))},HX.ToneMapEffect.prototype=Object.create(HX.Effect.prototype),HX.ToneMapEffect.prototype.dispose=function(){HX.Effect.prototype.dispose.call(this),this._luminanceFBO.dispose(),this._luminanceMap.dispose()},HX.ToneMapEffect.prototype.getAdaptationRate=function(){return this._adaptationRate},HX.ToneMapEffect.prototype.setAdaptationRate=function(t){this._adaptationRate=t},HX.ToneMapEffect.prototype.draw=function(t){if(HX.EXT_HALF_FLOAT_TEXTURES){var e=this._adaptationRate>0?t/this._adaptationRate:1;e>1&&(e=1),HX.GL.enable(HX.GL.BLEND),HX.GL.blendFunc(HX.GL.CONSTANT_ALPHA,HX.GL.ONE_MINUS_CONSTANT_ALPHA),HX.GL.blendColor(1,1,1,e),HX.setRenderTarget(this._luminanceFBO),HX.GL.viewport(0,0,this._luminanceFBO._width,this._luminanceFBO._height),this._drawPass(this._passes[0]),this._luminanceMap.generateMipmap(),HX.GL.disable(HX.GL.BLEND),HX.setRenderTarget(this._hdrTarget),HX.GL.viewport(0,0,this._hdrTarget._width,this._hdrTarget._height),this._drawPass(this._passes[1]),this._swapHDRBuffers()}},HX.ReinhardToneMapEffect=function(){HX.ToneMapEffect.call(this,new HX.EffectPass(null,HX.ReinhardToneMapEffect._fragmentShader)),this.setKey(.18)},HX.ReinhardToneMapEffect.prototype=Object.create(HX.ToneMapEffect.prototype),HX.ReinhardToneMapEffect.prototype.getKey=function(){return this._key},HX.ReinhardToneMapEffect.prototype.setKey=function(t){this._key=t,this._toneMapPass.setUniform("key",t)},HX.FilmicToneMapEffect=function(){HX.ToneMapEffect.call(this,new HX.EffectPass(null,HX.FilmicToneMapEffect._fragmentShader)),this._outputsGamma=!0,this.setKey(.18)},HX.FilmicToneMapEffect.prototype=Object.create(HX.ToneMapEffect.prototype),HX.FilmicToneMapEffect.prototype.getKey=function(){return this._key},HX.FilmicToneMapEffect.prototype.setKey=function(t){this._key=t,this._toneMapPass.setUniform("key",t)},HX.ToneMapEffect._referenceLuminanceFragmentShader="varying vec2 uv;\n\r\n    \n\r\n    #includeHelix\n\r\n    \n\r\n    uniform sampler2D hx_source;\n\r\n    \n\r\n    void main()\n\r\n    {\n\r\n        vec4 color = texture2D(hx_source, uv);\n\r\n        float l = log(.001 + hx_luminance(color));\n\r\n        gl_FragColor = vec4(l, l, l, 1.0);\n\r\n    }",HX.ReinhardToneMapEffect._fragmentShader="#extension GL_EXT_shader_texture_lod : require\n\r\n    varying vec2 uv;\n\r\n    \n\r\n    #includeHelix\n\r\n    \n\r\n    uniform sampler2D hx_source;\n\r\n    uniform sampler2D hx_luminanceMap;\n\r\n    uniform float hx_luminanceMipLevel;\n\r\n    uniform float key;\n\r\n    \n\r\n    void main()\n\r\n    {\n\r\n        vec4 color = texture2D(hx_source, uv);\n\r\n        float referenceLuminance = exp(texture2DLodEXT(hx_luminanceMap, uv, hx_luminanceMipLevel).x - .001);\n\r\n        color *= key / referenceLuminance;\r\n        gl_FragColor = color / (1.0 + color);\n\r\n    }",HX.FilmicToneMapEffect._fragmentShader="#extension GL_EXT_shader_texture_lod : require\n\r\n    varying vec2 uv;\n\r\n    \n\r\n    #includeHelix\n\r\n    \n\r\n    uniform sampler2D hx_source;\n\r\n    uniform sampler2D hx_luminanceMap;\n\r\n    uniform float hx_luminanceMipLevel;\n\r\n    uniform float key;\n\r\n    \n\r\n    void main()\n\r\n    {\n\r\n        vec4 color = texture2D(hx_source, uv);\n\r\n        float referenceLuminance = exp(texture2DLodEXT(hx_luminanceMap, uv, hx_luminanceMipLevel).x - .001);\n\r\n        color *= key / referenceLuminance;\n\r\n        vec3 x = max(vec3(0.0), color.xyz - 0.004);\n\r\n        gl_FragColor = vec4((x * (6.2 * x + .5))/(x * (6.2 * x + 1.7) + 0.06), 1.0);\n\r\n    }",HX.ModelParser={_registeredParsers:[]},HX.ModelParser.registerParser=function(t,e){HX.ModelParser._registeredParsers[t]=e},HX.ModelParser.getParser=function(t){var e=t.lastIndexOf("."),i=t.substr(e+1).toLowerCase();return new HX.ModelParser._registeredParsers[i]},HX.ModelParser.parse=function(t,e,i){var r=HX.ModelParser.getParser(t),n=new HX.URLLoader;n.setType(r.dataType()),n.onComplete=function(t){r.parse(t,e,i)},n.onError=function(e){console.warn("Failed loading "+t+". Error code: "+e),i&&i(e)},n.load(t)},HX.OBJParser=function(){this._groupData=[],this._vertices=[],this._normals=[],this._uvs=[],this._modelData=null,this._hasNormals=!1},HX.OBJParser.prototype={dataType:function(){return HX.URLLoader.DATA_TEXT},parse:function(t,e){var i=t.split("\n"),r=i.length;this._pushNewGroup("default");for(var n=0;r>n;++n)this._parseLine(i[n]);this._translateModelData(),e(this._modelData)},_parseLine:function(t){if(0!=t.length&&"#"!=t.charAt(0)){var e=t.split(" ");switch(e[0]){case"usemtl":this._pushNewGroup();break;case"v":this._vertices.push(parseFloat(e[1]),parseFloat(e[2]),parseFloat(e[3]));break;case"vt":this._uvs.push(parseFloat(e[1]),parseFloat(e[2]));break;case"vn":this._normals.push(parseFloat(e[1]),parseFloat(e[2]),parseFloat(e[3]));break;case"o":this._pushNewGroup(e[1]);break;case"g":this._pushNewGroup(e[1]);break;case"f":this._parseFaceData(e);break;default:console.log("OBJ tag ignored or unsupported: "+e[0])}}},_pushNewGroup:function(t){this._activeGroup=new HX.OBJParser.GroupData,this._activeGroup.name=t||"Group"+this._groupData.length,this._groupData.push(this._activeGroup)},_parseFaceData:function(t){for(var e=new HX.OBJParser.FaceData,i=t.length,r=1;i>r;++r){var n=new HX.OBJParser.FaceVertexData;e.vertices.push(n);var s=t[r].split("/"),a=3*(s[0]-1);n.posX=this._vertices[a],n.posY=this._vertices[a+1],n.posZ=this._vertices[a+2],s.length>1&&(a=2*(s[1]-1),n.uvU=this._uvs[a],n.uvV=this._uvs[a+1],s.length>2&&(a=3*(s[2]-1),this._hasNormals=!0,n.normalX=this._normals[a],n.normalY=this._normals[a+1],n.normalZ=this._normals[a+2]))}this._activeGroup.faces.push(e),this._activeGroup.numIndices+=4==t.length?3:6},_translateModelData:function(){this._modelData=new HX.ModelData;for(var t=this._groupData.length,e=0;t>e;++e){var i=this._groupData[e];0!=i.numIndices&&this._modelData.addMeshData(this._translateMeshData(i))}},_translateMeshData:function(t){for(var e=HX.MeshData.createDefaultEmpty(),i=[],r=new Array(t.numIndices),n=0,s=0,a=t.faces,o=a.length,h=0;o>h;++h){for(var _=a[h],l=_.vertices,u=l.length,c=0;u>c;++c){var m=l[c],f=m.getHash();i.hasOwnProperty(f)||(i[f]={index:n++,vertex:m})}r[s]=i[l[0].getHash()].index,r[s+1]=i[l[1].getHash()].index,r[s+2]=i[l[2].getHash()].index,s+=3,4==u&&(r[s]=i[l[0].getHash()].index,r[s+1]=i[l[2].getHash()].index,r[s+2]=i[l[3].getHash()].index,s+=3)}var d=new Array(n*HX.MeshData.DEFAULT_VERTEX_SIZE);for(var f in i)if(i.hasOwnProperty(f)){var p=i[f],X=p.vertex,H=p.index*HX.MeshData.DEFAULT_VERTEX_SIZE;d[H]=X.posX,d[H+1]=X.posY,d[H+2]=X.posZ,d[H+3]=X.normalX,d[H+4]=X.normalY,d[H+5]=X.normalZ,d[H+6]=0,d[H+7]=0,d[H+8]=0,d[H+9]=0,d[H+10]=0,d[H+11]=0,d[H+12]=X.uvU,d[H+13]=X.uvV}e.setVertexData(d),e.setIndexData(r);var x=HX.NormalTangentGenerator.MODE_TANGENTS|HX.NormalTangentGenerator.MODE_BITANGENTS;this._hasNormals||(x|=HX.NormalTangentGenerator.MODE_NORMALS);var g=new HX.NormalTangentGenerator;return g.generate(e,x,!0),e}},HX.ModelParser.registerParser("obj",HX.OBJParser),HX.OBJParser.FaceVertexData=function(){this.posX=0,this.posY=0,this.posZ=0,this.uvU=0,this.uvV=0,this.normalX=0,this.normalY=0,this.normalZ=0,this._hash=""},HX.OBJParser.FaceVertexData.prototype={getHash:function(){return this._hash||(this._hash=this.posX+"/"+this.posY+"/"+this.posZ+"/"+this.uvU+"/"+this.uvV+"/"+this.normalX+"/"+this.normalY+"/"+this.normalZ+"/"),this._hash}},HX.OBJParser.FaceData=function(){this.vertices=[]},HX.OBJParser.GroupData=function(){this.numIndices=0,this.faces=[],this.name=""},HX.FPSCounter=function(t){this._numFrames=t||1,this._frames=[],this._maxFPS=void 0,this._minFPS=void 0,this._currentFPS=0,this._averageFPS=0,this._runningSum=0;for(var e=0;e<this._numFrames;++e)this._frames[e]=0;this._index=0},HX.FPSCounter.prototype={update:function(t){this._currentFPS=1e3/t,this._runningSum-=this._frames[this._index],this._runningSum+=this._currentFPS,this._averageFPS=this._runningSum/this._numFrames,this._frames[this._index++]=this._currentFPS,this._index==this._numFrames&&(this._index=0),(void 0===this._maxFPS||this._currentFPS>this._maxFPS)&&(this._maxFPS=this._currentFPS),(void 0===this._minFPS||this._currentFPS<this._minFPS)&&(this._minFPS=this._currentFPS)},getLastFrameFPS:function(){return Math.round(this._currentFPS)},getAverageFPS:function(){return Math.round(this._averageFPS)},getMaxFPS:function(){return Math.round(this._maxFPS)},getMinFPS:function(){return Math.round(this._minFPS)},reset:function(){this._maxFPS=void 0,this._minFPS=void 0}},function(){for(var t=0,e=["ms","moz","webkit","o"],i=0;i<e.length&&!window.requestAnimationFrame;++i)window.requestAnimationFrame=window[e[i]+"RequestAnimationFrame"],window.cancelAnimationFrame=window[e[i]+"CancelAnimationFrame"]||window[e[i]+"CancelRequestAnimationFrame"];window.requestAnimationFrame||(window.requestAnimationFrame=function(e,i){var r=(new Date).getTime(),n=Math.max(0,16-(r-t)),s=window.setTimeout(function(){e(r+n)},n);return t=r+n,s}),window.cancelAnimationFrame||(window.cancelAnimationFrame=function(t){clearTimeout(t)})}(),HX.FrameTicker=function(){this._isRunning=!1,this._callback=void 0,this._dt=0,this._playheadTime=0},HX.FrameTicker.prototype={constructor:HX.FrameTicker,start:function(t){this._callback=t,this._playheadTime=this._getTime(),this._isRunning=!0,this._tick(),this._tick._this=this},stop:function(){this._isRunning=!1},get dt(){return this._dt},_tick:function(){if(this._isRunning){self.requestAnimationFrame(this._tick.bind(this));var t=this._getTime();this._dt=t-this._playheadTime,this._playheadTime=t,this._callback()}},_getTime:function(){return void 0===self.performance||void 0==self.performance.now?Date.now():self.performance.now()}},HX.NormalTangentGenerator=function(){this._meshData=null,this._mode=0,this._positionOffset=0,this._normalOffset=0,this._tangentOffset=0,this._bitangentOffset=0,this._faceNormals=null,this._faceTangents=null},HX.NormalTangentGenerator.MODE_NORMALS=1,HX.NormalTangentGenerator.MODE_TANGENTS=2,HX.NormalTangentGenerator.MODE_BITANGENTS=4,HX.NormalTangentGenerator.prototype={generate:function(t,e,i){void 0===i&&(i=!0),this._mode=void 0===e?HX.NormalTangentGenerator.MODE_NORMALS|HX.NormalTangentGenerator.MODE_TANGENTS|HX.NormalTangentGenerator.MODE_BITANGENTS:e,this._meshData=t,this._positionOffset=t.getVertexAttribute("hx_position").offset,this._normalOffset=t.getVertexAttribute("hx_normal").offset,this._tangentOffset=t.getVertexAttribute("hx_tangent").offset,this._bitangentOffset=t.getVertexAttribute("hx_bitangent").offset,this._uvOffset=t.getVertexAttribute("hx_texCoord").offset,this._positionStride=t.getVertexAttribute("hx_position").stride,this._normalStride=t.getVertexAttribute("hx_normal").stride,this._tangentStride=t.getVertexAttribute("hx_tangent").stride,this._bitangentStride=t.getVertexAttribute("hx_bitangent").stride,this._uvStride=t.getVertexAttribute("hx_texCoord").stride,this._calculateFaceVectors(i),this._calculateVertexVectors()},_calculateFaceVectors:function(t){var e=this._meshData._indexData.length;0!=(this._mode&HX.NormalTangentGenerator.MODE_NORMALS)&&(this._faceNormals=new Array(e)),0!=(this._mode&HX.NormalTangentGenerator.MODE_TANGENTS)&&(this._faceTangents=new Array(e));for(var i=new HX.Float4,r=new HX.Float4,n=new HX.Float4,s=new HX.Float4,a=new HX.Float2,o=new HX.Float2,h=new HX.Float2,_=0;e>_;_+=3)this._getFloat3At(_,this._positionOffset,this._positionStride,r),this._getFloat3At(_+1,this._positionOffset,this._positionStride,n),this._getFloat3At(_+2,this._positionOffset,this._positionStride,s),this._getFloat2At(_,this._uvOffset,this._uvStride,a),this._getFloat2At(_+1,this._uvOffset,this._uvStride,o),this._getFloat2At(_+2,this._uvOffset,this._uvStride,h),this._faceNormals&&(n.subtract(r),s.subtract(r),i.cross(n,s),t||i.normalize(),this._faceNormals[_]=i.x,this._faceNormals[_+1]=i.y,this._faceNormals[_+2]=i.z),this._faceTangents&&(n.scale(h.y-a.y),s.scale(o.y-a.y),i.difference(n,s),i.normalize(),this._faceTangents[_]=i.x,this._faceTangents[_+1]=i.y,this._faceTangents[_+2]=i.z)},_calculateVertexVectors:function(){this._zeroVectors();for(var t=this._meshData._indexData,e=this._meshData._vertexData,i=t.length,r=0;i>r;++r){var n=t[r],s=this._normalOffset+n*this._normalStride,a=this._tangentOffset+n*this._tangentStride,o=3*Math.floor(r/3);this._faceNormals&&(e[s]+=this._faceNormals[o],e[s+1]+=this._faceNormals[o+1],e[s+2]+=this._faceNormals[o+2]),this._faceTangents&&(e[a]+=this._faceTangents[o],e[a+1]+=this._faceTangents[o+1],e[a+2]+=this._faceTangents[o+2]),a+=this._tangentStride}this._normalize()},_zeroVectors:function(){for(var t=this._meshData._vertexData,e=t.length/this._positionStride,i=this._normalOffset,r=this._tangentOffset,n=0;e>n;++n)this._mode&HX.NormalTangentGenerator.MODE_NORMALS&&(t[i]=0,t[i+1]=0,t[i+2]=0),this._mode&HX.NormalTangentGenerator.MODE_TANGENTS&&(t[r]=0,t[r+1]=0,t[r+2]=0),i+=this._normalStride,r+=this._tangentStride},_normalize:function(){for(var t=this._meshData._vertexData,e=t.length/this._positionStride,i=this._normalOffset,r=this._tangentOffset,n=this._bitangentOffset,s=new HX.Float4,a=new HX.Float4,o=new HX.Float4,h=0;e>h;++h)s.x=t[i],s.y=t[i+1],s.z=t[i+2],a.x=t[r],a.y=t[r+1],a.z=t[r+2],this._mode&HX.NormalTangentGenerator.MODE_NORMALS&&(s.normalize(),t[i]=s.x,t[i+1]=s.y,t[i+2]=s.z),this._mode&HX.NormalTangentGenerator.MODE_TANGENTS&&(a.normalize(),t[r]=a.x,t[r+1]=a.y,t[r+2]=a.z),this._mode&HX.NormalTangentGenerator.MODE_BITANGENTS&&(o.cross(a,s),t[n]=o.x,t[n+1]=o.y,t[n+2]=o.z),i+=this._normalStride,r+=this._tangentStride,n+=this._bitangentStride},_getFloat3At:function(t,e,i,r){var n=this._meshData._indexData,s=e+n[t]*i;r.x=this._meshData._vertexData[s],r.y=this._meshData._vertexData[s+1],r.z=this._meshData._vertexData[s+2]},_getFloat2At:function(t,e,i,r){var n=this._meshData._indexData,s=e+n[t]*i;r.x=this._meshData._vertexData[s],r.y=this._meshData._vertexData[s+1]}};