!function(t){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var e;e="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this,e.pako=t()}}(function(){return function t(e,i,n){function r(a,s){if(!i[a]){if(!e[a]){var h="function"==typeof require&&require;if(!s&&h)return h(a,!0);if(o)return o(a,!0);var l=new Error("Cannot find module '"+a+"'");throw l.code="MODULE_NOT_FOUND",l}var _=i[a]={exports:{}};e[a][0].call(_.exports,function(t){var i=e[a][1][t];return r(i?i:t)},_,_.exports,t,e,i,n)}return i[a].exports}for(var o="function"==typeof require&&require,a=0;a<n.length;a++)r(n[a]);return r}({1:[function(t,e,i){"use strict";var n="undefined"!=typeof Uint8Array&&"undefined"!=typeof Uint16Array&&"undefined"!=typeof Int32Array;i.assign=function(t){for(var e=Array.prototype.slice.call(arguments,1);e.length;){var i=e.shift();if(i){if("object"!=typeof i)throw new TypeError(i+"must be non-object");for(var n in i)i.hasOwnProperty(n)&&(t[n]=i[n])}}return t},i.shrinkBuf=function(t,e){return t.length===e?t:t.subarray?t.subarray(0,e):(t.length=e,t)};var r={arraySet:function(t,e,i,n,r){if(e.subarray&&t.subarray)return void t.set(e.subarray(i,i+n),r);for(var o=0;n>o;o++)t[r+o]=e[i+o]},flattenChunks:function(t){var e,i,n,r,o,a;for(n=0,e=0,i=t.length;i>e;e++)n+=t[e].length;for(a=new Uint8Array(n),r=0,e=0,i=t.length;i>e;e++)o=t[e],a.set(o,r),r+=o.length;return a}},o={arraySet:function(t,e,i,n,r){for(var o=0;n>o;o++)t[r+o]=e[i+o]},flattenChunks:function(t){return[].concat.apply([],t)}};i.setTyped=function(t){t?(i.Buf8=Uint8Array,i.Buf16=Uint16Array,i.Buf32=Int32Array,i.assign(i,r)):(i.Buf8=Array,i.Buf16=Array,i.Buf32=Array,i.assign(i,o))},i.setTyped(n)},{}],2:[function(t,e,i){"use strict";function n(t,e){if(65537>e&&(t.subarray&&a||!t.subarray&&o))return String.fromCharCode.apply(null,r.shrinkBuf(t,e));for(var i="",n=0;e>n;n++)i+=String.fromCharCode(t[n]);return i}var r=t("./common"),o=!0,a=!0;try{String.fromCharCode.apply(null,[0])}catch(s){o=!1}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(s){a=!1}for(var h=new r.Buf8(256),l=0;256>l;l++)h[l]=l>=252?6:l>=248?5:l>=240?4:l>=224?3:l>=192?2:1;h[254]=h[254]=1,i.string2buf=function(t){var e,i,n,o,a,s=t.length,h=0;for(o=0;s>o;o++)i=t.charCodeAt(o),55296===(64512&i)&&s>o+1&&(n=t.charCodeAt(o+1),56320===(64512&n)&&(i=65536+(i-55296<<10)+(n-56320),o++)),h+=128>i?1:2048>i?2:65536>i?3:4;for(e=new r.Buf8(h),a=0,o=0;h>a;o++)i=t.charCodeAt(o),55296===(64512&i)&&s>o+1&&(n=t.charCodeAt(o+1),56320===(64512&n)&&(i=65536+(i-55296<<10)+(n-56320),o++)),128>i?e[a++]=i:2048>i?(e[a++]=192|i>>>6,e[a++]=128|63&i):65536>i?(e[a++]=224|i>>>12,e[a++]=128|i>>>6&63,e[a++]=128|63&i):(e[a++]=240|i>>>18,e[a++]=128|i>>>12&63,e[a++]=128|i>>>6&63,e[a++]=128|63&i);return e},i.buf2binstring=function(t){return n(t,t.length)},i.binstring2buf=function(t){for(var e=new r.Buf8(t.length),i=0,n=e.length;n>i;i++)e[i]=t.charCodeAt(i);return e},i.buf2string=function(t,e){var i,r,o,a,s=e||t.length,l=new Array(2*s);for(r=0,i=0;s>i;)if(o=t[i++],128>o)l[r++]=o;else if(a=h[o],a>4)l[r++]=65533,i+=a-1;else{for(o&=2===a?31:3===a?15:7;a>1&&s>i;)o=o<<6|63&t[i++],a--;a>1?l[r++]=65533:65536>o?l[r++]=o:(o-=65536,l[r++]=55296|o>>10&1023,l[r++]=56320|1023&o)}return n(l,r)},i.utf8border=function(t,e){var i;for(e=e||t.length,e>t.length&&(e=t.length),i=e-1;i>=0&&128===(192&t[i]);)i--;return 0>i?e:0===i?e:i+h[t[i]]>e?i:e}},{"./common":1}],3:[function(t,e,i){"use strict";function n(t,e,i,n){for(var r=65535&t|0,o=t>>>16&65535|0,a=0;0!==i;){a=i>2e3?2e3:i,i-=a;do r=r+e[n++]|0,o=o+r|0;while(--a);r%=65521,o%=65521}return r|o<<16|0}e.exports=n},{}],4:[function(t,e,i){e.exports={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8}},{}],5:[function(t,e,i){"use strict";function n(){for(var t,e=[],i=0;256>i;i++){t=i;for(var n=0;8>n;n++)t=1&t?3988292384^t>>>1:t>>>1;e[i]=t}return e}function r(t,e,i,n){var r=o,a=n+i;t=-1^t;for(var s=n;a>s;s++)t=t>>>8^r[255&(t^e[s])];return-1^t}var o=n();e.exports=r},{}],6:[function(t,e,i){"use strict";function n(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name="",this.comment="",this.hcrc=0,this.done=!1}e.exports=n},{}],7:[function(t,e,i){"use strict";var n=30,r=12;e.exports=function(t,e){var i,o,a,s,h,l,_,c,u,f,d,p,m,X,H,g,x,S,v,E,b,T,y,L,M;i=t.state,o=t.next_in,L=t.input,a=o+(t.avail_in-5),s=t.next_out,M=t.output,h=s-(e-t.avail_out),l=s+(t.avail_out-257),_=i.dmax,c=i.wsize,u=i.whave,f=i.wnext,d=i.window,p=i.hold,m=i.bits,X=i.lencode,H=i.distcode,g=(1<<i.lenbits)-1,x=(1<<i.distbits)-1;t:do{15>m&&(p+=L[o++]<<m,m+=8,p+=L[o++]<<m,m+=8),S=X[p&g];e:for(;;){if(v=S>>>24,p>>>=v,m-=v,v=S>>>16&255,0===v)M[s++]=65535&S;else{if(!(16&v)){if(0===(64&v)){S=X[(65535&S)+(p&(1<<v)-1)];continue e}if(32&v){i.mode=r;break t}t.msg="invalid literal/length code",i.mode=n;break t}E=65535&S,v&=15,v&&(v>m&&(p+=L[o++]<<m,m+=8),E+=p&(1<<v)-1,p>>>=v,m-=v),15>m&&(p+=L[o++]<<m,m+=8,p+=L[o++]<<m,m+=8),S=H[p&x];i:for(;;){if(v=S>>>24,p>>>=v,m-=v,v=S>>>16&255,!(16&v)){if(0===(64&v)){S=H[(65535&S)+(p&(1<<v)-1)];continue i}t.msg="invalid distance code",i.mode=n;break t}if(b=65535&S,v&=15,v>m&&(p+=L[o++]<<m,m+=8,v>m&&(p+=L[o++]<<m,m+=8)),b+=p&(1<<v)-1,b>_){t.msg="invalid distance too far back",i.mode=n;break t}if(p>>>=v,m-=v,v=s-h,b>v){if(v=b-v,v>u&&i.sane){t.msg="invalid distance too far back",i.mode=n;break t}if(T=0,y=d,0===f){if(T+=c-v,E>v){E-=v;do M[s++]=d[T++];while(--v);T=s-b,y=M}}else if(v>f){if(T+=c+f-v,v-=f,E>v){E-=v;do M[s++]=d[T++];while(--v);if(T=0,E>f){v=f,E-=v;do M[s++]=d[T++];while(--v);T=s-b,y=M}}}else if(T+=f-v,E>v){E-=v;do M[s++]=d[T++];while(--v);T=s-b,y=M}for(;E>2;)M[s++]=y[T++],M[s++]=y[T++],M[s++]=y[T++],E-=3;E&&(M[s++]=y[T++],E>1&&(M[s++]=y[T++]))}else{T=s-b;do M[s++]=M[T++],M[s++]=M[T++],M[s++]=M[T++],E-=3;while(E>2);E&&(M[s++]=M[T++],E>1&&(M[s++]=M[T++]))}break}}break}}while(a>o&&l>s);E=m>>3,o-=E,m-=E<<3,p&=(1<<m)-1,t.next_in=o,t.next_out=s,t.avail_in=a>o?5+(a-o):5-(o-a),t.avail_out=l>s?257+(l-s):257-(s-l),i.hold=p,i.bits=m}},{}],8:[function(t,e,i){"use strict";function n(t){return(t>>>24&255)+(t>>>8&65280)+((65280&t)<<8)+((255&t)<<24)}function r(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new X.Buf16(320),this.work=new X.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function o(t){var e;return t&&t.state?(e=t.state,t.total_in=t.total_out=e.total=0,t.msg="",e.wrap&&(t.adler=1&e.wrap),e.mode=F,e.last=0,e.havedict=0,e.dmax=32768,e.head=null,e.hold=0,e.bits=0,e.lencode=e.lendyn=new X.Buf32(dt),e.distcode=e.distdyn=new X.Buf32(pt),e.sane=1,e.back=-1,M):P}function a(t){var e;return t&&t.state?(e=t.state,e.wsize=0,e.whave=0,e.wnext=0,o(t)):P}function s(t,e){var i,n;return t&&t.state?(n=t.state,0>e?(i=0,e=-e):(i=(e>>4)+1,48>e&&(e&=15)),e&&(8>e||e>15)?P:(null!==n.window&&n.wbits!==e&&(n.window=null),n.wrap=i,n.wbits=e,a(t))):P}function h(t,e){var i,n;return t?(n=new r,t.state=n,n.window=null,i=s(t,e),i!==M&&(t.state=null),i):P}function l(t){return h(t,Xt)}function _(t){if(Ht){var e;for(p=new X.Buf32(512),m=new X.Buf32(32),e=0;144>e;)t.lens[e++]=8;for(;256>e;)t.lens[e++]=9;for(;280>e;)t.lens[e++]=7;for(;288>e;)t.lens[e++]=8;for(S(E,t.lens,0,288,p,0,t.work,{bits:9}),e=0;32>e;)t.lens[e++]=5;S(b,t.lens,0,32,m,0,t.work,{bits:5}),Ht=!1}t.lencode=p,t.lenbits=9,t.distcode=m,t.distbits=5}function c(t,e,i,n){var r,o=t.state;return null===o.window&&(o.wsize=1<<o.wbits,o.wnext=0,o.whave=0,o.window=new X.Buf8(o.wsize)),n>=o.wsize?(X.arraySet(o.window,e,i-o.wsize,o.wsize,0),o.wnext=0,o.whave=o.wsize):(r=o.wsize-o.wnext,r>n&&(r=n),X.arraySet(o.window,e,i-n,r,o.wnext),n-=r,n?(X.arraySet(o.window,e,i-n,n,0),o.wnext=n,o.whave=o.wsize):(o.wnext+=r,o.wnext===o.wsize&&(o.wnext=0),o.whave<o.wsize&&(o.whave+=r))),0}function u(t,e){var i,r,o,a,s,h,l,u,f,d,p,m,dt,pt,mt,Xt,Ht,gt,xt,St,vt,Et,bt,Tt,yt=0,Lt=new X.Buf8(4),Mt=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!t||!t.state||!t.output||!t.input&&0!==t.avail_in)return P;i=t.state,i.mode===W&&(i.mode=Z),s=t.next_out,o=t.output,l=t.avail_out,a=t.next_in,r=t.input,h=t.avail_in,u=i.hold,f=i.bits,d=h,p=l,Et=M;t:for(;;)switch(i.mode){case F:if(0===i.wrap){i.mode=Z;break}for(;16>f;){if(0===h)break t;h--,u+=r[a++]<<f,f+=8}if(2&i.wrap&&35615===u){i.check=0,Lt[0]=255&u,Lt[1]=u>>>8&255,i.check=g(i.check,Lt,2,0),u=0,f=0,i.mode=N;break}if(i.flags=0,i.head&&(i.head.done=!1),!(1&i.wrap)||(((255&u)<<8)+(u>>8))%31){t.msg="incorrect header check",i.mode=ct;break}if((15&u)!==O){t.msg="unknown compression method",i.mode=ct;break}if(u>>>=4,f-=4,vt=(15&u)+8,0===i.wbits)i.wbits=vt;else if(vt>i.wbits){t.msg="invalid window size",i.mode=ct;break}i.dmax=1<<vt,t.adler=i.check=1,i.mode=512&u?k:W,u=0,f=0;break;case N:for(;16>f;){if(0===h)break t;h--,u+=r[a++]<<f,f+=8}if(i.flags=u,(255&i.flags)!==O){t.msg="unknown compression method",i.mode=ct;break}if(57344&i.flags){t.msg="unknown header flags set",i.mode=ct;break}i.head&&(i.head.text=u>>8&1),512&i.flags&&(Lt[0]=255&u,Lt[1]=u>>>8&255,i.check=g(i.check,Lt,2,0)),u=0,f=0,i.mode=I;case I:for(;32>f;){if(0===h)break t;h--,u+=r[a++]<<f,f+=8}i.head&&(i.head.time=u),512&i.flags&&(Lt[0]=255&u,Lt[1]=u>>>8&255,Lt[2]=u>>>16&255,Lt[3]=u>>>24&255,i.check=g(i.check,Lt,4,0)),u=0,f=0,i.mode=G;case G:for(;16>f;){if(0===h)break t;h--,u+=r[a++]<<f,f+=8}i.head&&(i.head.xflags=255&u,i.head.os=u>>8),512&i.flags&&(Lt[0]=255&u,Lt[1]=u>>>8&255,i.check=g(i.check,Lt,2,0)),u=0,f=0,i.mode=B;case B:if(1024&i.flags){for(;16>f;){if(0===h)break t;h--,u+=r[a++]<<f,f+=8}i.length=u,i.head&&(i.head.extra_len=u),512&i.flags&&(Lt[0]=255&u,Lt[1]=u>>>8&255,i.check=g(i.check,Lt,2,0)),u=0,f=0}else i.head&&(i.head.extra=null);i.mode=U;case U:if(1024&i.flags&&(m=i.length,m>h&&(m=h),m&&(i.head&&(vt=i.head.extra_len-i.length,i.head.extra||(i.head.extra=new Array(i.head.extra_len)),X.arraySet(i.head.extra,r,a,m,vt)),512&i.flags&&(i.check=g(i.check,r,m,a)),h-=m,a+=m,i.length-=m),i.length))break t;i.length=0,i.mode=j;case j:if(2048&i.flags){if(0===h)break t;m=0;do vt=r[a+m++],i.head&&vt&&i.length<65536&&(i.head.name+=String.fromCharCode(vt));while(vt&&h>m);if(512&i.flags&&(i.check=g(i.check,r,m,a)),h-=m,a+=m,vt)break t}else i.head&&(i.head.name=null);i.length=0,i.mode=V;case V:if(4096&i.flags){if(0===h)break t;m=0;do vt=r[a+m++],i.head&&vt&&i.length<65536&&(i.head.comment+=String.fromCharCode(vt));while(vt&&h>m);if(512&i.flags&&(i.check=g(i.check,r,m,a)),h-=m,a+=m,vt)break t}else i.head&&(i.head.comment=null);i.mode=z;case z:if(512&i.flags){for(;16>f;){if(0===h)break t;h--,u+=r[a++]<<f,f+=8}if(u!==(65535&i.check)){t.msg="header crc mismatch",i.mode=ct;break}u=0,f=0}i.head&&(i.head.hcrc=i.flags>>9&1,i.head.done=!0),t.adler=i.check=0,i.mode=W;break;case k:for(;32>f;){if(0===h)break t;h--,u+=r[a++]<<f,f+=8}t.adler=i.check=n(u),u=0,f=0,i.mode=Y;case Y:if(0===i.havedict)return t.next_out=s,t.avail_out=l,t.next_in=a,t.avail_in=h,i.hold=u,i.bits=f,A;t.adler=i.check=1,i.mode=W;case W:if(e===y||e===L)break t;case Z:if(i.last){u>>>=7&f,f-=7&f,i.mode=ht;break}for(;3>f;){if(0===h)break t;h--,u+=r[a++]<<f,f+=8}switch(i.last=1&u,u>>>=1,f-=1,3&u){case 0:i.mode=q;break;case 1:if(_(i),i.mode=et,e===L){u>>>=2,f-=2;break t}break;case 2:i.mode=J;break;case 3:t.msg="invalid block type",i.mode=ct}u>>>=2,f-=2;break;case q:for(u>>>=7&f,f-=7&f;32>f;){if(0===h)break t;h--,u+=r[a++]<<f,f+=8}if((65535&u)!==(u>>>16^65535)){t.msg="invalid stored block lengths",i.mode=ct;break}if(i.length=65535&u,u=0,f=0,i.mode=K,e===L)break t;case K:i.mode=Q;case Q:if(m=i.length){if(m>h&&(m=h),m>l&&(m=l),0===m)break t;X.arraySet(o,r,a,m,s),h-=m,a+=m,l-=m,s+=m,i.length-=m;break}i.mode=W;break;case J:for(;14>f;){if(0===h)break t;h--,u+=r[a++]<<f,f+=8}if(i.nlen=(31&u)+257,u>>>=5,f-=5,i.ndist=(31&u)+1,u>>>=5,f-=5,i.ncode=(15&u)+4,u>>>=4,f-=4,i.nlen>286||i.ndist>30){t.msg="too many length or distance symbols",i.mode=ct;break}i.have=0,i.mode=$;case $:for(;i.have<i.ncode;){for(;3>f;){if(0===h)break t;h--,u+=r[a++]<<f,f+=8}i.lens[Mt[i.have++]]=7&u,u>>>=3,f-=3}for(;i.have<19;)i.lens[Mt[i.have++]]=0;if(i.lencode=i.lendyn,i.lenbits=7,bt={bits:i.lenbits},Et=S(v,i.lens,0,19,i.lencode,0,i.work,bt),i.lenbits=bt.bits,Et){t.msg="invalid code lengths set",i.mode=ct;break}i.have=0,i.mode=tt;case tt:for(;i.have<i.nlen+i.ndist;){for(;yt=i.lencode[u&(1<<i.lenbits)-1],mt=yt>>>24,Xt=yt>>>16&255,Ht=65535&yt,!(f>=mt);){if(0===h)break t;h--,u+=r[a++]<<f,f+=8}if(16>Ht)u>>>=mt,f-=mt,i.lens[i.have++]=Ht;else{if(16===Ht){for(Tt=mt+2;Tt>f;){if(0===h)break t;h--,u+=r[a++]<<f,f+=8}if(u>>>=mt,f-=mt,0===i.have){t.msg="invalid bit length repeat",i.mode=ct;break}vt=i.lens[i.have-1],m=3+(3&u),u>>>=2,f-=2}else if(17===Ht){for(Tt=mt+3;Tt>f;){if(0===h)break t;h--,u+=r[a++]<<f,f+=8}u>>>=mt,f-=mt,vt=0,m=3+(7&u),u>>>=3,f-=3}else{for(Tt=mt+7;Tt>f;){if(0===h)break t;h--,u+=r[a++]<<f,f+=8}u>>>=mt,f-=mt,vt=0,m=11+(127&u),u>>>=7,f-=7}if(i.have+m>i.nlen+i.ndist){t.msg="invalid bit length repeat",i.mode=ct;break}for(;m--;)i.lens[i.have++]=vt}}if(i.mode===ct)break;if(0===i.lens[256]){t.msg="invalid code -- missing end-of-block",i.mode=ct;break}if(i.lenbits=9,bt={bits:i.lenbits},Et=S(E,i.lens,0,i.nlen,i.lencode,0,i.work,bt),i.lenbits=bt.bits,Et){t.msg="invalid literal/lengths set",i.mode=ct;break}if(i.distbits=6,i.distcode=i.distdyn,bt={bits:i.distbits},Et=S(b,i.lens,i.nlen,i.ndist,i.distcode,0,i.work,bt),i.distbits=bt.bits,Et){t.msg="invalid distances set",i.mode=ct;break}if(i.mode=et,e===L)break t;case et:i.mode=it;case it:if(h>=6&&l>=258){t.next_out=s,t.avail_out=l,t.next_in=a,t.avail_in=h,i.hold=u,i.bits=f,x(t,p),s=t.next_out,o=t.output,l=t.avail_out,a=t.next_in,r=t.input,h=t.avail_in,u=i.hold,f=i.bits,i.mode===W&&(i.back=-1);break}for(i.back=0;yt=i.lencode[u&(1<<i.lenbits)-1],mt=yt>>>24,Xt=yt>>>16&255,Ht=65535&yt,!(f>=mt);){if(0===h)break t;h--,u+=r[a++]<<f,f+=8}if(Xt&&0===(240&Xt)){for(gt=mt,xt=Xt,St=Ht;yt=i.lencode[St+((u&(1<<gt+xt)-1)>>gt)],mt=yt>>>24,Xt=yt>>>16&255,Ht=65535&yt,!(f>=gt+mt);){if(0===h)break t;h--,u+=r[a++]<<f,f+=8}u>>>=gt,f-=gt,i.back+=gt}if(u>>>=mt,f-=mt,i.back+=mt,i.length=Ht,0===Xt){i.mode=st;break}if(32&Xt){i.back=-1,i.mode=W;break}if(64&Xt){t.msg="invalid literal/length code",i.mode=ct;break}i.extra=15&Xt,i.mode=nt;case nt:if(i.extra){for(Tt=i.extra;Tt>f;){if(0===h)break t;h--,u+=r[a++]<<f,f+=8}i.length+=u&(1<<i.extra)-1,u>>>=i.extra,f-=i.extra,i.back+=i.extra}i.was=i.length,i.mode=rt;case rt:for(;yt=i.distcode[u&(1<<i.distbits)-1],mt=yt>>>24,Xt=yt>>>16&255,Ht=65535&yt,!(f>=mt);){if(0===h)break t;h--,u+=r[a++]<<f,f+=8}if(0===(240&Xt)){for(gt=mt,xt=Xt,St=Ht;yt=i.distcode[St+((u&(1<<gt+xt)-1)>>gt)],mt=yt>>>24,Xt=yt>>>16&255,Ht=65535&yt,!(f>=gt+mt);){if(0===h)break t;h--,u+=r[a++]<<f,f+=8}u>>>=gt,f-=gt,i.back+=gt}if(u>>>=mt,f-=mt,i.back+=mt,64&Xt){t.msg="invalid distance code",i.mode=ct;break}i.offset=Ht,i.extra=15&Xt,i.mode=ot;case ot:if(i.extra){for(Tt=i.extra;Tt>f;){if(0===h)break t;h--,u+=r[a++]<<f,f+=8}i.offset+=u&(1<<i.extra)-1,u>>>=i.extra,f-=i.extra,i.back+=i.extra}if(i.offset>i.dmax){t.msg="invalid distance too far back",i.mode=ct;break}i.mode=at;case at:if(0===l)break t;if(m=p-l,i.offset>m){if(m=i.offset-m,m>i.whave&&i.sane){t.msg="invalid distance too far back",i.mode=ct;break}m>i.wnext?(m-=i.wnext,dt=i.wsize-m):dt=i.wnext-m,m>i.length&&(m=i.length),pt=i.window}else pt=o,dt=s-i.offset,m=i.length;m>l&&(m=l),l-=m,i.length-=m;do o[s++]=pt[dt++];while(--m);0===i.length&&(i.mode=it);break;case st:if(0===l)break t;o[s++]=i.length,l--,i.mode=it;break;case ht:if(i.wrap){for(;32>f;){if(0===h)break t;h--,u|=r[a++]<<f,f+=8}if(p-=l,t.total_out+=p,i.total+=p,p&&(t.adler=i.check=i.flags?g(i.check,o,p,s-p):H(i.check,o,p,s-p)),p=l,(i.flags?u:n(u))!==i.check){t.msg="incorrect data check",i.mode=ct;break}u=0,f=0}i.mode=lt;case lt:if(i.wrap&&i.flags){for(;32>f;){if(0===h)break t;h--,u+=r[a++]<<f,f+=8}if(u!==(4294967295&i.total)){t.msg="incorrect length check",i.mode=ct;break}u=0,f=0}i.mode=_t;case _t:Et=w;break t;case ct:Et=R;break t;case ut:return D;case ft:default:return P}return t.next_out=s,t.avail_out=l,t.next_in=a,t.avail_in=h,i.hold=u,i.bits=f,(i.wsize||p!==t.avail_out&&i.mode<ct&&(i.mode<ht||e!==T))&&c(t,t.output,t.next_out,p-t.avail_out)?(i.mode=ut,D):(d-=t.avail_in,p-=t.avail_out,t.total_in+=d,t.total_out+=p,i.total+=p,i.wrap&&p&&(t.adler=i.check=i.flags?g(i.check,o,p,t.next_out-p):H(i.check,o,p,t.next_out-p)),t.data_type=i.bits+(i.last?64:0)+(i.mode===W?128:0)+(i.mode===et||i.mode===K?256:0),(0===d&&0===p||e===T)&&Et===M&&(Et=C),Et)}function f(t){if(!t||!t.state)return P;var e=t.state;return e.window&&(e.window=null),t.state=null,M}function d(t,e){var i;return t&&t.state?(i=t.state,0===(2&i.wrap)?P:(i.head=e,e.done=!1,M)):P}var p,m,X=t("../utils/common"),H=t("./adler32"),g=t("./crc32"),x=t("./inffast"),S=t("./inftrees"),v=0,E=1,b=2,T=4,y=5,L=6,M=0,w=1,A=2,P=-2,R=-3,D=-4,C=-5,O=8,F=1,N=2,I=3,G=4,B=5,U=6,j=7,V=8,z=9,k=10,Y=11,W=12,Z=13,q=14,K=15,Q=16,J=17,$=18,tt=19,et=20,it=21,nt=22,rt=23,ot=24,at=25,st=26,ht=27,lt=28,_t=29,ct=30,ut=31,ft=32,dt=852,pt=592,mt=15,Xt=mt,Ht=!0;i.inflateReset=a,i.inflateReset2=s,i.inflateResetKeep=o,i.inflateInit=l,i.inflateInit2=h,i.inflate=u,i.inflateEnd=f,i.inflateGetHeader=d,i.inflateInfo="pako inflate (from Nodeca project)"},{"../utils/common":1,"./adler32":3,"./crc32":5,"./inffast":7,"./inftrees":9}],9:[function(t,e,i){"use strict";var n=t("../utils/common"),r=15,o=852,a=592,s=0,h=1,l=2,_=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],c=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],u=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],f=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];e.exports=function(t,e,i,d,p,m,X,H){var g,x,S,v,E,b,T,y,L,M=H.bits,w=0,A=0,P=0,R=0,D=0,C=0,O=0,F=0,N=0,I=0,G=null,B=0,U=new n.Buf16(r+1),j=new n.Buf16(r+1),V=null,z=0;for(w=0;r>=w;w++)U[w]=0;for(A=0;d>A;A++)U[e[i+A]]++;for(D=M,R=r;R>=1&&0===U[R];R--);if(D>R&&(D=R),0===R)return p[m++]=20971520,p[m++]=20971520,H.bits=1,0;for(P=1;R>P&&0===U[P];P++);for(P>D&&(D=P),F=1,w=1;r>=w;w++)if(F<<=1,F-=U[w],0>F)return-1;if(F>0&&(t===s||1!==R))return-1;for(j[1]=0,w=1;r>w;w++)j[w+1]=j[w]+U[w];for(A=0;d>A;A++)0!==e[i+A]&&(X[j[e[i+A]]++]=A);if(t===s?(G=V=X,b=19):t===h?(G=_,B-=257,V=c,z-=257,b=256):(G=u,V=f,b=-1),I=0,A=0,w=P,E=m,C=D,O=0,S=-1,N=1<<D,v=N-1,t===h&&N>o||t===l&&N>a)return 1;for(var k=0;;){k++,T=w-O,X[A]<b?(y=0,L=X[A]):X[A]>b?(y=V[z+X[A]],L=G[B+X[A]]):(y=96,L=0),g=1<<w-O,x=1<<C,P=x;do x-=g,p[E+(I>>O)+x]=T<<24|y<<16|L|0;while(0!==x);for(g=1<<w-1;I&g;)g>>=1;if(0!==g?(I&=g-1,I+=g):I=0,A++,0===--U[w]){if(w===R)break;w=e[i+X[A]]}if(w>D&&(I&v)!==S){for(0===O&&(O=D),E+=P,C=w-O,F=1<<C;R>C+O&&(F-=U[C+O],!(0>=F));)C++,F<<=1;if(N+=1<<C,t===h&&N>o||t===l&&N>a)return 1;S=I&v,p[S]=D<<24|C<<16|E-m|0}}return 0!==I&&(p[E+I]=w-O<<24|64<<16|0),H.bits=D,0}},{"../utils/common":1}],10:[function(t,e,i){"use strict";e.exports={2:"need dictionary",1:"stream end",0:"","-1":"file error","-2":"stream error","-3":"data error","-4":"insufficient memory","-5":"buffer error","-6":"incompatible version"}},{}],11:[function(t,e,i){"use strict";function n(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg="",this.state=null,this.data_type=2,this.adler=0}e.exports=n},{}],"/lib/inflate.js":[function(t,e,i){"use strict";function n(t,e){var i=new f(e);if(i.push(t,!0),i.err)throw i.msg;return i.result}function r(t,e){return e=e||{},e.raw=!0,n(t,e)}var o=t("./zlib/inflate.js"),a=t("./utils/common"),s=t("./utils/strings"),h=t("./zlib/constants"),l=t("./zlib/messages"),_=t("./zlib/zstream"),c=t("./zlib/gzheader"),u=Object.prototype.toString,f=function(t){this.options=a.assign({chunkSize:16384,windowBits:0,to:""},t||{});var e=this.options;e.raw&&e.windowBits>=0&&e.windowBits<16&&(e.windowBits=-e.windowBits,0===e.windowBits&&(e.windowBits=-15)),!(e.windowBits>=0&&e.windowBits<16)||t&&t.windowBits||(e.windowBits+=32),e.windowBits>15&&e.windowBits<48&&0===(15&e.windowBits)&&(e.windowBits|=15),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new _,this.strm.avail_out=0;var i=o.inflateInit2(this.strm,e.windowBits);if(i!==h.Z_OK)throw new Error(l[i]);this.header=new c,o.inflateGetHeader(this.strm,this.header)};f.prototype.push=function(t,e){var i,n,r,l,_,c=this.strm,f=this.options.chunkSize,d=!1;if(this.ended)return!1;n=e===~~e?e:e===!0?h.Z_FINISH:h.Z_NO_FLUSH,c.input="string"==typeof t?s.binstring2buf(t):"[object ArrayBuffer]"===u.call(t)?new Uint8Array(t):t,c.next_in=0,c.avail_in=c.input.length;do{if(0===c.avail_out&&(c.output=new a.Buf8(f),c.next_out=0,c.avail_out=f),i=o.inflate(c,h.Z_NO_FLUSH),i===h.Z_BUF_ERROR&&d===!0&&(i=h.Z_OK,d=!1),i!==h.Z_STREAM_END&&i!==h.Z_OK)return this.onEnd(i),this.ended=!0,!1;c.next_out&&(0===c.avail_out||i===h.Z_STREAM_END||0===c.avail_in&&(n===h.Z_FINISH||n===h.Z_SYNC_FLUSH))&&("string"===this.options.to?(r=s.utf8border(c.output,c.next_out),l=c.next_out-r,_=s.buf2string(c.output,r),c.next_out=l,c.avail_out=f-l,l&&a.arraySet(c.output,c.output,r,l,0),this.onData(_)):this.onData(a.shrinkBuf(c.output,c.next_out))),0===c.avail_in&&0===c.avail_out&&(d=!0)}while((c.avail_in>0||0===c.avail_out)&&i!==h.Z_STREAM_END);return i===h.Z_STREAM_END&&(n=h.Z_FINISH),n===h.Z_FINISH?(i=o.inflateEnd(this.strm),this.onEnd(i),this.ended=!0,i===h.Z_OK):n===h.Z_SYNC_FLUSH?(this.onEnd(h.Z_OK),c.avail_out=0,!0):!0},f.prototype.onData=function(t){this.chunks.push(t)},f.prototype.onEnd=function(t){t===h.Z_OK&&(this.result="string"===this.options.to?this.chunks.join(""):a.flattenChunks(this.chunks)),this.chunks=[],this.err=t,this.msg=this.strm.msg},i.Inflate=f,i.inflate=n,i.inflateRaw=r,i.ungzip=n},{"./utils/common":1,"./utils/strings":2,"./zlib/constants":4,"./zlib/gzheader":6,"./zlib/inflate.js":8,"./zlib/messages":10,"./zlib/zstream":11}]},{},[])("/lib/inflate.js")});var HX={VERSION:"0.1",INITIALIZED:!1,BUILD_HASH:0},HX_GL=null;HX.InitOptions=function(){this.maxBones=64,this.useHDR=!1,this.useGammaCorrection=!0,this.usePreciseGammaCorrection=!1,this.customLights=[],this.debug=!1,this.ignoreAllExtensions=!1,this.ignoreDrawBuffersExtension=!1,this.ignoreDepthTexturesExtension=!1,this.ignoreTextureLODExtension=!1,this.ignoreHalfFloatTextureExtension=!1,this.throwOnShaderError=!1,this.lightingModel=HX.BlinnPhongSimpleLightingModel,this.directionalShadowFilter=new HX.HardDirectionalShadowFilter},HX.ShaderLibrary={get:function(t,e,i){var n="";if(i)for(var r=0;r<i.length;++r)n+="#extension "+i[r]+" : require\n";for(var o in e)e.hasOwnProperty(o)&&(n+="#define "+o+" "+e[o]+"\n");return n+HX.ShaderLibrary[t]}},HX.init=function(canvas,options){function _getExtension(t){return extensions.indexOf(t)>=0?HX_GL.getExtension(t):null}if(HX.INITIALIZED)throw new Error("Can only initialize Helix once!");HX.TARGET_CANVAS=canvas;var webglFlags={antialias:!1,alpha:!1,depth:!1,stencil:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1},glContext=canvas.getContext("webgl",webglFlags)||canvas.getContext("experimental-webgl",webglFlags);if(options&&options.debug&&eval("glContext = WebGLDebugUtils.makeDebugContext(glContext)"),HX.OPTIONS=options||new HX.InitOptions,HX_GL=glContext,!HX_GL)throw new Error("WebGL not supported");HX.INITIALIZED=!0;var extensions=HX_GL.getSupportedExtensions();HX._initGLProperties(),HX._initLights(),HX.LIGHTING_MODEL=HX.OPTIONS.lightingModel,HX.DirectionalLight.SHADOW_FILTER=HX.OPTIONS.directionalShadowFilter,HX.GLSLIncludeGeometryPass="\n"+HX.DirectionalLight.SHADOW_FILTER.getGLSL()+HX.GLSLIncludeGeometryPass;var defines="";HX.OPTIONS.useGammaCorrection!==!1&&(defines+=HX.OPTIONS.usePreciseGammaCorrection?"#define HX_GAMMA_CORRECTION_PRECISE\n":"#define HX_GAMMA_CORRECTION_FAST\n"),defines+="#define HX_MAX_BONES "+HX.OPTIONS.maxBones+"\n",HX.OPTIONS.ignoreDrawBuffersExtension=HX.OPTIONS.ignoreDrawBuffersExtension||HX.OPTIONS.ignoreAllExtensions,HX.OPTIONS.ignoreDepthTexturesExtension=HX.OPTIONS.ignoreDepthTexturesExtension||HX.OPTIONS.ignoreAllExtensions,HX.OPTIONS.ignoreTextureLODExtension=HX.OPTIONS.ignoreTextureLODExtension||HX.OPTIONS.ignoreAllExtensions,HX.OPTIONS.ignoreHalfFloatTextureExtension=HX.OPTIONS.ignoreHalfFloatTextureExtension||HX.OPTIONS.ignoreAllExtensions,HX.OPTIONS.ignoreDrawBuffersExtension||(HX.EXT_DRAW_BUFFERS=_getExtension("WEBGL_draw_buffers")),HX.EXT_DRAW_BUFFERS&&HX.EXT_DRAW_BUFFERS.MAX_DRAW_BUFFERS_WEBGL>=3?defines+="#extension GL_EXT_draw_buffers : require\n":(defines+="#define HX_SEPARATE_GEOMETRY_PASSES\n",console.warn("WEBGL_draw_buffers extension not supported!"),HX.EXT_DRAW_BUFFERS=null),HX.EXT_FLOAT_TEXTURES=_getExtension("OES_texture_float"),HX.EXT_FLOAT_TEXTURES||console.warn("OES_texture_float extension not supported!"),HX.OPTIONS.ignoreHalfFloatTextureExtension||(HX.EXT_HALF_FLOAT_TEXTURES=_getExtension("OES_texture_half_float")),HX.EXT_HALF_FLOAT_TEXTURES||console.warn("OES_texture_half_float extension not supported!"),HX.EXT_FLOAT_TEXTURES_LINEAR=_getExtension("OES_texture_float_linear"),HX.EXT_FLOAT_TEXTURES_LINEAR||console.warn("OES_texture_float_linear extension not supported!"),HX.EXT_HALF_FLOAT_TEXTURES_LINEAR=_getExtension("OES_texture_half_float_linear"),HX.EXT_HALF_FLOAT_TEXTURES_LINEAR||console.warn("OES_texture_half_float_linear extension not supported!"),HX.OPTIONS.ignoreDepthTexturesExtension||(HX.EXT_DEPTH_TEXTURE=_getExtension("WEBGL_depth_texture")),HX.EXT_DEPTH_TEXTURE||(console.warn("WEBGL_depth_texture extension not supported!"),defines+="#define HX_NO_DEPTH_TEXTURES\n"),HX.EXT_STANDARD_DERIVATIVES=_getExtension("OES_standard_derivatives"),HX.EXT_STANDARD_DERIVATIVES||console.warn("OES_standard_derivatives extension not supported!"),HX.OPTIONS.ignoreTextureLODExtension||(HX.EXT_SHADER_TEXTURE_LOD=_getExtension("EXT_shader_texture_lod")),HX.EXT_SHADER_TEXTURE_LOD||console.warn("EXT_shader_texture_lod extension not supported!"),HX.EXT_TEXTURE_FILTER_ANISOTROPIC=_getExtension("EXT_texture_filter_anisotropic"),HX.EXT_TEXTURE_FILTER_ANISOTROPIC||console.warn("EXT_texture_filter_anisotropic extension not supported!"),HX.DEFAULT_TEXTURE_MAX_ANISOTROPY=HX.EXT_TEXTURE_FILTER_ANISOTROPIC?HX_GL.getParameter(HX.EXT_TEXTURE_FILTER_ANISOTROPIC.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,HX.EXT_HALF_FLOAT_TEXTURES_LINEAR&&HX.EXT_HALF_FLOAT_TEXTURES||(HX.OPTIONS.useHDR=!1),HX.HDR_FORMAT=HX.OPTIONS.useHDR?HX.EXT_HALF_FLOAT_TEXTURES.HALF_FLOAT_OES:HX_GL.UNSIGNED_BYTE,HX.GAMMA_CORRECTION_IN_LIGHTS=!1,HX.OPTIONS.useGammaCorrection&&!HX.OPTIONS.useHDR&&(HX.GAMMA_CORRECT_LIGHTS=!0,defines+="#define HX_GAMMA_CORRECT_LIGHTS\n"),HX.EXT_DRAW_BUFFERS||(HX.MaterialPass.NUM_PASS_TYPES+=HX.EXT_DEPTH_TEXTURE?2:3),HX.MaterialPass.SHADOW_DEPTH_PASS=HX.MaterialPass.NUM_PASS_TYPES-1,HX.GLSLIncludeGeneral=defines+HX.GLSLIncludeGeneral,HX.Texture2D._initDefault(),HX.TextureCube._initDefault(),HX.BlendState._initDefaults(),HX.RectMesh._initDefault(),HX.PoissonDisk._initDefault(),HX.PoissonSphere._initDefault(),HX._init2DDitherTexture(32,32),HX.setClearColor(HX.Color.BLACK),HX.onPreFrame=new HX.Signal,HX.onFrame=new HX.Signal,HX.FRAME_TICKER=new HX.FrameTicker,HX.start()},HX.start=function(){HX.FRAME_TICKER.start(function(t){HX.onPreFrame.dispatch(t),HX.onFrame.dispatch(t)})},HX.stop=function(){HX.FRAME_TICKER.stop()},HX._initLights=function(){HX.LIGHT_TYPES=[HX.AmbientLight,HX.DirectionalLight,HX.PointLight].concat(HX.OPTIONS.customLights);for(var t=0;t<HX.LIGHT_TYPES.length;++t){var e=HX.LIGHT_TYPES[t],i=function(){var e=t;return function(){return e}};e.prototype.getTypeID=i()}},HX._init2DDitherTexture=function(t,e){HX.DEFAULT_2D_DITHER_TEXTURE=new HX.Texture2D;for(var i=t*e,n=1/i,r=[],o=0,a=[],s=0;i>s;++s)a.push(s/i);HX.shuffle(a);for(var s=0;i>s;++s){var h=a[s]*Math.PI*2,l=Math.cos(h),_=Math.sin(h);r[o++]=l,r[o++]=_,r[o++]=n+a[s],r[o++]=1}HX.DEFAULT_2D_DITHER_TEXTURE.uploadData(new Float32Array(r),t,e,!1,HX_GL.RGBA,HX_GL.FLOAT),HX.DEFAULT_2D_DITHER_TEXTURE.filter=HX.TextureFilter.NEAREST_NOMIP,HX.DEFAULT_2D_DITHER_TEXTURE.wrapMode=HX.TextureWrapMode.REPEAT},HX._initGLProperties=function(){HX.TextureFilter={},HX.TextureFilter.NEAREST={min:HX_GL.NEAREST_MIPMAP_NEAREST,mag:HX_GL.NEAREST},HX.TextureFilter.BILINEAR={min:HX_GL.LINEAR_MIPMAP_NEAREST,mag:HX_GL.LINEAR},HX.TextureFilter.TRILINEAR={min:HX_GL.LINEAR_MIPMAP_LINEAR,mag:HX_GL.LINEAR},HX.EXT_TEXTURE_FILTER_ANISOTROPIC&&(HX.TextureFilter.TRILINEAR_ANISOTROPIC={min:HX_GL.LINEAR_MIPMAP_LINEAR,mag:HX_GL.LINEAR}),HX.TextureFilter.NEAREST_NOMIP={min:HX_GL.NEAREST,mag:HX_GL.NEAREST},HX.TextureFilter.BILINEAR_NOMIP={min:HX_GL.LINEAR,mag:HX_GL.LINEAR},HX.TextureWrapMode={},HX.TextureWrapMode.REPEAT={s:HX_GL.REPEAT,t:HX_GL.REPEAT},HX.TextureWrapMode.CLAMP={s:HX_GL.CLAMP_TO_EDGE,t:HX_GL.CLAMP_TO_EDGE},HX.TextureWrapMode.DEFAULT=HX.TextureWrapMode.REPEAT,HX.TextureFilter.DEFAULT=HX.TextureFilter.TRILINEAR,HX.CullMode={NONE:null,BACK:HX_GL.BACK,FRONT:HX_GL.FRONT,ALL:HX_GL.FRONT_AND_BACK},HX.StencilOp={KEEP:HX_GL.KEEP,ZERO:HX_GL.ZERO,REPLACE:HX_GL.REPLACE,INCREMENT:HX_GL.INCR,INCREMENT_WRAP:HX_GL.INCR_WRAP,DECREMENT:HX_GL.DECR,DECREMENT_WRAP:HX_GL.DECR_WRAP,INVERT:HX_GL.INVERT},HX.Comparison={DISABLED:null,ALWAYS:HX_GL.ALWAYS,NEVER:HX_GL.NEVER,LESS:HX_GL.LESS,EQUAL:HX_GL.EQUAL,LESS_EQUAL:HX_GL.LEQUAL,GREATER:HX_GL.GREATER,NOT_EQUAL:HX_GL.NOTEQUAL,GREATER_EQUAL:HX_GL.GEQUAL},HX.ElementType={POINTS:HX_GL.POINTS,LINES:HX_GL.LINES,LINE_STRIP:HX_GL.LINE_STRIP,LINE_LOOP:HX_GL.LINE_LOOP,TRIANGLES:HX_GL.TRIANGLES,TRIANGLE_STRIP:HX_GL.TRIANGLE_STRIP,TRIANGLE_FAN:HX_GL.TRIANGLE_FAN},HX.BlendFactor={ZERO:HX_GL.ZERO,ONE:HX_GL.ONE,SOURCE_COLOR:HX_GL.SRC_COLOR,ONE_MINUS_SOURCE_COLOR:HX_GL.ONE_MINUS_SRC_COLOR,DESTINATION_COLOR:HX_GL.DST_COLOR,ONE_MINUS_DESTINATION_COLOR:HX_GL.ONE_MINUS_DST_COLOR,SOURCE_ALPHA:HX_GL.SRC_ALPHA,ONE_MINUS_SOURCE_ALPHA:HX_GL.ONE_MINUS_SRC_ALPHA,DESTINATION_ALPHA:HX_GL.DST_ALPHA,ONE_MINUS_DESTINATION_ALPHA:HX_GL.ONE_MINUS_DST_ALPHA,SOURCE_ALPHA_SATURATE:HX_GL.SRC_ALPHA_SATURATE,CONSTANT_ALPHA:HX_GL.CONSTANT_ALPHA,ONE_MINUS_CONSTANT_ALPHA:HX_GL.ONE_MINUS_CONSTANT_ALPHA},HX.BlendOperation={ADD:HX_GL.FUNC_ADD,SUBTRACT:HX_GL.FUNC_SUBTRACT,REVERSE_SUBTRACT:HX_GL.FUNC_REVERSE_SUBTRACT},HX.COMPLETE_CLEAR_MASK=HX_GL.COLOR_BUFFER_BIT|HX_GL.DEPTH_BUFFER_BIT|HX_GL.STENCIL_BUFFER_BIT},HX.ShaderLibrary["debug_bounds_fragment.glsl"]="uniform vec4 color;\n\nvoid main()\n{\n    gl_FragColor = color;\n}",HX.ShaderLibrary["debug_bounds_vertex.glsl"]="attribute vec4 hx_position;\n\nuniform mat4 hx_wvpMatrix;\n\nvoid main()\n{\n    gl_Position = hx_wvpMatrix * hx_position;\n}",HX.ShaderLibrary["lighting_blinn_phong.glsl"]="/*float hx_lightVisibility(vec3 normal, vec3 viewDir, float roughness, float nDotL)\n{\n	float nDotV = max(-dot(normal, viewDir), 0.0);\n    float roughSqr = roughness*roughness;\n    float g1 = nDotV + sqrt( roughSqr + (1.0 - roughSqr) * nDotV * nDotV );\n    float g2 = nDotL + sqrt( roughSqr + (1.0 - roughSqr) * nDotL * nDotL );\n    return 1.0 / (g1 * g2);\n}*/\n\n// schlick-beckman\nfloat hx_lightVisibility(vec3 normal, vec3 viewDir, float roughness, float nDotL)\n{\n	float nDotV = max(-dot(normal, viewDir), 0.0);\n	float r = roughness * roughness * 0.797896;\n	float g1 = nDotV * (1.0 - r) + r;\n	float g2 = nDotL * (1.0 - r) + r;\n    return .25 / (g1 * g2);\n}\n\nfloat hx_blinnPhongDistribution(float roughness, vec3 normal, vec3 halfVector)\n{\n	float roughnessSqr = clamp(roughness * roughness, 0.0001, .9999);\n//	roughnessSqr *= roughnessSqr;\n	float halfDotNormal = max(-dot(halfVector, normal), 0.0);\n	return pow(halfDotNormal, 2.0/roughnessSqr - 2.0) / roughnessSqr;\n}\n\nvoid hx_lighting(in vec3 normal, in vec3 lightDir, in vec3 viewDir, in vec3 lightColor, vec3 specularNormalReflection, float roughness, out vec3 diffuseColor, out vec3 specularColor)\n{\n	float nDotL = max(-dot(lightDir, normal), 0.0);\n	vec3 irradiance = nDotL * lightColor;	// in fact irradiance / PI\n\n	vec3 halfVector = normalize(lightDir + viewDir);\n\n	float distribution = hx_blinnPhongDistribution(roughness, normal, halfVector);\n\n	float halfDotLight = dot(halfVector, lightDir);\n	float cosAngle = 1.0 - halfDotLight;\n	// to the 5th power\n	float power = cosAngle*cosAngle;\n	power *= power;\n	power *= cosAngle;\n	vec3 fresnel = specularNormalReflection + (1.0 - specularNormalReflection)*power;\n\n// / PI factor is encoded in light colour\n	//approximated fresnel-based energy conservation\n	diffuseColor = irradiance;\n\n	specularColor = irradiance * fresnel * distribution;\n\n#ifdef VISIBILITY\n    specularColor *= hx_lightVisibility(normal, lightDir, roughness, nDotL);\n#endif\n}",
HX.ShaderLibrary["lighting_ggx.glsl"]="// Smith:\n/*float hx_lightVisibility(vec3 normal, vec3 viewDir, float roughness, float nDotL)\n{\n	float nDotV = max(-dot(normal, viewDir), 0.0);\n	float roughSqr = roughness*roughness;\n	float g1 = nDotV + sqrt( (nDotV - nDotV * roughSqr) * nDotV + roughSqr );\n    float g2 = nDotL + sqrt( (nDotL - nDotL * roughSqr) * nDotL + roughSqr );\n    return 1.0 / (g1 * g2);\n}*/\n\n// schlick-beckman\nfloat hx_lightVisibility(vec3 normal, vec3 viewDir, float roughness, float nDotL)\n{\n	float nDotV = max(-dot(normal, viewDir), 0.0);\n	float r = roughness * roughness * 0.797896;\n	float g1 = nDotV * (1.0 - r) + r;\n	float g2 = nDotL * (1.0 - r) + r;\n    return .25 / (g1 * g2);\n}\n\nfloat hx_ggxDistribution(float roughness, vec3 normal, vec3 halfVector)\n{\n    float roughSqr = roughness*roughness;\n    float halfDotNormal = max(-dot(halfVector, normal), 0.0);\n    float denom = (halfDotNormal * halfDotNormal) * (roughSqr - 1.0) + 1.0;\n    return roughSqr / (denom * denom);\n}\n\nvoid hx_lighting(in vec3 normal, in vec3 lightDir, in vec3 viewDir, in vec3 lightColor, vec3 specularNormalReflection, float roughness, out vec3 diffuseColor, out vec3 specularColor)\n{\n	float nDotL = max(-dot(lightDir, normal), 0.0);\n	vec3 irradiance = nDotL * lightColor;	// in fact irradiance / PI\n\n	vec3 halfVector = normalize(lightDir + viewDir);\n\n	float distribution = hx_ggxDistribution(roughness, normal, halfVector);\n\n	float halfDotLight = dot(halfVector, lightDir);\n	float cosAngle = 1.0 - halfDotLight;\n	// to the 5th power\n	float power = cosAngle*cosAngle;\n	power *= power;\n	power *= cosAngle;\n	vec3 fresnel = specularNormalReflection + (1.0 - specularNormalReflection)*power;\n\n	//approximated fresnel-based energy conservation\n	diffuseColor = irradiance;\n\n	specularColor = irradiance * fresnel * distribution;\n\n#ifdef VISIBILITY\n    specularColor *= hx_lightVisibility(normal, lightDir, roughness, nDotL);\n#endif\n}",HX.ShaderLibrary["directional_light_fragment.glsl"]="uniform vec3 lightColor;\nuniform vec3 lightViewDirection;\n\nvarying vec2 uv;\nvarying vec3 viewDir;\n\nuniform sampler2D hx_gbufferColor;\nuniform sampler2D hx_gbufferNormals;\nuniform sampler2D hx_gbufferSpecular;\n\n#ifdef CAST_SHADOWS\n	uniform sampler2D hx_gbufferDepth;\n	uniform sampler2D shadowMap;\n\n	uniform float hx_cameraFrustumRange;\n	uniform float hx_cameraNearPlaneDistance;\n\n	uniform mat4 shadowMapMatrices[NUM_CASCADES];\n	uniform float splitDistances[NUM_CASCADES];\n	uniform float depthBias;\n\n\n    mat4 getShadowMatrix(vec3 viewPos)\n    {\n        #if NUM_CASCADES > 1\n            // not very efficient :(\n            for (int i = 0; i < NUM_CASCADES - 1; ++i) {\n                // remember, negative Z!\n                if (viewPos.z > splitDistances[i]) {\n                    return shadowMapMatrices[i];\n                }\n            }\n            return shadowMapMatrices[NUM_CASCADES - 1];\n        #else\n            return shadowMapMatrices[0];\n        #endif\n    }\n#endif\n\nvec3 hx_calculateLight(vec3 diffuseAlbedo, vec3 normal, vec3 lightDir, vec3 viewVector, vec3 normalSpecularReflectance, float roughness, float metallicness)\n{\n// start extractable code (for fwd)\n	vec3 diffuseReflection;\n	vec3 specularReflection;\n\n	hx_lighting(normal, lightDir, normalize(viewVector), lightColor, normalSpecularReflectance, roughness, diffuseReflection, specularReflection);\n\n	diffuseReflection *= diffuseAlbedo * (1.0 - metallicness);\n	vec3 totalReflection = diffuseReflection + specularReflection;\n\n	#ifdef CAST_SHADOWS\n		float depth = hx_sampleLinearDepth(hx_gbufferDepth, uv);\n		float viewZ = hx_cameraNearPlaneDistance + depth * hx_cameraFrustumRange;\n		vec3 viewPos = viewZ * viewVector;\n		mat4 shadowMatrix = getShadowMatrix(viewPos);\n		float shadow = hx_getShadow(shadowMap, viewPos, shadowMatrix, depthBias, uv);\n//		#if NUM_CASCADES > 1\n		// should not cast shadows past the cutoff point\n		shadow = max(shadow, float(viewPos.z < splitDistances[NUM_CASCADES - 1]));\n//		#endif\n		totalReflection *= shadow;\n	#endif\n\n    return totalReflection;\n}\n\nvoid main()\n{\n	vec4 colorSample = texture2D(hx_gbufferColor, uv);\n	vec4 normalSample = texture2D(hx_gbufferNormals, uv);\n	vec4 specularSample = texture2D(hx_gbufferSpecular, uv);\n	vec3 normal = hx_decodeNormal(normalSample);\n	vec3 normalSpecularReflectance;\n	float roughness;\n	float metallicness;\n\n	hx_decodeReflectionData(colorSample, specularSample, normalSpecularReflectance, roughness, metallicness);\n\n	vec3 totalReflection = hx_calculateLight(colorSample.xyz, normal, lightViewDirection, viewDir, normalSpecularReflectance, roughness, metallicness);\n\n    #ifdef HX_GAMMA_CORRECT_LIGHTS\n        totalReflection = hx_linearToGamma(totalReflection);\n    #endif\n\n	gl_FragColor = vec4(totalReflection, 1.0);\n\n}",HX.ShaderLibrary["directional_light_vertex.glsl"]="attribute vec4 hx_position;\nattribute vec2 hx_texCoord;\n\nvarying vec2 uv;\nvarying vec3 viewDir;\n\nuniform mat4 hx_inverseProjectionMatrix;\n\nvoid main()\n{\n	uv = hx_texCoord;\n	viewDir = hx_getLinearDepthViewVector(hx_position.xy, hx_inverseProjectionMatrix);\n	gl_Position = hx_position;\n}",HX.ShaderLibrary["global_irradiance_probe_fragment.glsl"]="varying vec3 viewWorldDir;\nvarying vec2 uv;\n\nuniform sampler2D hx_gbufferColor;\nuniform sampler2D hx_gbufferNormals;\nuniform sampler2D hx_gbufferSpecular;\n\nuniform samplerCube irradianceProbeSampler;\n\nuniform mat4 hx_cameraWorldMatrix;\n\nvoid main()\n{\n	vec4 colorSample = texture2D(hx_gbufferColor, uv);\n	vec4 normalSample = texture2D(hx_gbufferNormals, uv);\n	vec4 specularSample = texture2D(hx_gbufferSpecular, uv);\n\n	vec3 normal = mat3(hx_cameraWorldMatrix) * hx_decodeNormal(normalSample);\n	vec3 totalLight = vec3(0.0);\n\n	vec4 irradianceSample = textureCube(irradianceProbeSampler, normal);\n	irradianceSample = hx_gammaToLinear(irradianceSample);\n	irradianceSample.xyz *= (1.0 - specularSample.z);\n	totalLight += irradianceSample.xyz * colorSample.xyz;\n\n    #ifdef HX_GAMMA_CORRECT_LIGHTS\n        totalLight = hx_linearToGamma(totalLight);\n    #endif\n\n	gl_FragColor = vec4(totalLight, 1.0);\n}",HX.ShaderLibrary["global_irradiance_probe_vertex.glsl"]="attribute vec4 hx_position;\nattribute vec2 hx_texCoord;\n\nuniform mat4 hx_inverseViewProjectionMatrix;\nuniform vec3 hx_cameraWorldPosition;\n\nvarying vec3 viewWorldDir;\nvarying vec2 uv;\n\n// using rect mesh for rendering skyboxes!\nvoid main()\n{\n	vec4 unproj = hx_inverseViewProjectionMatrix * hx_position;\n	viewWorldDir = unproj.xyz / unproj.w - hx_cameraWorldPosition;\n	viewWorldDir.y = viewWorldDir.y;\n	vec4 pos = hx_position;\n	pos.z = 1.0;\n	gl_Position = pos;\n	uv = hx_texCoord;\n}",HX.ShaderLibrary["global_specular_probe_fragment.glsl"]="varying vec3 viewWorldDir;\nvarying vec2 uv;\n\nuniform samplerCube specularProbeSampler;\nuniform float numMips;\nuniform float mipOffset;\nuniform float maxMipFactor;\n\nuniform sampler2D hx_gbufferColor;\nuniform sampler2D hx_gbufferNormals;\nuniform sampler2D hx_gbufferSpecular;\n\nuniform mat4 hx_cameraWorldMatrix;\n\n// this is Schlick-Beckmann attenuation for only the view vector\nfloat hx_geometricShadowing(vec3 normal, vec3 reflection, float roughness)\n{\n    float nDotV = max(dot(normal, reflection), 0.0);\n    float att = nDotV / (nDotV * (1.0 - roughness) + roughness);\n    return att;\n}\n\nvoid main()\n{\n	vec4 colorSample = texture2D(hx_gbufferColor, uv);\n	vec4 normalSample = texture2D(hx_gbufferNormals, uv);\n	vec4 specularSample = texture2D(hx_gbufferSpecular, uv);\n	vec3 normal = mat3(hx_cameraWorldMatrix) * hx_decodeNormal(normalSample);\n	vec3 totalLight = vec3(0.0);\n\n	vec3 reflectedViewDir = reflect(normalize(viewWorldDir), normal);\n	vec3 normalSpecularReflectance;\n	float roughness;\n	float metallicness;\n	hx_decodeReflectionData(colorSample, specularSample, normalSpecularReflectance, roughness, metallicness);\n	#ifdef USE_TEX_LOD\n	// knald method:\n		float power = 2.0/(roughness * roughness) - 2.0;\n		float factor = (exp2(-10.0/sqrt(power)) - K0)/K1;\n		float mipLevel = numMips*(1.0 - clamp(factor/maxMipFactor, 0.0, 1.0));\n		vec4 specProbeSample = textureCubeLodEXT(specularProbeSampler, reflectedViewDir, mipLevel);\n	#else\n		vec4 specProbeSample = textureCube(specularProbeSampler, reflectedViewDir);\n	#endif\n	specProbeSample = hx_gammaToLinear(specProbeSample);\n	vec3 fresnel = hx_fresnel(normalSpecularReflectance, reflectedViewDir, normal);\n	float attenuation = mix(hx_geometricShadowing(normal, reflectedViewDir, roughness), 1.0, metallicness);\n\n	totalLight += fresnel * attenuation * specProbeSample.xyz;\n\n	#ifdef HX_GAMMA_CORRECT_LIGHTS\n        totalLight = hx_linearToGamma(totalLight);\n    #endif\n\n	gl_FragColor = vec4(totalLight, 1.0);\n}",HX.ShaderLibrary["global_specular_probe_vertex.glsl"]="attribute vec4 hx_position;\nattribute vec2 hx_texCoord;\n\nuniform mat4 hx_inverseViewProjectionMatrix;\nuniform vec3 hx_cameraWorldPosition;\n\nvarying vec3 viewWorldDir;\nvarying vec2 uv;\n\nvoid main()\n{\n	vec4 unproj = hx_inverseViewProjectionMatrix * hx_position;\n	viewWorldDir = unproj.xyz / unproj.w - hx_cameraWorldPosition;\n	viewWorldDir.y = viewWorldDir.y;\n	vec4 pos = hx_position;\n	pos.z = 1.0;\n	gl_Position = pos;\n	uv = hx_texCoord;\n}",HX.ShaderLibrary["point_light_fragment.glsl"]="varying vec3 viewDir;\n\nuniform sampler2D hx_gbufferColor;\nuniform sampler2D hx_gbufferNormals;\nuniform sampler2D hx_gbufferSpecular;\nuniform sampler2D hx_gbufferDepth;\n\nuniform float hx_cameraFrustumRange;\nuniform float hx_cameraNearPlaneDistance;\nuniform vec2 hx_rcpRenderTargetResolution;\n\nvarying vec3 lightColorVar;\nvarying vec3 lightPositionVar;\nvarying float lightRadiusVar;\nvoid main()\n{\n    vec2 uv = gl_FragCoord.xy * hx_rcpRenderTargetResolution;\n	vec4 colorSample = texture2D(hx_gbufferColor, uv);\n	vec4 normalSample = texture2D(hx_gbufferNormals, uv);\n	vec4 specularSample = texture2D(hx_gbufferSpecular, uv);\n	vec3 normal = hx_decodeNormal(normalSample);\n	float depth = hx_sampleLinearDepth(hx_gbufferDepth, uv);\n	vec3 normalSpecularReflectance;\n	float roughness;\n	float metallicness;\n\n	hx_decodeReflectionData(colorSample, specularSample, normalSpecularReflectance, roughness, metallicness);\n\n	float absViewZ = hx_cameraNearPlaneDistance + depth * hx_cameraFrustumRange;\n	vec3 viewPosition = absViewZ * viewDir;\n\n	vec3 viewDirNorm = normalize(viewDir);\n\n	vec3 diffuseReflection;\n	vec3 specularReflection;\n\n	vec3 lightViewDirection = viewPosition - lightPositionVar;\n	float attenuation = dot(lightViewDirection, lightViewDirection);\n	float distance = sqrt(attenuation);\n	// normalize:\n	lightViewDirection /= distance;\n\n	// rescale attenuation so that irradiance at bounding edge really is 0\n	attenuation = max(1.0 / attenuation * (1.0 - distance / lightRadiusVar), 0.0);\n	hx_lighting(normal, lightViewDirection, viewDirNorm, lightColorVar * attenuation, normalSpecularReflectance, roughness, diffuseReflection, specularReflection);\n\n	diffuseReflection *= colorSample.xyz * (1.0 - metallicness);\n	vec3 totalLight = diffuseReflection + specularReflection;\n	#ifdef HX_GAMMA_CORRECT_LIGHTS\n	    totalLight = hx_linearToGamma(totalLight);\n	#endif\n	gl_FragColor = vec4(totalLight, 1.0);\n}",HX.ShaderLibrary["point_light_vertex.glsl"]="attribute vec4 hx_position;\nattribute float hx_instanceID;\n\nuniform mat4 hx_viewMatrix;\nuniform mat4 hx_cameraWorldMatrix;\nuniform mat4 hx_projectionMatrix;\n\nuniform vec3 lightViewPosition[LIGHTS_PER_BATCH];\nuniform vec3 lightColor[LIGHTS_PER_BATCH];\nuniform float lightRadius[LIGHTS_PER_BATCH];\n\nvarying vec2 uv;\nvarying vec3 viewDir;\nvarying vec3 lightColorVar;\nvarying vec3 lightPositionVar;\nvarying float lightRadiusVar;\n\nvoid main()\n{\n	int instance = int(hx_instanceID);\n	lightPositionVar = lightViewPosition[instance];\n	lightColorVar = lightColor[instance];\n	lightRadiusVar = lightRadius[instance];\n	vec3 viewPos = mat3(hx_viewMatrix) * (hx_position.xyz * lightRadius[instance]) + lightPositionVar;\n	vec4 proj = hx_projectionMatrix * vec4(viewPos, 1.0);\n\n	viewDir = -viewPos / viewPos.z;\n\n	gl_Position = proj;\n}",HX.ShaderLibrary["default_geometry_mrt_fragment.glsl"]="varying vec3 normal;\n\nuniform vec3 color;\nuniform float alpha;\n\n#if defined(COLOR_MAP) || defined(NORMAL_MAP)|| defined(SPECULAR_MAP)|| defined(ROUGHNESS_MAP) || defined(MASK_MAP)\nvarying vec2 texCoords;\n#endif\n\n#ifdef COLOR_MAP\nuniform sampler2D colorMap;\n#endif\n\n#ifdef MASK_MAP\nuniform sampler2D maskMap;\n#endif\n\n#ifdef NORMAL_MAP\nvarying vec3 tangent;\nvarying vec3 bitangent;\n\nuniform sampler2D normalMap;\n#endif\n\nuniform float hx_transparencyMode;\nuniform float minRoughness;\nuniform float maxRoughness;\nuniform float specularNormalReflection;\nuniform float metallicness;\n\n#if defined(ALPHA_THRESHOLD)\nuniform float alphaThreshold;\n#endif\n\n#if defined(SPECULAR_MAP) || defined(ROUGHNESS_MAP)\nuniform sampler2D specularMap;\n#endif\n\n#ifdef VERTEX_COLORS\nvarying vec3 vertexColor;\n#endif\n\nvarying float linearDepth;\n\nvoid main()\n{\n    vec4 outputColor = vec4(color, alpha);\n\n    #ifdef VERTEX_COLORS\n        outputColor.xyz *= vertexColor;\n    #endif\n\n    #ifdef COLOR_MAP\n        outputColor *= texture2D(colorMap, texCoords);\n    #endif\n\n    #ifdef MASK_MAP\n        outputColor.w *= texture2D(maskMap, texCoords).x;\n    #endif\n\n    #ifdef ALPHA_THRESHOLD\n        if (outputColor.w < alphaThreshold) discard;\n    #endif\n\n    float metallicnessOut = metallicness;\n    float specNormalReflOut = specularNormalReflection;\n    float roughnessOut = minRoughness;\n\n    vec3 fragNormal = normal;\n    #ifdef NORMAL_MAP\n        vec4 normalSample = texture2D(normalMap, texCoords);\n        mat3 TBN;\n        TBN[2] = normalize(normal);\n        TBN[0] = normalize(tangent);\n        TBN[1] = normalize(bitangent);\n\n        fragNormal = TBN * (normalSample.xyz * 2.0 - 1.0);\n\n        #ifdef NORMAL_ROUGHNESS_MAP\n            roughnessOut = maxRoughness + (minRoughness - maxRoughness) * normalSample.w;\n        #endif\n    #endif\n\n    #if defined(SPECULAR_MAP) || defined(ROUGHNESS_MAP)\n          vec4 specSample = texture2D(specularMap, texCoords);\n          roughnessOut = maxRoughness + (minRoughness - maxRoughness) * specSample.x;\n\n          #ifdef SPECULAR_MAP\n              specNormalReflOut *= specSample.y;\n              metallicnessOut *= specSample.z;\n          #endif\n    #endif\n\n    hx_processGeometry(hx_gammaToLinear(outputColor), fragNormal, metallicnessOut, specNormalReflOut, roughnessOut, hx_transparencyMode, linearDepth);\n}",HX.ShaderLibrary["default_geometry_mrt_vertex.glsl"]="attribute vec4 hx_position;\nattribute vec3 hx_normal;\n\n#ifdef USE_SKINNING\nattribute vec4 hx_boneIndices;\nattribute vec4 hx_boneWeights;\n\n// WebGL doesn't support mat4x3 and I don't want to split the uniform either\nuniform mat4 hx_skinningMatrices[HX_MAX_BONES];\n#endif\n\nuniform mat4 hx_wvpMatrix;\nuniform mat3 hx_normalWorldViewMatrix;\nuniform mat4 hx_worldViewMatrix;\n\nvarying vec3 normal;\n\n#if defined(COLOR_MAP) || defined(NORMAL_MAP)|| defined(SPECULAR_MAP)|| defined(ROUGHNESS_MAP) || defined(MASK_MAP)\nattribute vec2 hx_texCoord;\nvarying vec2 texCoords;\n#endif\n\n#ifdef VERTEX_COLORS\nattribute vec3 hx_vertexColor;\nvarying vec3 vertexColor;\n#endif\n\n#ifdef NORMAL_MAP\nattribute vec4 hx_tangent;\n\nvarying vec3 tangent;\nvarying vec3 bitangent;\n#endif\n\nvarying float linearDepth;\n\nuniform float hx_cameraNearPlaneDistance;\nuniform float hx_rcpCameraFrustumRange;\n\nvoid main()\n{\n#ifdef USE_SKINNING\n    mat4 skinningMatrix = hx_boneWeights.x * hx_skinningMatrices[int(hx_boneIndices.x)];\n    skinningMatrix += hx_boneWeights.y * hx_skinningMatrices[int(hx_boneIndices.y)];\n    skinningMatrix += hx_boneWeights.z * hx_skinningMatrices[int(hx_boneIndices.z)];\n    skinningMatrix += hx_boneWeights.w * hx_skinningMatrices[int(hx_boneIndices.w)];\n\n    vec4 animPosition = skinningMatrix * hx_position;\n    vec3 animNormal = mat3(skinningMatrix) * hx_normal;\n\n    #ifdef NORMAL_MAP\n    vec3 animTangent = mat3(skinningMatrix) * hx_tangent.xyz;\n    #endif\n#else\n    vec4 animPosition = hx_position;\n    vec3 animNormal = hx_normal;\n\n    #ifdef NORMAL_MAP\n    vec3 animTangent = hx_tangent.xyz;\n    #endif\n#endif\n\n    gl_Position = hx_wvpMatrix * animPosition;\n    normal = normalize(hx_normalWorldViewMatrix * animNormal);\n\n#ifdef NORMAL_MAP\n    tangent = mat3(hx_worldViewMatrix) * animTangent;\n    bitangent = cross(tangent, normal) * hx_tangent.w;\n#endif\n\n#if defined(COLOR_MAP) || defined(NORMAL_MAP)|| defined(SPECULAR_MAP)|| defined(ROUGHNESS_MAP) || defined(MASK_MAP)\n    texCoords = hx_texCoord;\n#endif\n\n    linearDepth = (-(hx_worldViewMatrix * animPosition).z - hx_cameraNearPlaneDistance) * hx_rcpCameraFrustumRange;\n\n#ifdef VERTEX_COLORS\n    vertexColor = hx_vertexColor;\n#endif\n}",HX.ShaderLibrary["default_skybox_fragment.glsl"]="varying vec3 viewWorldDir;\n\nuniform samplerCube hx_skybox;\n\nvoid main()\n{\n    vec4 color = hx_gammaToLinear(textureCube(hx_skybox, viewWorldDir));\n    color.w = 0.0;\n    hx_processGeometry(color, vec3(0.0), 0.0, 0.0, 1.0, 0.0, 1.0);\n}",HX.ShaderLibrary["default_skybox_vertex.glsl"]="attribute vec4 hx_position;\n\nuniform mat4 hx_inverseViewProjectionMatrix;\nuniform vec3 hx_cameraWorldPosition;\n\nvarying vec3 viewWorldDir;\n\n// using 2D quad for rendering skyboxes rather than 3D cube\nvoid main()\n{\n    vec4 unproj = hx_inverseViewProjectionMatrix * hx_position;\n    viewWorldDir = unproj.xyz / unproj.w - hx_cameraWorldPosition;\n    gl_Position = vec4(hx_position.xy, 1.0, 1.0);  // make sure it's drawn behind everything else, so z = 1.0\n}",HX.ShaderLibrary["apply_blending_fragment.glsl"]="varying vec2 uv;\nvarying vec2 uvBottom;\n\nuniform sampler2D hx_gbufferColor;\nuniform sampler2D hx_gbufferNormals;\nuniform sampler2D hx_backbuffer;\n\nvoid main()\n{\n// if transparency type is 0, it's opaque and alpha represents unlit/lit ratio\n    vec4 opaqueColor = texture2D(hx_gbufferColor, uv);\n    vec4 transpColor = texture2D(hx_gbufferColor, uvBottom);\n    vec3 opaqueLight = texture2D(hx_backbuffer, uv).xyz;\n    vec3 transpLight = texture2D(hx_backbuffer, uvBottom).xyz;\n    float transparencyModeTop = texture2D(hx_gbufferNormals, uv).w;\n    float transparencyMode = texture2D(hx_gbufferNormals, uvBottom).w;\n\n    // swap pixels if top is the transparent one\n    // not sure if this optimizes well\n    if (transparencyModeTop != HX_TRANSPARENCY_OPAQUE) {\n        transparencyMode = transparencyModeTop;\n        vec4 temp = transpColor;\n        transpColor = opaqueColor;\n        opaqueColor = temp;\n\n        temp.xyz = opaqueLight.xyz;\n        opaqueLight.xyz = transpLight.xyz;\n        transpLight.xyz = temp.xyz;\n    }\n\n    // handle unlit opaques\n    opaqueLight = mix(opaqueColor.xyz, opaqueLight, opaqueColor.w);\n\n    float srcFactor = transparencyMode == HX_TRANSPARENCY_OPAQUE? 0.0 : transpColor.w;\n    float dstFactor = transparencyMode == HX_TRANSPARENCY_ADDITIVE? 1.0 : 1.0 - srcFactor;\n\n    gl_FragColor = vec4(opaqueLight * dstFactor + transpLight * srcFactor, 1.0);\n}\n",HX.ShaderLibrary["apply_blending_vertex.glsl"]="attribute vec4 hx_position;\nattribute vec2 hx_texCoord;\n\nvarying vec2 uv;\nvarying vec2 uvBottom;\n\nuniform float pixelHeight;\n\nvoid main()\n{\n    uv = hx_texCoord;\n    uvBottom = hx_texCoord + vec2(0.0, pixelHeight);\n    gl_Position = hx_position;\n}",HX.ShaderLibrary["copy_fragment.glsl"]="varying vec2 uv;\n\nuniform sampler2D sampler;\n\nvoid main()\n{\n    // extractChannel comes from a macro\n   gl_FragColor = vec4(extractChannels(texture2D(sampler, uv)));\n\n#ifndef COPY_ALPHA\n   gl_FragColor.a = 1.0;\n#endif\n}\n",HX.ShaderLibrary["copy_to_gamma_fragment.glsl"]="varying vec2 uv;\n\nuniform sampler2D sampler;\n\nvoid main()\n{\n   gl_FragColor = vec4(hx_linearToGamma(texture2D(sampler, uv).xyz), 1.0);\n}",HX.ShaderLibrary["copy_vertex.glsl"]="attribute vec4 hx_position;\nattribute vec2 hx_texCoord;\n\nvarying vec2 uv;\n\nvoid main()\n{\n    uv = hx_texCoord;\n    gl_Position = hx_position;\n}",HX.ShaderLibrary["copy_with_separate_alpha_fragment.glsl"]="varying vec2 uv;\n\nuniform sampler2D sampler;\nuniform sampler2D alphaSource;\n\nvoid main()\n{\n   gl_FragColor = texture2D(sampler, uv);\n   gl_FragColor.a = texture2D(alphaSource, uv).a;\n}\n",HX.ShaderLibrary["debug_depth_fragment.glsl"]="varying vec2 uv;\n\nuniform sampler2D sampler;\n\nvoid main()\n{\n   gl_FragColor = vec4(1.0 - hx_sampleLinearDepth(sampler, uv));\n}",HX.ShaderLibrary["debug_normals_fragment.glsl"]="varying vec2 uv;\n\nuniform sampler2D sampler;\n\nvoid main()\n{\n   vec4 data = texture2D(sampler, uv);\n   vec3 normal = hx_decodeNormal(data);\n   gl_FragColor = vec4(normal * .5 + .5, 1.0);\n}",HX.ShaderLibrary["debug_transparency_fragment.glsl"]="varying vec2 uv;\n\nuniform sampler2D sampler;\n\nvoid main()\n{\n// GREY = OPAQUE\n// RED = ALPHA\n// BLUE = ADDITIVE\n\n    float mode = texture2D(sampler, uv).w;\n    if (mode == HX_TRANSPARENCY_ALPHA)\n        gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);\n    else if (mode == HX_TRANSPARENCY_ADDITIVE)\n        gl_FragColor = vec4(0.0, 0.0, 1.0, 1.0);\n    else\n        gl_FragColor = vec4(.25, .25, .25, 1.0);\n}",HX.ShaderLibrary["linearize_depth_fragment.glsl"]="varying vec2 uv;\n\nuniform sampler2D sampler;\nuniform mat4 hx_projectionMatrix;\nuniform float hx_cameraNearPlaneDistance;\nuniform float hx_cameraFrustumRange;\n\nfloat readDepth()\n{\n#ifdef HX_NO_DEPTH_TEXTURES\n    vec4 data;\n    data.xy = texture2D(sampler, uv).zw;\n    return hx_RG8ToFloat(data.xy);\n#else\n    return texture2D(sampler, uv).x;\n#endif\n}\n\nvoid main()\n{\n	float depth = readDepth();\n	float linear = (-hx_depthToViewZ(depth, hx_projectionMatrix) - hx_cameraNearPlaneDistance) / hx_cameraFrustumRange;\n	gl_FragColor = hx_floatToRGBA8(linear);\n}",HX.ShaderLibrary["linearize_depth_vertex.glsl"]="attribute vec4 hx_position;\nattribute vec2 hx_texCoord;\n\nvarying vec2 uv;\n\nvoid main()\n{\n	uv = hx_texCoord;\n	gl_Position = hx_position;\n}",HX.ShaderLibrary["multiply_color_fragment.glsl"]="varying vec2 uv;\n\nuniform sampler2D sampler;\nuniform vec4 color;\n\nvoid main()\n{\n    // extractChannel comes from a macro\n   gl_FragColor = texture2D(sampler, uv) * color;\n}\n",HX.ShaderLibrary["null_fragment.glsl"]="void main()\n{\n   gl_FragColor = vec4(1.0);\n}\n",HX.ShaderLibrary["null_vertex.glsl"]="attribute vec4 hx_position;\n\nvoid main()\n{\n    gl_Position = hx_position;\n}",HX.ShaderLibrary["reproject_fragment.glsl"]="uniform sampler2D depth;\nuniform sampler2D source;\n\nvarying vec2 uv;\n\nuniform float hx_cameraNearPlaneDistance;\nuniform float hx_cameraFrustumRange;\nuniform mat4 hx_projectionMatrix;\n\nuniform mat4 reprojectionMatrix;\n\nvec2 reproject(vec2 uv, float z)\n{\n    // need z in NDC homogeneous coords to be able to unproject\n    vec4 ndc;\n    ndc.xy = uv.xy * 2.0 - 1.0;\n    // Unprojected Z will just end up being Z again, so could put this in the unprojection matrix itself?\n    ndc.z = (hx_projectionMatrix[2][2] * z + hx_projectionMatrix[3][2]) / -z;   // ndc = hom.z / hom.w\n    ndc.w = 1.0;\n    vec4 hom = reprojectionMatrix * ndc;\n    return hom.xy / hom.w * .5 + .5;\n}\n\nvoid main()\n{\n    float depth = hx_sampleLinearDepth(depth, uv);\n    float z = -hx_cameraNearPlaneDistance - depth * hx_cameraFrustumRange;\n    vec2 reprojectedUV = reproject(uv, z);\n    gl_FragColor = texture2D(source, reprojectedUV);\n}\n\n",HX.ShaderLibrary["bloom_blur_fragment.glsl"]="varying vec2 uv;\n\nuniform sampler2D sourceTexture;\n\nuniform float gaussianWeights[NUM_SAMPLES];\n\nvoid main()\n{\n	vec4 total = vec4(0.0);\n	vec2 sampleUV = uv;\n	vec2 stepSize = DIRECTION / SOURCE_RES;\n	float totalWeight = 0.0;\n	for (int i = 0; i < NUM_SAMPLES; ++i) {\n		total += texture2D(sourceTexture, sampleUV) * gaussianWeights[i];\n		sampleUV += stepSize;\n	}\n	gl_FragColor = total;\n}",HX.ShaderLibrary["bloom_blur_vertex.glsl"]="attribute vec4 hx_position;\nattribute vec2 hx_texCoord;\n\nvarying vec2 uv;\n\nvoid main()\n{\n	uv = hx_texCoord - RADIUS * DIRECTION / SOURCE_RES;\n	gl_Position = hx_position;\n}",HX.ShaderLibrary["bloom_composite_fragment.glsl"]="varying vec2 uv;\n\nuniform sampler2D bloomTexture;\nuniform float strength;\n\nvoid main()\n{\n	gl_FragColor = texture2D(bloomTexture, uv) * strength;\n}",HX.ShaderLibrary["bloom_composite_vertex.glsl"]="attribute vec4 hx_position;\nattribute vec2 hx_texCoord;\n\nvarying vec2 uv;\n\nvoid main()\n{\n	   uv = hx_texCoord;\n	   gl_Position = hx_position;\n}",HX.ShaderLibrary["bloom_threshold_fragment.glsl"]="varying vec2 uv;\n\nuniform sampler2D hx_frontbuffer;\n\nuniform float threshold;\n\nvoid main()\n{\n        vec4 color = texture2D(hx_frontbuffer, uv);\n        float originalLuminance = .05 + hx_luminance(color);\n        float targetLuminance = max(originalLuminance - threshold, 0.0);\n        gl_FragColor = color * targetLuminance / originalLuminance;\n}\n",HX.ShaderLibrary["default_post_vertex.glsl"]="attribute vec4 hx_position;\nattribute vec2 hx_texCoord;\n\nvarying vec2 uv;\n\nvoid main()\n{\n	uv = hx_texCoord;\n	gl_Position = hx_position;\n}",HX.ShaderLibrary["fog_fragment.glsl"]="varying vec2 uv;\n\nuniform vec3 tint;\nuniform float density;\nuniform float startDistance;\n\nuniform float hx_cameraFrustumRange;\nuniform float hx_cameraNearPlaneDistance;\n\nuniform sampler2D hx_gbufferDepth;\n\nvoid main()\n{\n	float depth = hx_sampleLinearDepth(hx_gbufferDepth, uv);\n	// do not fog up skybox\n	// this might actually solve itself due to depth map encoding\n	if (depth > .999) depth = 0.0;\n	float distance = depth * hx_cameraFrustumRange;\n\n\n	distance -= startDistance;\n\n	float fog = clamp(exp2(-distance * density), 0.0, 1.0);\n	gl_FragColor = vec4(tint, fog);\n}",HX.ShaderLibrary["fxaa_fragment.glsl"]="varying vec2 uv;\n\nuniform sampler2D hx_backbuffer;\nuniform vec2 hx_rcpRenderTargetResolution;\nuniform float edgeThreshold;\nuniform float edgeThresholdMin;\nuniform float edgeSharpness;\n\nfloat luminanceHint(vec4 color)\n{\n	return .30/.59 * color.r + color.g;\n}\n\nvoid main()\n{\n	vec4 center = texture2D(hx_backbuffer, uv);\n	vec2 halfRes = vec2(hx_rcpRenderTargetResolution.x, hx_rcpRenderTargetResolution.y) * .5;\n	float topLeftLum = luminanceHint(texture2D(hx_backbuffer, uv + vec2(-halfRes.x, halfRes.y)));\n	float bottomLeftLum = luminanceHint(texture2D(hx_backbuffer, uv + vec2(-halfRes.x, -halfRes.y)));\n	float topRightLum = luminanceHint(texture2D(hx_backbuffer, uv + vec2(halfRes.x, halfRes.y)));\n	float bottomRightLum = luminanceHint(texture2D(hx_backbuffer, uv + vec2(halfRes.x, -halfRes.y)));\n\n	float centerLum = luminanceHint(center);\n	float minLum = min(min(topLeftLum, bottomLeftLum), min(topRightLum, bottomRightLum));\n	float maxLum = max(max(topLeftLum, bottomLeftLum), max(topRightLum, bottomRightLum));\n	float range = max(centerLum, maxLum) - min(centerLum, minLum);\n	float threshold = max(edgeThresholdMin, maxLum * edgeThreshold);\n	float applyFXAA = range < threshold? 0.0 : 1.0;\n\n	float diagDiff1 = bottomLeftLum - topRightLum;\n	float diagDiff2 = bottomRightLum - topLeftLum;\n	vec2 dir1 = normalize(vec2(diagDiff1 + diagDiff2, diagDiff1 - diagDiff2));\n	vec4 sampleNeg1 = texture2D(hx_backbuffer, uv - halfRes * dir1);\n	vec4 samplePos1 = texture2D(hx_backbuffer, uv + halfRes * dir1);\n\n	float minComp = min(abs(dir1.x), abs(dir1.y)) * edgeSharpness;\n	vec2 dir2 = clamp(dir1.xy / minComp, -2.0, 2.0) * 2.0;\n	vec4 sampleNeg2 = texture2D(hx_backbuffer, uv - hx_rcpRenderTargetResolution * dir2);\n	vec4 samplePos2 = texture2D(hx_backbuffer, uv + hx_rcpRenderTargetResolution * dir2);\n	vec4 tap1 = sampleNeg1 + samplePos1;\n	vec4 fxaa = (tap1 + sampleNeg2 + samplePos2) * .25;\n	float fxaaLum = luminanceHint(fxaa);\n	if ((fxaaLum < minLum) || (fxaaLum > maxLum))\n		fxaa = tap1 * .5;\n	gl_FragColor = mix(center, fxaa, applyFXAA);\n}",HX.ShaderLibrary["ssr_fragment.glsl"]='#extension GL_OES_standard_derivatives : enable\n\nuniform sampler2D hx_gbufferColor;\nuniform sampler2D hx_gbufferNormals;\nuniform sampler2D hx_gbufferSpecular;\nuniform sampler2D hx_gbufferDepth;\nuniform sampler2D hx_dither2D;\nuniform vec2 hx_renderTargetResolution;\n\nuniform sampler2D hx_frontbuffer;\n\nvarying vec2 uv;\nvarying vec3 viewDir;\n\nuniform vec2 ditherTextureScale;\nuniform float hx_cameraNearPlaneDistance;\nuniform float hx_cameraFrustumRange;\nuniform float hx_rcpCameraFrustumRange;\nuniform mat4 hx_projectionMatrix;\n\nuniform float maxDistance;\nuniform float stepSize;\nuniform float maxRoughness;\n\n// all in viewspace\n// 0 is start, 1 is end\nfloat raytrace(in vec3 ray0, in vec3 rayDir, out float hitZ, out vec2 hitUV)\n{\n    vec4 dither = texture2D(hx_dither2D, uv * ditherTextureScale);\n    // Clip to the near plane\n	float rayLength = ((ray0.z + rayDir.z * maxDistance) > -hx_cameraNearPlaneDistance) ?\n						(-hx_cameraNearPlaneDistance - ray0.z) / rayDir.z : maxDistance;\n\n    vec3 ray1 = ray0 + rayDir * rayLength;\n\n    // only need the w component for perspective correct interpolation\n    // need to get adjusted ray end\'s uv value\n    vec4 hom0 = hx_projectionMatrix * vec4(ray0, 1.0);\n    vec4 hom1 = hx_projectionMatrix * vec4(ray1, 1.0);\n    float rcpW0 = 1.0 / hom0.w;\n    float rcpW1 = 1.0 / hom1.w;\n\n    hom0 *= rcpW0;\n    hom1 *= rcpW1;\n\n    // expressed in pixels, so we can snap to 1\n    // need to figure out the ratio between 1 pixel and the entire line "width" (if primarily vertical, it\'s actually height)\n\n    // line dimensions in pixels:\n\n    vec2 pixelSize = (hom1.xy - hom0.xy) * hx_renderTargetResolution * .5;\n\n    // line-"width" = max(abs(pixelSize.x), abs(pixelSize.y))\n    // ratio pixel/width = 1 / max(abs(pixelSize.x), abs(pixelSize.y))\n\n    float stepRatio = 1.0 / max(abs(pixelSize.x), abs(pixelSize.y)) * stepSize;\n\n    vec2 uvEnd = hom1.xy * .5 + .5;\n\n    vec2 dUV = (uvEnd - uv) * stepRatio;\n    hitUV = uv;\n\n    // linear depth\n    float rayDepth = (-ray0.z - hx_cameraNearPlaneDistance) * hx_rcpCameraFrustumRange;\n    float rayPerspDepth0 = rayDepth * rcpW0;\n    float rayPerspDepth1 = (-ray1.z - hx_cameraNearPlaneDistance) * hx_rcpCameraFrustumRange * rcpW1;\n    float rayPerspDepth = rayPerspDepth0;\n    // could probably optimize this:\n    float dRayD = (rayPerspDepth1 - rayPerspDepth0) * stepRatio;\n\n    float rcpW = rcpW0;\n    float dRcpW = (rcpW1 - rcpW0) * stepRatio;\n    float sceneDepth = rayDepth;\n\n    float amount = 0.0;\n\n    hitUV += dUV * dither.z;\n    rayPerspDepth += dRayD * dither.z;\n    rcpW += dRcpW * dither.z;\n\n    float sampleCount;\n    for (int i = 0; i < NUM_SAMPLES; ++i) {\n        rayDepth = rayPerspDepth / rcpW;\n\n        sceneDepth = hx_sampleLinearDepth(hx_gbufferDepth, hitUV);\n\n        if (rayDepth > sceneDepth + .001) {\n            amount = float(sceneDepth < 1.0);\n            sampleCount = float(i);\n            break;\n        }\n\n        hitUV += dUV;\n        rayPerspDepth += dRayD;\n        rcpW += dRcpW;\n    }\n\n    hitZ = -hx_cameraNearPlaneDistance - sceneDepth * hx_cameraFrustumRange;\n\n    // TODO: fade out last samples\n    amount *= clamp((1.0 - (sampleCount - float(NUM_SAMPLES)) / float(NUM_SAMPLES)) * 5.0, 0.0, 1.0);\n    return amount;\n}\n\nvoid main()\n{\n    vec4 colorSample = hx_gammaToLinear(texture2D(hx_gbufferColor, uv));\n    vec4 specularSample = texture2D(hx_gbufferSpecular, uv);\n    float depth = hx_sampleLinearDepth(hx_gbufferDepth, uv);\n    vec3 normalSpecularReflectance;\n    float roughness;\n    float metallicness;\n    hx_decodeReflectionData(colorSample, specularSample, normalSpecularReflectance, roughness, metallicness);\n    vec3 normal = hx_decodeNormal(texture2D(hx_gbufferNormals, uv));\n    vec3 reflDir = reflect(normalize(viewDir), normal);\n\n    vec3 fresnel = hx_fresnel(normalSpecularReflectance, reflDir, normal);\n    // not physically correct, but attenuation is required to look good\n\n    // step for every pixel\n\n    float absViewZ = hx_cameraNearPlaneDistance + depth * hx_cameraFrustumRange;\n    vec3 viewSpacePos = absViewZ * viewDir;\n\n    float hitZ = 0.0;\n    vec2 hitUV;\n    float amount = raytrace(viewSpacePos, reflDir, hitZ, hitUV);\n    float fadeFactor = 1.0 - clamp(reflDir.z * 2.0, 0.0, 1.0);\n\n    vec2 borderFactors = abs(hitUV * 2.0 - 1.0);\n    borderFactors = (1.0 - borderFactors) * 10.0;\n    fadeFactor *= clamp(borderFactors.x, 0.0, 1.0) * clamp(borderFactors.y, 0.0, 1.0);\n\n    float diff = viewSpacePos.z - hitZ;\n    fadeFactor *= hx_linearStep(-1.0, 0.0, diff);\n    fadeFactor *= hx_linearStep(maxRoughness, 0.0, roughness);\n\n    vec4 reflColor = texture2D(hx_frontbuffer, hitUV);\n\n    float amountUsed = amount * fadeFactor;\n    gl_FragColor = vec4(fresnel * reflColor.xyz, amountUsed);\n}\n\n',
HX.ShaderLibrary["ssr_stencil_fragment.glsl"]="uniform sampler2D hx_gbufferSpecular;\n\nvarying vec2 uv;\n\nuniform float maxRoughness;\n\nvoid main()\n{\n    vec4 specularSample = texture2D(hx_gbufferSpecular, uv);\n    if (specularSample.x > maxRoughness)\n        discard;\n}\n\n",HX.ShaderLibrary["ssr_vertex.glsl"]="attribute vec4 hx_position;\nattribute vec2 hx_texCoord;\n\nvarying vec2 uv;\nvarying vec3 viewDir;\n\nuniform mat4 hx_inverseProjectionMatrix;\n\nvoid main()\n{\n    uv = hx_texCoord;\n    viewDir = hx_getLinearDepthViewVector(hx_position.xy, hx_inverseProjectionMatrix);\n    gl_Position = hx_position;\n}",HX.ShaderLibrary["tonemap_filmic_fragment.glsl"]="void main()\n{\n	vec4 color = hx_getToneMapScaledColor();\n	vec3 x = max(vec3(0.0), color.xyz - 0.004);\n\n	// this has pow 2.2 gamma included, not valid if using fast gamma correction\n	//gl_FragColor = vec4((x * (6.2 * x + .5))/(x * (6.2 * x + 1.7) + 0.06), 1.0);\n\n    // Jim Hejl and Richard Burgess-Dawson\n	float a = 6.2;\n    float b = .5;\n    float c = 6.2;\n    float d = 1.7;\n    float e = 0.06;\n\n	// ACES\n	/*float a = 2.51;\n    float b = 0.03;\n    float c = 2.43;\n    float d = 0.59;\n    float e = 0.14;*/\n	gl_FragColor = vec4(saturate((x*(a*x+b))/(x*(c*x+d)+e)), 1.0);\n}",HX.ShaderLibrary["tonemap_reference_fragment.glsl"]="varying vec2 uv;\n\nuniform sampler2D hx_frontbuffer;\n\nvoid main()\n{\n	vec4 color = texture2D(hx_frontbuffer, uv);\n	float lum = clamp(hx_luminance(color), 0.0, 1000.0);\n	float l = log(1.0 + lum);\n	gl_FragColor = vec4(l, l, l, 1.0);\n}",HX.ShaderLibrary["tonemap_reinhard_fragment.glsl"]="void main()\n{\n	vec4 color = hx_getToneMapScaledColor();\n	gl_FragColor = color / (1.0 + color);\n}",HX.ShaderLibrary["dir_shadow_esm.glsl"]="vec4 hx_getShadowMapValue(float depth)\n{\n    // I wish we could write exp directly, but precision issues (can't encode real floats)\n    return vec4(exp(HX_ESM_CONSTANT * depth));\n// so when blurring, we'll need to do ln(sum(exp())\n//    return vec4(depth);\n}\n\nfloat hx_getShadow(sampler2D shadowMap, vec3 viewPos, mat4 shadowMapMatrix, float depthBias, vec2 screenUV)\n{\n    vec4 shadowMapCoord = shadowMapMatrix * vec4(viewPos, 1.0);\n    float shadowSample = texture2D(shadowMap, shadowMapCoord.xy).x;\n    shadowMapCoord.z += depthBias;\n//    float diff = shadowSample - shadowMapCoord.z;\n//    return saturate(HX_ESM_DARKENING * exp(HX_ESM_CONSTANT * diff));\n    return saturate(HX_ESM_DARKENING * shadowSample * exp(-HX_ESM_CONSTANT * shadowMapCoord.z));\n}",HX.ShaderLibrary["dir_shadow_hard.glsl"]="vec4 hx_getShadowMapValue(float depth)\n{\n    return hx_floatToRGBA8(depth);\n}\n\nfloat hx_getShadow(sampler2D shadowMap, vec3 viewPos, mat4 shadowMapMatrix, float depthBias, vec2 screenUV)\n{\n    vec4 shadowMapCoord = shadowMapMatrix * vec4(viewPos, 1.0);\n    float shadowSample = hx_RGBA8ToFloat(texture2D(shadowMap, shadowMapCoord.xy));\n    float diff = shadowMapCoord.z - shadowSample - depthBias;\n    return float(diff < 0.0);\n}",HX.ShaderLibrary["dir_shadow_pcf.glsl"]="#ifdef HX_PCF_DITHER_SHADOWS\n    uniform sampler2D hx_dither2D;\n    uniform vec2 hx_dither2DTextureScale;\n#endif\n\nuniform vec2 hx_poissonDisk[HX_PCF_NUM_SHADOW_SAMPLES];\n\nvec4 hx_getShadowMapValue(float depth)\n{\n    return hx_floatToRGBA8(depth);\n}\n\nfloat hx_getShadow(sampler2D shadowMap, vec3 viewPos, mat4 shadowMapMatrix, float depthBias, vec2 screenUV)\n{\n    vec2 radii = vec2(shadowMapMatrix[0][0], shadowMapMatrix[1][1]) * HX_PCF_SOFTNESS;\n    vec4 shadowMapCoord = shadowMapMatrix * vec4(viewPos, 1.0);\n    float shadowTest = 0.0;\n\n    #ifdef HX_PCF_DITHER_SHADOWS\n        vec4 dither = texture2D(hx_dither2D, screenUV * hx_dither2DTextureScale);\n        dither = vec4(dither.x, -dither.y, dither.y, dither.x) * radii.xxyy;  // add radius scale\n    #else\n        vec4 dither = radii.xxyy;\n    #endif\n\n    for (int i = 0; i < HX_PCF_NUM_SHADOW_SAMPLES; ++i) {\n        vec2 offset;\n        offset.x = dot(dither.xy, hx_poissonDisk[i]);\n        offset.y = dot(dither.zw, hx_poissonDisk[i]);\n        float shadowSample = hx_RGBA8ToFloat(texture2D(shadowMap, shadowMapCoord.xy + offset));\n        float diff = shadowMapCoord.z - shadowSample - depthBias;\n        shadowTest += float(diff < 0.0);\n    }\n\n    return shadowTest * HX_PCF_RCP_NUM_SHADOW_SAMPLES;\n}",HX.ShaderLibrary["dir_shadow_vsm.glsl"]="vec4 hx_getShadowMapValue(float depth)\n{\n    return vec4(hx_floatToRG8(depth), hx_floatToRG8(depth * depth));\n}\n\nfloat hx_getShadow(sampler2D shadowMap, vec3 viewPos, mat4 shadowMapMatrix, float depthBias, vec2 screenUV)\n{\n    vec4 shadowMapCoord = shadowMapMatrix * vec4(viewPos, 1.0);\n    vec4 s = texture2D(shadowMap, shadowMapCoord.xy);\n    vec2 moments = vec2(hx_RG8ToFloat(s.xy), hx_RG8ToFloat(s.zw));\n    shadowMapCoord.z += depthBias;\n\n    float variance = moments.y - moments.x * moments.x;\n    variance = max(variance, HX_VSM_MIN_VARIANCE);\n    // transparents could be closer to the light than casters\n    float diff = max(shadowMapCoord.z - moments.x, 0.0);\n    float upperBound = variance / (variance + diff*diff);\n    return saturate((upperBound - HX_VSM_LIGHT_BLEED_REDUCTION) / HX_VSM_LIGHT_BLEED_REDUCTION_RANGE);\n}",HX.ShaderLibrary["esm_blur_fragment.glsl"]="varying vec2 uv;\n\nuniform sampler2D source;\nuniform vec2 direction; // this is 1/pixelSize\n\nfloat readValue(vec2 coord)\n{\n    float v = texture2D(source, coord).x;\n    return v;\n//    return exp(HX_ESM_CONSTANT * v);\n}\n\nvoid main()\n{\n    float total = readValue(uv);\n\n	for (int i = 1; i <= RADIUS; ++i) {\n	    vec2 offset = direction * float(i);\n		total += readValue(uv + offset) + readValue(uv - offset);\n	}\n\n//	gl_FragColor = vec4(log(total * RCP_NUM_SAMPLES) / HX_ESM_CONSTANT);\n	gl_FragColor = vec4(total * RCP_NUM_SAMPLES);\n}",HX.ShaderLibrary["vsm_blur_fragment.glsl"]="varying vec2 uv;\n\nuniform sampler2D source;\nuniform vec2 direction; // this is 1/pixelSize\n\nvec2 readValues(vec2 coord)\n{\n    vec4 s = texture2D(source, coord);\n    return vec2(hx_RG8ToFloat(s.xy), hx_RG8ToFloat(s.zw));\n}\n\nvoid main()\n{\n    vec2 total = readValues(uv);\n\n	for (int i = 1; i <= RADIUS; ++i) {\n	    vec2 offset = direction * float(i);\n		total += readValues(uv + offset) + readValues(uv - offset);\n	}\n\n    total *= RCP_NUM_SAMPLES;\n\n	gl_FragColor.xy = hx_floatToRG8(total.x);\n	gl_FragColor.zw = hx_floatToRG8(total.y);\n}",HX.ShaderLibrary["snippets_general.glsl"]="#define HX_TRANSPARENCY_OPAQUE 0.0\n#define HX_TRANSPARENCY_ALPHA 1.0 / 255.0\n#define HX_TRANSPARENCY_ADDITIVE 2.0 / 255.0\n\nfloat saturate(float value)\n{\n    return clamp(value, 0.0, 1.0);\n}\n\nvec2 saturate(vec2 value)\n{\n    return clamp(value, 0.0, 1.0);\n}\n\nvec3 saturate(vec3 value)\n{\n    return clamp(value, 0.0, 1.0);\n}\n\nvec4 saturate(vec4 value)\n{\n    return clamp(value, 0.0, 1.0);\n}\n\n// Only for 0 - 1\nvec4 hx_floatToRGBA8(float value)\n{\n    vec4 enc = value * vec4(1.0, 255.0, 65025.0, 16581375.0);\n    // cannot fract first value or 1 would not be encodable\n    enc.yzw = fract(enc.yzw);\n    return enc - enc.yzww * vec4(1.0/255.0, 1.0/255.0, 1.0/255.0, 0.0);\n}\n\nfloat hx_RGBA8ToFloat(vec4 rgba)\n{\n    return dot(rgba, vec4(1.0, 1.0/255.0, 1.0/65025.0, 1.0/16581375.0));\n}\n\nvec2 hx_floatToRG8(float value)\n{\n    vec2 enc = vec2(1.0, 255.0) * value;\n    enc.y = fract(enc.y);\n    enc.x -= enc.y / 255.0;\n    return enc;\n}\n\nfloat hx_RG8ToFloat(vec2 rg)\n{\n    return dot(rg, vec2(1.0, 1.0/255.0));\n}\n\nvec3 hx_decodeNormal(vec4 data)\n{\n    return normalize(data.xyz - .5);\n}\n\nvec4 hx_gammaToLinear(vec4 color)\n{\n    #if defined(HX_GAMMA_CORRECTION_PRECISE)\n        color.x = pow(color.x, 2.2);\n        color.y = pow(color.y, 2.2);\n        color.z = pow(color.z, 2.2);\n    #elif defined(HX_GAMMA_CORRECTION_FAST)\n        color.xyz *= color.xyz;\n    #endif\n    return color;\n}\n\nvec3 hx_gammaToLinear(vec3 color)\n{\n    #if defined(HX_GAMMA_CORRECTION_PRECISE)\n        color.x = pow(color.x, 2.2);\n        color.y = pow(color.y, 2.2);\n        color.z = pow(color.z, 2.2);\n    #elif defined(HX_GAMMA_CORRECTION_FAST)\n        color.xyz *= color.xyz;\n    #endif\n    return color;\n}\n\nvec4 hx_linearToGamma(vec4 linear)\n{\n    #if defined(HX_GAMMA_CORRECTION_PRECISE)\n        linear.x = pow(linear.x, 0.454545);\n        linear.y = pow(linear.y, 0.454545);\n        linear.z = pow(linear.z, 0.454545);\n    #elif defined(HX_GAMMA_CORRECTION_FAST)\n        linear.xyz = sqrt(linear.xyz);\n    #endif\n    return linear;\n}\n\nvec3 hx_linearToGamma(vec3 linear)\n{\n    #if defined(HX_GAMMA_CORRECTION_PRECISE)\n        linear.x = pow(linear.x, 0.454545);\n        linear.y = pow(linear.y, 0.454545);\n        linear.z = pow(linear.z, 0.454545);\n    #elif defined(HX_GAMMA_CORRECTION_FAST)\n        linear.xyz = sqrt(linear.xyz);\n    #endif\n    return linear;\n}\n\nfloat hx_sampleLinearDepth(sampler2D tex, vec2 uv)\n{\n    return hx_RGBA8ToFloat(texture2D(tex, uv));\n}\n\nvec3 hx_getFrustumVector(vec2 position, mat4 unprojectionMatrix)\n{\n    vec4 unprojNear = unprojectionMatrix * vec4(position, -1.0, 1.0);\n    vec4 unprojFar = unprojectionMatrix * vec4(position, 1.0, 1.0);\n    return unprojFar.xyz/unprojFar.w - unprojNear.xyz/unprojNear.w;\n}\n\n// view vector with z = -1, so we can use nearPlaneDist + linearDepth * (farPlaneDist - nearPlaneDist) as a scale factor to find view space position\nvec3 hx_getLinearDepthViewVector(vec2 position, mat4 unprojectionMatrix)\n{\n    vec4 unproj = unprojectionMatrix * vec4(position, 0.0, 1.0);\n    unproj /= unproj.w;\n    return -unproj.xyz / unproj.z;\n}\n\n// THIS IS FOR NON_LINEAR DEPTH!\nfloat hx_depthToViewZ(float depthSample, mat4 projectionMatrix)\n{\n//    z = -projectionMatrix[3][2] / (d * 2.0 - 1.0 + projectionMatrix[2][2])\n    return -projectionMatrix[3][2] / (depthSample * 2.0 - 1.0 + projectionMatrix[2][2]);\n}\n\nvec3 hx_getNormalSpecularReflectance(float metallicness, float insulatorNormalSpecularReflectance, vec3 color)\n{\n    return mix(vec3(insulatorNormalSpecularReflectance), color, metallicness);\n}\n\n// for use when sampling gbuffer data for lighting\nvoid hx_decodeReflectionData(in vec4 colorSample, in vec4 specularSample, out vec3 normalSpecularReflectance, out float roughness, out float metallicness)\n{\n    //prevent from being 0\n    roughness = clamp(specularSample.x, .01, 1.0);\n	metallicness = specularSample.z;\n    normalSpecularReflectance = mix(vec3(specularSample.y * .2), colorSample.xyz, metallicness);\n}\n\nvec3 hx_fresnel(vec3 normalSpecularReflectance, vec3 lightDir, vec3 halfVector)\n{\n    float cosAngle = 1.0 - max(dot(halfVector, lightDir), 0.0);\n    // to the 5th power\n    float power = pow(cosAngle, 5.0);\n    return normalSpecularReflectance + (1.0 - normalSpecularReflectance) * power;\n}\n\nfloat hx_luminance(vec4 color)\n{\n    return dot(color.xyz, vec3(.30, 0.59, .11));\n}\n\nfloat hx_luminance(vec3 color)\n{\n    return dot(color, vec3(.30, 0.59, .11));\n}\n\n// linear variant of smoothstep\nfloat hx_linearStep(float lower, float upper, float x)\n{\n    return clamp((x - lower) / (upper - lower), 0.0, 1.0);\n}",HX.ShaderLibrary["snippets_geometry_pass.glsl"]="// todo: could save some data here if needed\nvec4 hx_encodeNormal(vec3 normal, float transparencyMode)\n{\n    return vec4(normal * .5 + .5, transparencyMode);\n}\n\nvec4 hx_encodeSpecularData(float metallicness, float specularNormalReflection, float roughness)\n{\n	return vec4(roughness, specularNormalReflection * 5.0, metallicness, 1.0);\n}\n\n#ifdef HX_NO_DEPTH_TEXTURES\nvoid hx_processGeometryMRT(vec4 color, vec3 normal, float metallicness, float specularNormalReflection, float roughness, float transparencyMode, float linearDepth, out vec4 colorData, out vec4 normalData, out vec4 specularData, out vec4 depthData)\n#else\nvoid hx_processGeometryMRT(vec4 color, vec3 normal, float metallicness, float specularNormalReflection, float roughness, float transparencyMode, float linearDepth, out vec4 colorData, out vec4 normalData, out vec4 specularData)\n#endif\n{\n    colorData = color;\n	normalData = hx_encodeNormal(normal, transparencyMode);\n    specularData = hx_encodeSpecularData(metallicness, specularNormalReflection, roughness);\n\n    #ifdef HX_NO_DEPTH_TEXTURES\n    depthData = hx_floatToRGBA8(linearDepth);\n    #endif\n}\n\n#if defined(HX_NO_MRT_GBUFFER_COLOR)\n#define hx_processGeometry(color, normal, metallicness, specularNormalReflection, roughness, transparencyMode, linearDepth) (gl_FragColor = color)\n#elif defined(HX_NO_MRT_GBUFFER_NORMALS)\n#define hx_processGeometry(color, normal, metallicness, specularNormalReflection, roughness, transparencyMode, linearDepth) (gl_FragColor = hx_encodeNormal(normal, transparencyMode))\n#elif defined(HX_NO_MRT_GBUFFER_SPECULAR)\n#define hx_processGeometry(color, normal, metallicness, specularNormalReflection, roughness, transparencyMode, linearDepth) (gl_FragColor = hx_encodeSpecularData(metallicness, specularNormalReflection, roughness))\n#elif defined(HX_NO_MRT_GBUFFER_LINEAR_DEPTH)\n#define hx_processGeometry(color, normal, metallicness, specularNormalReflection, roughness, transparencyMode, linearDepth) (gl_FragColor = hx_floatToRGBA8(linearDepth))\n#elif defined(HX_SHADOW_DEPTH_PASS)\n#define hx_processGeometry(color, normal, metallicness, specularNormalReflection, roughness, transparencyMode, linearDepth) (gl_FragColor = hx_getShadowMapValue(linearDepth))\n#elif defined(HX_NO_DEPTH_TEXTURES)\n#define hx_processGeometry(color, normal, metallicness, specularNormalReflection, roughness, transparencyMode, linearDepth) hx_processGeometryMRT(color, normal, metallicness, specularNormalReflection, roughness, transparencyMode, linearDepth, gl_FragData[0], gl_FragData[1], gl_FragData[2], gl_FragData[3])\n#else\n#define hx_processGeometry(color, normal, metallicness, specularNormalReflection, roughness, transparencyMode, linearDepth) hx_processGeometryMRT(color, normal, metallicness, specularNormalReflection, roughness, transparencyMode, linearDepth, gl_FragData[0], gl_FragData[1], gl_FragData[2])\n#endif",HX.ShaderLibrary["snippets_tonemap.glsl"]="varying vec2 uv;\n\n#ifdef ADAPTIVE\nuniform sampler2D hx_luminanceMap;\nuniform float hx_luminanceMipLevel;\n#endif\n\nuniform float hx_exposure;\n\nuniform sampler2D hx_backbuffer;\n\n\nvec4 hx_getToneMapScaledColor()\n{\n    #ifdef ADAPTIVE\n    float referenceLuminance = exp(texture2DLodEXT(hx_luminanceMap, uv, hx_luminanceMipLevel).x) - 1.0;\n    referenceLuminance = clamp(referenceLuminance, .08, 1000.0);\n	float key = 1.03 - (2.0 / (2.0 + log(referenceLuminance + 1.0)/log(10.0)));\n	float exposure = key / referenceLuminance * hx_exposure;\n	#else\n	float exposure = hx_exposure;\n	#endif\n    return texture2D(hx_backbuffer, uv) * exposure;\n}",HX.ShaderLibrary["2d_to_cube_vertex.glsl"]="// position to write to\nattribute vec4 hx_position;\n\n// the corner of the cube map\nattribute vec3 corner;\n\nvarying vec3 direction;\n\nvoid main()\n{\n    direction = corner;\n    gl_Position = hx_position;\n}\n",HX.ShaderLibrary["equirectangular_to_cube_fragment.glsl"]="#define RECIPROCAL_PI2 0.15915494\n\nvarying vec3 direction;\n\nuniform sampler2D source;\n\nvoid main()\n{\n    vec3 dir = normalize(direction);\n    vec2 uv;\n    uv.x = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n	uv.y = dir.y * 0.5 + 0.5;\n    gl_FragColor = texture2D(source, uv);\n}\n",HX.ShaderLibrary["ao_blur_fragment.glsl"]="varying vec2 uv;\n\nuniform sampler2D source;\nuniform vec2 halfTexelOffset;\n\nvoid main()\n{\n    vec4 total = texture2D(source, uv - halfTexelOffset * 3.0);\n    total += texture2D(source, uv + halfTexelOffset);\n	gl_FragColor = total * .5;\n}",HX.ShaderLibrary["hbao_fragment.glsl"]="uniform float hx_cameraFrustumRange;\nuniform float hx_cameraNearPlaneDistance;\nuniform vec2 hx_rcpRenderTargetResolution;\nuniform mat4 hx_projectionMatrix;\n\nuniform float strengthPerRay;\nuniform float halfSampleRadius;\nuniform float bias;\nuniform float rcpFallOffDistance;\nuniform vec2 ditherScale;\n\nuniform sampler2D hx_gbufferDepth;\nuniform sampler2D hx_gbufferNormals;\nuniform sampler2D sampleDirTexture;\nuniform sampler2D ditherTexture;\n\nvarying vec2 uv;\nvarying vec3 viewDir;\nvarying vec3 frustumCorner;\n\nvec3 getViewPos(vec2 sampleUV)\n{\n    float depth = hx_sampleLinearDepth(hx_gbufferDepth, sampleUV);\n    float viewZ = depth * hx_cameraFrustumRange + hx_cameraNearPlaneDistance;\n    vec3 viewPos = frustumCorner * vec3(sampleUV * 2.0 - 1.0, 1.0);\n    return viewPos * viewZ;\n}\n\n// Retrieves the occlusion factor for a particular sample\nfloat getSampleOcclusion(vec2 sampleUV, vec3 centerViewPos, vec3 centerNormal, vec3 tangent, inout float topOcclusion)\n{\n    vec3 sampleViewPos = getViewPos(sampleUV);\n\n    // get occlusion factor based on candidate horizon elevation\n    vec3 horizonVector = sampleViewPos - centerViewPos;\n    float horizonVectorLength = length(horizonVector);\n\n    float occlusion;\n\n    // If the horizon vector points away from the tangent, make an estimate\n    if (dot(tangent, horizonVector) < 0.0)\n        occlusion = .5;\n    else\n        occlusion = dot(centerNormal, horizonVector) / horizonVectorLength;\n\n    // this adds occlusion only if angle of the horizon vector is higher than the previous highest one without branching\n    float diff = max(occlusion - topOcclusion, 0.0);\n    topOcclusion = max(occlusion, topOcclusion);\n\n    // attenuate occlusion contribution using distance function 1 - (d/f)^2\n    float distanceFactor = clamp(horizonVectorLength * rcpFallOffDistance, 0.0, 1.0);\n    distanceFactor = 1.0 - distanceFactor * distanceFactor;\n    return diff * distanceFactor;\n}\n\n// Retrieves the occlusion for a given ray\nfloat getRayOcclusion(vec2 direction, float jitter, vec2 projectedRadii, vec3 centerViewPos, vec3 centerNormal)\n{\n    // calculate the nearest neighbour sample along the direction vector\n    vec2 texelSizedStep = direction * hx_rcpRenderTargetResolution;\n    direction *= projectedRadii;\n\n    // gets the tangent for the current ray, this will be used to handle opposing horizon vectors\n    // Tangent is corrected with respect to face normal by projecting it onto the tangent plane defined by the normal\n    vec3 tangent = getViewPos(uv + texelSizedStep) - centerViewPos;\n    tangent -= dot(centerNormal, tangent) * centerNormal;\n\n    vec2 stepUV = direction.xy / float(NUM_SAMPLES_PER_RAY - 1);\n\n    // jitter the starting position for ray marching between the nearest neighbour and the sample step size\n    vec2 jitteredOffset = mix(texelSizedStep, stepUV, jitter);\n    //stepUV *= 1.0 + jitter * .1;\n    vec2 sampleUV = uv + jitteredOffset;\n\n    // top occlusion keeps track of the occlusion contribution of the last found occluder.\n    // set to bias value to avoid near-occluders\n    float topOcclusion = bias;\n    float occlusion = 0.0;\n\n    // march!\n    for (int step = 0; step < NUM_SAMPLES_PER_RAY; ++step) {\n        occlusion += getSampleOcclusion(sampleUV, centerViewPos, centerNormal, tangent, topOcclusion);\n        sampleUV += stepUV;\n    }\n\n    return occlusion;\n}\n\nvoid main()\n{\n    vec4 normalSample = texture2D(hx_gbufferNormals, uv);\n    vec3 centerNormal = hx_decodeNormal(normalSample);\n    float centerDepth = hx_sampleLinearDepth(hx_gbufferDepth, uv);\n    float viewZ = hx_cameraNearPlaneDistance + centerDepth * hx_cameraFrustumRange;\n    vec3 centerViewPos = viewZ * viewDir;\n\n    // clamp z to a minimum, so the radius does not get excessively large in screen-space\n    float projRadius = halfSampleRadius / max(-centerViewPos.z, 7.0);\n    vec2 projectedRadii = projRadius * vec2(hx_projectionMatrix[0][0], hx_projectionMatrix[1][1]);\n\n    // do not take more steps than there are pixels\n    float totalOcclusion = 0.0;\n\n    vec2 randomFactors = texture2D(ditherTexture, uv * ditherScale).xy;\n\n    vec2 rayUV = vec2(0.0);\n    for (int i = 0; i < NUM_RAYS; ++i) {\n        rayUV.x = (float(i) + randomFactors.x) / float(NUM_RAYS);\n        vec2 sampleDir = texture2D(sampleDirTexture, rayUV).xy * 2.0 - 1.0;\n        totalOcclusion += getRayOcclusion(sampleDir, randomFactors.y, projectedRadii, centerViewPos, centerNormal);\n    }\n\n    totalOcclusion = 1.0 - clamp(strengthPerRay * totalOcclusion, 0.0, 1.0);\n    gl_FragColor = vec4(vec3(totalOcclusion), 1.0);\n}",HX.ShaderLibrary["hbao_vertex.glsl"]="attribute vec4 hx_position;\nattribute vec2 hx_texCoord;\n\nuniform mat4 hx_inverseProjectionMatrix;\n\nvarying vec2 uv;\nvarying vec3 viewDir;\nvarying vec3 frustumCorner;\n\nvoid main()\n{\n    uv = hx_texCoord;\n    viewDir = hx_getLinearDepthViewVector(hx_position.xy, hx_inverseProjectionMatrix);\n    frustumCorner = hx_getLinearDepthViewVector(vec2(1.0, 1.0), hx_inverseProjectionMatrix);\n    gl_Position = hx_position;\n}",HX.ShaderLibrary["ssao_fragment.glsl"]="uniform mat4 hx_projectionMatrix;\nuniform mat4 hx_cameraWorldMatrix;\nuniform float hx_cameraFrustumRange;\nuniform float hx_cameraNearPlaneDistance;\n\nuniform vec2 ditherScale;\nuniform float strengthPerSample;\nuniform float rcpFallOffDistance;\nuniform float sampleRadius;\nuniform vec3 samples[NUM_SAMPLES]; // w contains bias\n\nuniform sampler2D hx_gbufferNormals;\nuniform sampler2D hx_gbufferDepth;\nuniform sampler2D ditherTexture;\n\nvarying vec2 uv;\n\nvoid main()\n{\n    vec4 normalSample = texture2D(hx_gbufferNormals, uv);\n    vec3 centerNormal = hx_decodeNormal(normalSample);\n    float centerDepth = hx_sampleLinearDepth(hx_gbufferDepth, uv);\n    float totalOcclusion = 0.0;\n    vec3 dither = texture2D(ditherTexture, uv * ditherScale).xyz;\n    vec3 randomPlaneNormal = normalize(dither - .5);\n    float w = centerDepth * hx_cameraFrustumRange + hx_cameraNearPlaneDistance;\n    vec3 sampleRadii;\n    sampleRadii.x = sampleRadius * .5 * hx_projectionMatrix[0][0] / w;\n    sampleRadii.y = sampleRadius * .5 * hx_projectionMatrix[1][1] / w;\n    sampleRadii.z = sampleRadius;\n\n    for (int i = 0; i < NUM_SAMPLES; ++i) {\n        vec3 sampleOffset = reflect(samples[i], randomPlaneNormal);\n        vec3 normOffset = normalize(sampleOffset);\n        float cosFactor = dot(normOffset, centerNormal);\n        float sign = sign(cosFactor);\n        sampleOffset *= sign;\n        cosFactor *= sign;\n\n        vec3 scaledOffset = sampleOffset * sampleRadii;\n\n        vec2 samplePos = uv + scaledOffset.xy;\n        float occluderDepth = hx_sampleLinearDepth(hx_gbufferDepth, samplePos);\n        float diffZ = (centerDepth - occluderDepth) * hx_cameraFrustumRange;\n\n        // distanceFactor: from 1 to 0, near to far\n        float distanceFactor = clamp(diffZ * rcpFallOffDistance, 0.0, 1.0);\n        distanceFactor = 1.0 - distanceFactor;\n\n        // sampleOcclusion: 1 if occluding, 0 otherwise\n        float sampleOcclusion = float(diffZ > scaledOffset.z);\n        totalOcclusion += sampleOcclusion * distanceFactor * cosFactor;\n    }\n    gl_FragColor = vec4(vec3(1.0 - totalOcclusion * strengthPerSample), 1.0);\n}",HX.Float2=function(t,e){this.x=t||0,this.y=e||0},HX.Float2.angle=function(t,e){return Math.acos(HX.dot2(t,e)/(t.length*e.length))},HX.Float2.distance=function(t,e){var i=t.x-e.x,n=t.y-e.y;return Math.sqrt(i*i+n*n)},HX.Float2.angleNormalized=function(t,e){return Math.acos(HX.dot2(t,e))},HX.Float2.add=function(t,e,i){return i=i||new HX.Float2,i.x=t.x+e.x,i.y=t.y+e.y,i},HX.Float2.subtract=function(t,e,i){return i=i||new HX.Float2,i.x=t.x-e.x,i.y=t.y-e.y,i},HX.Float2.scale=function(t,e,i){return i=i||new HX.Float2,i.x=t.x*e,i.y=t.y*e,i},HX.Float2.negate=function(t,e,i){return i=i||new HX.Float2,i.x=-i.x,i.y=-i.y,i},HX.Float2.prototype={constructor:HX.Float2,set:function(t,e){this.x=t,this.y=e},get lengthSqr(){return this.x*this.x+this.y*this.y},get length(){return Math.sqrt(this.x*this.x+this.y*this.y)},normalize:function(){var t=1/this.length;this.x*=t,this.y*=t},clone:function(){return new HX.Float2(this.x,this.y)},add:function(t){this.x+=t.x,this.y+=t.y},subtract:function(t){this.x-=t.x,this.y-=t.y},scale:function(t){this.x*=t,this.y*=t},negate:function(){this.x=-this.x,this.y=-this.y},abs:function(){this.x=Math.abs(this.x),this.y=Math.abs(this.y)},lerp:function(t,e,i){var n=t.x,r=t.y;this.x=n+(e.x-n)*i,this.y=r+(e.y-r)*i},fromPolarCoordinates:function(t,e){this.x=t*Math.cos(e),this.y=t*Math.sin(e)},copyFrom:function(t){this.x=t.x,this.y=t.y},maximize:function(t){t.x>this.x&&(this.x=t.x),t.y>this.y&&(this.y=t.y)},minimize:function(t){t.x<this.x&&(this.x=t.x),t.y<this.y&&(this.y=t.y)}},HX.Float2.ZERO=new HX.Float2(0,0),HX.Float2.X_AXIS=new HX.Float2(1,0),HX.Float2.Y_AXIS=new HX.Float2(0,1),HX.PlaneSide={FRONT:1,BACK:-1,INTERSECTING:0},HX.Float4=function(t,e,i,n){this.x=t||0,this.y=e||0,this.z=i||0,this.w=void 0===n?1:n},HX.Float4.angle=function(t,e){return Math.acos(HX.dot3(t,e)/(t.length*e.length))},HX.Float4.distance=function(t,e){var i=t.x-e.x,n=t.y-e.y,r=t.z-e.z;return Math.sqrt(i*i+n*n+r*r)},HX.Float4.negate=function(t,e){return e=e||new HX.Float4,e.x=-t.x,e.y=-t.y,e.z=-t.z,e.w=-t.w,e},HX.Float4.angleNormalized=function(t,e){return Math.acos(HX.dot3(t,e))},HX.Float4.add=function(t,e,i){return i=i||new HX.Float4,i.x=t.x+e.x,i.y=t.y+e.y,i.z=t.z+e.z,i.w=t.w+e.w,i},HX.Float4.subtract=function(t,e,i){return i=i||new HX.Float4,i.x=t.x-e.x,i.y=t.y-e.y,i.z=t.z-e.z,i.w=t.w-e.w,i},HX.Float4.scale=function(t,e,i){return i=i||new HX.Float4,i.x=t.x*e,i.y=t.y*e,i.z=t.z*e,i},HX.Float4.scale4=function(t,e,i){return i=i||new HX.Float4,i.x=t.x*e,i.y=t.y*e,i.z=t.z*e,i.w=t.w*e,i},HX.Float4.prototype={constructor:HX.Float4,set:function(t,e,i,n){this.x=t,this.y=e,this.z=i,this.w=void 0===n?this.w:n},get lengthSqr(){return this.x*this.x+this.y*this.y+this.z*this.z},get length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},normalize:function(){var t=1/this.length;this.x*=t,this.y*=t,this.z*=t},normalizeAsPlane:function(){var t=1/this.length;this.x*=t,this.y*=t,this.z*=t,this.w*=t},clone:function(){return new HX.Float4(this.x,this.y,this.z,this.w)},add:function(t){this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w},subtract:function(t){this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w},scale:function(t){this.x*=t,this.y*=t,this.z*=t},scale4:function(t){this.x*=t,this.y*=t,this.z*=t,this.w*=t},negate:function(){this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w},homogeneousProject:function(){var t=1/w;this.x*=t,this.y*=t,this.z*=t,this.w=1},abs:function(){this.x=Math.abs(this.x),this.y=Math.abs(this.y),this.z=Math.abs(this.z),this.w=Math.abs(this.w)},cross:function(t,e){var i=t.x,n=t.y,r=t.z,o=e.x,a=e.y,s=e.z;this.x=n*s-r*a,this.y=r*o-i*s,this.z=i*a-n*o},lerp:function(t,e,i){var n=t.x,r=t.y,o=t.z,a=t.w;this.x=n+(e.x-n)*i,this.y=r+(e.y-r)*i,this.z=o+(e.z-o)*i,this.w=a+(e.w-a)*i},fromSphericalCoordinates:function(t,e,i){this.x=t*Math.sin(i)*Math.cos(e),this.y=t*Math.cos(i),this.z=t*Math.sin(i)*Math.sin(e),this.w=0},copyFrom:function(t){this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w},maximize:function(t){t.x>this.x&&(this.x=t.x),t.y>this.y&&(this.y=t.y),t.z>this.z&&(this.z=t.z),t.w>this.w&&(this.w=t.w)},maximize3:function(t){t.x>this.x&&(this.x=t.x),t.y>this.y&&(this.y=t.y),t.z>this.z&&(this.z=t.z)},minimize:function(t){t.x<this.x&&(this.x=t.x),t.y<this.y&&(this.y=t.y),t.z<this.z&&(this.z=t.z),t.w<this.w&&(this.w=t.w)},minimize3:function(t){t.x<this.x&&(this.x=t.x),t.y<this.y&&(this.y=t.y),t.z<this.z&&(this.z=t.z)},toString:function(){return"Float4("+this.x+", "+this.y+", "+this.z+", "+this.w+")"}},HX.Float4.ORIGIN_POINT=new HX.Float4(0,0,0,1),HX.Float4.ZERO=new HX.Float4(0,0,0,0),HX.Float4.X_AXIS=new HX.Float4(1,0,0,0),HX.Float4.Y_AXIS=new HX.Float4(0,1,0,0),HX.Float4.Z_AXIS=new HX.Float4(0,0,1,0),HX.Gaussian={estimateGaussianRadius:function(t,e){return Math.sqrt(-2*t*Math.log(e))}},HX.CenteredGaussianCurve=function(t){this._amplitude=1/Math.sqrt(2*t*Math.PI),this._expScale=-1/(2*t)},HX.CenteredGaussianCurve.prototype={getValueAt:function(t){return this._amplitude*Math.pow(Math.E,t*t*this._expScale)}},HX.CenteredGaussianCurve.fromRadius=function(t,e){e=e||.01;var i=t/Math.sqrt(-2*Math.log(e));return new HX.CenteredGaussianCurve(i*i)},HX.dot2=function(t,e){return t.x*e.x+t.y*e.y},HX.dot3=function(t,e){return t.x*e.x+t.y*e.y+t.z*e.z},HX.dot4=function(t,e){return t.x*e.x+t.y*e.y+t.z*e.z+t.w*e.w},HX.sign=function(t){return 0===t?0:t>0?1:-1},HX.RCP_LOG_OF_2=1/Math.log(2),HX.DEG_TO_RAD=Math.PI/180,HX.RAD_TO_DEG=180/Math.PI,HX.log2=function(t){return Math.log(t)*HX.RCP_LOG_OF_2},HX.clamp=function(t,e,i){return e>t?e:t>i?i:t},HX.saturate=function(t){return HX.clamp(t,0,1)},HX.lerp=function(t,e,i){return t+(e-t)*i},HX.Matrix4x4=function(t,e,i,n,r,o,a,s,h,l,_,c,u,f,d,p){if(void 0!==t&&isNaN(t))this._m=new Float32Array(t);else{var m=this._m=new Float32Array(16);m[0]=void 0===t?1:0,m[1]=r||0,m[2]=h||0,m[3]=u||0,m[4]=e||0,m[5]=void 0===o?1:0,m[6]=l||0,m[7]=f||0,m[8]=i||0,m[9]=a||0,m[10]=void 0===_?1:0,m[11]=d||0,m[12]=n||0,m[13]=s||0,m[14]=c||0,m[15]=void 0===p?1:0}},HX.Matrix4x4.prototype={constructor:HX.Matrix4x4,transform:function(t,e){e=e||new HX.Float4;var i=t.x,n=t.y,r=t.z,o=t.w,a=this._m;return e.x=a[0]*i+a[4]*n+a[8]*r+a[12]*o,e.y=a[1]*i+a[5]*n+a[9]*r+a[13]*o,e.z=a[2]*i+a[6]*n+a[10]*r+a[14]*o,e.w=a[3]*i+a[7]*n+a[11]*r+a[15]*o,e},transformPoint:function(t,e){e=e||new HX.Float4;var i=t.x,n=t.y,r=t.z,o=this._m;return e.x=o[0]*i+o[4]*n+o[8]*r+o[12],e.y=o[1]*i+o[5]*n+o[9]*r+o[13],e.z=o[2]*i+o[6]*n+o[10]*r+o[14],e.w=1,e},transformVector:function(t,e){e=e||new HX.Float4;var i=t.x,n=t.y,r=t.z,o=this._m;return e.x=o[0]*i+o[4]*n+o[8]*r,e.y=o[1]*i+o[5]*n+o[9]*r,e.z=o[2]*i+o[6]*n+o[10]*r,e.w=0,e},transformExtent:function(t,e){e=e||new HX.Float4;var i=t.x,n=t.y,r=t.z,o=this._m,a=o[0],s=o[1],h=o[2],l=o[4],_=o[5],c=o[6],u=o[8],f=o[9],d=o[10];return 0>a&&(a=-a),0>s&&(s=-s),0>h&&(h=-h),0>l&&(l=-l),0>_&&(_=-_),0>c&&(c=-c),0>u&&(u=-u),0>f&&(f=-f),0>d&&(d=-d),e.x=a*i+l*n+u*r,e.y=s*i+_*n+f*r,e.z=h*i+c*n+d*r,e.w=0,e},copyFrom:function(t){var e=this._m,i=t._m;e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=i[3],e[4]=i[4],e[5]=i[5],e[6]=i[6],e[7]=i[7],e[8]=i[8],e[9]=i[9],e[10]=i[10],e[11]=i[11],e[12]=i[12],e[13]=i[13],e[14]=i[14],e[15]=i[15]},fromQuaternion:function(t){var e=t.x,i=t.y,n=t.z,r=t.w,o=this._m;o[0]=1-2*(i*i+n*n),o[1]=2*(e*i+r*n),o[2]=2*(e*n-r*i),o[3]=0,o[4]=2*(e*i-r*n),o[5]=1-2*(e*e+n*n),o[6]=2*(i*n+r*e),o[7]=0,o[8]=2*(e*n+r*i),o[9]=2*(i*n-r*e),o[10]=1-2*(e*e+i*i),o[11]=0,o[12]=0,o[13]=0,o[14]=0,o[15]=1},multiply:function(t,e){var i=t._m,n=e._m,r=i[0],o=i[1],a=i[2],s=i[3],h=i[4],l=i[5],_=i[6],c=i[7],u=i[8],f=i[9],d=i[10],p=i[11],m=i[12],X=i[13],H=i[14],g=i[15],x=n[0],S=n[1],v=n[2],E=n[3],b=n[4],T=n[5],y=n[6],L=n[7],M=n[8],w=n[9],A=n[10],P=n[11],R=n[12],D=n[13],C=n[14],O=n[15],F=this._m;F[0]=r*x+h*S+u*v+m*E,F[1]=o*x+l*S+f*v+X*E,F[2]=a*x+_*S+d*v+H*E,F[3]=s*x+c*S+p*v+g*E,F[4]=r*b+h*T+u*y+m*L,F[5]=o*b+l*T+f*y+X*L,F[6]=a*b+_*T+d*y+H*L,F[7]=s*b+c*T+p*y+g*L,F[8]=r*M+h*w+u*A+m*P,F[9]=o*M+l*w+f*A+X*P,F[10]=a*M+_*w+d*A+H*P,F[11]=s*M+c*w+p*A+g*P,F[12]=r*R+h*D+u*C+m*O,F[13]=o*R+l*D+f*C+X*O,F[14]=a*R+_*D+d*C+H*O,F[15]=s*R+c*D+p*C+g*O},multiplyAffine:function(t,e){var i=t._m,n=e._m,r=i[0],o=i[1],a=i[2],s=i[4],h=i[5],l=i[6],_=i[8],c=i[9],u=i[10],f=i[12],d=i[13],p=i[14],m=n[0],X=n[1],H=n[2],g=n[4],x=n[5],S=n[6],v=n[8],E=n[9],b=n[10],T=n[12],y=n[13],L=n[14],M=this._m;M[0]=r*m+s*X+_*H,M[1]=o*m+h*X+c*H,M[2]=a*m+l*X+u*H,M[4]=r*g+s*x+_*S,M[5]=o*g+h*x+c*S,M[6]=a*g+l*x+u*S,M[8]=r*v+s*E+_*b,M[9]=o*v+h*E+c*b,M[10]=a*v+l*E+u*b,M[12]=r*T+s*y+_*L+f,M[13]=o*T+h*y+c*L+d,M[14]=a*T+l*y+u*L+p},fromRotationAxisAngle:function(t,e){var i=Math.cos(e),n=Math.sin(e),r=1/t.length,o=t.x*r,a=t.y*r,s=t.z*r,h=1-i,l=this._m;l[0]=h*o*o+i,l[1]=h*o*a+n*s,l[2]=h*o*s-n*a,l[3]=0,l[4]=h*o*a-n*s,l[5]=h*a*a+i,l[6]=h*a*s+n*o,l[7]=0,l[8]=h*o*s+n*a,l[9]=h*a*s-n*o,l[10]=h*s*s+i,l[11]=0,l[12]=0,l[13]=0,l[14]=0,l[15]=1},fromEuler:function(t,e,i){var n=Math.cos(t),r=Math.sin(t),o=Math.cos(e),a=Math.sin(e),s=Math.cos(i),h=Math.sin(i),l=this._m;

l[0]=o*s,l[1]=n*h+r*a*s,l[2]=r*h-n*a*s,l[3]=0,l[4]=-o*h,l[5]=n*s-r*a*h,l[6]=r*s+n*a*h,l[7]=0,l[8]=a,l[9]=-r*o,l[10]=n*o,l[11]=0,l[12]=0,l[13]=0,l[14]=0,l[15]=1},fromRotationPitchYawRoll:function(t,e,i){var n=Math.cos(-t),r=Math.cos(-e),o=Math.cos(i),a=Math.sin(-t),s=Math.sin(-e),h=Math.sin(i),l=-s*n,_=-a,c=r*n,u=-r*h-s*a*o,f=n*o,d=-s*h+a*o*r,p=f*c-d*_,m=d*l-u*c,X=u*_-f*l,H=this._m;H[0]=p,H[1]=m,H[2]=X,H[3]=0,H[4]=u,H[5]=f,H[6]=d,H[7]=0,H[8]=l,H[9]=_,H[10]=c,H[11]=0,H[12]=0,H[13]=0,H[14]=0,H[15]=1},fromTranslation:function(t,e,i){void 0===e&&(t=t.x,e=t.y,i=t.z);var n=this._m;n[0]=1,n[1]=0,n[2]=0,n[3]=0,n[4]=0,n[5]=1,n[6]=0,n[7]=0,n[8]=0,n[9]=0,n[10]=1,n[11]=0,n[12]=t,n[13]=e,n[14]=i,n[15]=1},fromScale:function(t,e,i){void 0===e&&(e=i=t);var n=this._m;n[0]=t,n[1]=0,n[2]=0,n[3]=0,n[4]=0,n[5]=e,n[6]=0,n[7]=0,n[8]=0,n[9]=0,n[10]=i,n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1},fromPerspectiveProjection:function(t,e,i,n){var r=1/Math.tan(.5*t),o=r/e,a=1/(i-n),s=this._m;s[0]=o,s[1]=0,s[2]=0,s[3]=0,s[4]=0,s[5]=r,s[6]=0,s[7]=0,s[8]=0,s[9]=0,s[10]=(n+i)*a,s[11]=-1,s[12]=0,s[13]=0,s[14]=2*i*n*a,s[15]=0},fromOrthographicOffCenterProjection:function(t,e,i,n,r,o){var a=1/(e-t),s=1/(i-n),h=1/(r-o),l=this._m;l[0]=2*a,l[1]=0,l[2]=0,l[3]=0,l[4]=0,l[5]=2*s,l[6]=0,l[7]=0,l[8]=0,l[9]=0,l[10]=2*h,l[11]=0,l[12]=-(t+e)*a,l[13]=-(i+n)*s,l[14]=(o+r)*h,l[15]=1},fromOrthographicProjection:function(t,e,i,n){var r=Math.tan(.5*vFOV),o=r*aspectRatio,a=1/(i-n),s=this._m;s[0]=1/o,s[1]=0,s[2]=0,s[3]=0,s[4]=0,s[5]=1/r,s[6]=0,s[7]=0,s[8]=0,s[9]=0,s[10]=2*a,s[11]=0,s[12]=0,s[13]=0,s[14]=(n+i)*a,s[15]=1},clone:function(){return new HX.Matrix4x4(this._m)},transpose:function(){var t=this._m,e=t[1],i=t[2],n=t[3],r=t[6],o=t[7],a=t[11];t[1]=t[4],t[2]=t[8],t[3]=t[12],t[4]=e,t[6]=t[9],t[7]=t[13],t[8]=i,t[9]=r,t[11]=t[14],t[12]=n,t[13]=o,t[14]=a},determinant3x3:function(t,e){var i=0==e?4:0,n=2>e?8:4,r=3==e?8:12,o=0==t?1:0,a=2>t?2:1,s=3==t?2:3,h=this._m,l=h[i|a],_=h[a|n],c=h[r|a],u=h[i|s],f=h[n|s],d=h[s|r];return h[i|o]*(_*d-c*f)-h[n|o]*(l*d-c*u)+h[r|o]*(l*f-_*u)},cofactor:function(t,e){var i=1-((t+e&1)<<1);return i*this.determinant3x3(t,e)},getCofactorMatrix:function(t,e,i){i=i||new HX.Matrix4x4;for(var n=i._m,r=0;16>r;++r)n[r]=this.cofactor(3&r,r>>2);return i},getAdjugate:function(t,e,i){i=i||new HX.Matrix4x4;for(var n=i._m,r=0;16>r;++r)n[r]=this.cofactor(r>>2,3&r);return i},determinant:function(){var t=this._m;return t[0]*this.determinant3x3(0,0)-t[4]*this.determinant3x3(0,1)+t[8]*this.determinant3x3(0,2)-t[12]*this.determinant3x3(0,3)},inverseOf:function(t){var e=1/t.determinant(),i=e*t.cofactor(0,0),n=e*t.cofactor(0,1),r=e*t.cofactor(0,2),o=e*t.cofactor(0,3),a=e*t.cofactor(1,0),s=e*t.cofactor(1,1),h=e*t.cofactor(1,2),l=e*t.cofactor(1,3),_=e*t.cofactor(2,0),c=e*t.cofactor(2,1),u=e*t.cofactor(2,2),f=e*t.cofactor(2,3),d=e*t.cofactor(3,0),p=e*t.cofactor(3,1),m=e*t.cofactor(3,2),X=e*t.cofactor(3,3),t=this._m;t[0]=i,t[1]=n,t[2]=r,t[3]=o,t[4]=a,t[5]=s,t[6]=h,t[7]=l,t[8]=_,t[9]=c,t[10]=u,t[11]=f,t[12]=d,t[13]=p,t[14]=m,t[15]=X},inverseAffineOf:function(t){var e=t._m,i=e[0],n=e[1],r=e[2],o=e[4],a=e[5],s=e[6],h=e[8],l=e[9],_=e[10],c=e[12],u=e[13],f=e[14],d=i*(a*_-l*s)-o*(n*_-l*r)+h*(n*s-a*r),p=1/d,m=(a*_-l*s)*p,X=(l*r-n*_)*p,H=(n*s-a*r)*p,g=(h*s-o*_)*p,x=(i*_-h*r)*p,S=(o*r-i*s)*p,v=(o*l-h*a)*p,E=(h*n-i*l)*p,b=(i*a-o*n)*p,T=this._m;T[0]=m,T[1]=X,T[2]=H,T[3]=0,T[4]=g,T[5]=x,T[6]=S,T[7]=0,T[8]=v,T[9]=E,T[10]=b,T[11]=0,T[12]=-m*c-g*u-v*f,T[13]=-X*c-x*u-E*f,T[14]=-H*c-S*u-b*f,T[15]=1},writeNormalMatrix:function(t,e){e=e||0;var i=this._m,n=i[0],r=i[1],o=i[2],a=i[4],s=i[5],h=i[6],l=i[8],_=i[9],c=i[10],u=n*(s*c-_*h)-a*(r*c-_*o)+l*(r*h-s*o),f=1/u;t[e]=(s*c-_*h)*f,t[e+1]=(l*h-a*c)*f,t[e+2]=(a*_-l*s)*f,t[e+3]=(_*o-r*c)*f,t[e+4]=(n*c-l*o)*f,t[e+5]=(l*r-n*_)*f,t[e+6]=(r*h-s*o)*f,t[e+7]=(a*o-n*h)*f,t[e+8]=(n*s-a*r)*f},writeData:function(t,e){e=e||0;for(var i=this._m,n=0;16>n;++n)t[e+n]=i[n]},invert:function(){this.inverseOf(this)},invertAffine:function(){this.inverseAffineOf(this)},append:function(t){this.multiply(t,this)},prepend:function(t){this.multiply(this,t)},appendAffine:function(t){this.multiplyAffine(t,this)},prependAffine:function(t){this.multiplyAffine(this,t)},add:function(t){var e=this._m,i=t._m;e[0]+=i[0],e[1]+=i[1],e[2]+=i[2],e[3]+=i[3],e[4]+=i[4],e[5]+=i[5],e[6]+=i[6],e[7]+=i[7],e[8]+=i[8],e[9]+=i[9],e[10]+=i[10],e[11]+=i[11],e[12]+=i[12],e[13]+=i[13],e[14]+=i[14],e[15]+=i[15]},addAffine:function(t){var e=this._m,i=t._m;e[0]+=i[0],e[1]+=i[1],e[2]+=i[2],e[4]+=i[4],e[5]+=i[5],e[6]+=i[6],e[8]+=i[8],e[9]+=i[9],e[10]+=i[10]},subtract:function(t){var e=this._m,i=t._m;e[0]-=i[0],e[1]-=i[1],e[2]-=i[2],e[3]-=i[3],e[4]-=i[4],e[5]-=i[5],e[6]-=i[6],e[7]-=i[7],e[8]-=i[8],e[9]-=i[9],e[10]-=i[10],e[11]-=i[11],e[12]-=i[12],e[13]-=i[13],e[14]-=i[14],e[15]-=i[15]},subtractAffine:function(t){var e=this._m,i=t._m;e[0]-=i[0],e[1]-=i[1],e[2]-=i[2],e[4]-=i[4],e[5]-=i[5],e[6]-=i[6],e[8]-=i[8],e[9]-=i[9],e[10]-=i[10]},appendScale:function(t,e,i){void 0===e&&(e=i=t);var n=this._m;n[0]*=t,n[1]*=e,n[2]*=i,n[4]*=t,n[5]*=e,n[6]*=i,n[8]*=t,n[9]*=e,n[10]*=i,n[12]*=t,n[13]*=e,n[14]*=i},prependScale:function(t,e,i){void 0===e&&(e=i=t);var n=this._m;n[0]*=t,n[1]*=t,n[2]*=t,n[3]*=t,n[4]*=e,n[5]*=e,n[6]*=e,n[7]*=e,n[8]*=i,n[9]*=i,n[10]*=i,n[11]*=i},appendTranslation:function(t){var e=this._m;e[12]+=t.x,e[13]+=t.y,e[14]+=t.z},prependTranslation:function(t){var e=this._m,i=t.x,n=t.y,r=t.z;e[12]+=e[0]*i+e[4]*n+e[8]*r,e[13]+=e[1]*i+e[5]*n+e[9]*r,e[14]+=e[2]*i+e[6]*n+e[10]*r,e[15]+=e[3]*i+e[7]*n+e[11]*r},appendQuaternion:function(t){var e=this._m,i=t.x,n=t.y,r=t.z,o=t.w,a=1-2*(n*n+r*r),s=2*(i*n+o*r),h=2*(i*r-o*n),l=2*(i*n-o*r),_=1-2*(i*i+r*r),c=2*(n*r+o*i),u=2*(i*r+o*n),f=2*(n*r-o*i),d=1-2*(i*i+n*n),p=e[0],m=e[1],X=e[2],H=e[4],g=e[5],x=e[6],S=e[8],v=e[9],E=e[10],b=e[12],T=e[13],y=e[14];e[0]=a*p+l*m+u*X,e[1]=s*p+_*m+f*X,e[2]=h*p+c*m+d*X,e[4]=a*H+l*g+u*x,e[5]=s*H+_*g+f*x,e[6]=h*H+c*g+d*x,e[8]=a*S+l*v+u*E,e[9]=s*S+_*v+f*E,e[10]=h*S+c*v+d*E,e[12]=a*b+l*T+u*y,e[13]=s*b+_*T+f*y,e[14]=h*b+c*T+d*y},prependQuaternion:function(t){var e=this._m,i=t.x,n=t.y,r=t.z,o=t.w,a=e[0],s=e[1],h=e[2],l=e[4],_=e[5],c=e[6],u=e[8],f=e[9],d=e[10],p=1-2*(n*n+r*r),m=2*(i*n+o*r),X=2*(i*r-o*n),H=2*(i*n-o*r),g=1-2*(i*i+r*r),x=2*(n*r+o*i),S=2*(i*r+o*n),v=2*(n*r-o*i),E=1-2*(i*i+n*n);e[0]=a*p+l*m+u*X,e[1]=s*p+_*m+f*X,e[2]=h*p+c*m+d*X,e[4]=a*H+l*g+u*x,e[5]=s*H+_*g+f*x,e[6]=h*H+c*g+d*x,e[8]=a*S+l*v+u*E,e[9]=s*S+_*v+f*E,e[10]=h*S+c*v+d*E},appendRotationAxisAngle:function(t,e){var i=this._m,n=Math.cos(e),r=Math.sin(e),o=1/t.length,a=t.x*o,s=t.y*o,h=t.z*o,l=1-n,_=l*a*a+n,c=l*a*s+r*h,u=l*a*h-r*s,f=l*a*s-r*h,d=l*s*s+n,p=l*s*h+r*a,m=l*a*h+r*s,X=l*s*h-r*a,H=l*h*h+n,g=i[0],x=i[1],S=i[2],v=i[4],E=i[5],b=i[6],T=i[8],y=i[9],L=i[10],M=i[12],w=i[13],A=i[14];i[0]=_*g+f*x+m*S,i[1]=c*g+d*x+X*S,i[2]=u*g+p*x+H*S,i[4]=_*v+f*E+m*b,i[5]=c*v+d*E+X*b,i[6]=u*v+p*E+H*b,i[8]=_*T+f*y+m*L,i[9]=c*T+d*y+X*L,i[10]=u*T+p*y+H*L,i[12]=_*M+f*w+m*A,i[13]=c*M+d*w+X*A,i[14]=u*M+p*w+H*A},prependRotationAxisAngle:function(t,e){var i=this._m,n=Math.cos(e),r=Math.sin(e),o=1/t.length,a=t.x*o,s=t.y*o,h=t.z*o,l=1-n,_=i[0],c=i[1],u=i[2],f=i[4],d=i[5],p=i[6],m=i[8],X=i[9],H=i[10],g=l*a*a+n,x=l*a*s+r*h,S=l*a*h-r*s,v=l*a*s-r*h,E=l*s*s+n,b=l*s*h+r*a,T=l*a*h+r*s,y=l*s*h-r*a,L=l*h*h+n;i[0]=_*g+f*x+m*S,i[1]=c*g+d*x+X*S,i[2]=u*g+p*x+H*S,i[4]=_*v+f*E+m*b,i[5]=c*v+d*E+X*b,i[6]=u*v+p*E+H*b,i[8]=_*T+f*y+m*L,i[9]=c*T+d*y+X*L,i[10]=u*T+p*y+H*L},getRow:function(t,e){var i=this._m;return e=e||new HX.Float4,e.x=i[t],e.y=i[4|t],e.z=i[8|t],e.w=i[12|t],e},setRow:function(t,e){var i=this._m;i[t]=e.x,i[4|t]=e.y,i[8|t]=e.z,i[12|t]=e.w},getElement:function(t,e){return this._m[t|e<<2]},setElement:function(t,e,i){this._m[t|e<<2]=i},getColumn:function(t,e){var i=this._m;return e=e||new HX.Float4,t<<=2,e.x=i[t],e.y=i[1|t],e.z=i[2|t],e.w=i[3|t],e},setColumn:function(t,e){var i=this._m;t<<=2,i[t]=e.x,i[1|t]=e.y,i[2|t]=e.z,i[3|t]=e.w},lookAt:function(t,e,i){var n=HX.Float4.subtract(e,t);n.normalize();var r=new HX.Float4;if(r.cross(i,n),Math.abs(r.lengthSqr)>1e-4)r.normalize();else{var o=new HX.Float4(i.x,i.z,i.y,0);r.cross(o,n),Math.abs(r.lengthSqr)<=1e-4&&(o.set(i.z,i.y,i.z,0),r.cross(o,n)),r.normalize()}var a=new HX.Float4;a.cross(n,r);var s=this._m;s[0]=r.x,s[1]=r.y,s[2]=r.z,s[3]=0,s[4]=a.x,s[5]=a.y,s[6]=a.z,s[7]=0,s[8]=n.x,s[9]=n.y,s[10]=n.z,s[11]=0,s[12]=e.x,s[13]=e.y,s[14]=e.z,s[15]=1},compose:function(t){this.fromQuaternion(t.rotation);var e=t.scale;this.prependScale(e.x,e.y,e.z),this.appendTranslation(t.position)},decompose:function(t,e,i){t=t||new HX.Transform;var n;void 0===e?(e=t.rotation,i=t.scale,n=t.position):n=t;var r=this._m,o=r[0],a=r[1],s=r[2],h=r[4],l=r[5],_=r[6],c=r[8],u=r[9],f=r[10],d=a*_-s*l,p=s*h-o*_,m=o*l-a*h,X=HX.sign(d*c+p*u+m*f);i.x=X*Math.sqrt(o*o+a*a+s*s),i.y=X*Math.sqrt(h*h+l*l+_*_),i.z=X*Math.sqrt(c*c+u*u+f*f);var H=this.clone(),g=1/i.x,x=1/i.y,S=1/i.z,v=H._m;return v[0]*=g,v[1]*=g,v[2]*=g,v[4]*=x,v[5]*=x,v[6]*=x,v[8]*=S,v[9]*=S,v[10]*=S,e.fromMatrix(H),n.copyFrom(this.getColumn(3)),t},swapColums:function(t,e){var i=this._m;if(t!==e){t<<=2,e<<=2;var n=i[t],r=i[1|t],o=i[2|t],a=i[3|t];i[t]=i[e],i[1|t]=i[1|e],i[2|t]=i[2|e],i[3|t]=i[3|e],i[e]=n,i[1|e]=r,i[2|e]=o,i[3|e]=a}},toString:function(){for(var t=this._m,e="",i=0;16>i;++i){var n=3&i;0===n&&(e+="["),e+=t[i],e+=3===n?"]\n":"	 , 	"}return e}},HX.Matrix4x4.IDENTITY=new HX.Matrix4x4,HX.Matrix4x4.ZERO=new HX.Matrix4x4(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),HX.PoissonDisk=function(t,e,i,n){this._mode=void 0===t?HX.PoissonDisk.CIRCULAR:t,this._initialDistance=e||1,this._decayFactor=i||.99,this._maxTests=n||2e4,this._currentDistance=0,this._points=null,this.reset()},HX.PoissonDisk.SQUARE=0,HX.PoissonDisk.CIRCULAR=1,HX.PoissonDisk._initDefault=function(){HX.PoissonDisk.DEFAULT=new HX.PoissonDisk,HX.PoissonDisk.DEFAULT.generatePoints(64),HX.PoissonDisk.DEFAULT_FLOAT32=new Float32Array(128);for(var t=HX.PoissonDisk.DEFAULT.getPoints(),e=0;64>e;++e){var i=t[e];HX.PoissonDisk.DEFAULT_FLOAT32[2*e]=i.x,HX.PoissonDisk.DEFAULT_FLOAT32[2*e+1]=i.y}},HX.PoissonDisk.prototype={getPoints:function(){return this._points},reset:function(){this._currentDistance=this._initialDistance,this._points=[]},generatePoints:function(t){for(var e=0;t>e;++e)this.generatePoint()},generatePoint:function(){for(;;){for(var t=0,e=this._currentDistance*this._currentDistance;t++<this._maxTests;){var i=this._getCandidate();if(this._isValid(i,e))return this._points.push(i),i}this._currentDistance*=this._decayFactor}},_getCandidate:function(){for(;;){var t=2*Math.random()-1,e=2*Math.random()-1;if(this._mode==HX.PoissonDisk.SQUARE||1>=t*t+e*e)return new HX.Float2(t,e)}},_isValid:function(t,e){for(var i=this._points.length,n=0;i>n;++n){var r=this._points[n],o=t.x-r.x,a=t.y-r.y;if(e>o*o+a*a)return!1}return!0}},HX.PoissonSphere=function(t,e,i,n){this._mode=void 0===t?HX.PoissonSphere.CIRCULAR:t,this._initialDistance=e||1,this._decayFactor=i||.99,this._maxTests=n||2e4,this._currentDistance=0,this._points=null,this.reset()},HX.PoissonSphere.BOX=0,HX.PoissonSphere.CIRCULAR=1,HX.PoissonSphere._initDefault=function(){HX.PoissonSphere.DEFAULT=new HX.PoissonSphere,HX.PoissonSphere.DEFAULT.generatePoints(64),HX.PoissonSphere.DEFAULT_FLOAT32=new Float32Array(192);for(var t=HX.PoissonSphere.DEFAULT.getPoints(),e=0;64>e;++e){var i=t[e];HX.PoissonSphere.DEFAULT_FLOAT32[3*e]=i.x,HX.PoissonSphere.DEFAULT_FLOAT32[3*e+1]=i.y,HX.PoissonSphere.DEFAULT_FLOAT32[3*e+2]=i.z}},HX.PoissonSphere.prototype={getPoints:function(){return this._points},reset:function(){this._currentDistance=this._initialDistance,this._points=[]},generatePoints:function(t){for(var e=0;t>e;++e)this.generatePoint()},generatePoint:function(){for(;;){for(var t=0,e=this._currentDistance*this._currentDistance;t++<this._maxTests;){var i=this._getCandidate();if(this._isValid(i,e))return this._points.push(i),i}this._currentDistance*=this._decayFactor}},_getCandidate:function(){for(;;){var t=2*Math.random()-1,e=2*Math.random()-1,i=2*Math.random()-1;if(this._mode==HX.PoissonSphere.BOX||1>=t*t+e*e+i*i)return new HX.Float4(t,e,i,0)}},_isValid:function(t,e){for(var i=this._points.length,n=0;i>n;++n){var r=this._points[n],o=t.x-r.x,a=t.y-r.y,s=t.z-r.z;if(e>o*o+a*a+s*s)return!1}return!0}},HX.Quaternion=function(){this.x=0,this.y=0,this.z=0,this.w=1},HX.Quaternion.prototype={fromAxisAngle:function(t,e){var i=Math.sin(.5*e)/t.length;this.x=t.x*i,this.y=t.y*i,this.z=t.z*i,this.w=Math.cos(.5*e)},fromPitchYawRoll:function(t,e,i){var n=new HX.Matrix4x4;n.fromRotationPitchYawRoll(t,e,i),this.fromMatrix(n)},fromEuler:function(t,e,i){var n=Math.cos(.5*t),r=Math.cos(.5*e),o=Math.cos(.5*i),a=Math.sin(.5*t),s=Math.sin(.5*e),h=Math.sin(.5*i);this.x=a*r*o+n*s*h,this.y=n*s*o-a*r*h,this.z=n*r*h+a*s*o,this.w=n*r*o-a*s*h},toEuler:function(t){t=t||new HX.Float4;var e=this.x,i=this.y,n=this.z,r=this.w,o=e*e,a=i*i,s=n*n,h=r*r;return t.x=Math.atan2(-2*(i*n-r*e),h-o-a+s),t.y=Math.asin(2*(e*n+r*i)),t.z=Math.atan2(-2*(e*i-r*n),h+o-a-s),t},fromMatrix:function(t){var e=t._m[0],i=t._m[5],n=t._m[10],r=e+i+n;if(r>0){r+=1;var o=1/Math.sqrt(r)*.5;this.x=o*(t._m[6]-t._m[9]),this.y=o*(t._m[8]-t._m[2]),this.z=o*(t._m[1]-t._m[4]),this.w=o*r}else if(e>i&&e>n){r=e-i-n+1;var o=1/Math.sqrt(r)*.5;this.x=o*r,this.y=o*(t._m[1]+t._m[4]),this.z=o*(t._m[8]+t._m[2]),this.w=o*(t._m[6]-t._m[9])}else if(i>n){r=i-e-n+1;var o=1/Math.sqrt(r)*.5;this.x=o*(t._m[1]+t._m[4]),this.y=o*r,this.z=o*(t._m[6]+t._m[9]),this.w=o*(t._m[8]-t._m[2])}else{r=n-e-i+1;var o=1/Math.sqrt(r)*.5;this.x=o*(t._m[8]+t._m[2]),this.y=o*(t._m[6]+t._m[9]),this.z=o*r,this.w=o*(t._m[1]-t._m[4])}this.normalize()},rotate:function(t,e){e=e||new HX.Float4;var i=t.x,n=t.y,r=t.z,o=this.x,a=this.y,s=this.z,h=this.w,l=-o*i-a*n-s*r,_=h*i+a*r-s*n,c=h*n-o*r+s*i,u=h*r+o*n-a*i;return e.x=-l*o+_*h-c*s+u*a,e.y=-l*a+_*s+c*h-u*o,e.z=-l*s-_*a+c*o+u*h,e.w=t.w,e},lerp:function(t,e,i){var n=t.w,r=t.x,o=t.y,a=t.z,s=e.w,h=e.x,l=e.y,_=e.z;0>n*s+r*h+o*l+a*_&&(s=-s,h=-h,l=-l,_=-_),this.x=r+i*(h-r),this.y=o+i*(l-o),this.z=a+i*(_-a),this.w=n+i*(s-n),this.normalize()},slerp:function(t,e,i){var n=t.w,r=t.x,o=t.y,a=t.z,s=e.w,h=e.x,l=e.y,_=e.z,c=n*s+r*h+o*l+a*_;if(0>c&&(c=-c,s=-s,h=-h,l=-l,_=-_),.95>c){var u=Math.acos(c),f=i*u;this.x=h-r*c,this.y=l-o*c,this.z=_-a*c,this.w=s-n*c,this.normalize();var d=Math.cos(f),p=Math.sin(f);this.x=r*d+this.x*p,this.y=o*d+this.y*p,this.z=a*d+this.z*p,this.w=n*d+this.w*p}else this.x=r+i*(h-r),this.y=o+i*(l-o),this.z=a+i*(_-a),this.w=n+i*(s-n),this.normalize()},negate:function(){this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w},set:function(t,e,i,n){this.x=t,this.y=e,this.z=i,this.w=n},copyFrom:function(t){this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w},get normSquared(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},get norm(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},normalize:function(){var t=1/Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);this.x*=t,this.y*=t,this.z*=t,this.w*=t},conjugateOf:function(t){this.x=-t.x,this.y=-t.y,this.z=-t.z,this.w=t.w},inverseOf:function(t){var e=t.x,i=t.y,n=t.z,r=t.w,o=1/(e*e+i*i+n*n+r*r);this.x=-e*o,this.y=-i*o,this.z=-n*o,this.w=r*o},invert:function(t){var e=this.x,i=this.y,n=this.z,r=this.w,o=1/(e*e+i*i+n*n+r*r);this.x=-e*o,this.y=-i*o,this.z=-n*o,this.w=r*o},multiply:function(t,e){var i=t.w,n=t.x,r=t.y,o=t.z,a=e.w,s=e.x,h=e.y,l=e.z;this.x=i*s+n*a+r*l-o*h,this.y=i*h-n*l+r*a+o*s,this.z=i*l+n*h-r*s+o*a,this.w=i*a-n*s-r*h-o*l},append:function(t){this.multiply(t,this)},prepend:function(t){this.multiply(this,t)},toString:function(){return"Quaternion("+this.x+", "+this.y+", "+this.z+", "+this.w+")"}},HX.Transform=function(){this._position=new HX.Float4(0,0,0,1),this._rotation=new HX.Quaternion,this._scale=new HX.Float4(1,1,1,1),this._matrix=new HX.Matrix4x4,this._changeListener=new HX.PropertyListener,this._changeListener.add(this._position,"x"),this._changeListener.add(this._position,"y"),this._changeListener.add(this._position,"z"),this._changeListener.add(this._rotation,"x"),this._changeListener.add(this._rotation,"y"),this._changeListener.add(this._rotation,"z"),this._changeListener.add(this._rotation,"w"),this._changeListener.add(this._scale,"x"),this._changeListener.add(this._scale,"y"),this._changeListener.add(this._scale,"z"),this._changeListener.onChange.bind(this._invalidateMatrix,this)},HX.Transform.prototype={get position(){return this._position},set position(t){this._position.copyFrom(t)},get rotation(){return this._rotation},set rotation(t){this._rotation.copyFrom(t)},get scale(){return this._scale},set scale(t){this._scale.copyFrom(t)},lookAt:function(t){this._matrix.lookAt(t,this._position,HX.Float4.Y_AXIS),this._applyMatrix()},copyFrom:function(t){this._changeListener.enabled=!1,this.position.copyFrom(t.position),this.rotation.copyFrom(t.rotation),this.scale.copyFrom(t.scale),this._changeListener.enabled=!0},get matrix(){return this._matrixInvalid&&this._updateMatrix(),this._matrix},set matrix(t){this._matrix.copyFrom(t),this._applyMatrix()},_invalidateMatrix:function(){this._matrixInvalid=!0},_updateMatrix:function(){this._matrix.compose(this),this._matrixInvalid=!1},_applyMatrix:function(){this._matrixInvalid=!1,this._changeListener.enabled=!1,this._matrix.decompose(this),this._changeListener.enabled=!0}},HX.shuffle=function(t){for(var e,i,n=t.length;0!==n;)i=Math.floor(Math.random()*n),n-=1,e=t[n],t[n]=t[i],t[i]=e;return t},HX.Color=function(t,e,i,n){this.set(t,e,i,n)},HX.Color.prototype={set:function(t,e,i,n){void 0===t?(this.a=1,this.r=1,this.g=1,this.b=1):void 0===e?(this.a=1,this.r=((16711680&t)>>>16)/255,this.g=((65280&t)>>>8)/255,this.b=(255&t)/255):(this.r=t,this.g=e,this.b=i,this.a=void 0===n?1:n)},hex:function(){var t=255*Math.min(this.r,1),e=255*Math.min(this.g,1),i=255*Math.min(this.b,1);return t<<16|e<<8|i},luminance:function(){return.3*this.r+.59*this.g+.11*this.b},gammaToLinear:function(t){return t=t||new HX.Color,HX.OPTIONS.usePreciseGammaCorrection?(t.r=Math.pow(this.r,2.2),t.g=Math.pow(this.g,2.2),t.b=Math.pow(this.b,2.2)):(t.r=this.r*this.r,t.g=this.g*this.g,t.b=this.b*this.b),t.a=this.a,t},linearToGamma:function(t){return t=t||new HX.Color,HX.OPTIONS.usePreciseGammaCorrection?(t.r=Math.pow(this.r,.454545),t.g=Math.pow(this.g,.454545),t.b=Math.pow(this.b,.454545)):(t.r=Math.sqrt(this.r),t.g=Math.sqrt(this.g),t.b=Math.sqrt(this.b)),t.a=this.a,t},copyFrom:function(t){this.r=t.r,this.g=t.g,this.b=t.b,this.a=t.a},toString:function(){return"Color("+this.r+", "+this.g+", "+this.b+", "+this.a+")"},clone:function(){var t=new HX.Color;return t.r=this.r,t.g=this.g,t.b=this.b,t.a=this.a,t}},HX.Color.BLACK=new HX.Color(0,0,0,1),HX.Color.ZERO=new HX.Color(0,0,0,0),HX.Color.RED=new HX.Color(1,0,0,1),HX.Color.GREEN=new HX.Color(0,1,0,1),HX.Color.BLUE=new HX.Color(0,0,1,1),HX.Color.YELLOW=new HX.Color(1,1,0,1),HX.Color.MAGENTA=new HX.Color(1,0,1,1),HX.Color.CYAN=new HX.Color(0,1,1,1),HX.Color.WHITE=new HX.Color(1,1,1,1),HX.DataStream=function(t){this._dataView=t,this._offset=0,this._endian=HX.DataStream.LITTLE_ENDIAN},HX.DataStream.LITTLE_ENDIAN=!0,HX.DataStream.BIG_ENDIAN=!1,HX.DataStream.prototype={get offset(){return this._offset},set offset(t){this._offset=t},get endian(){return this._endian},set endian(t){this._endian=t},get byteLength(){return this._dataView.byteLength},getChar:function(){return String.fromCharCode(this.getUint8())},getUint8:function(){return this._dataView.getUint8(this._offset++)},getUint16:function(){var t=this._dataView.getUint16(this._offset,this._endian);return this._offset+=2,t},getUint32:function(){var t=this._dataView.getUint32(this._offset,this._endian);return this._offset+=4,t},getInt8:function(){return this._dataView.getInt8(this._offset++)},getInt16:function(){var t=this._dataView.getInt16(this._offset,this._endian);return this._offset+=2,t},getInt32:function(){var t=this._dataView.getInt32(this._offset,this._endian);return this._offset+=4,t},getInt64AsFloat64:function(){var t,e;return this._endian===HX.DataStream.LITTLE_ENDIAN?(t=this._dataView.getUint32(this._offset,this._endian),e=this._dataView.getInt32(this._offset+4,this._endian)):(e=this._dataView.getInt32(this._offset,this._endian),t=this._dataView.getUint32(this._offset+4,this._endian)),this._offset+=8,t+4294967296*e},getFloat32:function(){var t=this._dataView.getFloat32(this._offset,this._endian);return this._offset+=4,t},getFloat64:function(){var t=this._dataView.getFloat64(this._offset,this._endian);return this._offset+=8,t},getArray:function(t){return this._readArray(t,Array,this.getUint8)},getUint8Array:function(t){return this._readArray(t,Uint8Array,this.getUint8)},getUint16Array:function(t){return this._readArray(t,Uint16Array,this.getUint16)},getUint32Array:function(t){return this._readArray(t,Uint32Array,this.getUint32)},getInt8Array:function(t){return this._readArray(t,Int8Array,this.getInt8)},getInt16Array:function(t){return this._readArray(t,Int16Array,this.getInt16)},getInt32Array:function(t){return this._readArray(t,Int32Array,this.getInt32)},getInt64AsFloat64Array:function(t){return this._readArray(t,Float64Array,this.getInt64AsFloat64)},getFloat32Array:function(t){return this._readArray(t,Float32Array,this.getFloat32)},getFloat64Array:function(t){return this._readArray(t,Float64Array,this.getFloat64)},getString:function(t){for(var e="",i=0;t>i;++i)e+=this.getChar();return e},_readArray:function(t,e,i){for(var n=new e(t),r=0;t>r;++r)n[r]=i.call(this);return n}},HX._numActiveAttributes=0,HX._renderTargetStack=[null],HX._renderTargetInvalid=!0,HX._viewport={x:0,y:0,width:0,height:0},HX._viewportInvalid=!0,HX._depthMask=!0,HX._depthMaskInvalid=!0,HX._cullMode=null,HX._cullModeInvalid=!0,HX._depthTest=null,HX._depthTestInvalid=!0,HX._blendState=null,HX._blendStateInvalid=!1,HX._stencilStateStack=[null],HX._stencilStateInvalid=!1,HX._glStats={numDrawCalls:0,numTriangles:0,numClears:0},HX._clearGLStats=function(){HX._glStats.numDrawCalls=0,HX._glStats.numTriangles=0,HX._glStats.numClears=0},HX.clear=function(t){void 0===t&&(t=HX.COMPLETE_CLEAR_MASK),HX._updateRenderState(),HX_GL.clear(t),++HX._glStats.numClears},HX.drawElements=function(t,e,i){++HX._glStats.numDrawCalls,HX._glStats.numTriangles+=e/3,HX._updateRenderState(),HX_GL.drawElements(t,e,HX_GL.UNSIGNED_SHORT,2*i)},HX.setViewport=function(t){HX._viewportInvalid=!0,t?(HX._viewport.x=t.x||0,HX._viewport.y=t.y||0,HX._viewport.width=t.width||0,HX._viewport.height=t.height||0):(HX._viewport.x=0,HX._viewport.y=0,HX._viewport.width=HX.TARGET_CANVAS.width,HX._viewport.height=HX.TARGET_CANVAS.height)},HX.getCurrentRenderTarget=function(){return HX._renderTargetStack[HX._renderTargetStack.length-1]},HX.pushRenderTarget=function(t){HX._renderTargetStack.push(t),HX._renderTargetInvalid=!0,HX.setViewport(t)},HX.popRenderTarget=function(){HX._renderTargetStack.pop(),HX._renderTargetInvalid=!0,HX.setViewport(HX._renderTargetStack[HX._renderTargetStack.length-1])},HX.enableAttributes=function(t){var e=HX._numActiveAttributes;if(t>e)for(var i=e;t>i;++i)HX_GL.enableVertexAttribArray(i);else if(e>t){t+=1;for(var i=t;e>i;++i)HX_GL.disableVertexAttribArray(i)}HX._numActiveAttributes=t},HX.setClearColor=function(t){t=isNaN(t)?t:new HX.Color(t),HX_GL.clearColor(t.r,t.g,t.b,t.a)},HX.setCullMode=function(t){HX._cullMode!==t&&(HX._cullMode=t,HX._cullModeInvalid=!0)},HX.setDepthMask=function(t){HX._depthMask!==t&&(HX._depthMask=t,HX._depthMaskInvalid=!0)},HX.setDepthTest=function(t){HX._depthTest!==t&&(HX._depthTest=t,HX._depthTestInvalid=!0)},HX.setBlendState=function(t){HX._blendState!==t&&(HX._blendState=t,HX._blendStateInvalid=!0)},HX.updateStencilReferenceValue=function(t){var e=HX._stencilStateStack[HX._stencilStateStack.length-1];e&&e.reference!==t&&(e.reference=t,!HX._stencilStateInvalid&&e.enabled&&HX_GL.stencilFunc(e.comparison,t,e.readMask))},HX.pushStencilState=function(t){HX._stencilStateStack.push(t),HX._stencilStateInvalid=!0},HX.popStencilState=function(){HX._stencilStateStack.pop(),HX._stencilStateInvalid=!0},HX._updateRenderState=function(){if(HX._renderTargetInvalid){var t=HX._renderTargetStack[HX._renderTargetStack.length-1];t?(HX_GL.bindFramebuffer(HX_GL.FRAMEBUFFER,t._fbo),t._numColorTextures>1&&HX.EXT_DRAW_BUFFERS.drawBuffersWEBGL(t._drawBuffers)):HX_GL.bindFramebuffer(HX_GL.FRAMEBUFFER,null),HX._renderTargetInvalid=!1}if(this._viewportInvalid&&(HX_GL.viewport(HX._viewport.x,HX._viewport.y,HX._viewport.width,HX._viewport.height),HX._viewportInvalid=!1),HX._depthMaskInvalid&&(HX_GL.depthMask(HX._depthMask),HX._depthMaskInvalid=!1),HX._cullModeInvalid&&(HX._cullMode===HX.CullMode.NONE?HX_GL.disable(HX_GL.CULL_FACE):(HX_GL.enable(HX_GL.CULL_FACE),HX_GL.cullFace(HX._cullMode))),HX._depthTestInvalid&&(HX._depthTest===HX.Comparison.DISABLED?HX_GL.disable(HX_GL.DEPTH_TEST):(HX_GL.enable(HX_GL.DEPTH_TEST),HX_GL.depthFunc(HX._depthTest))),HX._blendStateInvalid){var e=HX._blendState;if(null===e||void 0===e||e.enabled===!1)HX_GL.disable(HX_GL.BLEND);else{HX_GL.enable(HX_GL.BLEND),HX_GL.blendFunc(e.srcFactor,e.dstFactor),HX_GL.blendEquation(e.operator);var i=e.color;i&&HX_GL.blendColor(i.r,i.g,i.b,i.a)}HX._blendStateInvalid=!1}if(HX._stencilStateInvalid){var e=HX._stencilStateStack[HX._stencilStateStack.length-1];null==e||e.enabled===!1?(HX_GL.disable(HX_GL.STENCIL_TEST),HX_GL.stencilFunc(HX.Comparison.ALWAYS,0,255),HX_GL.stencilOp(HX.StencilOp.KEEP,HX.StencilOp.KEEP,HX.StencilOp.KEEP)):(HX_GL.enable(HX_GL.STENCIL_TEST),HX_GL.stencilFunc(e.comparison,e.reference,e.readMask),HX_GL.stencilOp(e.onStencilFail,e.onDepthFail,e.onPass),HX_GL.stencilMask(e.writeMask)),HX._stencilStateInvalid=!1}},HX.IndexBuffer=function(){this._buffer=HX_GL.createBuffer()},HX.IndexBuffer.prototype={constructor:HX.IndexBuffer,uploadData:function(t,e){void 0===e&&(e=HX_GL.STATIC_DRAW),this.bind(),HX_GL.bufferData(HX_GL.ELEMENT_ARRAY_BUFFER,t,e)},dispose:function(){this._buffer&&(HX_GL.deleteBuffer(this._buffer),this._buffer=0)},bind:function(){HX_GL.bindBuffer(HX_GL.ELEMENT_ARRAY_BUFFER,this._buffer)}},HX.PropertyListener=function(){this._enabled=!0,this.onChange=new HX.Signal,this._targets=[]},HX.PropertyListener.prototype={get enabled(){return this._enabled},set enabled(t){this._enabled=t},add:function(t,e){var i=this._targets.length;this._targets.push({object:t,propertyName:e,value:t[e]});var n=this,r=n._targets[i];Object.defineProperty(t,e,{get:function(){return r.value},set:function(t){t!==r.value&&(r.value=t,n._enabled&&n.onChange.dispatch())}})},remove:function(t,e){for(var i=0;i<this._targets.length;++i){var n=this._targets[i];n.object===t&&n.propertyName===e&&(delete n.object[n.propertyName],n.object[n.propertyName]=n.value,this._targets.splice(i--,1))}}},HX.Rect=function(t,e,i,n){this.x=t||0,this.y=e||0,this.width=i||0,this.height=n||0},HX.Signal=function(){this._listeners=[],this._lookUp={}},HX.Signal.prototype={bind:function(t,e){this._lookUp[t]=this._listeners.length;var i=e?t.bind(e):t;this._listeners.push(i)},unbind:function(t){var e=this._lookUp[t];this._listeners.splice(e,1),delete this._lookUp[t]},dispatch:function(t){for(var e=this._listeners.length,i=0;e>i;++i)this._listeners[i](t)},get hasListeners(){return this._listeners.length>0}},HX.VertexBuffer=function(){this._buffer=HX_GL.createBuffer()},HX.VertexBuffer.prototype={constructor:HX.VertexBuffer,uploadData:function(t,e){void 0===e&&(e=HX_GL.STATIC_DRAW),this.bind(),HX_GL.bufferData(HX_GL.ARRAY_BUFFER,t,e)},dispose:function(){this._buffer&&(HX_GL.deleteBuffer(this._buffer),this._buffer=0)},bind:function(){HX_GL.bindBuffer(HX_GL.ARRAY_BUFFER,this._buffer)}},HX.FileUtils={extractPathAndFilename:function(t){var e=t.lastIndexOf("/"),i={};return e>=0?(i.path=t.substr(0,e+1),i.filename=t.substr(e+1)):(i.path="./",i.filename=t),i}},HX.URLLoader=function(){this._params=void 0,this._data=null,this._timeout=5e3,this._method="GET",this._type=HX.URLLoader.DATA_TEXT},HX.URLLoader.ERROR_TIME_OUT=408,HX.URLLoader.METHOD_GET="get",HX.URLLoader.METHOD_POST="post",HX.URLLoader.DATA_TEXT=0,HX.URLLoader.DATA_BINARY=1,HX.URLLoader.prototype={get type(){return this._type},set type(t){this._type=t},get method(){return this._method},set method(t){this._method=t},get timeoutDuration(){return this._timeout},set timeoutDuration(t){this._timeout=t},get parameters(){return this._params},set parameters(t){this._params=t},get data(){return this._data},load:function(t){var e=new XMLHttpRequest;e.open(this._method,t,!0),e.timeout=this._timeout,this._type===HX.URLLoader.DATA_BINARY&&(e.responseType="arraybuffer");var i=this;e.ontimeout=function(){i.onError(HX.URLLoader.ERROR_TIME_OUT)},e.onreadystatechange=function(){var t=this.DONE||4;this.readyState===t&&(200===this.status?(this._data=i._type===HX.URLLoader.DATA_TEXT?e.responseText:new DataView(e.response),i.onComplete&&i.onComplete(this._data)):i.onError&&i.onError(this.status))},e.send(this._params)},onComplete:function(t){},onError:function(t){}},HX.BulkURLLoader=function(){this._params=void 0,this._timeout=5e3,this._method="GET",this._type=HX.URLLoader.DATA_TEXT,this._abortOnFail=!1,this._files=null,this._index=0,this._data=null},HX.BulkURLLoader.prototype={getData:function(t){return this._data[t]},get type(){return this._type},set type(t){this._type=t},get abortOnFail(){return this._abortOnFail},set abortOnFail(t){this._abortOnFail=t},get method(){return this._method},set method(t){this._method=t},get timeoutDuration(){return this._timeout},set timeoutDuration(t){this._timeout=t},get parameters(){return this._params},set parameters(t){this._params=t},load:function(t){this._files=t,this._data={},this._index=0,this._loadQueued()},_loadQueued:function(){if(this._index===this._files.length)return void this.onComplete();var t=new HX.URLLoader;t.parameters=this._params,t.timeoutDuration=this._timeout,t.method=this._method,t.type=this._type;var e=this;t.onComplete=function(t){var i=e._files[e._index];e._data[i]=t,++e._index,e._loadQueued()},t.onFail=function(){e.onFail(),e._abortOnFail||t.onComplete(null)},t.load(this._files[this._index])},onComplete:function(t){},onError:function(t){}},HX.Shader=function(t,e){this._ready=!1,this._vertexShader=null,this._fragmentShader=null,this._program=null,this._uniformSetters=null,t&&e&&this.init(t,e)},HX.Shader.ID_COUNTER=0,HX.Shader.prototype={constructor:HX.Shader,isReady:function(){return this._ready},init:function(t,e){if(t=HX.GLSLIncludeGeneral+t,e=HX.GLSLIncludeGeneral+e,this._vertexShader=HX_GL.createShader(HX_GL.VERTEX_SHADER),!this._initShader(this._vertexShader,t)){if(this.dispose(),HX.OPTIONS.throwOnShaderError)throw new Error("Failed generating vertex shader: \n"+t);return void console.warn("Failed generating vertex shader")}if(this._fragmentShader=HX_GL.createShader(HX_GL.FRAGMENT_SHADER),!this._initShader(this._fragmentShader,e)){if(this.dispose(),HX.OPTIONS.throwOnShaderError)throw new Error("Failed generating fragment shader: \n"+e);return void console.warn("Failed generating fragment shader:")}if(this._program=HX_GL.createProgram(),HX_GL.attachShader(this._program,this._vertexShader),HX_GL.attachShader(this._program,this._fragmentShader),HX_GL.linkProgram(this._program),!HX_GL.getProgramParameter(this._program,HX_GL.LINK_STATUS)){var i=HX_GL.getProgramInfoLog(this._program);if(this.dispose(),console.log("**********"),HX.Debug.printShaderCode(t),console.log("**********"),HX.Debug.printShaderCode(e),HX.OPTIONS.throwOnShaderError)throw new Error("Error in program linking:"+i);return void console.warn("Error in program linking:"+i)}this._ready=!0,this._uniformSetters=HX.UniformSetter.getSetters(this)},updateRenderState:function(t,e){HX_GL.useProgram(this._program);for(var i=this._uniformSetters.length,n=0;i>n;++n)this._uniformSetters[n].execute(t,e)},_initShader:function(t,e){return HX_GL.shaderSource(t,e),HX_GL.compileShader(t),HX_GL.getShaderParameter(t,HX_GL.COMPILE_STATUS)?!0:(console.warn(HX_GL.getShaderInfoLog(t)),HX.Debug.printShaderCode(e),!1)},dispose:function(){HX_GL.deleteShader(this._vertexShader),HX_GL.deleteShader(this._fragmentShader),HX_GL.deleteProgram(this._program),this._ready=!1},getProgram:function(){
return this._program},getUniformLocation:function(t){return HX_GL.getUniformLocation(this._program,t)},getAttributeLocation:function(t){return HX_GL.getAttribLocation(this._program,t)}},HX.MaterialPass=function(t){this._shader=t,this._textureSlots=[],this._uniforms={},this._elementType=HX.ElementType.TRIANGLES,this._cullMode=HX.CullMode.BACK,this._depthTest=HX.Comparison.LESS_EQUAL,this._writeDepth=!0,this._blendState=null,this._gbuffer=null,this._enabled=!0,this._storeUniforms(),this._textureSetters=HX.TextureSetter.getSetters(this),this._useSkinning=!1},HX.MaterialPass.GEOMETRY_PASS=0,HX.MaterialPass.SHADOW_DEPTH_PASS=-1,HX.MaterialPass.NUM_PASS_TYPES=2,HX.MaterialPass.GEOMETRY_COLOR_PASS=HX.MaterialPass.GEOMETRY_PASS,HX.MaterialPass.GEOMETRY_NORMAL_PASS=HX.MaterialPass.GEOMETRY_PASS+1,HX.MaterialPass.GEOMETRY_SPECULAR_PASS=HX.MaterialPass.GEOMETRY_PASS+2,HX.MaterialPass.GEOMETRY_LINEAR_DEPTH_PASS=HX.MaterialPass.GEOMETRY_PASS+3,HX.MaterialPass.prototype={constructor:HX.MaterialPass,getShader:function(){return this._shader},get elementType(){return this._elementType},set elementType(t){this._elementType=t},get depthTest(){return this._depthTest},set depthTest(t){this._depthTest=t},set writeDepth(t){this._writeDepth=t},get cullMode(){return this._cullMode},set cullMode(t){this._cullMode=t},get blendState(){return this._blendState},set blendState(t){this._blendState=t},updateRenderState:function(t){for(var e=this._textureSetters.length,i=0;e>i;++i)this._textureSetters[i].execute(t);e=this._textureSlots.length;for(var i=0;e>i;++i){var n=this._textureSlots[i],r=n.texture;r?r.isReady()?r.bind(i):r._default.bind(i):HX.Texture2D.DEFAULT.bind(i)}HX.setCullMode(this._cullMode),HX.setDepthTest(this._depthTest),HX.setDepthMask(this._writeDepth),HX.setBlendState(this._blendState)},_storeUniforms:function(){for(var t=HX_GL.getProgramParameter(this._shader._program,HX_GL.ACTIVE_UNIFORMS),e=0;t>e;++e){var i=HX_GL.getActiveUniform(this._shader._program,e),n=i.name,r=HX_GL.getUniformLocation(this._shader._program,n);this._uniforms[n]={type:i.type,location:r,size:i.size}}},getTextureSlot:function(t){if(!this._uniforms.hasOwnProperty(t))return null;HX_GL.useProgram(this._shader._program);var e=this._uniforms[t];if(e){for(var i=e.location,n=null,r=this._textureSlots.length,o=0;r>o;++o)if(this._textureSlots[o].location===i){n=this._textureSlots[o];break}return null==n&&(n=new HX.TextureSlot,n.name=t,this._textureSlots.push(n),HX_GL.uniform1i(i,o),n.location=i),n}},setTexture:function(t,e){var i=this.getTextureSlot(t);i&&(i.texture=e)},getUniformLocation:function(t){return this._uniforms.hasOwnProperty(t)?this._uniforms[t].location:void 0},getAttributeLocation:function(t){return this._shader.getAttributeLocation(t)},setUniformArray:function(t,e){if(t+="[0]",this._uniforms.hasOwnProperty(t)){var i=this._uniforms[t];switch(HX_GL.useProgram(this._shader._program),i.type){case HX_GL.FLOAT:HX_GL.uniform1fv(i.location,e);break;case HX_GL.FLOAT_VEC2:HX_GL.uniform2fv(i.location,e);break;case HX_GL.FLOAT_VEC3:HX_GL.uniform3fv(i.location,e);break;case HX_GL.FLOAT_VEC4:HX_GL.uniform4fv(i.location,e);break;case HX_GL.INT:HX_GL.uniform1iv(i.location,e);break;case HX_GL.INT_VEC2:HX_GL.uniform2iv(i.location,e);break;case HX_GL.INT_VEC3:HX_GL.uniform3iv(i.location,e);break;case HX_GL.INT_VEC4:HX_GL.uniform1iv(i.location,e);break;case HX_GL.BOOL:HX_GL.uniform1bv(i.location,e);break;case HX_GL.BOOL_VEC2:HX_GL.uniform2bv(i.location,e);break;case HX_GL.BOOL_VEC3:HX_GL.uniform3bv(i.location,e);break;case HX_GL.BOOL_VEC4:HX_GL.uniform4bv(i.location,e);break;default:throw new Error("Unsupported uniform format for setting. May be a todo.")}}},setUniform:function(t,e){if(this._uniforms.hasOwnProperty(t)){var i=this._uniforms[t];switch(HX_GL.useProgram(this._shader._program),i.type){case HX_GL.FLOAT:HX_GL.uniform1f(i.location,e);break;case HX_GL.FLOAT_VEC2:HX_GL.uniform2f(i.location,e.x,e.y);break;case HX_GL.FLOAT_VEC3:HX_GL.uniform3f(i.location,e.x||e.r||0,e.y||e.g||0,e.z||e.b||0);break;case HX_GL.FLOAT_VEC4:HX_GL.uniform4f(i.location,e.x||e.r||0,e.y||e.g||0,e.z||e.b||0,e.w||e.a||0);break;case HX_GL.INT:HX_GL.uniform1i(i.location,e);break;case HX_GL.INT_VEC2:HX_GL.uniform2i(i.location,e.x,e.y);break;case HX_GL.INT_VEC3:HX_GL.uniform3i(i.location,e.x,e.y,e.z);break;case HX_GL.INT_VEC4:HX_GL.uniform1i(i.location,e.x,e.y,e.z,e.w);break;case HX_GL.BOOL:HX_GL.uniform1i(i.location,e);break;case HX_GL.BOOL_VEC2:HX_GL.uniform2i(i.location,e.x,e.y);break;case HX_GL.BOOL_VEC3:HX_GL.uniform3i(i.location,e.x,e.y,e.z);break;case HX_GL.BOOL_VEC4:HX_GL.uniform4i(i.location,e.x,e.y,e.z,e.w);break;default:throw new Error("Unsupported uniform format for setting. May be a todo.")}}},isEnabled:function(){return this._enabled},setEnabled:function(t){this._enabled=t}},HX.TransparencyMode={OPAQUE:0,ALPHA:1,ADDITIVE:2,NUM_MODES:3},HX.Material=function(){this._elementType=HX.ElementType.TRIANGLES,this._transparencyMode=HX.TransparencyMode.OPAQUE,this._passes=new Array(HX.Material.NUM_PASS_TYPES),this._renderOrderHint=++HX.Material.ID_COUNTER,this._renderOrder=0,this.onChange=new HX.Signal,this._textures={},this._uniforms={},this._name=null},HX.Material.ID_COUNTER=0,HX.Material.prototype={constructor:HX.Material,get name(){return this._name},set name(t){this._name=t},get transparencyMode(){return this._transparencyMode},set transparencyMode(t){this._transparencyMode=t,this.setUniform("hx_transparencyMode",this._transparencyMode/255)},get renderOrder(){return this._renderOrder},set renderOrder(t){this._renderOrder=t},get elementType(){return this._elementType},set elementType(t){this._elementType=t;for(var e=0;e<HX.MaterialPass.NUM_PASS_TYPES;++e)this._passes[e]&&(this._passes[e].elementType=t)},getPass:function(t){return this._passes[t]},setPass:function(t,e){if(this._passes[t]=e,e){t===HX.MaterialPass.SHADOW_DEPTH_PASS&&(e.cullMode=HX.DirectionalLight.SHADOW_FILTER.getCullMode()),(t===HX.GEOMETRY_NORMAL_PASS||t===HX.GEOMETRY_SPECULAR_PASS||t==HX.GEOMETRY_LINEAR_DEPTH_PASS)&&(e.depthTest=HX.Comparison.EQUAL),e.elementType=this._elementType;for(var i in this._textures)this._textures.hasOwnProperty(i)&&e.setTexture(i,this._textures[i]);for(var n in this._uniforms)this._uniforms.hasOwnProperty(n)&&("]"==n.charAt(n.length-1)?e.setUniformArray(n.substr(0,n.length-3),this._uniforms[n]):e.setUniform(n,this._uniforms[n]));e.setUniform("hx_transparencyMode",this._transparencyMode/255)}this.onChange.dispatch()},hasPass:function(t){return!!this._passes[t]},setTexture:function(t,e){this._textures[t]=e;for(var i=0;i<HX.MaterialPass.NUM_PASS_TYPES;++i)this.hasPass(i)&&this._passes[i].setTexture(t,e)},setUniform:function(t,e,i){if(void 0===i&&(i=!0),i||!this._uniforms.hasOwnProperty(t)){this._uniforms[t]=e;for(var n=0;n<HX.MaterialPass.NUM_PASS_TYPES;++n)this._passes[n]&&this._passes[n].setUniform(t,e)}},setUniformArray:function(t,e,i){if(void 0===i&&(i=!0),i||!this._uniforms.hasOwnProperty(t+"[0]")){this._uniforms[t+"[0]"]=e;for(var n=0;n<HX.MaterialPass.NUM_PASS_TYPES;++n)this._passes[n]&&this._passes[n].setUniformArray(t,e)}},_setUseSkinning:function(t){this._useSkinning=t},toString:function(){return"[Material(name="+this._name+")]"}},HX.AssetLoader=function(t){this.onComplete=new HX.Signal,this.onFail=new HX.Signal,this.fileMap={},this.options={},this._importerType=t},HX.AssetLoader.prototype={load:function(t,e){function i(e){console.warn("Failed loading "+t+". Error code: "+e),this.onFail&&(this.onFail instanceof HX.Signal?this.onFail.dispatch(e):this.onFail(e))}var n=new this._importerType;e=e||n.createContainer(),n.onComplete=this.onComplete,n.onFail=this.onFail,n.fileMap=this.fileMap,n.options=this.options;var r=HX.FileUtils.extractPathAndFilename(t);if(n.path=r.path,n.filename=r.filename,n.dataType===HX.Importer.TYPE_IMAGE){var o=new Image;o.onload=function(){n.parse(o,e)},o.onError=function(){console.warn("Failed loading texture '"+t+"'"),onError&&onError()},o.src=t}else{var a=new HX.URLLoader;a.type=n.dataType,a.onComplete=function(t){n.parse(t,e)},a.onError=function(t){i(t)},a.load(t)}return e}},HX.Importer=function(t,e){this._dataType=void 0===e?HX.URLLoader.DATA_TEXT:e,this._containerType=t,this.onComplete=null,this.onFail=null,this.fileMap=null,this.options={},this.path="",this.filename=""},HX.Importer.prototype={get dataType(){return this._dataType},createContainer:function(){return new this._containerType},parse:function(t,e){},_notifyComplete:function(t){this.onComplete&&(this.onComplete instanceof HX.Signal?this.onComplete.dispatch(t):this.onComplete(t))},_notifyFailure:function(t){this.onFail instanceof HX.Signal?(this.onFail.hasListeners||console.error(t),this.onFail.dispatch(t)):this.onFail(t)},_correctURL:function(t){return this.path+(this.fileMap.hasOwnProperty(t)?this.fileMap[t]:t).replace("\\","/")}},HX.Importer.TYPE_TEXT=HX.URLLoader.DATA_TEXT,HX.Importer.TYPE_BINARY=HX.URLLoader.DATA_BINARY,HX.Importer.TYPE_IMAGE=2,HX.SceneNode=function(){HX.Transform.call(this),this._name=null,this._worldMatrix=new HX.Matrix4x4,this._worldBoundsInvalid=!0,this._matrixInvalid=!0,this._worldMatrixInvalid=!0,this._parent=null,this._scene=null,this._worldBounds=this._createBoundingVolume(),this._debugBounds=null,this._visible=!0,this._renderOrderHint=0},HX.SceneNode.prototype=Object.create(HX.Transform.prototype),Object.defineProperties(HX.SceneNode.prototype,{name:{get:function(){return this._name},set:function(t){this._name=t}},visible:{get:function(){return this._visible},set:function(t){this._visible=t}},worldBounds:{get:function(){return this._worldBoundsInvalid&&(this._updateWorldBounds(),this._worldBoundsInvalid=!1),this._worldBounds}},worldMatrix:{get:function(){return this._worldMatrixInvalid&&this._updateWorldMatrix(),this._worldMatrix}},showDebugBounds:{get:function(){return null!==this._debugBounds},set:function(t){!!this._debugBounds!==t&&(t?(this._debugBounds=this._worldBounds.getDebugModelInstance(),this._updateDebugBounds()):this._debugBounds=null)}}}),HX.SceneNode.prototype._applyMatrix=function(){HX.Transform.prototype._applyMatrix.call(this),this._invalidateWorldMatrix()},HX.SceneNode.prototype.findMaterialByName=function(t){var e=new HX.MaterialQueryVisitor(t);return this.acceptVisitor(e),e.foundMaterial},HX.SceneNode.prototype.findNodeByName=function(t){return this._name===t?this:null},HX.SceneNode.prototype._setScene=function(t){this._scene=t},HX.SceneNode.prototype.acceptVisitor=function(t){this._debugBounds&&this._debugBounds.acceptVisitor(t)},HX.SceneNode.prototype._invalidateMatrix=function(){HX.Transform.prototype._invalidateMatrix.call(this),this._invalidateWorldMatrix()},HX.SceneNode.prototype._invalidateWorldMatrix=function(){this._worldMatrixInvalid=!0,this._invalidateWorldBounds()},HX.SceneNode.prototype._invalidateWorldBounds=function(){this._worldBoundsInvalid||(this._worldBoundsInvalid=!0,this._parent&&this._parent._invalidateWorldBounds())},HX.SceneNode.prototype._updateWorldBounds=function(){this._debugBounds&&this._updateDebugBounds()},HX.SceneNode.prototype._updateDebugBounds=function(){var t=this._debugBounds.matrix,e=this._worldBounds;console.log(e._halfExtentX,2*e._halfExtentY,2*e._halfExtentZ),t.fromScale(2*e._halfExtentX,2*e._halfExtentY,2*e._halfExtentZ),t.appendTranslation(e._center),this._debugBounds.matrix=t},HX.SceneNode.prototype._updateMatrix=function(){HX.Transform.prototype._updateMatrix.call(this),this._invalidateWorldBounds()},HX.SceneNode.prototype._updateWorldMatrix=function(){this._parent?this._worldMatrix.multiply(this._parent.worldMatrix,this.matrix):this._worldMatrix.copyFrom(this.matrix),this._worldMatrixInvalid=!1},HX.SceneNode.prototype._createBoundingVolume=function(){return new HX.BoundingAABB},HX.SceneNode.prototype.toString=function(){return"[SceneNode(name="+this._name+")]"},HX.Component=function(){this._entity=null},HX.Component.prototype={onAdded:function(){},onRemoved:function(){},onUpdate:null,get entity(){return this._entity}},HX.Entity=function(){HX.SceneNode.call(this),this._components=null,this._requiresUpdates=!1,this._onRequireUpdatesChange=new HX.Signal,this._effects=null},HX.Entity.create=function(t){var e=new HX.Entity;if(t)for(var i=t.length,n=0;i>n;++n)e.addComponent(t[n]);return e},HX.Entity.prototype=Object.create(HX.SceneNode.prototype),HX.Entity.prototype.addComponents=function(t){for(var e=0;e<t.length;++e)this.addComponent(t[e])},HX.Entity.prototype.removeComponents=function(t){for(var e=0;e<t.length;++e)this.removeComponent(t[e])},HX.Entity.prototype.addComponent=function(t){if(t._entity)throw new Error("Component already added to an entity!");this._components=this._components||[],this._components.push(t),this._updateRequiresUpdates(this._requiresUpdates||!!t.onUpdate),t._entity=this,t.onAdded()},HX.Entity.prototype._updateRequiresUpdates=function(t){t!==this._requiresUpdates&&(this._requiresUpdates=t,this._onRequireUpdatesChange.dispatch(this))},HX.Entity.prototype.removeComponent=function(t){t.onRemoved();for(var e=!1,i=this._components.length,n=0,r=[],o=0;i>o;++o){var a=this._components[o];a!==t&&(r[n++]=a,e=e||!!components.onUpdate)}this._components=0===n?null:r,t._entity=null,this._updateRequiresUpdates(e)},HX.Entity.prototype.acceptVisitor=function(t){HX.SceneNode.prototype.acceptVisitor.call(this,t),this._effects&&t.visitEffects(this._effects,this)},HX.Entity.prototype.update=function(t){var e=this._components;if(e)for(var i=e.length,n=0;i>n;++n){var r=e[n];r.onUpdate&&r.onUpdate(t)}},HX.Entity.prototype._registerEffect=function(t){this._effects=this._effects||[],this._effects.push(t)},HX.Entity.prototype._unregisterEffect=function(t){var e=this._effects.indexOf(t);this._effects.splice(e,1),0===this._effects.length&&(this._effects=null)},HX.Entity.prototype._setScene=function(t){this._scene&&this._scene.entityEngine.unregisterEntity(this),t&&t.entityEngine.registerEntity(this),HX.SceneNode.prototype._setScene.call(this,t)},HX.EntityEngine=function(){this._updateableEntities=[],HX.onPreFrame.bind(this._update,this)},HX.EntityEngine.prototype={registerEntity:function(t){t._onRequireUpdatesChange.bind(this._onEntityUpdateChange,this),t._requiresUpdates&&this._addUpdatableEntity(t)},unregisterEntity:function(t){t._onRequireUpdatesChange.unbind(this),t._requiresUpdates&&this._removeUpdatableEntity(t)},_onEntityUpdateChange:function(t){t._requiresUpdates?this._addUpdatableEntity(t):this._removeUpdatableEntity(t)},_addUpdatableEntity:function(t){this._updateableEntities.push(t)},_removeUpdatableEntity:function(t){var e=this._updateableEntities.indexOf(t);this._updateableEntities.splice(e,1)},_update:function(t){for(var e=this._updateableEntities,i=e.length,n=0;i>n;++n)e[n].update(t)}},HX.Light=function(){HX.Entity.call(this),this._type=this.getTypeID(),this._intensity=3.1415,this._color=new HX.Color(1,1,1),this._scaledIrradiance=new HX.Color,this._castShadows=!1,this._updateScaledIrradiance()},HX.Light.prototype=Object.create(HX.Entity.prototype),HX.Light.prototype.getTypeID=function(){throw new Error("Light is not registered! Be sure to pass the light type into the customLights array upon Helix initialization.")},HX.Light.prototype.acceptVisitor=function(t){HX.Entity.prototype.acceptVisitor.call(this,t),t.visitLight(this)},Object.defineProperties(HX.Light.prototype,{intensity:{get:function(){return this._intensity},set:function(t){this._intensity=t,this._updateScaledIrradiance()}},color:{get:function(){return this._color},set:function(t){this._color=isNaN(t)?t:new HX.Color(t),this._updateScaledIrradiance()}}}),HX.Light.prototype.renderBatch=function(t,e,i){throw new Error("Abstract method!")},HX.Light.prototype.luminance=function(){return this._color.luminance()*this._intensity},HX.Light.prototype._updateScaledIrradiance=function(){var t=this._intensity/Math.PI;HX.OPTIONS.useGammaCorrection?this._color.gammaToLinear(this._scaledIrradiance):this._scaledIrradiance.copyFrom(this._color),this._scaledIrradiance.r*=t,this._scaledIrradiance.g*=t,this._scaledIrradiance.b*=t,this._invalidateWorldBounds()},HX.ShadowFilter=function(){this._blurShader=null,this._numBlurPasses=1,this.onShaderInvalid=new HX.Signal},HX.ShadowFilter.prototype={getShadowMapFormat:function(){return HX_GL.RGBA},getShadowMapDataType:function(){return HX_GL.UNSIGNED_BYTE},getGLSL:function(){throw new Error("Abstract method called")},getCullMode:function(){return HX.CullMode.BACK},get blurShader(){return this._blurShader||(this._blurShader=this._createBlurShader()),this._blurShader},get numBlurPasses(){return this._numBlurPasses},set numBlurPasses(t){this._numBlurPasses=t},init:function(){},_createBlurShader:function(){},_invalidateBlurShader:function(){this._blurShader&&(this._blurShader.dispose(),this._blurShader=null)}},HX.RenderItem=function(){this.worldMatrix=null,this.meshInstance=null,this.skeleton=null,this.skeletonMatrices=null,this.material=null,this.pass=null,this.camera=null,this.renderOrderHint=0,this.next=null},HX.RenderItemPool=function(){var t=null,e=null;this.getItem=function(){if(t){var i=t;return t=t.next,i}var i=new HX.RenderItemPool;return i.next=e,e=i,i},this.reset=function(){t=e}},HX.SceneVisitor=function(){},HX.SceneVisitor.prototype={collect:function(t,e){},qualifies:function(t){},visitLight:function(t){},visitAmbientLight:function(t){},visitModelInstance:function(t,e){},visitScene:function(t){},visitEffects:function(t,e){}},HX.BoundingVolume=function(t){this._type=t,this._expanse=HX.BoundingVolume.EXPANSE_EMPTY,this._minimumX=0,this._minimumY=0,this._minimumZ=0,this._maximumX=0,this._maximumY=0,this._maximumZ=0,this._halfExtentX=0,this._halfExtentY=0,this._halfExtentZ=0,this._center=new HX.Float4},HX.BoundingVolume.EXPANSE_EMPTY=0,HX.BoundingVolume.EXPANSE_INFINITE=1,HX.BoundingVolume.EXPANSE_FINITE=2,HX.BoundingVolume._testAABBToSphere=function(t,e){var i=e._maximumX,n=e._maximumY,r=e._maximumZ,o=t._minimumX,a=t._minimumY,s=t._minimumZ,h=e._halfExtentX,l=this._center.x,_=this._center.y,c=this._center.z,u=0;if(o>l){var f=l-o;u+=f*f}else if(l>i){var f=l-i;u+=f*f}if(a>_){var f=_-a;u+=f*f}else if(_>n){var f=_-n;u+=f*f}if(s>c){var f=c-s;u+=f*f}else if(c>r){var f=c-r;u+=f*f}return h*h>u},HX.BoundingVolume.prototype={get expanse(){return this._expanse},get type(){return this._type},growToIncludeMesh:function(t){throw new Error("Abstract method!")},growToIncludeBound:function(t){throw new Error("Abstract method!")},growToIncludeMinMax:function(t,e){throw new Error("Abstract method!")},clear:function(t){this._minimumX=this._minimumY=this._minimumZ=0,this._maximumX=this._maximumY=this._maximumZ=0,this._center.set(0,0,0),this._halfExtentX=this._halfExtentY=this._halfExtentZ=0,this._expanse=void 0===t?HX.BoundingVolume.EXPANSE_EMPTY:t},get minimum(){return new HX.Float4(this._minimumX,this._minimumY,this._minimumZ,1)},get maximum(){return new HX.Float4(this._maximumX,this._maximumY,this._maximumZ,1)},get center(){return this._center},get halfExtent(){return new HX.Float4(this._halfExtentX,this._halfExtentY,this._halfExtentZ,0)},getRadius:function(){throw new Error("Abstract method!")},transformFrom:function(t,e){throw new Error("Abstract method!")},intersectsConvexSolid:function(t,e){throw new Error("Abstract method!")},intersectsBound:function(t){throw new Error("Abstract method!")},classifyAgainstPlane:function(t){throw new Error("Abstract method!")},createDebugModelInstance:function(){throw new Error("Abstract method!")},getDebugModelInstance:function(){return void 0===this._type._debugModel&&(this._type._debugModel=this.createDebugModelInstance()),this._type._debugModel},getDebugMaterial:function(){if(void 0===HX.BoundingVolume._debugMaterial){var t=new HX.Material,e=new HX.Shader(HX.ShaderLibrary.get("debug_bounds_vertex.glsl"),HX.ShaderLibrary.get("debug_bounds_fragment.glsl")),i=new HX.MaterialPass(e);i.elementType=HX.ElementType.LINES,i.cullMode=HX.CullMode.NONE,t.setPass(HX.MaterialPass.GEOMETRY_PASS,i),t.setUniform("color",new HX.Color(1,0,1)),HX.BoundingVolume._debugMaterial=t}return HX.BoundingVolume._debugMaterial},toString:function(){return"BoundingVolume: [ "+this._minimumX+", "+this._minimumY+", "+this._minimumZ+" ] - [ "+this._maximumX+", "+this._maximumY+", "+this._maximumZ+" ], expanse: "+this._expanse}},HX.SkeletonBlendNode=function(){this._rootJointDeltaPosition=new HX.Float4,this._valueID=null,this._pose=new HX.SkeletonPose,this._rootPosition=new HX.Float4},HX.SkeletonBlendNode.prototype={update:function(t){},setValue:function(t,e){this._valueID==t&&this._applyValue(e)},get rootJointDeltaPosition(){return this._rootJointDeltaPosition},get numJoints(){return-1},get valueID(){return this._valueID},set valueID(t){this._valueID=t},_applyValue:function(t){}},HX.EffectPass=function(t,e){t=t||HX.ShaderLibrary.get("default_post_vertex.glsl");var i=new HX.Shader(t,e);HX.MaterialPass.call(this,i),this._uniformSetters=HX.UniformSetter.getSetters(this._shader),this._gbuffer=null,this._vertexLayout=null,this._cullMode=HX.CullMode.NONE,this._depthTest=HX.Comparison.DISABLED,this._writeDepth=!1,this.setMesh(HX.RectMesh.DEFAULT),this.setTexture("hx_dither2D",HX.DEFAULT_2D_DITHER_TEXTURE)},HX.EffectPass.prototype=Object.create(HX.MaterialPass.prototype),HX.EffectPass.prototype.setMesh=function(t){this._mesh!==t&&(this._mesh=t,this._vertexLayout=new HX.VertexLayout(this._mesh,this))},HX.EffectPass.prototype.updateRenderState=function(t){this._shader.updateRenderState(t._camera),HX.MaterialPass.prototype.updateRenderState.call(this,t),this._mesh._vertexBuffers[0].bind(),this._mesh._indexBuffer.bind();for(var e=this._vertexLayout,i=e.attributes,n=i.length,r=0;n>r;++r){var o=i[r];HX_GL.vertexAttribPointer(o.index,o.numComponents,HX_GL.FLOAT,!1,o.stride,o.offset)}HX.enableAttributes(e._numAttributes)},HX.Effect=function(){HX.Component.call(this),this._isSupported=!0,this._mesh=null,this._outputsGamma=!1},HX.Effect.prototype=Object.create(HX.Component.prototype),HX.Effect.prototype.isSupported=function(){return this._isSupported},HX.Effect.prototype.render=function(t,e){this._renderer=t,this.draw(e)},HX.Effect.prototype.draw=function(t){throw new Error("Abstract method error!")},HX.Effect.prototype._drawPass=function(t){t.updateRenderState(this._renderer),HX.drawElements(HX_GL.TRIANGLES,6,0)},HX.Effect.prototype.onAdded=function(){this._entity._registerEffect(this)},HX.Effect.prototype.onRemoved=function(){this._entity._unregisterEffect(this)},HX.Effect.prototype._swapHDRBuffers=function(){this._renderer._swapHDRFrontAndBack()},HX.GLSLIncludeGeneral="precision highp float;\n\n"+HX.ShaderLibrary.get("snippets_general.glsl")+"\n\n",HX.GLSLIncludeGeometryPass="\n"+HX.ShaderLibrary.get("snippets_geometry_pass.glsl")+"\n",HX.TextureSetter={},HX.TextureSetter.getSetters=function(t){return void 0===HX.TextureSetter._table&&HX.TextureSetter._init(),HX.TextureSetter._findSetters(t)},HX.TextureSetter._findSetters=function(t){var e=[];for(var i in HX.TextureSetter._table){var n=t.getTextureSlot(i);if(null!=n){var r=new HX.TextureSetter._table[i];e.push(r),r.slot=n}}return e},HX.TextureSetter._init=function(){HX.TextureSetter._table={},HX.TextureSetter._table.hx_gbufferColor=HX.GBufferColorSetter,HX.TextureSetter._table.hx_gbufferNormals=HX.GBufferNormalsSetter,HX.TextureSetter._table.hx_gbufferSpecular=HX.GBufferSpecularSetter,HX.TextureSetter._table.hx_gbufferDepth=HX.GBufferDepthSetter,HX.TextureSetter._table.hx_backbuffer=HX.BackbufferSetter,HX.TextureSetter._table.hx_frontbuffer=HX.FrontbufferSetter},HX.GBufferColorSetter=function(){},HX.GBufferColorSetter.prototype.execute=function(t){t._gbuffer&&(this.slot.texture=t._gbuffer[0])},HX.GBufferNormalsSetter=function(){},HX.GBufferNormalsSetter.prototype.execute=function(t){t._gbuffer&&(this.slot.texture=t._gbuffer[1])},HX.GBufferSpecularSetter=function(){},HX.GBufferSpecularSetter.prototype.execute=function(t){t._gbuffer&&(this.slot.texture=t._gbuffer[2])},HX.GBufferDepthSetter=function(){},HX.GBufferDepthSetter.prototype.execute=function(t){t._gbuffer&&(this.slot.texture=t._gbuffer[3])},HX.FrontbufferSetter=function(){},HX.FrontbufferSetter.prototype.execute=function(t){t._hdrFront&&(this.slot.texture=t._hdrFront.texture)},HX.BackbufferSetter=function(){},HX.BackbufferSetter.prototype.execute=function(t){t._hdrBack&&(this.slot.texture=t._hdrBack.texture)},HX.UniformSetter={},HX.UniformSetter.getSetters=function(t){return void 0===HX.UniformSetter._table&&HX.UniformSetter._init(),HX.UniformSetter._findSetters(t)},HX.UniformSetter._findSetters=function(t){var e=[];for(var i in HX.UniformSetter._table){var n=HX_GL.getUniformLocation(t._program,i);if(null!=n){var r=new HX.UniformSetter._table[i];e.push(r),r.location=n}}return e},HX.UniformSetter._init=function(){HX.UniformSetter._table={},HX.UniformSetter._table.hx_worldMatrix=HX.WorldMatrixSetter,HX.UniformSetter._table.hx_worldViewMatrix=HX.WorldViewMatrixSetter,HX.UniformSetter._table.hx_wvpMatrix=HX.WorldViewProjectionSetter,HX.UniformSetter._table.hx_viewMatrix=HX.ViewMatrixSetter,HX.UniformSetter._table.hx_projectionMatrix=HX.ProjectionSetter,HX.UniformSetter._table.hx_inverseProjectionMatrix=HX.InverseProjectionSetter,HX.UniformSetter._table.hx_inverseWVPMatrix=HX.InverseWVPSetter,HX.UniformSetter._table.hx_viewProjectionMatrix=HX.ViewProjectionSetter,HX.UniformSetter._table.hx_inverseViewProjectionMatrix=HX.InverseViewProjectionSetter,HX.UniformSetter._table.hx_normalWorldMatrix=HX.NormalWorldMatrixSetter,HX.UniformSetter._table.hx_normalWorldViewMatrix=HX.NormalWorldViewMatrixSetter,HX.UniformSetter._table.hx_cameraWorldPosition=HX.CameraWorldPosSetter,HX.UniformSetter._table.hx_cameraWorldMatrix=HX.CameraWorldMatrixSetter,HX.UniformSetter._table.hx_cameraFrustumRange=HX.CameraFrustumRangeSetter,HX.UniformSetter._table.hx_rcpCameraFrustumRange=HX.RCPCameraFrustumRangeSetter,HX.UniformSetter._table.hx_cameraNearPlaneDistance=HX.CameraNearPlaneDistanceSetter,HX.UniformSetter._table.hx_cameraFarPlaneDistance=HX.CameraFarPlaneDistanceSetter,HX.UniformSetter._table.hx_renderTargetResolution=HX.RenderTargetResolutionSetter,HX.UniformSetter._table.hx_rcpRenderTargetResolution=HX.RCPRenderTargetResolutionSetter,HX.UniformSetter._table.hx_dither2DTextureScale=HX.Dither2DTextureScaleSetter,HX.UniformSetter._table["hx_skinningMatrices[0]"]=HX.SkinningMatricesSetter,HX.UniformSetter._table["hx_poissonDisk[0]"]=HX.PoissonDiskSetter},HX.WorldMatrixSetter=function(){},HX.WorldMatrixSetter.prototype.execute=function(t,e){HX_GL.uniformMatrix4fv(this.location,!1,e.worldMatrix._m)},HX.ViewProjectionSetter=function(){},HX.ViewProjectionSetter.prototype.execute=function(t){HX_GL.uniformMatrix4fv(this.location,!1,t.viewProjectionMatrix._m)},HX.InverseViewProjectionSetter=function(){},HX.InverseViewProjectionSetter.prototype.execute=function(t){HX_GL.uniformMatrix4fv(this.location,!1,t.inverseViewProjectionMatrix._m)},HX.InverseWVPSetter=function(){},HX.InverseWVPSetter.prototype.execute=function(t){HX_GL.uniformMatrix4fv(this.location,!1,t.inverseViewProjectionMatrix._m)},HX.ProjectionSetter=function(){},HX.ProjectionSetter.prototype.execute=function(t){HX_GL.uniformMatrix4fv(this.location,!1,t.projectionMatrix._m)},HX.InverseProjectionSetter=function(){},HX.InverseProjectionSetter.prototype.execute=function(t){HX_GL.uniformMatrix4fv(this.location,!1,t.inverseProjectionMatrix._m)},HX.WorldViewProjectionSetter=function(){},HX.WorldViewProjectionSetter.prototype.execute=function(){var t=new HX.Matrix4x4,e=t._m;return function(i,n){t.multiply(i.viewProjectionMatrix,n.worldMatrix),HX_GL.uniformMatrix4fv(this.location,!1,e)}}(),HX.WorldViewMatrixSetter=function(){this._matrix=new HX.Matrix4x4},HX.WorldViewMatrixSetter.prototype.execute=function(){var t=new HX.Matrix4x4,e=t._m;return function(i,n){t.multiply(i.viewMatrix,n.worldMatrix),HX_GL.uniformMatrix4fv(this.location,!1,e)}}(),HX.NormalWorldMatrixSetter=function(){},HX.NormalWorldMatrixSetter.prototype.execute=function(){var t=new Float32Array(9);return function(e,i){i.worldMatrix.writeNormalMatrix(t),HX_GL.uniformMatrix3fv(this.location,!1,t)}}(),HX.NormalWorldViewMatrixSetter=function(){},HX.NormalWorldViewMatrixSetter.prototype.execute=function(){var t=new Float32Array(9);return function(e,i){var n=e.viewMatrix._m,r=i.worldMatrix._m,o=n[0],a=n[1],s=n[2],h=n[4],l=n[5],_=n[6],c=n[8],u=n[9],f=n[10],d=n[12],p=n[13],m=n[14],X=r[0],H=r[1],g=r[2],x=r[3],S=r[4],v=r[5],E=r[6],b=r[7],T=r[8],y=r[9],L=r[10],M=r[11],w=o*X+h*H+c*g+d*x,A=a*X+l*H+u*g+p*x,P=s*X+_*H+f*g+m*x,R=o*S+h*v+c*E+d*b,D=a*S+l*v+u*E+p*b,C=s*S+_*v+f*E+m*b,O=o*T+h*y+c*L+d*M,F=a*T+l*y+u*L+p*M,N=s*T+_*y+f*L+m*M,I=w*(D*N-F*C)-R*(A*N-F*P)+O*(A*C-D*P),G=1/I;t[0]=(D*N-F*C)*G,t[1]=(O*C-R*N)*G,t[2]=(R*F-O*D)*G,t[3]=(F*P-A*N)*G,t[4]=(w*N-O*P)*G,t[5]=(O*A-w*F)*G,t[6]=(A*C-D*P)*G,t[7]=(R*P-w*C)*G,t[8]=(w*D-R*A)*G,HX_GL.uniformMatrix3fv(this.location,!1,t)}}(),HX.CameraWorldPosSetter=function(){},HX.CameraWorldPosSetter.prototype.execute=function(t){var e=t.worldMatrix._m;HX_GL.uniform3f(this.location,e[12],e[13],e[14])},HX.CameraWorldMatrixSetter=function(){},HX.CameraWorldMatrixSetter.prototype.execute=function(t){var e=t.worldMatrix;HX_GL.uniformMatrix4fv(this.location,!1,e._m)},HX.CameraFrustumRangeSetter=function(){},HX.CameraFrustumRangeSetter.prototype.execute=function(t){HX_GL.uniform1f(this.location,t._farDistance-t._nearDistance)},HX.RCPCameraFrustumRangeSetter=function(){},HX.RCPCameraFrustumRangeSetter.prototype.execute=function(t){HX_GL.uniform1f(this.location,1/(t._farDistance-t._nearDistance))},HX.CameraNearPlaneDistanceSetter=function(){},HX.CameraNearPlaneDistanceSetter.prototype.execute=function(t){HX_GL.uniform1f(this.location,t._nearDistance)},HX.CameraFarPlaneDistanceSetter=function(){},HX.CameraFarPlaneDistanceSetter.prototype.execute=function(t){HX_GL.uniform1f(this.location,t._farDistance)},HX.ViewMatrixSetter=function(){},HX.ViewMatrixSetter.prototype.execute=function(t){HX_GL.uniformMatrix4fv(this.location,!1,t.viewMatrix._m)},HX.RenderTargetResolutionSetter=function(){},HX.RenderTargetResolutionSetter.prototype.execute=function(t){HX_GL.uniform2f(this.location,t._renderTargetWidth,t._renderTargetHeight)},HX.RCPRenderTargetResolutionSetter=function(){},HX.RCPRenderTargetResolutionSetter.prototype.execute=function(t){HX_GL.uniform2f(this.location,1/t._renderTargetWidth,1/t._renderTargetHeight)},HX.Dither2DTextureScaleSetter=function(){},HX.Dither2DTextureScaleSetter.prototype.execute=function(t){HX_GL.uniform2f(this.location,t._renderTargetWidth/HX.DEFAULT_2D_DITHER_TEXTURE.width,t._renderTargetHeight/HX.DEFAULT_2D_DITHER_TEXTURE.height)},HX.PoissonDiskSetter=function(){},HX.PoissonDiskSetter.prototype.execute=function(){HX_GL.uniform2fv(this.location,HX.PoissonDisk.DEFAULT_FLOAT32)},HX.SkinningMatricesSetter=function(){this._data=new Float32Array(1024)},HX.SkinningMatricesSetter.prototype.execute=function(t,e){var i=e.skeleton;if(i){for(var n=e.skeletonMatrices,r=i.numJoints,o=0,a=0;r>a;++a)n[a].writeData(this._data,o),o+=16;HX_GL.uniformMatrix4fv(this.location,!1,this._data)}},HX.PBRMaterial=function(){HX.Material.call(this),this._passesInvalid=!0,this._color=new HX.Color(1,1,1,1),this._colorMap=null,this._doubleSided=!1,this._normalMap=null,this._specularMap=null,this._maskMap=null,this._specularMapMode=HX.PBRMaterial.SPECULAR_MAP_ROUGHNESS_ONLY,this._metallicness=0,this._alpha=1,this._minRoughness=.3,this._maxRoughness=1,this._specularNormalReflection=.027,this._alphaThreshold=1,this._useVertexColors=!1,this.color=this._color,this.alpha=this._alpha,this.metallicness=this._metallicness,this.setRoughness(this._minRoughness),this.specularNormalReflection=this._specularNormalReflection},HX.PBRMaterial.roughnessFromShininess=function(t){return Math.sqrt(2/(t+2))},HX.PBRMaterial.SPECULAR_MAP_ROUGHNESS_ONLY=1,HX.PBRMaterial.SPECULAR_MAP_ALL=2,HX.PBRMaterial.SPECULAR_MAP_SHARE_NORMAL_MAP=3,HX.PBRMaterial.prototype=Object.create(HX.Material.prototype,{doubleSided:{get:function(){return this._doubleSided},set:function(t){this._doubleSided=t;for(var e=0;e<HX.MaterialPass.NUM_PASS_TYPES;++e)this._passes[e]&&(this._passes[e].cullMode=t?HX.CullMode.NONE:HX.CullMode.BACK);

}},alpha:{get:function(){return this._alpha},set:function(t){this._alpha=HX.saturate(t),this.setUniform("alpha",this._alpha)}},useVertexColors:{get:function(){return this._useVertexColors},set:function(t){this._useVertexColors!==t&&(this._passesInvalid=!0),this._useVertexColors=t}},color:{get:function(){return this._color},set:function(t){this._color=isNaN(t)?t:new HX.Color(t),this.setUniform("color",this._color)}},colorMap:{get:function(){return this._colorMap},set:function(t){!!this._colorMap!=!!t&&(this._passesInvalid=!0),!this._passesInvalid&&t&&this.setTexture("colorMap",t),this._colorMap=t}},normalMap:{get:function(){return this._normalMap},set:function(t){!!this._normalMap!=!!t&&(this._passesInvalid=!0),!this._passesInvalid&&t&&this.setTexture("normalMap",t),this._normalMap=t}},specularMap:{get:function(){return this._specularMap},set:function(t){!!this._specularMap!=!!t&&(this._passesInvalid=!0),!this._passesInvalid&&t&&this.setTexture("specularMap",t),this._specularMap=t}},maskMap:{get:function(){return this._maskMap},set:function(t){!!this._maskMap!=!!t&&(this._passesInvalid=!0),!this._passesInvalid&&t&&this.setTexture("maskMap",t),this._maskMap=t}},specularMapMode:{get:function(){return this._specularMapMode},set:function(t){this._specularMapMode!=t&&(this._passesInvalid=!0),this._specularMapMode=t}},metallicness:{get:function(){return this._metallicness},set:function(t){this._metallicness=HX.saturate(t),this.setUniform("metallicness",this._metallicness)}},specularNormalReflection:{get:function(){return this._specularNormalReflection},set:function(t){this._specularNormalReflection=HX.saturate(t),this.setUniform("specularNormalReflection",this._specularNormalReflection)}},minRoughness:{get:function(){return this._minRoughness},set:function(t){this._minRoughness=t,this.setUniform("minRoughness",this._minRoughness)}},maxRoughness:{get:function(){return this._maxRoughness},set:function(t){this._maxRoughness=t,this.setUniform("minRoughness",this._minRoughness)}},alphaThreshold:{get:function(){return this._alphaThreshold},set:function(t){t=HX.saturate(t),1===this._alphaThreshold!=(1===t)&&(this._passesInvalid=!0),this._alphaThreshold=t,this.setUniform("alphaThreshold",t)}}}),HX.PBRMaterial.prototype.setRoughness=function(t,e){this.minRoughness=t,this.maxRoughness=e||1},HX.PBRMaterial.prototype.getPass=function(t){return this._passesInvalid&&this._updatePasses(),HX.Material.prototype.getPass.call(this,t)},HX.PBRMaterial.prototype._clearPasses=function(){for(var t=0;t<HX.MaterialPass.NUM_PASS_TYPES;++t)this.setPass(t,null)},HX.PBRMaterial.prototype._updatePasses=function(){this._clearPasses();var t=this._generateColorDefines(),e=this._generateNormalDefines(),i=this._generateSpecularDefines(),n="",r=this._generateGeneralDefines();if(HX.EXT_DRAW_BUFFERS){var o=t+e+i+n+r;this._initPass(HX.MaterialPass.GEOMETRY_PASS,o,"default_geometry_mrt_vertex.glsl","default_geometry_mrt_fragment.glsl")}else t="#define HX_NO_MRT_GBUFFER_COLOR\n"+t+r,e="#define HX_NO_MRT_GBUFFER_NORMALS\n"+e+r,i="#define HX_NO_MRT_GBUFFER_SPECULAR\n"+i+r,n="#define HX_NO_MRT_GBUFFER_LINEAR_DEPTH\n"+n+r,this._initPass(HX.MaterialPass.GEOMETRY_COLOR_PASS,t,"default_geometry_mrt_vertex.glsl","default_geometry_mrt_fragment.glsl"),this._initPass(HX.MaterialPass.GEOMETRY_NORMAL_PASS,e,"default_geometry_mrt_vertex.glsl","default_geometry_mrt_fragment.glsl"),this._initPass(HX.MaterialPass.GEOMETRY_SPECULAR_PASS,i,"default_geometry_mrt_vertex.glsl","default_geometry_mrt_fragment.glsl"),HX.EXT_DEPTH_TEXTURE||this._initPass(HX.MaterialPass.GEOMETRY_LINEAR_DEPTH_PASS,n,"default_geometry_mrt_vertex.glsl","default_geometry_mrt_fragment.glsl");var o="#define HX_SHADOW_DEPTH_PASS\n"+r;this._initPass(HX.MaterialPass.SHADOW_DEPTH_PASS,o,"default_geometry_mrt_vertex.glsl","default_geometry_mrt_fragment.glsl"),this.setUniform("color",this._color),this.setUniform("alpha",this._alpha),this.setUniform("alphaThreshold",this._alphaThreshold),this.setUniform("maxRoughness",this._maxRoughness),this.setUniform("minRoughness",this._minRoughness),this._colorMap&&this.setTexture("colorMap",this._colorMap),this._normalMap&&this.setTexture("normalMap",this._normalMap),this._specularMap&&this.setTexture("specularMap",this._specularMap),this._passesInvalid=!1},HX.PBRMaterial.prototype._generateColorDefines=function(){var t="";return this._colorMap&&(t+="#define COLOR_MAP\n"),this._useVertexColors&&(t+="#define VERTEX_COLORS\n"),t},HX.PBRMaterial.prototype._generateNormalDefines=function(){return this._normalMap?"#define NORMAL_MAP\n":""},HX.PBRMaterial.prototype._generateGeneralDefines=function(){var t="";return this._maskMap&&(t+="#define MASK_MAP\n"),this._alphaThreshold<1&&(t+="#define ALPHA_THRESHOLD\n"),this._useSkinning&&(t+="#define USE_SKINNING\n"),t},HX.PBRMaterial.prototype._generateSpecularDefines=function(){switch(this._specularMapMode){case HX.PBRMaterial.SPECULAR_MAP_ROUGHNESS_ONLY:return this._specularMap?"#define ROUGHNESS_MAP\n":"";case HX.PBRMaterial.SPECULAR_MAP_ALL:return this._specularMap?"#define SPECULAR_MAP\n":"";default:return"#define NORMAL_ROUGHNESS_MAP\n"}},HX.PBRMaterial.prototype._initPass=function(t,e,i,n){var r=e+HX.ShaderLibrary.get(i),o=e+HX.GLSLIncludeGeometryPass+HX.ShaderLibrary.get(n),a=new HX.Shader(r,o),s=new HX.MaterialPass(a);s.cullMode=this._doubleSided?HX.CullMode.NONE:HX.CullMode.BACK,this.setPass(t,s)},HX.PBRMaterial.prototype._setUseSkinning=function(t){this._useSkinning!==t&&(this._passesInvalid=!0),this._useSkinning=t},HX.SkyboxMaterial=function(t){HX.Material.call(this);var e=HX.ShaderLibrary.get("default_skybox_vertex.glsl"),i=HX.GLSLIncludeGeometryPass+HX.ShaderLibrary.get("default_skybox_fragment.glsl");HX.EXT_DRAW_BUFFERS||(i="#define HX_NO_MRT_GBUFFER_COLOR\n"+i);var n=new HX.Shader(e,i),r=new HX.MaterialPass(n);r.writeDepth=!1,r.cullMode=HX.CullMode.NONE,this.setPass(HX.MaterialPass.GEOMETRY_PASS,r),this.setTexture("hx_skybox",t)},HX.SkyboxMaterial.prototype=Object.create(HX.Material.prototype),HX.TextureSlot=function(){this.location=-1,this.texture=null,this.name=null},HX.BoundingAABB=function(){HX.BoundingVolume.call(this,HX.BoundingAABB)},HX.BoundingAABB.prototype=Object.create(HX.BoundingVolume.prototype),HX.BoundingAABB.prototype.growToIncludeMesh=function(t){if(this._expanse!==HX.BoundingVolume.EXPANSE_INFINITE){var e,i,n,r,o,a,s=t.getVertexAttribute("hx_position"),h=s.offset,l=t.getVertexStride(s.streamIndex),_=t.getVertexData(s.streamIndex),c=_.length;for(this._expanse===HX.BoundingVolume.EXPANSE_EMPTY?(r=e=_[h],o=i=_[h+1],a=n=_[h+2],h+=l):(e=this._minimumX,i=this._minimumY,n=this._minimumZ,r=this._maximumX,o=this._maximumY,a=this._maximumZ);c>h;h+=l){var u=_[h],f=_[h+1],d=_[h+2];u>r?r=u:e>u&&(e=u),f>o?o=f:i>f&&(i=f),d>a?a=d:n>d&&(n=d)}this._minimumX=e,this._minimumY=i,this._minimumZ=n,this._maximumX=r,this._maximumY=o,this._maximumZ=a,this._expanse=HX.BoundingVolume.EXPANSE_FINITE,this._updateCenterAndExtent()}},HX.BoundingAABB.prototype.growToIncludeBound=function(t){t._expanse!==HX.BoundingVolume.EXPANSE_EMPTY&&this._expanse!==HX.BoundingVolume.EXPANSE_INFINITE&&(t._expanse===HX.BoundingVolume.EXPANSE_INFINITE?this._expanse=HX.BoundingVolume.EXPANSE_INFINITE:this._expanse===HX.BoundingVolume.EXPANSE_EMPTY?(this._minimumX=t._minimumX,this._minimumY=t._minimumY,this._minimumZ=t._minimumZ,this._maximumX=t._maximumX,this._maximumY=t._maximumY,this._maximumZ=t._maximumZ,this._expanse=HX.BoundingVolume.EXPANSE_FINITE):(t._minimumX<this._minimumX&&(this._minimumX=t._minimumX),t._minimumY<this._minimumY&&(this._minimumY=t._minimumY),t._minimumZ<this._minimumZ&&(this._minimumZ=t._minimumZ),t._maximumX>this._maximumX&&(this._maximumX=t._maximumX),t._maximumY>this._maximumY&&(this._maximumY=t._maximumY),t._maximumZ>this._maximumZ&&(this._maximumZ=t._maximumZ)),this._updateCenterAndExtent())},HX.BoundingAABB.prototype.growToIncludeMinMax=function(t,e){this._expanse!==HX.BoundingVolume.EXPANSE_INFINITE&&(this._expanse==HX.BoundingVolume.EXPANSE_EMPTY?(this._minimumX=t.x,this._minimumY=t.y,this._minimumZ=t.z,this._maximumX=e.x,this._maximumY=e.y,this._maximumZ=e.z,this._expanse=HX.BoundingVolume.EXPANSE_FINITE):(t.x<this._minimumX&&(this._minimumX=t.x),t.y<this._minimumY&&(this._minimumY=t.y),t.z<this._minimumZ&&(this._minimumZ=t.z),e.x>this._maximumX&&(this._maximumX=e.x),e.y>this._maximumY&&(this._maximumY=e.y),e.z>this._maximumZ&&(this._maximumZ=e.z)),this._updateCenterAndExtent())},HX.BoundingAABB.prototype.transformFrom=function(t,e){if(t._expanse===HX.BoundingVolume.EXPANSE_INFINITE||t._expanse===HX.BoundingVolume.EXPANSE_EMPTY)this.clear(t._expanse);else{var i=e._m,n=i[0],r=i[1],o=i[2],a=i[4],s=i[5],h=i[6],l=i[8],_=i[9],c=i[10],u=t._center.x,f=t._center.y,d=t._center.z;this._center.x=n*u+a*f+l*d+i[12],this._center.y=r*u+s*f+_*d+i[13],this._center.z=o*u+h*f+c*d+i[14],0>n&&(n=-n),0>r&&(r=-r),0>o&&(o=-o),0>a&&(a=-a),0>s&&(s=-s),0>h&&(h=-h),0>l&&(l=-l),0>_&&(_=-_),0>c&&(c=-c),u=t._halfExtentX,f=t._halfExtentY,d=t._halfExtentZ,this._halfExtentX=n*u+a*f+l*d,this._halfExtentY=r*u+s*f+_*d,this._halfExtentZ=o*u+h*f+c*d,this._minimumX=this._center.x-this._halfExtentX,this._minimumY=this._center.y-this._halfExtentY,this._minimumZ=this._center.z-this._halfExtentZ,this._maximumX=this._center.x+this._halfExtentX,this._maximumY=this._center.y+this._halfExtentY,this._maximumZ=this._center.z+this._halfExtentZ,this._expanse=t._expanse}},HX.BoundingAABB.prototype.intersectsConvexSolid=function(t,e){if(this._expanse===HX.BoundingVolume.EXPANSE_INFINITE)return!0;if(this._expanse===HX.BoundingVolume.EXPANSE_EMPTY)return!1;for(var i=this._minimumX,n=this._minimumY,r=this._minimumZ,o=this._maximumX,a=this._maximumY,s=this._maximumZ,h=0;e>h;++h){var l=t[h],_=l.x,c=l.y,u=l.z,f=l.w,d=_>0?i:o,p=c>0?n:a,m=u>0?r:s,X=_*d+c*p+u*m+f;if(X>0)return!1}return!0},HX.BoundingAABB.prototype.intersectsBound=function(t){return this._expanse===HX.BoundingVolume.EXPANSE_EMPTY||t._expanse===HX.BoundingVolume.EXPANSE_EMPTY?!1:this._expanse===HX.BoundingVolume.EXPANSE_INFINITE||t._expanse===HX.BoundingVolume.EXPANSE_INFINITE?!0:t._type===this._type?this._maximumX>t._minimumX&&this._minimumX<t._maximumX&&this._maximumY>t._minimumY&&this._minimumY<t._maximumY&&this._maximumZ>t._minimumZ&&this._minimumZ<t._maximumZ:HX.BoundingVolume._testAABBToSphere(this,t)},HX.BoundingAABB.prototype.classifyAgainstPlane=function(t){var e=t.x,i=t.y,n=t.z,r=r,o=e*this._center.x+i*this._center.y+n*this._center.z+r;0>e&&(e=-e),0>i&&(i=-i),0>n&&(n=-n);var a=e*this._halfExtentX+i*this._halfExtentY+n*this._halfExtentZ;return o>a?HX.PlaneSide.FRONT:-a>o?HX.PlaneSide.BACK:HX.PlaneSide.INTERSECTING},HX.BoundingAABB.prototype.setExplicit=function(t,e){this._minimumX=t.x,this._minimumY=t.y,this._minimumZ=t.z,this._maximumX=e.x,this._maximumY=e.y,this._maximumZ=e.z,this._expanse=HX.BoundingVolume.EXPANSE_FINITE,this._updateCenterAndExtent()},HX.BoundingAABB.prototype._updateCenterAndExtent=function(){var t=this._minimumX,e=this._minimumY,i=this._minimumZ,n=this._maximumX,r=this._maximumY,o=this._maximumZ;this._center.x=.5*(t+n),this._center.y=.5*(e+r),this._center.z=.5*(i+o),this._halfExtentX=.5*(n-t),this._halfExtentY=.5*(r-e),this._halfExtentZ=.5*(o-i)},HX.BoundingAABB.prototype.getRadius=function(){return Math.sqrt(this._halfExtentX*this._halfExtentX+this._halfExtentY*this._halfExtentY+this._halfExtentZ*this._halfExtentZ)},HX.BoundingAABB.prototype.createDebugModelInstance=function(){return new HX.ModelInstance(new HX.BoxPrimitive,[this.getDebugMaterial()])},HX.BoundingSphere=function(){HX.BoundingVolume.call(this,HX.BoundingSphere)},HX.BoundingSphere.prototype=Object.create(HX.BoundingVolume.prototype),HX.BoundingSphere.prototype.setExplicit=function(t,e){this._center.copyFrom(t),this._halfExtentX=this._halfExtentY=this._halfExtentZ=e,this._expanse=HX.BoundingVolume.EXPANSE_FINITE,this._updateMinAndMax()},HX.BoundingSphere.prototype.growToIncludeMesh=function(t){if(this._expanse!==HX.BoundingVolume.EXPANSE_INFINITE){var e,i,n,r,o,a,s=t.getVertexAttribute("hx_position"),h=s.offset,l=t.getVertexStride(s.streamIndex),_=s.getVertexData(s.streamIndex),c=_.length;for(this._expanse===HX.BoundingVolume.EXPANSE_EMPTY?(r=e=_[h],o=i=_[h+1],a=n=_[h+2],h+=l):(e=this._minimumX,i=this._minimumY,n=this._minimumZ,r=this._maximumX,o=this._maximumY,a=this._maximumZ);c>h;h+=l){var u=_[h],f=_[h+1],d=_[h+2];u>r?r=u:e>u&&(e=u),f>o?o=f:i>f&&(i=f),d>a?a=d:n>d&&(n=d)}var p=.5*(r+e),m=.5*(o+i),X=.5*(a+n),H=0;for(h=s.offset;c>h;h+=l){var g=p-_[h],x=m-_[h+1],S=X-_[h+2],v=g*g+x*x+S*S;v>H&&(H=v)}this._center.x=p,this._center.y=m,this._center.z=X;var E=Math.sqrt(H);this._halfExtentX=E,this._halfExtentY=E,this._halfExtentZ=E,this._expanse=HX.BoundingVolume.EXPANSE_FINITE,this._updateMinAndMax()}},HX.BoundingSphere.prototype.growToIncludeBound=function(t){if(t._expanse!==HX.BoundingVolume.EXPANSE_EMPTY&&this._expanse!==HX.BoundingVolume.EXPANSE_INFINITE){if(t._expanse===HX.BoundingVolume.EXPANSE_INFINITE)this._expanse=HX.BoundingVolume.EXPANSE_INFINITE;else if(this._expanse===HX.BoundingVolume.EXPANSE_EMPTY)this._center.x=t._center.x,this._center.y=t._center.y,this._center.z=t._center.z,t._type==this._type?(this._halfExtentX=t._halfExtentX,this._halfExtentY=t._halfExtentY,this._halfExtentZ=t._halfExtentZ):this._halfExtentX=this._halfExtentY=this._halfExtentZ=t.getRadius(),this._expanse=HX.BoundingVolume.EXPANSE_FINITE;else{var e=this._minimumX,i=this._minimumY,n=this._minimumZ,r=this._maximumX,o=this._maximumY,a=this._maximumZ;t._maximumX>r&&(r=t._maximumX),t._maximumY>o&&(o=t._maximumY),t._maximumZ>a&&(a=t._maximumZ),t._minimumX<e&&(e=t._minimumX),t._minimumY<i&&(i=t._minimumY),t._minimumZ<n&&(n=t._minimumZ),this._center.x=.5*(e+r),this._center.y=.5*(i+o),this._center.z=.5*(n+a);var s=r-this._center.x,h=o-this._center.y,l=a-this._center.z,_=Math.sqrt(s*s+h*h+l*l);this._halfExtentX=this._halfExtentY=this._halfExtentZ=_}this._updateMinAndMax()}},HX.BoundingSphere.prototype.growToIncludeMinMax=function(t,e){var i=new HX.BoundingAABB;i.growToIncludeMinMax(t,e),this.growToIncludeBound(i)},HX.BoundingSphere.prototype.getRadius=function(){return this._halfExtentX},HX.BoundingSphere.prototype.transformFrom=function(t,e){if(t._expanse==HX.BoundingVolume.EXPANSE_INFINITE||t._expanse==HX.BoundingVolume.EXPANSE_EMPTY)this.clear(t._expanse);else{var i=e._m,n=i[0],r=i[1],o=i[2],a=i[4],s=i[5],h=i[6],l=i[8],_=i[9],c=i[10],u=t._center.x,f=t._center.y,d=t._center.z;this._center.x=n*u+a*f+l*d+i[12],this._center.y=r*u+s*f+_*d+i[13],this._center.z=o*u+h*f+c*d+i[14],0>n&&(n=-n),0>r&&(r=-r),0>o&&(o=-o),0>a&&(a=-a),0>s&&(s=-s),0>h&&(h=-h),0>l&&(l=-l),0>_&&(_=-_),0>c&&(c=-c),u=t._halfExtentX,f=t._halfExtentY,d=t._halfExtentZ;var p=n*u+a*f+l*d,m=r*u+s*f+_*d,X=o*u+h*f+c*d,H=Math.sqrt(p*p+m*m+X*X);this._halfExtentX=this._halfExtentY=this._halfExtentZ=H,this._minimumX=this._center.x-this._halfExtentX,this._minimumY=this._center.y-this._halfExtentY,this._minimumZ=this._center.z-this._halfExtentZ,this._maximumX=this._center.x+this._halfExtentX,this._maximumY=this._center.y+this._halfExtentY,this._maximumZ=this._center.z+this._halfExtentZ,this._expanse=HX.BoundingVolume.EXPANSE_FINITE}},HX.BoundingSphere.prototype.intersectsConvexSolid=function(t,e){if(this._expanse==HX.BoundingVolume.EXPANSE_INFINITE)return!0;if(this._expanse==HX.BoundingVolume.EXPANSE_EMPTY)return!1;for(var i=this._center.x,n=this._center.y,r=this._center.z,o=this._halfExtentX,a=0;e>a;++a){var s=t[a],h=s.x*i+s.y*n+s.z*r+s.w;if(h>o)return!1}return!0},HX.BoundingSphere.prototype.intersectsBound=function(t){if(this._expanse==HX.BoundingVolume.EXPANSE_EMPTY||t._expanse==HX.BoundingVolume.EXPANSE_EMPTY)return!1;if(this._expanse==HX.BoundingVolume.EXPANSE_INFINITE||t._expanse==HX.BoundingVolume.EXPANSE_INFINITE)return!0;if(t._type===this._type){var e=this._center.x-t._center.x,i=this._center.y-t._center.y,n=this._center.z-t._center.z,r=this._halfExtentX+t._halfExtentX;return r*r>e*e+i*i+n*n}return HX.BoundingVolume._testAABBToSphere(t,this)},HX.BoundingSphere.prototype.classifyAgainstPlane=function(t){var e=t.x*this._center.x+t.y*this._center.y+t.z*this._center.z+t.w,i=this._halfExtentX;return e>i?HX.PlaneSide.FRONT:-i>e?HX.PlaneSide.BACK:HX.PlaneSide.INTERSECTING},HX.BoundingSphere.prototype._updateMinAndMax=function(){var t=this._center.x,e=this._center.y,i=this._center.z,n=this._halfExtentX;this._minimumX=t-n,this._minimumY=e-n,this._minimumZ=i-n,this._maximumX=t+n,this._maximumY=e+n,this._maximumZ=i+n},HX.BoundingSphere.prototype.createDebugModelInstance=function(){return new HX.ModelInstance(new HX.SpherePrimitive({doubleSided:!0}),[this.getDebugMaterial()])},HX.Frustum=function(){this._planes=new Array(6),this._corners=new Array(8);for(var t=0;6>t;++t)this._planes[t]=new HX.Float4;for(var t=0;8>t;++t)this._corners[t]=new HX.Float4;this._r1=new HX.Float4,this._r2=new HX.Float4,this._r3=new HX.Float4,this._r4=new HX.Float4},HX.Frustum.PLANE_LEFT=0,HX.Frustum.PLANE_RIGHT=1,HX.Frustum.PLANE_BOTTOM=2,HX.Frustum.PLANE_TOP=3,HX.Frustum.PLANE_NEAR=4,HX.Frustum.PLANE_FAR=5,HX.Frustum.CLIP_SPACE_CORNERS=[new HX.Float4(-1,-1,-1,1),new HX.Float4(1,-1,-1,1),new HX.Float4(1,1,-1,1),new HX.Float4(-1,1,-1,1),new HX.Float4(-1,-1,1,1),new HX.Float4(1,-1,1,1),new HX.Float4(1,1,1,1),new HX.Float4(-1,1,1,1)],HX.Frustum.prototype={get planes(){return this._planes},get corners(){return this._corners},update:function(t,e){this._updatePlanes(t),this._updateCorners(e)},_updatePlanes:function(t){var e=t.getRow(0,this._r1),i=t.getRow(1,this._r2),n=t.getRow(2,this._r3),r=t.getRow(3,this._r4);HX.Float4.add(r,e,this._planes[HX.Frustum.PLANE_LEFT]),HX.Float4.subtract(r,e,this._planes[HX.Frustum.PLANE_RIGHT]),HX.Float4.add(r,i,this._planes[HX.Frustum.PLANE_BOTTOM]),HX.Float4.subtract(r,i,this._planes[HX.Frustum.PLANE_TOP]),HX.Float4.add(r,n,this._planes[HX.Frustum.PLANE_NEAR]),HX.Float4.subtract(r,n,this._planes[HX.Frustum.PLANE_FAR]);for(var o=0;6>o;++o)this._planes[o].negate(),this._planes[o].normalizeAsPlane()},_updateCorners:function(t){for(var e=0;8>e;++e){var i=this._corners[e];t.transform(HX.Frustum.CLIP_SPACE_CORNERS[e],i),i.scale(1/i.w)}}},HX.Camera=function(){HX.Entity.call(this),this._renderTargetWidth=0,this._renderTargetHeight=0,this._viewProjectionMatrixInvalid=!0,this._viewProjectionMatrix=new HX.Matrix4x4,this._inverseProjectionMatrix=new HX.Matrix4x4,this._inverseViewProjectionMatrix=new HX.Matrix4x4,this._projectionMatrix=new HX.Matrix4x4,this._viewMatrix=new HX.Matrix4x4,this._projectionMatrixDirty=!0,this._nearDistance=.1,this._farDistance=1e3,this._frustum=new HX.Frustum,this.position.set(0,0,1)},HX.Camera.prototype=Object.create(HX.Entity.prototype),Object.defineProperties(HX.Camera.prototype,{nearDistance:{get:function(){return this._nearDistance},set:function(t){this._nearDistance=t,this._invalidateProjectionMatrix()}},farDistance:{get:function(){return this._farDistance},set:function(t){this._farDistance=t,this._invalidateProjectionMatrix()}},viewProjectionMatrix:{get:function(){return this._viewProjectionMatrixInvalid&&this._updateViewProjectionMatrix(),this._viewProjectionMatrix}},viewMatrix:{get:function(){return this._viewProjectionMatrixInvalid&&this._updateViewProjectionMatrix(),this._viewMatrix}},projectionMatrix:{get:function(){return this._projectionMatrixDirty&&this._updateProjectionMatrix(),this._projectionMatrix}},inverseViewProjectionMatrix:{get:function(){return this._viewProjectionMatrixInvalid&&this._updateViewProjectionMatrix(),this._inverseViewProjectionMatrix}},inverseProjectionMatrix:{get:function(){return this._projectionMatrixDirty&&this._updateProjectionMatrix(),this._inverseProjectionMatrix}},frustum:{get:function(){return this._viewProjectionMatrixInvalid&&this._updateViewProjectionMatrix(),this._frustum}}}),HX.Camera.prototype.acceptVisitor=function(t){HX.SceneNode.prototype.acceptVisitor.call(this,t)},HX.Camera.prototype._setRenderTargetResolution=function(t,e){this._renderTargetWidth=t,this._renderTargetHeight=e},HX.Camera.prototype._invalidateViewProjectionMatrix=function(){this._viewProjectionMatrixInvalid=!0},HX.Camera.prototype._invalidateWorldMatrix=function(){HX.Entity.prototype._invalidateWorldMatrix.call(this),this._invalidateViewProjectionMatrix()},HX.Camera.prototype._updateViewProjectionMatrix=function(){this._viewMatrix.inverseAffineOf(this.worldMatrix),this._viewProjectionMatrix.multiply(this.projectionMatrix,this._viewMatrix),this._inverseProjectionMatrix.inverseOf(this._projectionMatrix),this._inverseViewProjectionMatrix.inverseOf(this._viewProjectionMatrix),this._frustum.update(this._viewProjectionMatrix,this._inverseViewProjectionMatrix),this._viewProjectionMatrixInvalid=!1},HX.Camera.prototype._invalidateProjectionMatrix=function(){this._projectionMatrixDirty=!0,this._invalidateViewProjectionMatrix()},HX.Camera.prototype._updateProjectionMatrix=function(){throw new Error("Abstract method!")},HX.Camera.prototype._updateWorldBounds=function(){this._worldBounds.clear(HX.BoundingVolume.EXPANSE_INFINITE)},HX.Camera.prototype.toString=function(){return"[Camera(name="+this._name+")]"},HX.PerspectiveCamera=function(){HX.Camera.call(this),this._vFOV=1.047198,this._aspectRatio=0},HX.PerspectiveCamera.prototype=Object.create(HX.Camera.prototype),Object.defineProperties(HX.PerspectiveCamera.prototype,{verticalFOV:{get:function(){return this._vFOV},set:function(t){this._vFOV=t,this._invalidateProjectionMatrix()}}}),HX.PerspectiveCamera.prototype._setAspectRatio=function(t){this._aspectRatio!=t&&(this._aspectRatio=t,this._invalidateProjectionMatrix())},HX.PerspectiveCamera.prototype._setRenderTargetResolution=function(t,e){HX.Camera.prototype._setRenderTargetResolution.call(this,t,e),this._setAspectRatio(t/e)},HX.PerspectiveCamera.prototype._updateProjectionMatrix=function(){this._projectionMatrix.fromPerspectiveProjection(this._vFOV,this._aspectRatio,this._nearDistance,this._farDistance),this._projectionMatrixDirty=!1},HX.OrthographicOffCenterCamera=function(){HX.Camera.call(this),this._left=-1,this._right=1,this._top=1,this._bottom=-1},HX.OrthographicOffCenterCamera.prototype=Object.create(HX.Camera.prototype),HX.OrthographicOffCenterCamera.prototype.setBounds=function(t,e,i,n){this._left=t,this._right=e,this._top=i,this._bottom=n,this._invalidateProjectionMatrix()},HX.OrthographicOffCenterCamera.prototype._updateProjectionMatrix=function(){this._projectionMatrix.fromOrthographicOffCenterProjection(this._left,this._right,this._top,this._bottom,this._nearDistance,this._farDistance),this._projectionMatrixDirty=!1},HX.GroupNode=function(){HX.SceneNode.call(this),this._children=[]},HX.GroupNode.prototype=Object.create(HX.SceneNode.prototype,{numChildren:{get:function(){return this._children.length}}}),HX.GroupNode.prototype.findNodeByName=function(t){var e=HX.SceneNode.prototype.findNodeByName.call(this,t);if(e)return e;for(var i=this._children.length,n=0;i>n;++n)if(e=this._children[n].findNodeByName(t))return e},HX.GroupNode.prototype.attach=function(t){if(t._parent)throw new Error("Child is already parented!");t._parent=this,t._setScene(this._scene),this._children.push(t),this._invalidateWorldBounds()},HX.GroupNode.prototype.detach=function(t){var e=this._children.indexOf(t);if(0>e)throw new Error("Trying to remove a scene object that is not a child");t._parent=null,this._children.splice(e,1),this._invalidateWorldBounds()},HX.GroupNode.prototype.getChild=function(t){return this._children[t]},HX.GroupNode.prototype.acceptVisitor=function(t){HX.SceneNode.prototype.acceptVisitor.call(this,t);for(var e=this._children.length,i=0;e>i;++i){var n=this._children[i];t.qualifies(n)&&n.acceptVisitor(t)}},HX.GroupNode.prototype._invalidateWorldMatrix=function(){HX.SceneNode.prototype._invalidateWorldMatrix.call(this);for(var t=this._children.length,e=0;t>e;++e)this._children[e]._invalidateWorldMatrix()},HX.GroupNode.prototype._updateWorldBounds=function(){for(var t=this._children.length,e=0;t>e;++e)this._worldBounds.growToIncludeBound(this._children[e].worldBounds);HX.SceneNode.prototype._updateWorldBounds.call(this)},HX.GroupNode.prototype._setScene=function(t){HX.SceneNode.prototype._setScene.call(this,t);for(var e=this._children.length,i=0;e>i;++i)this._children[i]._setScene(t)},HX.MaterialQueryVisitor=function(t){HX.SceneVisitor.call(this),this._materialName=t},HX.MaterialQueryVisitor.prototype=Object.create(HX.SceneVisitor.prototype,{foundMaterial:{get:function(){return this._foundMaterial}}}),HX.MaterialQueryVisitor.prototype.qualifies=function(t){return!this._foundMaterial},HX.MaterialQueryVisitor.prototype.visitModelInstance=function(t,e){for(var i=t._materials,n=i.length,r=0;n>r;++r){var o=i[r];o.name===this._materialName&&(this._foundMaterial=o)}},HX.Scene=function(t){this._rootNode=t||new HX.GroupNode,this._rootNode._setScene(this),this._skybox=null,this._entityEngine=new HX.EntityEngine},HX.Scene.prototype={constructor:HX.Scene,get skybox(){return this._skybox},set skybox(t){this._skybox=t},findNodeByName:function(t){return this._rootNode.findNodeByName(t)},findMaterialByName:function(t){return this._rootNode.findMaterialByName(t)},attach:function(t){this._rootNode.attach(t)},detach:function(t){this._rootNode.detach(t)},get numChildren(){return this._rootNode.numChildren},getChild:function(t){return this._rootNode.getChild(t)},contains:function(t){this._rootNode.contains(t)},acceptVisitor:function(t){t.visitScene(this),this._rootNode.acceptVisitor(t)},get entityEngine(){return this._entityEngine},get worldBounds(){return this._rootNode.worldBounds}},HX.Skybox=function(t){t instanceof HX.Material||(t=new HX.SkyboxMaterial(t));var e=new HX.PlanePrimitive({alignment:HX.PlanePrimitive.ALIGN_XY,width:2,height:2});e.localBounds.clear(HX.BoundingVolume.EXPANSE_INFINITE),this._modelInstance=new HX.ModelInstance(e,t),this._globalSpecularProbe=null,this._globalIrradianceProbe=null},HX.Skybox.prototype={getGlobalSpecularProbe:function(){return this._globalSpecularProbe},setGlobalSpecularProbe:function(t){this._globalSpecularProbe=t},getGlobalIrradianceProbe:function(){return this._globalIrradianceProbe},setGlobalIrradianceProbe:function(t){this._globalIrradianceProbe=t}},HX.MeshBatch={create:function(t,e){var i,n,r,o=new HX.MeshData,a=t._indexData;o.vertexUsage=t.vertexUsage,o.indexUsage=t.indexUsage;var s=t._vertexAttributes,h=t.numStreams;for(n=0;n<s.length;++n){var l=s[n];o.addVertexAttribute(l.name,l.numComponents,l.streamIndex)}o.addVertexAttribute("hx_instanceID",1,h);var _=[],c=0,u=t.numVertices;for(i=a.length,n=0;e>n;++n)for(r=0;i>r;++r)_[c++]=a[r]+u*n;for(o.setIndexData(_),n=0;n<t.numStreams;++n){var f=[],d=t.getVertexData(n);for(i=d.length,c=0,r=0;e>r;++r)for(var p=0;i>p;++p)f[c++]=d[p];o.setVertexData(f,n)}var m=[];for(c=0,r=0;e>r;++r)for(n=0;u>n;++n)m[c++]=r;return o.setVertexData(m,h),o}},HX.MeshData=function(){this._vertexStrides=[],this._vertexData=[],this._indexData=void 0,this.vertexUsage=HX_GL.STATIC_DRAW,this.indexUsage=HX_GL.STATIC_DRAW,this._vertexAttributes=[],this._numStreams=0},HX.MeshData.DEFAULT_VERTEX_SIZE=12,HX.MeshData.createDefaultEmpty=function(){var t=new HX.MeshData;return t.addVertexAttribute("hx_position",3),t.addVertexAttribute("hx_normal",3),t.addVertexAttribute("hx_tangent",4),t.addVertexAttribute("hx_texCoord",2),t},HX.MeshData.prototype={constructor:HX.MeshData,getVertexData:function(t){return this._vertexData[t]},setVertexData:function(t,e){this._vertexData[e]=new Float32Array(t)},setIndexData:function(t){this._indexData=new Uint16Array(t)},addVertexAttribute:function(t,e,i){i=i||0,this._numStreams=Math.max(this._numStreams,i+1),this._vertexStrides[i]=this._vertexStrides[i]||0,this._vertexAttributes.push({name:t,offset:this._vertexStrides[i],numComponents:e,streamIndex:i}),this._vertexStrides[i]+=e},getVertexAttribute:function(t){for(var e=this._vertexAttributes.length,i=0;e>i;++i)if(this._vertexAttributes[i].name===t)return this._vertexAttributes[i]},getVertexStride:function(t){return this._vertexStrides[t]},get numStreams(){return this._numStreams},get numVertices(){return this._vertexData[0].length/this._vertexStrides[0]}},HX.Mesh=function(t,e){this._model=e,this._vertexBuffers=[],this._vertexStrides=[],this._indexBuffer=new HX.IndexBuffer,this._renderOrderHint=++HX.Mesh.ID_COUNTER,this.updateMeshData(t)},HX.Mesh.ID_COUNTER=0,HX.Mesh.prototype={constructor:HX.Mesh,updateMeshData:function(t){var e=t.numStreams,i=this._vertexBuffers.length;if(e>i)for(var n=i;e>n;++n)this._vertexBuffers[n]=new HX.VertexBuffer;else i>e&&(this._vertexBuffers.length=e,this._vertexStrides.length=e);for(var n=0;e>n;++n)this._vertexBuffers[n].uploadData(t.getVertexData(n),t.vertexUsage),this._vertexStrides[n]=t.getVertexStride(n);this._numIndices=t._indexData.length,this._indexBuffer.uploadData(t._indexData,t.indexUsage),this._vertexAttributes=t._vertexAttributes},dispose:function(){for(var t=0;t<this._vertexBuffers.length;++t)this._vertexBuffers[t].dispose();this._indexBuffer.dispose()},get numIndices(){return this._numIndices},get numVertexAttributes(){return this._vertexAttributes.length},getVertexStride:function(t){return this._vertexStrides[t]},getVertexAttribute:function(t){return this._vertexAttributes[t]}},HX.ModelData=function(){this._meshDataList=[],this._joints=[],this.skeleton=null},HX.ModelData.prototype={constructor:HX.ModelData,get numMeshes(){return this._meshDataList.length},getMeshData:function(t){return this._meshDataList[t]},addMeshData:function(t){this._meshDataList.push(t)},addJoint:function(t){this._joints.push(t)},get hasSkeleton(){return this._joints.length>0}},HX.Model=function(t){this._name=null,this._localBounds=new HX.BoundingAABB,this._skeleton=null,this.onChange=new HX.Signal,t?(this._meshes=null,this._setModelData(t)):this._meshes=[]},HX.Model.prototype={constructor:HX.Model,get name(){return this._name},set name(t){this._name=t},get numMeshes(){return this._meshes.length},getMesh:function(t){return this._meshes[t]},dispose:function(){if(this._meshes)for(var t=0;t<this._meshes.length;++t)this._meshes[t].dispose()},get localBounds(){return this._localBounds},get skeleton(){return this._skeleton},set skeleton(t){this._skeleton=t},_setModelData:function(t){this.dispose(),this._localBounds.clear(),this._meshes=[];for(var e=0;e<t.numMeshes;++e){var i=t.getMeshData(e);this._localBounds.growToIncludeMesh(i),this._meshes.push(new HX.Mesh(i,this))}this.skeleton=t.skeleton,this.onChange.dispatch()},toString:function(){return"[Model(name="+this._name+")]"}},HX.VertexLayout=function(t,e){var i=e.getShader();this.attributes=[],this._numAttributes=-1;for(var n=0;n<t.numVertexAttributes;++n){var r=t.getVertexAttribute(n),o=i.getAttributeLocation(r.name);if(this._numAttributes=Math.max(this._numAttributes,o+1),o>=0){var a=t.getVertexStride(r.streamIndex);this.attributes.push({index:o,offset:4*r.offset,numComponents:r.numComponents,stride:4*a,streamIndex:r.streamIndex})}}},HX.VertexLayout.prototype={constructor:HX.VertexLayout},HX.MeshInstance=function(t,e){this._mesh=t,this._meshMaterialLinkInvalid=!1,this._vertexLayouts=null,this.material=e},HX.MeshInstance.prototype={constructor:HX.MeshInstance,get material(){return this._material},set material(t){this._material&&this._material.onChange.unbind(this._onMaterialChange),this._material=t,this._material&&(this._material.onChange.bind(this._onMaterialChange,this),this.material._setUseSkinning(this._material._useSkinning||!!this._mesh._model.skeleton)),this._linkMeshWithMaterial()},updateRenderState:function(t){this._meshMaterialLinkInvalid&&this._linkMeshWithMaterial();var e=this._mesh._vertexBuffers;this._mesh._indexBuffer.bind();for(var i=this._vertexLayouts[t],n=i.attributes,r=n.length,o=0;r>o;++o){var a=n[o];e[a.streamIndex].bind(),HX_GL.vertexAttribPointer(a.index,a.numComponents,HX_GL.FLOAT,!1,a.stride,a.offset)}HX.enableAttributes(i._numAttributes)},_initVertexLayouts:function(){this._vertexLayouts=new Array(HX.MaterialPass.NUM_PASS_TYPES);for(var t=0;t<HX.MaterialPass.NUM_PASS_TYPES;++t){var e=this._material.getPass(t);e&&(this._vertexLayouts[t]=new HX.VertexLayout(this._mesh,e));

}},_linkMeshWithMaterial:function(){this._initVertexLayouts(),this._meshMaterialLinkInvalid=!1},_onMaterialChange:function(){this._meshMaterialLinkInvalid=!0}},HX.ModelInstance=function(t,e){HX.Entity.call(this),this._meshBounds=new HX.BoundingAABB,this._model=null,this._meshInstances=[],this._castShadows=!0,this._skeletonPose=null,this.init(t,e)},HX.ModelInstance.prototype=Object.create(HX.Entity.prototype,{model:{get:function(){return this._model}},castShadows:{get:function(){return this._castShadows},set:function(t){this._castShadows=t}},numMeshInstances:{get:function(){return this._meshInstances.length}},skeleton:{get:function(){return this._model.skeleton}},skeletonMatrices:{get:function(){return this._skeletonPose},set:function(t){this._skeletonPose=t}}}),HX.ModelInstance.prototype.init=function(t,e){if(this._model||this._materials)throw new Error("ModelInstance already initialized");if(this._model=t,e&&(this._materials=e instanceof Array?e:[e]),t){if(t.skeleton){this._skeletonPose=[];for(var i=0;i<t.skeleton.numJoints;++i)this._skeletonPose[i]=new HX.Matrix4x4}t.onChange.bind(this._onModelChange,this),this._onModelChange()}this._invalidateWorldBounds()},HX.ModelInstance.prototype.getMeshInstance=function(t){return this._meshInstances[t]},HX.ModelInstance.prototype._addMeshInstance=function(t,e){this._meshInstances.push(new HX.MeshInstance(t,e))},HX.ModelInstance.prototype._onModelChange=function(){for(var t=this._materials.length-1,e=0;e<this._model.numMeshes;++e)this._addMeshInstance(this._model.getMesh(e),this._materials[Math.min(e,t)]);this._invalidateWorldBounds()},HX.ModelInstance.prototype._updateWorldBounds=function(){this._meshBounds.transformFrom(this._model.localBounds,this.worldMatrix),this._worldBounds.growToIncludeBound(this._meshBounds),HX.Entity.prototype._updateWorldBounds.call(this)},HX.ModelInstance.prototype.acceptVisitor=function(t){t.visitModelInstance(this,this.worldMatrix,this.worldBounds),HX.Entity.prototype.acceptVisitor.call(this,t)},HX.ModelInstance.prototype.toString=function(){return"[ModelInstance(name="+this._name+")]"},HX.RectMesh={},HX.RectMesh.create=function(){var t=new HX.MeshData;return t.addVertexAttribute("hx_position",2),t.addVertexAttribute("hx_texCoord",2),t.setVertexData([-1,1,0,1,1,1,1,1,1,-1,1,0,-1,-1,0,0],0),t.setIndexData([0,1,2,0,2,3]),new HX.Mesh(t)},HX.RectMesh._initDefault=function(){HX.RectMesh.DEFAULT=HX.RectMesh.create()},HX.ScanlineMesh={},HX.ScanlineMesh.create=function(t){var e=new HX.MeshData;e.addVertexAttribute("hx_position",2);for(var i=2/t,n=[],r=[],o=0,a=0;t>a;a+=2){var s=a/t*2-1,h=s+i;n.push(-1,h,1,h,1,s,-1,s),r.push(o,o+1,o+2,o,o+2,o+3),o+=4}return e.setVertexData(n,0),e.setIndexData(r),new HX.Mesh(e)},HX.AmbientLight=function(){HX.Entity.call(this),this._scaledIrradiance=new HX.Color,this._intensity=1,this.color=new HX.Color(.1,.1,.1),this._scaledIrradiance=new HX.Color,this._updateScaledIrradiance()},HX.AmbientLight.prototype=Object.create(HX.Entity.prototype),Object.defineProperties(HX.AmbientLight.prototype,{color:{get:function(){return this._color},set:function(t){this._color=isNaN(t)?t:new HX.Color(t),this._updateScaledIrradiance()}},intensity:{get:function(){return this._intensity},set:function(t){this._intensity=t,this._updateScaledIrradiance()}}}),HX.AmbientLight.prototype.acceptVisitor=function(t){HX.Entity.prototype.acceptVisitor.call(this,t),t.visitAmbientLight(this)},HX.AmbientLight.prototype._updateWorldBounds=function(){this._worldBounds.clear(HX.BoundingVolume.EXPANSE_INFINITE)},HX.AmbientLight.prototype._updateScaledIrradiance=function(){HX.OPTIONS.useGammaCorrection?this._color.gammaToLinear(this._scaledIrradiance):this._scaledIrradiance.copyFrom(this._color),this._scaledIrradiance.r*=this._intensity,this._scaledIrradiance.g*=this._intensity,this._scaledIrradiance.b*=this._intensity},HX.DirectionalLight=function(){HX.Light.call(this),this._numCascades=1,this._shadowMapSize=1024,this.depthBias=0,this.direction=new HX.Float4(-1,-1,-1,0),this._matrixData=null,this._dirLocation=null,this._colorLocation=null,this._splitDistancesLocation=null,this._shadowMatrixLocation=null,this._depthBiasLocation=null},HX.DirectionalLight.SHADOW_FILTER=null,HX.DirectionalLight.prototype=Object.create(HX.Light.prototype,{castShadows:{get:function(){return this._castShadows},set:function(t){this._castShadows!==t&&(this._castShadows=t,t?(HX.DirectionalLight.SHADOW_FILTER.onShaderInvalid.bind(this._onShadowFilterChange,this),this._shadowMapRenderer=new HX.CascadeShadowMapRenderer(this,this._numCascades,this._shadowMapSize)):(HX.DirectionalLight.SHADOW_FILTER.onShaderInvalid.unbind(this._onShadowFilterChange),this._shadowMapRenderer.dispose(),this._shadowMapRenderer=null),this._invalidateLightPass())}},numCascades:{get:function(){return this._numCascades},set:function(t){t>4&&(console.warn("set numCascades called with value greater than 4. Real value will be set to 4."),t=4),this._numCascades=t,this._castShadows&&this._invalidateLightPass(),this._shadowMapRenderer&&this._shadowMapRenderer.setNumCascades(t)}},shadowMapSize:{get:function(){return this._shadowMapSize},set:function(t){this._shadowMapSize=t,this._shadowMapRenderer&&this._shadowMapRenderer.setShadowMapSize(t)}},direction:{get:function(){var t=this.worldMatrix.getColumn(2);return t.x=-t.x,t.y=-t.y,t.z=-t.z,t},set:function(t){var e=new HX.Matrix4x4,i=this.worldMatrix.getColumn(3),n=HX.Float4.add(t,i);e.lookAt(n,i,HX.Float4.Y_AXIS),this.matrix=e}}}),HX.DirectionalLight.prototype.setCascadeRatios=function(t,e,i,n){this._shadowMapRenderer.setSplitRatios(t,e,i,n)},HX.DirectionalLight.prototype.renderBatch=function(t,e,i){this._lightPass||this._initLightPass();var n=i._camera;this._lightPass.updateRenderState(i);var r=t[e],o=n.viewMatrix.transform(r.direction),a=r._scaledIrradiance;if(HX_GL.uniform3f(this._dirLocation,o.x,o.y,o.z),HX_GL.uniform3f(this._colorLocation,a.r,a.g,a.b),this._castShadows){var s=this._shadowMapRenderer.splitDistances;HX_GL.uniform1fv(this._splitDistancesLocation,new Float32Array(s)),HX_GL.uniform1f(this._depthBiasLocation,r.depthBias);for(var h=0,l=this._numCascades,_=new HX.Matrix4x4,c=0;l>c;++c){_.multiply(this._shadowMapRenderer.getShadowMatrix(c),n.worldMatrix);for(var u=_._m,f=0;16>f;++f)this._matrixData[h++]=u[f]}HX_GL.uniformMatrix4fv(this._shadowMatrixLocation,!1,this._matrixData)}return HX.drawElements(HX_GL.TRIANGLES,6,0),e+1},HX.DirectionalLight.prototype._updateWorldBounds=function(){this._worldBounds.clear(HX.BoundingVolume.EXPANSE_INFINITE)},HX.DirectionalLight.prototype._initLightPass=function(){var t={};this._castShadows&&(t.CAST_SHADOWS=1,t.NUM_CASCADES=this._numCascades);var e=HX.ShaderLibrary.get("directional_light_vertex.glsl",t),i=HX.DirectionalLight.SHADOW_FILTER.getGLSL()+"\n"+HX.LIGHTING_MODEL.getGLSL()+"\n"+HX.ShaderLibrary.get("directional_light_fragment.glsl",t),n=new HX.EffectPass(e,i);n.blendState=HX.BlendState.ADD,this._dirLocation=n.getUniformLocation("lightViewDirection"),this._colorLocation=n.getUniformLocation("lightColor"),this._lightPass=n,this._castShadows&&(this._matrixData=new Float32Array(16*this._numCascades),this._lightPass.setTexture("shadowMap",this._shadowMapRenderer._shadowMap),this._splitDistancesLocation=this._lightPass.getUniformLocation("splitDistances[0]"),this._shadowMatrixLocation=this._lightPass.getUniformLocation("shadowMapMatrices[0]"),this._depthBiasLocation=this._lightPass.getUniformLocation("depthBias"))},HX.DirectionalLight.prototype._invalidateLightPass=function(){this._lightPass&&(this._lightPass._shader.dispose(),this._lightPass=null,this._dirLocation=null,this._colorLocation=null,this._splitDistancesLocation=null,this._shadowMatrixLocation=null,this._depthBiasLocation=null,this._matrixData=null)},HX.DirectionalLight.prototype._onShadowFilterChange=function(){this._invalidateLightPass()},HX.ExponentialDirectionalShadowFilter=function(){HX.ShadowFilter.call(this),this._expScaleFactor=80,this._blurRadius=1,this._darkeningFactor=.35},HX.ExponentialDirectionalShadowFilter.prototype=Object.create(HX.ShadowFilter.prototype,{blurRadius:{get:function(){return this._blurRadius},set:function(t){this._blurRadius=t,this._invalidateBlurShader()}},darkeningFactor:{get:function(){return this._darkeningFactor},set:function(t){this._darkeningFactor=t,this.onShaderInvalid.dispatch()}},expScaleFactor:{get:function(){return this._expScaleFactor},set:function(t){this._expScaleFactor=t,this.onShaderInvalid.dispatch()}}}),HX.ExponentialDirectionalShadowFilter.prototype.getShadowMapFormat=function(){return HX_GL.RGB},HX.ExponentialDirectionalShadowFilter.prototype.getShadowMapDataType=function(){return HX_GL.FLOAT},HX.ExponentialDirectionalShadowFilter.prototype.getGLSL=function(){var t=this._getDefines();return HX.ShaderLibrary.get("dir_shadow_esm.glsl",t)},HX.ExponentialDirectionalShadowFilter.prototype._getDefines=function(){return{HX_ESM_CONSTANT:"float("+this._expScaleFactor+")",HX_ESM_DARKENING:"float("+this._darkeningFactor+")"}},HX.ExponentialDirectionalShadowFilter.prototype._createBlurShader=function(){return new HX.ESMBlurShader(this._blurRadius)},HX.ESMBlurShader=function(t){HX.Shader.call(this);var e={RADIUS:t,RCP_NUM_SAMPLES:"float("+1/(1+2*t)+")"},i=HX.ShaderLibrary.get("copy_vertex.glsl",e),n=HX.ShaderLibrary.get("esm_blur_fragment.glsl",e);this.init(i,n),this._textureLocation=HX_GL.getUniformLocation(this._program,"source"),this._directionLocation=HX_GL.getUniformLocation(this._program,"direction"),this._positionAttributeLocation=HX_GL.getAttribLocation(this._program,"hx_position"),this._texCoordAttributeLocation=HX_GL.getAttribLocation(this._program,"hx_texCoord"),HX_GL.useProgram(this._program),HX_GL.uniform1i(this._textureLocation,0)},HX.ESMBlurShader.prototype=Object.create(HX.Shader.prototype),HX.ESMBlurShader.prototype.execute=function(t,e,i,n){HX.setDepthTest(HX.Comparison.DISABLED),HX.setCullMode(HX.CullMode.NONE),t._vertexBuffers[0].bind(),t._indexBuffer.bind(),this.updateRenderState(),e.bind(0),HX_GL.vertexAttribPointer(this._positionAttributeLocation,2,HX_GL.FLOAT,!1,16,0),HX_GL.vertexAttribPointer(this._texCoordAttributeLocation,2,HX_GL.FLOAT,!1,16,8),HX.enableAttributes(2),HX_GL.uniform2f(this._directionLocation,i,n),HX.drawElements(HX_GL.TRIANGLES,6,0)},HX.GlobalSpecularProbe=function(t){this._texture=t,this._pass=this._initPass()},HX.GlobalSpecularProbe.powerRange0=98e-5,HX.GlobalSpecularProbe.powerRange1=.9921,HX.GlobalSpecularProbe.prototype=Object.create(HX.Light.prototype),HX.GlobalSpecularProbe.prototype.render=function(t){if(this._pass.updateRenderState(t),this._texture){var e=Math.floor(HX.log2(this._texture.size)),i=0;HX_GL.uniform1f(this._numMipsLocation,e-i)}HX.drawElements(HX_GL.TRIANGLES,6,0)},HX.GlobalSpecularProbe.prototype._updateWorldBounds=function(){this._worldBounds.clear(HX.BoundingVolume.EXPANSE_INFINITE),HX.Light.prototype._updateWorldBounds.call(this)},HX.GlobalSpecularProbe.prototype._initPass=function(){var t={},e=[];HX.EXT_SHADER_TEXTURE_LOD&&(t.USE_TEX_LOD=1,e.push("GL_EXT_shader_texture_lod")),t.K0=HX.GlobalSpecularProbe.powerRange0,t.K1=HX.GlobalSpecularProbe.powerRange1;var i=new HX.EffectPass(HX.ShaderLibrary.get("global_specular_probe_vertex.glsl"),HX.ShaderLibrary.get("global_specular_probe_fragment.glsl",t,e));i.blendState=HX.BlendState.ADD,this._numMipsLocation=i.getUniformLocation("numMips"),i.setTexture("specularProbeSampler",this._texture);var n=.0014,r=2/(n*n)-2,o=(Math.pow(2,-10/Math.sqrt(r))-HX.GlobalSpecularProbe.powerRange0)/HX.GlobalSpecularProbe.powerRange1;return i.setUniform("maxMipFactor",o),i},HX.GlobalIrradianceProbe=function(t){this._texture=t,this._pass=this._initPass()},HX.GlobalIrradianceProbe.prototype=Object.create(HX.Light.prototype),HX.GlobalIrradianceProbe.prototype.render=function(t){this._pass.updateRenderState(t),HX.drawElements(HX_GL.TRIANGLES,6,0)},HX.GlobalIrradianceProbe.prototype._updateWorldBounds=function(){this._worldBounds.clear(HX.BoundingVolume.EXPANSE_INFINITE),HX.Light.prototype._updateWorldBounds.call(this)},HX.GlobalIrradianceProbe.prototype._initPass=function(){var t={},e=new HX.EffectPass(HX.ShaderLibrary.get("global_irradiance_probe_vertex.glsl"),HX.ShaderLibrary.get("global_irradiance_probe_fragment.glsl",t));return e.blendState=HX.BlendState.ADD,e.setTexture("irradianceProbeSampler",this._texture),e},HX.HardDirectionalShadowFilter=function(){HX.ShadowFilter.call(this)},HX.HardDirectionalShadowFilter.prototype=Object.create(HX.ShadowFilter.prototype),HX.HardDirectionalShadowFilter.prototype.getGLSL=function(){return HX.ShaderLibrary.get("dir_shadow_hard.glsl")},HX.HardDirectionalShadowFilter.prototype.getCullMode=function(){return HX.CullMode.FRONT},HX.PCFDirectionalShadowFilter=function(){HX.ShadowFilter.call(this),this._softness=.01,this._numShadowSamples=6,this._dither=!1},HX.PCFDirectionalShadowFilter.prototype=Object.create(HX.ShadowFilter.prototype,{softness:{get:function(){return this._softness},set:function(t){this._softness!==t&&(this._softness=t,this.onShaderInvalid.dispatch())}},numShadowSamples:{get:function(){return this._numShadowSamples},set:function(t){this._numShadowSamples!==t&&(this._numShadowSamples=t,this.onShaderInvalid.dispatch())}},dither:{get:function(){return this._dither},set:function(t){this._dither!==t&&(this._dither=t,this.onShaderInvalid.dispatch())}}}),HX.PCFDirectionalShadowFilter.prototype.getCullMode=function(){return HX.CullMode.FRONT},HX.PCFDirectionalShadowFilter.prototype.getGLSL=function(){var t={HX_PCF_NUM_SHADOW_SAMPLES:this._numShadowSamples,HX_PCF_RCP_NUM_SHADOW_SAMPLES:"float("+1/this._numShadowSamples+")",HX_PCF_SOFTNESS:this._softness};return this._dither&&(t.HX_PCF_DITHER_SHADOWS=1),HX.ShaderLibrary.get("dir_shadow_pcf.glsl",t)},HX.PointLight=function(){if(HX.Light.call(this),!HX.PointLight._initialized){var t=HX.SpherePrimitive.createMeshData({radius:1,invert:!0,numSegmentsW:HX.PointLight.SPHERE_SEGMENTS_W,numSegmentsH:HX.PointLight.SPHERE_SEGMENTS_H,uvs:!1,normals:!1,tangents:!1});HX.PointLight._sphereMesh=new HX.Mesh(HX.MeshBatch.create(t,HX.PointLight.LIGHTS_PER_BATCH)),HX.PointLight.NUM_SPHERE_INDICES=t._indexData.length,HX.PointLight._positionData=new Float32Array(3*HX.PointLight.LIGHTS_PER_BATCH),HX.PointLight._colorData=new Float32Array(3*HX.PointLight.LIGHTS_PER_BATCH),HX.PointLight._radiusData=new Float32Array(HX.PointLight.LIGHTS_PER_BATCH),this._initLightPasses(),HX.PointLight._initialized=!0}this._radius=100,this.intensity=3.1415},HX.PointLight.LIGHTS_PER_BATCH=20,HX.PointLight.SPHERE_SEGMENTS_W=16,HX.PointLight.SPHERE_SEGMENTS_H=10,HX.PointLight.NUM_SPHERE_INDICES=-1,HX.PointLight.prototype=Object.create(HX.Light.prototype,{radius:{get:function(){return this._radius},set:function(t){this._radius=t,this._updateWorldBounds()}}}),HX.PointLight.prototype.renderBatch=function(t,e,i){var n=e+HX.PointLight.LIGHTS_PER_BATCH;n>t.length&&(n=t.length),HX.PointLight._lightPass.updateRenderState(i);for(var r=i._camera,o=HX.PointLight._positionData,a=HX.PointLight._colorData,s=HX.PointLight._radiusData,h=new HX.Float4,l=r.viewMatrix,_=0,c=0,u=e;n>u;++u){var f=t[u];if(f._type!=this._type){n=u;break}f.worldMatrix.getColumn(3,h),l.transformPoint(h,h);var d=f._scaledIrradiance;o[c]=h.x,a[c++]=d.r,o[c]=h.y,a[c++]=d.g,o[c]=h.z,a[c++]=d.b,s[_++]=1.0001*f._radius}var p=HX.PointLight._sphereMesh._vertexBuffers;return p[0].bind(),HX_GL.vertexAttribPointer(HX.PointLight._positionAttrib,3,HX_GL.FLOAT,!1,12,0),p[1].bind(),HX_GL.vertexAttribPointer(HX.PointLight._instanceAttrib,1,HX_GL.FLOAT,!1,4,0),HX_GL.uniform3fv(HX.PointLight._positionLocation,o),HX_GL.uniform3fv(HX.PointLight._colorLocation,a),HX_GL.uniform1fv(HX.PointLight._lightRadiusLocation,s),HX.drawElements(HX_GL.TRIANGLES,HX.PointLight.NUM_SPHERE_INDICES*(n-e),0),n},HX.PointLight.prototype._createBoundingVolume=function(){return new HX.BoundingSphere},HX.PointLight.prototype._updateWorldBounds=function(){this._worldBounds.setExplicit(this.worldMatrix.getColumn(3),this._radius)},HX.PointLight.prototype._initLightPasses=function(){var t={LIGHTS_PER_BATCH:HX.PointLight.LIGHTS_PER_BATCH},e=new HX.EffectPass(HX.ShaderLibrary.get("point_light_vertex.glsl",t),HX.LIGHTING_MODEL.getGLSL()+HX.ShaderLibrary.get("point_light_fragment.glsl",t));e.blendState=HX.BlendState.ADD,e.depthTest=HX.Comparison.DISABLED,e.cullMode=HX.CullMode.BACK,e.writeDepth=!1,e.setMesh(HX.PointLight._sphereMesh),HX.PointLight._positionAttrib=e.getAttributeLocation("hx_position"),HX.PointLight._instanceAttrib=e.getAttributeLocation("hx_instanceID"),HX.PointLight._lightPass=e,HX.PointLight._positionLocation=e.getUniformLocation("lightViewPosition[0]"),HX.PointLight._colorLocation=e.getUniformLocation("lightColor[0]"),HX.PointLight._lightRadiusLocation=e.getUniformLocation("lightRadius[0]")},HX.VarianceDirectionalShadowFilter=function(){HX.ShadowFilter.call(this),this._blurRadius=2,this._lightBleedReduction=.35},HX.VarianceDirectionalShadowFilter.prototype=Object.create(HX.ShadowFilter.prototype,{blurRadius:{get:function(){return this._blurRadius},set:function(t){this._blurRadius=t,this._invalidateBlurShader()}},lightBleedReduction:{get:function(){return this._lightBleedReduction},set:function(t){this._lightBleedReduction=t,this.onShaderInvalid.dispatch()}}}),HX.VarianceDirectionalShadowFilter.prototype.getGLSL=function(){var t=this._getDefines();return HX.ShaderLibrary.get("dir_shadow_vsm.glsl",t)},HX.VarianceDirectionalShadowFilter.prototype._createBlurShader=function(){return new HX.VSMBlurShader(this._blurRadius)},HX.VarianceDirectionalShadowFilter.prototype._getDefines=function(){var t=1-this._lightBleedReduction;return{HX_VSM_MIN_VARIANCE:1e-4,HX_VSM_LIGHT_BLEED_REDUCTION:"float("+this._lightBleedReduction+")",HX_VSM_LIGHT_BLEED_REDUCTION_RANGE:"float("+t+")"}},HX.VSMBlurShader=function(t){HX.Shader.call(this);var e={RADIUS:t,RCP_NUM_SAMPLES:"float("+1/(1+2*t)+")"},i=HX.ShaderLibrary.get("copy_vertex.glsl",e),n=HX.ShaderLibrary.get("vsm_blur_fragment.glsl",e);this.init(i,n),this._textureLocation=HX_GL.getUniformLocation(this._program,"source"),this._directionLocation=HX_GL.getUniformLocation(this._program,"direction"),this._positionAttributeLocation=HX_GL.getAttribLocation(this._program,"hx_position"),this._texCoordAttributeLocation=HX_GL.getAttribLocation(this._program,"hx_texCoord"),HX_GL.useProgram(this._program),HX_GL.uniform1i(this._textureLocation,0)},HX.VSMBlurShader.prototype=Object.create(HX.Shader.prototype),HX.VSMBlurShader.prototype.execute=function(t,e,i,n){HX.setDepthTest(HX.Comparison.DISABLED),HX.setCullMode(HX.CullMode.NONE),t._vertexBuffers[0].bind(),t._indexBuffer.bind(),this.updateRenderState(),e.bind(0),HX_GL.vertexAttribPointer(this._positionAttributeLocation,2,HX_GL.FLOAT,!1,16,0),HX_GL.vertexAttribPointer(this._texCoordAttributeLocation,2,HX_GL.FLOAT,!1,16,8),HX.enableAttributes(2),HX_GL.uniform2f(this._directionLocation,i,n),HX.drawElements(HX_GL.TRIANGLES,6,0)},HX.Primitive={_ATTRIBS:function(){this.positions=[],this.uvs=null,this.normals=null,this.indices=[]},define:function(){var t=function(e){e=e||{};var i=t.createMeshData(e),n=new HX.ModelData;n.addMeshData(i),HX.Model.call(this,n)};return t.prototype=Object.create(HX.Model.prototype),t.createMeshData=function(e){var i=new HX.Primitive._ATTRIBS,n=void 0===e.uvs?!0:e.uvs,r=void 0===e.normals?!0:e.normals,o=void 0===e.tangents?!0:e.tangents,a=new HX.MeshData;a.addVertexAttribute("hx_position",3),r&&(a.addVertexAttribute("hx_normal",3),i.normals=[]),o&&a.addVertexAttribute("hx_tangent",4),n&&(a.addVertexAttribute("hx_texCoord",2),i.uvs=[]),t._generate(i,e);for(var s=e.scaleU||1,h=e.scaleV||1,l=i.positions.length/3,_=0,c=0,u=0,f=[],d=0;l>d;++d)f[_++]=i.positions[u],f[_++]=i.positions[u+1],f[_++]=i.positions[u+2],r&&(f[_++]=i.normals[u],f[_++]=i.normals[u+1],f[_++]=i.normals[u+2]),o&&(_+=4),n&&(f[_++]=i.uvs[c++]*s,f[_++]=i.uvs[c++]*h),u+=3;a.setVertexData(f,0),a.setIndexData(i.indices);var p=0;if(r&&0===i.normals.length&&(p|=HX.NormalTangentGenerator.MODE_NORMALS),o&&(p|=HX.NormalTangentGenerator.MODE_TANGENTS),p){var m=new HX.NormalTangentGenerator;m.generate(a,p)}return a},t.createMesh=function e(e){var i=t.createMeshData(e);return new HX.Mesh(i)},t}},HX.BoxPrimitive=HX.Primitive.define(),HX.BoxPrimitive._generate=function(t,e){for(var i=e.numSegmentsW||1,n=e.numSegmentsH||e.numSegmentsW||1,r=e.numSegmentsD||e.numSegmentsW||1,o=e.width||1,a=e.height||o,s=e.depth||o,h=e.invert?-1:1,l=void 0===e.doubleSided?!1:e.doubleSided,_=1/i,c=1/n,u=1/r,f=.5*o,d=.5*a,p=.5*s,m=t.positions,X=t.uvs,H=t.normals,g=t.indices,x=0;n>=x;++x){var S=x*c,v=a*S-d;0>h&&(S=1-S);for(var E=0;i>=E;++E){var b=E*_,T=o*b-f;0>h&&(b=1-b),m.push(T*h,v*h,p*h),m.push(-T*h,v*h,-p*h),H&&(H.push(0,0,1),H.push(0,0,-1)),X&&(X.push(b,S),X.push(b,S))}}for(var x=0;n>=x;++x)for(var S=x*c,v=a*S-d,y=0;r>=y;++y){var b=y*u,L=s*b-p;m.push(-f,v,L*h),m.push(f,v,-L*h),H&&(H.push(-h,0,0),H.push(h,0,0)),X&&(X.push(b,S),X.push(b,S))}for(var y=0;r>=y;++y)for(var S=y*u,L=s*S-p,E=0;i>=E;++E){var b=E*_,T=o*b-f;m.push(T,d,-L*h),m.push(T,-d,L*h),H&&(H.push(0,h,0),H.push(0,-h,0)),X&&(X.push(1-b,1-S),X.push(1-b,1-S))}for(var M=0,w=0;3>w;++w){for(var A=1===w?r:i,P=2===w?r:n,R=0;P>R;++R)for(var D=0;A>D;++D){var C=A+1,O=M+D+R*C,F=O<<1,N=O+C+1<<1,I=O+C<<1,G=O+1<<1;g.push(F,N,I),g.push(F,G,N),g.push(1|F,1|N,1|I),g.push(1|F,1|G,1|N)}M+=(A+1)*(P+1)}var B=0;if(l)for(var U=0;B>U;)g.push(g[U],g[U+2],g[U+1]),g.push(g[U+3],g[U+5],g[U+4]),B+=6},HX.ConePrimitive=HX.Primitive.define(),HX.ConePrimitive.ALIGN_X=1,HX.ConePrimitive.ALIGN_Y=2,HX.ConePrimitive.ALIGN_Z=3,HX.ConePrimitive._generate=function(t,e){e=e||{};for(var i=e.numSegmentsH||1,n=e.numSegmentsW||1,r=e.radius||1,o=e.height||1,a=void 0===e.doubleSided?!1:e.doubleSided,s=t.positions,h=t.uvs,l=t.normals,_=t.indices,c=1/n,u=1/i,f=0;i>=f;++f)for(var d=(1-f*u)*r,p=(f*u-.5)*o,m=0;n>=m;++m){var X=m*c*Math.PI*2,H=Math.sin(X),g=Math.cos(X),x=H*d,S=g*d;s.push(x,p,-S),l&&l.push(H,0,-g),h&&h.push(1-m*c,f*u)}for(var m=0;n>m;++m){for(var f=0;i-1>f;++f){var v=n+1,E=m+f*v;_.push(E,E+v,E+v+1),_.push(E,E+v+1,E+1),a&&(_.push(E,E+v+1,E+v),_.push(E,E+1,E+v+1))}var v=n+1,E=m+(i-1)*v;_.push(E,E+v+1,E+1)}for(var b=s.length/3,T=.5*o,m=0;n>m;++m){var X=m*c*Math.PI*2,y=Math.sin(X),L=Math.cos(X),x=y*r,S=L*r;y=.5*-y+.5,L=.5*L+.5,s.push(x,-T,-S),l&&l.push(0,-1,0),h&&h.push(y,L)}for(var m=1;n-1>m;++m)_.push(b,b+m,b+m+1)},HX.CylinderPrimitive=HX.Primitive.define(),HX.CylinderPrimitive.ALIGN_X=1,HX.CylinderPrimitive.ALIGN_Y=2,HX.CylinderPrimitive.ALIGN_Z=3,HX.CylinderPrimitive._generate=function(t,e){e=e||{};for(var i=e.alignment||HX.CylinderPrimitive.ALIGN_Y,n=e.numSegmentsH||1,r=e.numSegmentsW||1,o=e.radius||1,a=e.height||1,s=void 0===e.doubleSided?!1:e.doubleSided,h=t.positions,l=t.uvs,_=t.normals,c=t.indices,u=1/r,f=1/n,d=0;n>=d;++d)for(var p=(d*f-.5)*a,m=0;r>=m;++m){var X=m*u*Math.PI*2,H=Math.sin(X),g=Math.cos(X),x=H*o,S=g*o;switch(i){case HX.CylinderPrimitive.ALIGN_X:h.push(-p,x,-S),_&&_.push(0,H,-g);break;case HX.CylinderPrimitive.ALIGN_Y:h.push(x,p,-S),_&&_.push(H,0,-g);break;case HX.CylinderPrimitive.ALIGN_Z:h.push(x,S,p),_&&_.push(H,g,0)}l&&l.push(1-m*u,d*f)}for(var d=0;n>d;++d)for(var m=0;r>m;++m){var v=r+1,E=m+d*v;c.push(E,E+v,E+v+1),c.push(E,E+v+1,E+1),s&&(c.push(E,E+v+1,E+v),c.push(E,E+1,E+v+1))}for(var b=h.length/3,T=.5*a,m=0;r>m;++m){var X=m*u*Math.PI*2,y=Math.sin(X),L=Math.cos(X),x=y*o,S=L*o;switch(y=.5*-y+.5,L=.5*L+.5,i){case HX.CylinderPrimitive.ALIGN_X:h.push(T,x,-S),h.push(-T,x,-S),_&&(_.push(1,0,0),_.push(-1,0,0)),l&&(l.push(L,1-y),l.push(1-L,1-y));break;case HX.CylinderPrimitive.ALIGN_Y:h.push(x,-T,-S),h.push(x,T,-S),_&&(_.push(0,-1,0),_.push(0,1,0)),l&&(l.push(y,L),l.push(y,1-L));break;case HX.CylinderPrimitive.ALIGN_Z:h.push(x,S,-T),h.push(x,S,T),_&&(_.push(0,0,-1),_.push(0,0,1)),l&&(l.push(y,L),l.push(1-y,L))}}for(var m=1;r-1>m;++m){var M=m<<1;c.push(b,b+M,b+M+2),c.push(b+1,b+M+3,b+M+1)}},HX.PlanePrimitive=HX.Primitive.define(),HX.PlanePrimitive.ALIGN_XZ=1,HX.PlanePrimitive.ALIGN_XY=2,HX.PlanePrimitive.ALIGN_YZ=3,HX.PlanePrimitive._generate=function(t,e){e=e||{};var i=e.alignment||HX.PlanePrimitive.ALIGN_XZ,n=e.numSegmentsW||1,r=e.numSegmentsH||1,o=e.width||1,a=e.height||1,s=void 0===e.doubleSided?!1:e.doubleSided,h=t.positions,l=t.uvs,_=t.normals,c=t.indices,u=1/n,f=1/r,d=0,p=0,m=0,X=0,H=0,g=0,x=0,S=0;i==HX.PlanePrimitive.ALIGN_XY?g=-1:i==HX.PlanePrimitive.ALIGN_XZ?H=1:X=1;for(var v=0;r>=v;++v)for(var E=(v*f-.5)*a,b=0;n>=b;++b){var T=(b*u-.5)*o;if(i==HX.PlanePrimitive.ALIGN_XY?(d=T,p=E,x=1-b*u,S=v*f):i==HX.PlanePrimitive.ALIGN_XZ?(d=T,m=E,x=1-b*u,S=v*f):(p=E,m=T,x=1-b*u,S=v*f),h.push(d,p,m),_&&_.push(X,H,g),l&&l.push(x,S),s&&(h.push(d,p,m),_&&_.push(-X,-H,-g),l&&l.push(1-x,S)),b!=n&&v!=r){var y=n+1,L=b+v*y,M=s?1:0;c.push(L<<M,L+y<<M,L+y+1<<M),c.push(L<<M,L+y+1<<M,L+1<<M),s&&(c.push((L+y+1<<M)+1,(L+y<<M)+1,(L<<M)+1),c.push((L+1<<M)+1,(L+y+1<<M)+1,(L<<M)+1))}}},HX.SpherePrimitive=HX.Primitive.define(),HX.SpherePrimitive._generate=function(t,e){e=e||{};for(var i=e.numSegmentsW||16,n=e.numSegmentsH||10,r=e.radius||.5,o=e.invert?-1:1,a=void 0===e.doubleSided?!1:e.doubleSided,s=t.positions,h=t.uvs,l=t.normals,_=1/i,c=1/n,u=0;n>=u;++u){var f=u*c,d=f*Math.PI,p=-Math.cos(d),m=Math.sin(d);0>o&&(f=1-f);for(var X=0;i>=X;++X){var H=X*_,g=H*Math.PI*2;o&&(H=1-H);var x=Math.cos(g)*m*o,S=p*o,v=Math.sin(g)*m*o;s.push(x*r,S*r,v*r),l&&l.push(x*o,S*o,v*o),h&&h.push(H,f)}}for(var E=t.indices,u=0;n>u;++u)for(var X=0;i>X;++X){var b=i+1,T=X+u*b;E.push(T,T+b,T+b+1),E.push(T,T+b+1,T+1),a&&(E.push(T,T+b+1,T+b),E.push(T,T+1,T+b+1))}},HX.TorusPrimitive=HX.Primitive.define(),HX.TorusPrimitive.ALIGN_XZ=1,HX.TorusPrimitive.ALIGN_XY=2,HX.TorusPrimitive.ALIGN_YZ=3,HX.TorusPrimitive._generate=function(t,e){e=e||{};for(var i=e.numSegmentsW||15,n=e.numSegmentsH||20,r=e.radius||.5,o=e.tubeRadius||.1,a=e.alignment||HX.PlanePrimitive.ALIGN_XZ,s=void 0===e.doubleSided?!1:e.doubleSided,h=t.positions,l=t.uvs,_=t.normals,c=1/i,u=1/n,f=0;n>=f;++f)for(var d=f*u,p=d*Math.PI*2,m=Math.cos(p),X=Math.sin(p),H=0;i>=H;++H){var g=H*c,x=g*Math.PI*2,S=Math.cos(x),v=Math.sin(x),E=r+m*o;switch(a){case HX.TorusPrimitive.ALIGN_XZ:h.push(S*E,X*o,v*E),_&&_.push(S*m,X,v*m);break;case HX.TorusPrimitive.ALIGN_XY:h.push(-S*E,v*E,X*o),_&&_.push(-S*m,v*m,X);break;case HX.TorusPrimitive.ALIGN_YZ:h.push(X*o,-S*E,v*E),_&&_.push(X,-S*m,v*m)}l&&l.push(g,1-d)}for(var b=t.indices,T=0;n>T;++T)for(var y=0;i>y;++y){var L=i+1,M=y+T*L;b.push(M,M+L,M+L+1),b.push(M,M+L+1,M+1),s&&(b.push(M,M+L+1,M+L),b.push(M,M+1,M+L+1))}},HX.FrameBuffer=function(t,e,i){if(t&&void 0===t[0]&&(t=[t]),this._cubeFace=i,this._colorTextures=t,this._numColorTextures=this._colorTextures?this._colorTextures.length:0,this._depthBuffer=e,this._colorTextures&&this._numColorTextures>1){this._drawBuffers=new Array(this._numColorTextures);for(var n=0;n<this._numColorTextures;++n)this._drawBuffers[n]=HX.EXT_DRAW_BUFFERS.COLOR_ATTACHMENT0_WEBGL+n}else this._drawBuffers=null;this._fbo=HX_GL.createFramebuffer()},HX.FrameBuffer.prototype={constructor:HX.FrameBuffer,get width(){return this._width},get height(){return this._height},init:function(){HX_GL.bindFramebuffer(HX_GL.FRAMEBUFFER,this._fbo),this._colorTextures?void 0===this._cubeFace?(this._width=this._colorTextures[0]._width,this._height=this._colorTextures[0]._height):this._height=this._width=this._colorTextures[0].size:(this._width=this._depthBuffer._width,this._height=this._depthBuffer._height);for(var t=0;t<this._numColorTextures;++t){var e=this._colorTextures[t],i=void 0===this._cubeFace?HX_GL.TEXTURE_2D:this._cubeFace;HX.EXT_DRAW_BUFFERS?HX_GL.framebufferTexture2D(HX_GL.FRAMEBUFFER,HX.EXT_DRAW_BUFFERS.COLOR_ATTACHMENT0_WEBGL+t,i,e._texture,0):HX_GL.framebufferTexture2D(HX_GL.FRAMEBUFFER,HX_GL.COLOR_ATTACHMENT0+t,i,e._texture,0)}if(this._depthBuffer){var n=this._depthBuffer.format===HX_GL.DEPTH_STENCIL?HX_GL.DEPTH_STENCIL_ATTACHMENT:HX_GL.DEPTH_ATTACHMENT;this._depthBuffer instanceof HX.Texture2D?HX_GL.framebufferTexture2D(HX_GL.FRAMEBUFFER,n,HX_GL.TEXTURE_2D,this._depthBuffer._texture,0):(HX_GL.bindRenderbuffer(HX_GL.RENDERBUFFER,this._depthBuffer._renderBuffer),HX_GL.framebufferRenderbuffer(HX_GL.FRAMEBUFFER,n,HX_GL.RENDERBUFFER,this._depthBuffer._renderBuffer))}var r=HX_GL.checkFramebufferStatus(HX_GL.FRAMEBUFFER);switch(r){case HX_GL.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:console.warn("Failed to initialize FBO: FRAMEBUFFER_INCOMPLETE_ATTACHMENT");break;case HX_GL.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:console.warn("Failed to initialize FBO: FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT");break;case HX_GL.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:console.warn("Failed to initialize FBO: FRAMEBUFFER_INCOMPLETE_DIMENSIONS");break;case HX_GL.FRAMEBUFFER_UNSUPPORTED:console.warn("Failed to initialize FBO: FRAMEBUFFER_UNSUPPORTED")}},dispose:function(){HX_GL.deleteFramebuffer(this._fbo)}},HX.Texture2D=function(){this._name=null,this._default=HX.Texture2D.DEFAULT,this._texture=HX_GL.createTexture(),this._width=0,this._height=0,this._format=null,this._dataType=null,this.bind(),this.maxAnisotropy=HX.DEFAULT_TEXTURE_MAX_ANISOTROPY,this.filter=HX.TextureFilter.DEFAULT,this.wrapMode=HX.TextureWrapMode.DEFAULT,this._isReady=!1,HX_GL.bindTexture(HX_GL.TEXTURE_2D,null)},HX.Texture2D._initDefault=function(){var t=new Uint8Array([255,0,255,255]);HX.Texture2D.DEFAULT=new HX.Texture2D,HX.Texture2D.DEFAULT.uploadData(t,1,1,!0),HX.Texture2D.DEFAULT.filter=HX.TextureFilter.NEAREST_NOMIP},HX.Texture2D.prototype={get name(){return this._name},set name(t){this._name=t},dispose:function(){HX_GL.deleteTexture(this._texture),this._isReady=!1},generateMipmap:function(){this.bind(),HX_GL.generateMipmap(HX_GL.TEXTURE_2D),HX_GL.bindTexture(HX_GL.TEXTURE_2D,null)},get filter(){return this._filter},set filter(t){this._filter=t,this.bind(),HX_GL.texParameteri(HX_GL.TEXTURE_2D,HX_GL.TEXTURE_MIN_FILTER,t.min),HX_GL.texParameteri(HX_GL.TEXTURE_2D,HX_GL.TEXTURE_MAG_FILTER,t.mag),HX_GL.bindTexture(HX_GL.TEXTURE_2D,null),(t===HX.TextureFilter.NEAREST_NOMIP||t===HX.TextureFilter.NEAREST)&&(this.maxAnisotropy=1)},get wrapMode(){return this._wrapMode},set wrapMode(t){this._wrapMode=t,this.bind(),HX_GL.texParameteri(HX_GL.TEXTURE_2D,HX_GL.TEXTURE_WRAP_S,t.s),HX_GL.texParameteri(HX_GL.TEXTURE_2D,HX_GL.TEXTURE_WRAP_T,t.t),HX_GL.bindTexture(HX_GL.TEXTURE_2D,null)},get maxAnisotropy(){return this._maxAnisotropy},set maxAnisotropy(t){t>HX.DEFAULT_TEXTURE_MAX_ANISOTROPY&&(t=HX.DEFAULT_TEXTURE_MAX_ANISOTROPY),this._maxAnisotropy=t,this.bind(),HX.EXT_TEXTURE_FILTER_ANISOTROPIC&&HX_GL.texParameteri(HX_GL.TEXTURE_2D,HX.EXT_TEXTURE_FILTER_ANISOTROPIC.TEXTURE_MAX_ANISOTROPY_EXT,t),HX_GL.bindTexture(HX_GL.TEXTURE_2D,null)},get width(){return this._width},get height(){return this._height},get format(){return this._format},get dataType(){return this._dataType},initEmpty:function(t,e,i,n){this._format=i=i||HX_GL.RGBA,this._dataType=n=n||HX_GL.UNSIGNED_BYTE,this.bind(),this._width=t,this._height=e,HX_GL.texImage2D(HX_GL.TEXTURE_2D,0,i,t,e,0,i,n,null),this._isReady=!0,HX_GL.bindTexture(HX_GL.TEXTURE_2D,null)},uploadData:function(t,e,i,n,r,o){this._width=e,this._height=i,this._format=r=r||HX_GL.RGBA,this._dataType=o=o||HX_GL.UNSIGNED_BYTE,n=void 0===n?!1:n,this.bind(),HX_GL.texImage2D(HX_GL.TEXTURE_2D,0,r,e,i,0,r,o,t),n&&HX_GL.generateMipmap(HX_GL.TEXTURE_2D),this._isReady=!0,HX_GL.bindTexture(HX_GL.TEXTURE_2D,null)},uploadImage:function(t,e,i,n,r,o){this._width=e,this._height=i,this._format=r=r||HX_GL.RGBA,this._dataType=o=o||HX_GL.UNSIGNED_BYTE,n=void 0===n?!0:n,this.bind(),t&&HX_GL.pixelStorei(HX_GL.UNPACK_FLIP_Y_WEBGL,1),HX_GL.texImage2D(HX_GL.TEXTURE_2D,0,r,r,o,t),n&&HX_GL.generateMipmap(HX_GL.TEXTURE_2D),this._isReady=!0,HX_GL.bindTexture(HX_GL.TEXTURE_2D,null)},isReady:function(){return this._isReady},bind:function(t){void 0!==t&&HX_GL.activeTexture(HX_GL.TEXTURE0+t),HX_GL.bindTexture(HX_GL.TEXTURE_2D,this._texture)},toString:function(){return"[Texture2D(name="+this._name+")]"}},HX.TextureCube=function(){this._name=null,this._default=HX.TextureCube.DEFAULT,this._texture=HX_GL.createTexture(),this._size=0,
this._format=null,this._dataType=null,this.bind(),this.filter=HX.TextureFilter.DEFAULT,this.maxAnisotropy=HX.DEFAULT_TEXTURE_MAX_ANISOTROPY,this._isReady=!1},HX.TextureCube._initDefault=function(){var t=new Uint8Array([255,0,255,255]);HX.TextureCube.DEFAULT=new HX.TextureCube,HX.TextureCube.DEFAULT.uploadData([t,t,t,t,t,t],1,!0),HX.TextureCube.DEFAULT.filter=HX.TextureFilter.NEAREST_NOMIP,HX_GL.bindTexture(HX_GL.TEXTURE_CUBE_MAP,null)},HX.TextureCube.prototype={constructor:HX.TextureCube,get name(){return this._name},set name(t){this._name=t},dispose:function(){HX_GL.deleteTexture(this._texture),this._isReady=!1},generateMipmap:function(){this.bind(),HX_GL.generateMipmap(HX_GL.TEXTURE_CUBE_MAP),HX_GL.bindTexture(HX_GL.TEXTURE_CUBE_MAP,null)},get filter(){return this._filter},set filter(t){this._filter=t,this.bind(),HX_GL.texParameteri(HX_GL.TEXTURE_CUBE_MAP,HX_GL.TEXTURE_MIN_FILTER,t.min),HX_GL.texParameteri(HX_GL.TEXTURE_CUBE_MAP,HX_GL.TEXTURE_MAG_FILTER,t.mag),HX_GL.bindTexture(HX_GL.TEXTURE_CUBE_MAP,null)},get maxAnisotropy(){return this._maxAnisotropy},set maxAnisotropy(t){t>HX.DEFAULT_TEXTURE_MAX_ANISOTROPY&&(t=HX.DEFAULT_TEXTURE_MAX_ANISOTROPY),this._maxAnisotropy=t,this.bind(),HX.EXT_TEXTURE_FILTER_ANISOTROPIC&&HX_GL.texParameteri(HX_GL.TEXTURE_CUBE_MAP,HX.EXT_TEXTURE_FILTER_ANISOTROPIC.TEXTURE_MAX_ANISOTROPY_EXT,t),HX_GL.bindTexture(HX_GL.TEXTURE_CUBE_MAP,null)},get size(){return this._size},get format(){return this._format},get dataType(){return this._dataType},initEmpty:function(t,e,i){this._format=e=e||HX_GL.RGBA,this._dataType=i=i||HX_GL.UNSIGNED_BYTE,this._size=t,this.bind(),HX_GL.texImage2D(HX_GL.TEXTURE_CUBE_MAP_POSITIVE_X,0,e,t,t,0,e,i,null),HX_GL.texImage2D(HX_GL.TEXTURE_CUBE_MAP_NEGATIVE_X,0,e,t,t,0,e,i,null),HX_GL.texImage2D(HX_GL.TEXTURE_CUBE_MAP_POSITIVE_Y,0,e,t,t,0,e,i,null),HX_GL.texImage2D(HX_GL.TEXTURE_CUBE_MAP_NEGATIVE_Y,0,e,t,t,0,e,i,null),HX_GL.texImage2D(HX_GL.TEXTURE_CUBE_MAP_POSITIVE_Z,0,e,t,t,0,e,i,null),HX_GL.texImage2D(HX_GL.TEXTURE_CUBE_MAP_NEGATIVE_Z,0,e,t,t,0,e,i,null),this._isReady=!0,HX_GL.bindTexture(HX_GL.TEXTURE_2D,null)},uploadData:function(t,e,i,n,r){this._size=e,this._format=n=n||HX_GL.RGBA,this._dataType=r=r||HX_GL.UNSIGNED_BYTE,i=void 0===i?!0:i,this.bind(),HX_GL.pixelStorei(HX_GL.UNPACK_FLIP_Y_WEBGL,0),HX_GL.texImage2D(HX_GL.TEXTURE_CUBE_MAP_POSITIVE_X,0,n,e,e,0,n,r,t[0]),HX_GL.texImage2D(HX_GL.TEXTURE_CUBE_MAP_NEGATIVE_X,0,n,e,e,0,n,r,t[1]),HX_GL.texImage2D(HX_GL.TEXTURE_CUBE_MAP_POSITIVE_Y,0,n,e,e,0,n,r,t[2]),HX_GL.texImage2D(HX_GL.TEXTURE_CUBE_MAP_NEGATIVE_Y,0,n,e,e,0,n,r,t[3]),HX_GL.texImage2D(HX_GL.TEXTURE_CUBE_MAP_POSITIVE_Z,0,n,e,e,0,n,r,t[4]),HX_GL.texImage2D(HX_GL.TEXTURE_CUBE_MAP_NEGATIVE_Z,0,n,e,e,0,n,r,t[5]),i&&HX_GL.generateMipmap(HX_GL.TEXTURE_CUBE_MAP),this._isReady=!0,HX_GL.bindTexture(HX_GL.TEXTURE_CUBE_MAP,null)},uploadImages:function(t,e,i,n){e=void 0===e?!0:e,this._format=i,this._dataType=n,this.uploadImagesToMipLevel(t,0,i,n),e&&(this.bind(),HX_GL.generateMipmap(HX_GL.TEXTURE_CUBE_MAP)),this._isReady=!0,HX_GL.bindTexture(HX_GL.TEXTURE_CUBE_MAP,null)},uploadImagesToMipLevel:function(t,e,i,n){this._format=i=i||HX_GL.RGBA,this._dataType=n=n||HX_GL.UNSIGNED_BYTE,0==e&&(this._size=t[0].naturalWidth),this.bind(),HX_GL.pixelStorei(HX_GL.UNPACK_FLIP_Y_WEBGL,0),HX_GL.texImage2D(HX_GL.TEXTURE_CUBE_MAP_POSITIVE_X,e,i,i,n,t[0]),HX_GL.texImage2D(HX_GL.TEXTURE_CUBE_MAP_NEGATIVE_X,e,i,i,n,t[1]),HX_GL.texImage2D(HX_GL.TEXTURE_CUBE_MAP_POSITIVE_Y,e,i,i,n,t[2]),HX_GL.texImage2D(HX_GL.TEXTURE_CUBE_MAP_NEGATIVE_Y,e,i,i,n,t[3]),HX_GL.texImage2D(HX_GL.TEXTURE_CUBE_MAP_POSITIVE_Z,e,i,i,n,t[4]),HX_GL.texImage2D(HX_GL.TEXTURE_CUBE_MAP_NEGATIVE_Z,e,i,i,n,t[5]),HX_GL.bindTexture(HX_GL.TEXTURE_CUBE_MAP,null)},isReady:function(){return this._isReady},bind:function(t){void 0!==t&&HX_GL.activeTexture(HX_GL.TEXTURE0+t),HX_GL.bindTexture(HX_GL.TEXTURE_CUBE_MAP,this._texture)},toString:function(){return"[TextureCube(name="+this._name+")]"}},HX.TextureUtils={assureSize:function(t,e,i,n,r,o){return t===i.width&&e===i.height?!1:(i.initEmpty(t,e,r,o),n&&n.init(),!0)},isPowerOfTwo:function(t){return t?(t&-t)===t:!1},equirectangularToCube:function(t,e,i,n){i=i||!0,e=e||t.height,HX.TextureUtils._EQUI_TO_CUBE_SHADER||(HX.TextureUtils._EQUI_TO_CUBE_SHADER=new HX.Shader(HX.ShaderLibrary.get("2d_to_cube_vertex.glsl"),HX.ShaderLibrary.get("equirectangular_to_cube_fragment.glsl"))),this._createRenderCubeGeometry(),n=n||new HX.TextureCube,n.initEmpty(e,t.format,t.dataType);var r=[HX_GL.TEXTURE_CUBE_MAP_POSITIVE_X,HX_GL.TEXTURE_CUBE_MAP_NEGATIVE_X,HX_GL.TEXTURE_CUBE_MAP_POSITIVE_Y,HX_GL.TEXTURE_CUBE_MAP_NEGATIVE_Y,HX_GL.TEXTURE_CUBE_MAP_POSITIVE_Z,HX_GL.TEXTURE_CUBE_MAP_NEGATIVE_Z];HX.TextureUtils._EQUI_TO_CUBE_SHADER.updateRenderState();var o=HX.TextureUtils._EQUI_TO_CUBE_SHADER.getUniformLocation("source"),a=HX.TextureUtils._EQUI_TO_CUBE_SHADER.getAttributeLocation("hx_position"),s=HX.TextureUtils._EQUI_TO_CUBE_SHADER.getAttributeLocation("corner");HX_GL.uniform1i(o,0),t.bind(0),HX.TextureUtils._TO_CUBE_VERTICES.bind(),HX.TextureUtils._TO_CUBE_INDICES.bind(),HX_GL.vertexAttribPointer(a,2,HX_GL.FLOAT,!1,20,0),HX_GL.vertexAttribPointer(s,3,HX_GL.FLOAT,!1,20,8),HX.enableAttributes(2);for(var h=0;6>h;++h){var l=new HX.FrameBuffer(n,null,r[h]);l.init(),HX.pushRenderTarget(l),HX.drawElements(HX_GL.TRIANGLES,6,6*h),HX.popRenderTarget(l),l.dispose()}return i&&n.generateMipmap(),n},_createRenderCubeGeometry:function(){if(!HX.TextureUtils._TO_CUBE_VERTICES){var t=[1,1,1,-1,-1,-1,1,1,-1,1,-1,-1,1,1,1,1,-1,1,1,-1,1,1,-1,-1,1,-1,1,-1,-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,-1,-1,-1,1,-1,1,-1,1,1,-1,1,1,1,1,1,-1,1,-1,1,1,-1,-1,-1,-1,1,1,-1,1,-1,1,1,1,1,-1,-1,-1,1,-1,-1,-1,1,1,1,-1,1,-1,1,-1,-1,1,-1,-1,-1,1,1,1,-1,1,1,1,1,1,-1,-1,-1,-1,1,1,-1,-1,-1,-1,1,1,-1,1,-1,-1,1,-1],e=[0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,8,10,11,12,13,14,12,14,15,16,17,18,16,18,19,20,21,22,20,22,23];HX.TextureUtils._TO_CUBE_VERTICES=new HX.VertexBuffer,HX.TextureUtils._TO_CUBE_INDICES=new HX.IndexBuffer,HX.TextureUtils._TO_CUBE_VERTICES.uploadData(new Float32Array(t)),HX.TextureUtils._TO_CUBE_INDICES.uploadData(new Uint16Array(e))}}},HX.WriteOnlyDepthBuffer=function(){this._renderBuffer=HX_GL.createRenderbuffer(),this._format=null},HX.WriteOnlyDepthBuffer.prototype={constructor:HX.FrameBuffer,get width(){return this._width},get height(){return this._height},get format(){return this._format},init:function(t,e,i){i=void 0===i?!0:i,this._width=t,this._height=e,this._format=i?HX_GL.DEPTH_STENCIL:HX_GL.DEPTH_COMPONENT16,HX_GL.bindRenderbuffer(HX_GL.RENDERBUFFER,this._renderBuffer),HX_GL.renderbufferStorage(HX_GL.RENDERBUFFER,this._format,t,e)},dispose:function(){HX_GL.deleteRenderBuffer(this._renderBuffer)}},HX.BlendState=function(t,e,i,n){this.enabled=!0,this.srcFactor=t||HX.BlendFactor.ONE,this.dstFactor=e||HX.BlendFactor.ZERO,this.operator=i||HX.BlendOperation.ADD,this.color=n||null},HX.BlendState._initDefaults=function(){HX.BlendState.ADD=new HX.BlendState(HX.BlendFactor.ONE,HX.BlendFactor.ONE),HX.BlendState.ADD_WITH_ALPHA=new HX.BlendState(HX.BlendFactor.SOURCE_ALPHA,HX.BlendFactor.ONE),HX.BlendState.MULTIPLY=new HX.BlendState(HX.BlendFactor.DESTINATION_COLOR,HX.BlendFactor.ZERO),HX.BlendState.ALPHA=new HX.BlendState(HX.BlendFactor.SOURCE_ALPHA,HX.BlendFactor.ONE_MINUS_SOURCE_ALPHA),HX.BlendState.INV_ALPHA=new HX.BlendState(HX.BlendFactor.ONE_MINUS_SOURCE_ALPHA,HX.BlendFactor.SOURCE_ALPHA)},HX.CascadeShadowCasterCollector=function(t){HX.SceneVisitor.call(this),this._renderCameras=null,this._bounds=new HX.BoundingAABB,this._numCascades=t,this._cullPlanes=null,this._splitPlanes=null,this._numCullPlanes=0,this._renderLists=[],this._renderItemPool=new HX.RenderItemPool},HX.CascadeShadowCasterCollector.prototype=Object.create(HX.SceneVisitor.prototype),HX.CascadeShadowCasterCollector.prototype.getRenderList=function(t){return this._renderLists[t]},HX.CascadeShadowCasterCollector.prototype.collect=function(t,e){this._collectorCamera=t,this._bounds.clear(),this._renderItemPool.reset();for(var i=0;i<this._numCascades;++i)this._renderLists[i]=[];e.acceptVisitor(this)},HX.CascadeShadowCasterCollector.prototype.getBounds=function(){return this._bounds},HX.CascadeShadowCasterCollector.prototype.setRenderCameras=function(t){this._renderCameras=t},HX.CascadeShadowCasterCollector.prototype.setCullPlanes=function(t,e){this._cullPlanes=t,this._numCullPlanes=e},HX.CascadeShadowCasterCollector.prototype.setSplitPlanes=function(t){this._splitPlanes=t},HX.CascadeShadowCasterCollector.prototype.visitModelInstance=function(t,e,i){if(t._castShadows!==!1){this._bounds.growToIncludeBound(i);for(var n=HX.MaterialPass.SHADOW_DEPTH_PASS,r=this._numCascades,o=t.numMeshInstances,a=r-1,s=0;a>=s;++s){var h,l=this._renderLists[s],_=this._renderCameras[s];if(h=s===a?HX.PlaneSide.BACK:i.classifyAgainstPlane(this._splitPlanes[s]),h!==HX.PlaneSide.FRONT){for(var c=0;o>c;++c){var u=t.getMeshInstance(c),f=u.material;if(f.hasPass(n)){var d=this._renderItemPool.getItem();d.pass=f.getPass(n),d.meshInstance=u,d.worldMatrix=e,d.camera=_,d.material=f,l.push(d)}}if(h===HX.PlaneSide.BACK)return}}}},HX.CascadeShadowCasterCollector.prototype.qualifies=function(t){return t.visible&&t.worldBounds.intersectsConvexSolid(this._cullPlanes,this._numCullPlanes)},HX.CascadeShadowMapRenderer=function(t,e,i){this._light=t,this._numCascades=e||3,this._numCascades>4&&(this._numCascades=4),this._shadowMapSize=i||1024,this._shadowMapInvalid=!0,this._fboFront=null,this._fboBack=null,this._depthBuffer=null,this._shadowMap=this._createShadowBuffer(),this._shadowBackBuffer=HX.DirectionalLight.SHADOW_FILTER.blurShader?this._createShadowBuffer():null,this._shadowMatrices=[new HX.Matrix4x4,new HX.Matrix4x4,new HX.Matrix4x4,new HX.Matrix4x4],this._transformToUV=[new HX.Matrix4x4,new HX.Matrix4x4,new HX.Matrix4x4,new HX.Matrix4x4],this._inverseLightMatrix=new HX.Matrix4x4,this._splitRatios=null,this._splitDistances=null,this._shadowMapCameras=null,this._collectorCamera=new HX.OrthographicOffCenterCamera,this._minZ=0,this._numCullPlanes=0,this._cullPlanes=[],this._localBounds=new HX.BoundingAABB,this._casterCollector=new HX.CascadeShadowCasterCollector(this._numCascades),this._initSplitProperties(),this._initCameras(),this._viewports=[]},HX.CascadeShadowMapRenderer.prototype={setNumCascades:function(t){this._numCascades!==t&&(this._numCascades=t,this._invalidateShadowMap(),this._initSplitProperties(),this._initCameras(),this._casterCollector=new HX.CascadeShadowCasterCollector(t))},setShadowMapSize:function(t){this._setShadowMapSize!==t&&(this._setShadowMapSize=t,this._invalidateShadowMap())},render:function(t,e){this._shadowMapInvalid&&this._initShadowMap(),this._inverseLightMatrix.inverseAffineOf(this._light.worldMatrix),this._updateCollectorCamera(t),this._updateSplits(t),this._updateCullPlanes(t),this._collectShadowCasters(e),this._updateCascadeCameras(t,this._casterCollector.getBounds()),HX.pushRenderTarget(this._fboFront);var i=HX.MaterialPass.SHADOW_DEPTH_PASS;HX.setClearColor(HX.Color.WHITE),HX.clear();for(var n=0;n<this._numCascades;++n){var r=this._viewports[n];HX_GL.viewport(r.x,r.y,r.width,r.height),HX.RenderUtils.renderPass(this,i,this._casterCollector.getRenderList(n))}HX.DirectionalLight.SHADOW_FILTER.blurShader&&this._blur(),HX.popRenderTarget(),HX.setClearColor(HX.Color.BLACK)},_updateCollectorCamera:function(t){var e=t.frustum._corners,i=new HX.Float4,n=new HX.Float4,r=new HX.Float4;this._inverseLightMatrix.transformPoint(e[0],i),n.copyFrom(i);for(var o=1;8>o;++o)this._inverseLightMatrix.transformPoint(e[o],r),i.minimize(r),n.maximize(r);this._minZ=i.z,this._collectorCamera.matrix.copyFrom(this._light.worldMatrix),this._collectorCamera._invalidateWorldMatrix(),this._collectorCamera.setBounds(i.x,n.x+1,n.y+1,i.y),this._collectorCamera._setRenderTargetResolution(this._shadowMap._width,this._shadowMap._height)},_updateSplits:function(t){for(var e=t.nearDistance,i=t.farDistance-e,n=new HX.Float4(0,0,-1,0),r=t.worldMatrix,o=0;o<this._numCascades;++o)this._splitDistances[o]=n.w=-(e+this._splitRatios[o]*i),r.transform(n,this._splitPlanes[o])},_updateCascadeCameras:function(t,e){this._localBounds.transformFrom(e,this._inverseLightMatrix);for(var i=this._localBounds.minimum,n=this._localBounds.maximum,r=1,o=new HX.Float4,a=new HX.Float4,s=new HX.Float4,h=new HX.Float4,l=t.frustum.corners,_=0,c=0;c<this._numCascades;++c){var u=this._splitRatios[c],f=this._shadowMapCameras[c];f.matrix=this._light.worldMatrix;for(var d=0;4>d;++d){var p=l[d],m=l[d+4],X=p.x,H=p.y,g=p.z,x=m.x-X,S=m.y-H,v=m.z-g;o.x=X+x*_,o.y=H+S*_,o.z=g+v*_,a.x=X+x*u,a.y=H+S*u,a.z=g+v*u,this._inverseLightMatrix.transformPoint(o,o),this._inverseLightMatrix.transformPoint(a,a),0===d?(s.copyFrom(o),h.copyFrom(o)):(s.minimize(o),h.maximize(o)),s.minimize(a),h.maximize(a)}_=u,s.z=Math.max(this._minZ,s.z);var E=Math.max(s.x,i.x),b=Math.min(h.x,n.x),T=Math.max(s.y,i.y),y=Math.min(h.y,n.y),L=b-E,M=y-T;L=Math.ceil(L/r)*r,M=Math.ceil(M/r)*r,L=Math.max(L,r),M=Math.max(M,r);var w=this._shadowMap._width/L*.5,A=this._shadowMap._height/M*.5;E=Math.floor(E*w)/w,T=Math.floor(T*A)/A,b=E+L,y=T+M;var P=HX.DirectionalLight.SHADOW_FILTER.softness?HX.DirectionalLight.SHADOW_FILTER.softness:.1;f.setBounds(E-P,b+P,y+P,T-P),f.nearDistance=-n.z,f.farDistance=-s.z,f._setRenderTargetResolution(this._shadowMap._width,this._shadowMap._height),this._shadowMatrices[c].multiply(this._transformToUV[c],f.viewProjectionMatrix)}},_updateCullPlanes:function(t){for(var e=this._collectorCamera.frustum,i=e._planes,n=0;4>n;++n)this._cullPlanes[n]=i[n];this._numCullPlanes=4,e=t.frustum,i=e._planes;for(var r=this._light.direction,o=0;6>o;++o){var a=i[o];HX.dot3(a,r)>.001&&(this._cullPlanes[this._numCullPlanes++]=a)}},_collectShadowCasters:function(t){this._casterCollector.setSplitPlanes(this._splitPlanes),this._casterCollector.setCullPlanes(this._cullPlanes,this._numCullPlanes),this._casterCollector.setRenderCameras(this._shadowMapCameras),this._casterCollector.collect(this._collectorCamera,t)},get splitDistances(){return this._splitDistances},setSplitRatios:function(t,e,i,n){this._splitRatios[0]=t,this._splitRatios[1]=e,this._splitRatios[2]=i,this._splitRatios[3]=n},getShadowMatrix:function(t){return this._shadowMatrices[t]},dispose:function(){HX.Renderer.call.dispose(this),this._depthBuffer&&(this._depthBuffer.dispose(),this._depthBuffer=null),this._shadowMap.dispose(),this._shadowMap=null},_invalidateShadowMap:function(){this._shadowMapInvalid=!0},_initShadowMap:function(){var t=this._numCascades>1?2:1,e=Math.ceil(this._numCascades/2),i=this._shadowMapSize*t,n=this._shadowMapSize*e;this._shadowMap.initEmpty(i,n,HX.DirectionalLight.SHADOW_FILTER.getShadowMapFormat(),HX.DirectionalLight.SHADOW_FILTER.getShadowMapDataType()),this._depthBuffer||(this._depthBuffer=new HX.WriteOnlyDepthBuffer),this._fboFront||(this._fboFront=new HX.FrameBuffer(this._shadowMap,this._depthBuffer)),this._depthBuffer.init(i,n,!1),this._fboFront.init(),this._shadowMapInvalid=!1,this._shadowBackBuffer&&(this._shadowBackBuffer.initEmpty(i,n,HX.DirectionalLight.SHADOW_FILTER.getShadowMapFormat(),HX.DirectionalLight.SHADOW_FILTER.getShadowMapDataType()),this._fboBack||(this._fboBack=new HX.FrameBuffer(this._shadowBackBuffer,this._depthBuffer)),this._fboBack.init()),this._viewports=[],this._viewports.push(new HX.Rect(0,0,this._shadowMapSize,this._shadowMapSize)),this._viewports.push(new HX.Rect(this._shadowMapSize,0,this._shadowMapSize,this._shadowMapSize)),this._viewports.push(new HX.Rect(0,this._shadowMapSize,this._shadowMapSize,this._shadowMapSize)),this._viewports.push(new HX.Rect(this._shadowMapSize,this._shadowMapSize,this._shadowMapSize,this._shadowMapSize)),this._initViewportMatrices(1/t,1/e)},_initSplitProperties:function(){var t=1;this._splitRatios=[],this._splitDistances=[0,0,0,0],this._splitPlanes=[];for(var e=this._numCascades-1;e>=0;--e)this._splitRatios[e]=t,this._splitPlanes[e]=new HX.Float4,this._splitDistances[e]=0,t*=.33},_initCameras:function(){this._shadowMapCameras=[];for(var t=this._numCascades-1;t>=0;--t)this._shadowMapCameras[t]=new HX.OrthographicOffCenterCamera},_initViewportMatrices:function(t,e){for(var i=new HX.Float4(.5,.5,.5),n=0;4>n;++n)this._transformToUV[n].fromScale(.5),this._transformToUV[n].appendTranslation(i),this._transformToUV[n].appendScale(t,e,1);this._transformToUV[1].appendTranslation(new HX.Float4(.5,0,0)),this._transformToUV[2].appendTranslation(new HX.Float4(0,.5,0)),this._transformToUV[3].appendTranslation(new HX.Float4(.5,.5,0))},_createShadowBuffer:function(){var t=new HX.Texture2D;return t.filter=HX.TextureFilter.BILINEAR_NOMIP,t.wrapMode=HX.TextureWrapMode.CLAMP,t},_blur:function(){for(var t=HX.DirectionalLight.SHADOW_FILTER.blurShader,e=0;e<HX.DirectionalLight.SHADOW_FILTER.numBlurPasses;++e)HX.pushRenderTarget(this._fboBack),HX.clear(),t.execute(HX.RectMesh.DEFAULT,this._shadowMap,1/this._shadowMapSize,0),HX.popRenderTarget(),HX.clear(),t.execute(HX.RectMesh.DEFAULT,this._shadowBackBuffer,0,1/this._shadowMapSize)}},HX.BlinnPhongSimpleLightingModel={getGLSL:function(){return HX.ShaderLibrary.get("lighting_blinn_phong.glsl")+"\n\n"}},HX.GGXLightingModel={getGLSL:function(){return HX.ShaderLibrary.get("lighting_ggx.glsl")+"\n\n"}},HX.View=function(t,e,i,n,r,o){this.scene=t,this.camera=e,this.viewport=new HX.Rect,this._renderer=null,this._texture=null,this._fbo=null,this.xRatio=i||0,this.yRatio=n||0,this.widthRatio=r||1,this.heightRatio=o||1,this._debugMode=HX.DebugRenderMode.DEBUG_NONE},HX.MultiRenderer=function(){this._views=[],this._copyTexture=new HX.CopyChannelsShader},HX.MultiRenderer.prototype={addView:function(t){t._renderer=new HX.Renderer,t._texture=new HX.Texture2D,t._texture.filter=HX.TextureFilter.BILINEAR_NOMIP,t._texture.wrapMode=HX.TextureWrapMode.CLAMP,t._fbo=new HX.FrameBuffer(t._texture),t._renderer.debugMode=this._debugMode,this._views.push(t)},removeView:function(t){t._fbo.dispose(),t._texture.dispose(),t._renderer.dispose();var e=this._views.indexOf(t);this._views.splice(e,1)},render:function(t,e){HX.pushRenderTarget(e);for(var i=new HX.Rect,n=HX.TARGET_CANVAS.clientWidth,r=HX.TARGET_CANVAS.clientHeight,o=0;o<this._views.length;++o){var a=this._views[o],s=Math.floor(n*a.widthRatio),h=Math.floor(r*a.heightRatio);(a._texture.width!=s||a._texture.height!=h)&&(a._texture.initEmpty(s,h),a._fbo.init()),a._renderer.render(a.camera,a.scene,t,a._fbo),i.x=Math.floor(a.xRatio*n),i.y=Math.floor((1-a.yRatio-a.heightRatio)*r),i.width=s,i.height=h,HX.setViewport(i),this._copyTexture.execute(HX.RectMesh.DEFAULT,a._texture)}HX.setViewport(null),HX.popRenderTarget()},get debugMode(){return this._debugMode},set debugMode(t){this._debugMode=t;for(var e=0;e<this._views.length;++e)this._views[e]._renderer.debugMode=t}},HX.RenderCollector=function(){HX.SceneVisitor.call(this),this._renderItemPool=new HX.RenderItemPool,this._opaquePasses=new Array(HX.MaterialPass.NUM_PASS_TYPES),this._transparentPasses=new Array(HX.MaterialPass.NUM_PASS_TYPES),this._camera=null,this._cameraZAxis=new HX.Float4,this._frustum=null,this._lights=null,this._ambientColor=new HX.Color,this._shadowCasters=null,this._effects=null,this._globalSpecularProbe=null,this._globalIrradianceProbe=null},HX.RenderCollector.prototype=Object.create(HX.SceneVisitor.prototype),HX.RenderCollector.prototype.getOpaqueRenderList=function(t){return this._opaquePasses[t]},HX.RenderCollector.prototype.getTransparentRenderList=function(t){return this._transparentPasses[t]},HX.RenderCollector.prototype.getLights=function(){return this._lights},HX.RenderCollector.prototype.getShadowCasters=function(){return this._shadowCasters},HX.RenderCollector.prototype.getEffects=function(){return this._effects},HX.RenderCollector.prototype.getGlobalSpecularProbe=function(){return this._globalSpecularProbe},HX.RenderCollector.prototype.getGlobalIrradianceProbe=function(){return this._globalIrradianceProbe},Object.defineProperties(HX.RenderCollector.prototype,{ambientColor:{get:function(){return this._ambientColor}}}),HX.RenderCollector.prototype.collect=function(t,e){this._camera=t,t.worldMatrix.getColumn(2,this._cameraZAxis),this._frustum=t.frustum,this._reset(),e.acceptVisitor(this),this._opaquePasses[HX.MaterialPass.GEOMETRY_PASS].sort(this._sortOpaques),this._transparentPasses[HX.MaterialPass.GEOMETRY_PASS].sort(this._sortOpaques),HX.EXT_DRAW_BUFFERS||(this._copyLegacyPasses(this._opaquePasses),this._copyLegacyPasses(this._transparentPasses)),this._lights.sort(this._sortLights);var i=this._camera._effects;if(i)for(var n=i.length,r=0;n>r;++r)this._effects.push(i[r])},HX.RenderCollector.prototype.qualifies=function(t){return t.visible&&t.worldBounds.intersectsConvexSolid(this._frustum._planes,6)},HX.RenderCollector.prototype.visitScene=function(t){var e=t._skybox;e&&(this.visitModelInstance(e._modelInstance,t._rootNode.worldMatrix,t._rootNode.worldBounds),this._globalSpecularProbe=e.getGlobalSpecularProbe(),this._globalIrradianceProbe=e.getGlobalIrradianceProbe())},HX.RenderCollector.prototype.visitEffects=function(t){for(var e=t.length,i=0;e>i;++i)this._effects.push(t[i])},HX.RenderCollector.prototype.visitModelInstance=function(t,e,i){for(var n=t.numMeshInstances,r=this._cameraZAxis,o=r.x,a=r.y,s=r.z,h=t.skeleton,l=t.skeletonMatrices,_=this._renderItemPool,c=HX.TransparencyMode.OPAQUE,u=this._camera,f=0;n>f;++f)for(var d=t.getMeshInstance(f),p=d.material,m=p._transparencyMode===c?this._opaquePasses:this._transparentPasses,X=0;X<HX.MaterialPass.NUM_PASS_TYPES;++X){var H=p.getPass(X);if(H&&H._enabled){var g=_.getItem();g.material=p,g.pass=H,g.meshInstance=d,g.skeleton=h,g.skeletonMatrices=l;var x=i._center;g.renderOrderHint=x.x*o+x.y*a+x.z*s,g.worldMatrix=e,g.camera=u,m[X].push(g)}}},HX.RenderCollector.prototype.visitAmbientLight=function(t){var e=t._scaledIrradiance;this._ambientColor.r+=e.r,this._ambientColor.g+=e.g,this._ambientColor.b+=e.b},HX.RenderCollector.prototype.visitLight=function(t){this._lights.push(t),t._castShadows&&this._shadowCasters.push(t._shadowMapRenderer)},HX.RenderCollector.prototype._reset=function(){this._renderItemPool.reset();for(var t=0;t<HX.MaterialPass.NUM_PASS_TYPES;++t)this._opaquePasses[t]=[];for(var t=0;t<HX.MaterialPass.NUM_PASS_TYPES;++t)this._transparentPasses[t]=[];this._lights=[],this._shadowCasters=[],this._effects=[],this._globalIrradianceProbe=null,this._globalSpecularProbe=null,this._ambientColor.set(0,0,0,1)},HX.RenderCollector.prototype._sortTransparents=function(t,e){var i=t.material._renderOrder-e.material._renderOrder;return 0!==i?i:e.renderOrderHint-t.renderOrderHint},HX.RenderCollector.prototype._sortOpaques=function(t,e){var i;return i=t.material._renderOrder-e.material._renderOrder,0!==i?i:(i=t.material._renderOrderHint-e.material._renderOrderHint,0!==i?i:t.renderOrderHint-e.renderOrderHint)},HX.RenderCollector.prototype._sortLights=function(t,e){return t._type===e._type?t._castShadows?1:-1:t._type-e._type},HX.RenderCollector.prototype._copyLegacyPasses=function(t){for(var e=t[HX.MaterialPass.GEOMETRY_COLOR_PASS],i=t[HX.MaterialPass.GEOMETRY_NORMAL_PASS],n=t[HX.MaterialPass.GEOMETRY_SPECULAR_PASS],r=e.length,o=0,a=0,s=this._camera,h=this._renderItemPool,l=0;r>l;++l){var _=e[l],c=_.meshInstance,u=_.worldMatrix,f=_.material,d=_.renderOrderHint;if(f.hasPass(HX.MaterialPass.GEOMETRY_NORMAL_PASS)){var p=h.getItem();p.pass=f.getPass(HX.MaterialPass.GEOMETRY_NORMAL_PASS),p.material=f,p.renderOrderHint=d,p.meshInstance=c,p.worldMatrix=u,p.camera=s,i[o++]=p}if(f.hasPass(HX.MaterialPass.GEOMETRY_SPECULAR_PASS)){var m=h.getItem();m.pass=f.getPass(HX.MaterialPass.GEOMETRY_SPECULAR_PASS),m.material=f,m.renderOrderHint=d,m.meshInstance=c,m.worldMatrix=u,m.camera=s,n[a++]=m}}},HX.DebugRenderMode={DEBUG_NONE:0,DEBUG_COLOR:1,DEBUG_NORMALS:2,DEBUG_METALLICNESS:3,DEBUG_SPECULAR_NORMAL_REFLECTION:4,DEBUG_ROUGHNESS:5,DEBUG_DEPTH:6,DEBUG_LIGHT_ACCUM:7,DEBUG_TRANSPARENCY_MODE:8,DEBUG_AO:9,DEBUG_SSR:10},HX.Renderer=function(){this._width=0,this._height=0,this._scale=window.devicePixelRatio>1?.5:1,this._copyAmbient=new HX.MultiplyColorCopyShader,this._reproject=new HX.ReprojectShader,this._copyTexture=new HX.CopyChannelsShader,this._copyTextureToScreen=new HX.CopyChannelsShader("xyzw",!0),this._copyXChannel=new HX.CopyChannelsShader("x"),this._copyYChannel=new HX.CopyChannelsShader("y"),this._copyZChannel=new HX.CopyChannelsShader("z"),this._copyWChannel=new HX.CopyChannelsShader("w"),this._debugDepth=new HX.DebugDepthShader,this._debugTransparencyMode=new HX.DebugTransparencyModeShader,this._debugNormals=new HX.DebugNormalsShader,this._applyGamma=new HX.ApplyGammaShader,this._applyBlendingShader=new HX.ApplyBlendingShader,this._markScanlinesStencilState=new HX.StencilState(255,HX.Comparison.ALWAYS,HX.StencilOp.REPLACE,HX.StencilOp.REPLACE,HX.StencilOp.REPLACE),this._applyScanlinesStencilState=new HX.StencilState(255,HX.Comparison.EQUAL,HX.StencilOp.KEEP,HX.StencilOp.KEEP,HX.StencilOp.KEEP),this._markScanlinesShader=new HX.NullShader,this._gammaApplied=!1,this._scanLineMesh=null,HX.EXT_DEPTH_TEXTURE&&(this._linearizeDepthShader=new HX.LinearizeDepthShader,this._linearDepthFBO=null),this._renderCollector=new HX.RenderCollector,this._gbufferFBO=null,this._depthBuffer=null,this._aoEffect=null,this._aoTexture=null,this._ssrEffect=null,this._createGBuffer(),this._hdrBack=new HX.Renderer.HDRBuffers(this._depthBuffer),this._hdrFront=new HX.Renderer.HDRBuffers(this._depthBuffer),this._debugMode=HX.DebugRenderMode.DEBUG_NONE,this._camera=null,this._previousViewProjection=new HX.Matrix4x4},HX.Renderer.HDRBuffers=function(t){this.texture=new HX.Texture2D,this.texture.filter=HX.TextureFilter.BILINEAR_NOMIP,this.texture.wrapMode=HX.TextureWrapMode.CLAMP,this.fbo=new HX.FrameBuffer(this.texture),this.fboDepth=new HX.FrameBuffer(this.texture,t)},HX.Renderer.HDRBuffers.prototype={dispose:function(){this.texture.dispose(),this.fbo.dispose(),this.fboDepth.dispose()},resize:function(t,e){this.texture.initEmpty(t,e,HX_GL.RGBA,HX.HDR_FORMAT),this.fbo.init(),this.fboDepth.init()}},HX.Renderer.prototype={get scale(){return this._scale},set scale(t){this._scale=t},get camera(){return this._camera},get debugMode(){return this._debugMode},set debugMode(t){this._debugMode=t},get ambientOcclusion(){return this._aoEffect},set ambientOcclusion(t){this._aoEffect=t},get localReflections(){return this._ssrEffect},set localReflections(t){this._ssrEffect=t,this._ssrTexture=this._ssrEffect?this._ssrEffect.getSSRTexture():null},render:function(t,e,i,n){var r=HX._renderTargetStack.length;if(this._gammaApplied=HX.GAMMA_CORRECT_LIGHTS,this._camera=t,this._scene=e,this._aoTexture=this._aoEffect?this._aoEffect.getAOTexture():null,this._updateSize(n),t._setRenderTargetResolution(this._width,this._height),this._renderCollector.collect(t,e),this._renderShadowCasters(),this._renderToGBuffer(),HX.EXT_DEPTH_TEXTURE&&this._linearizeDepth(),null!==this._aoEffect&&this._aoEffect.render(this,0),this._renderLightAccumulation(),this._applyBlending(),this._ssrEffect&&this._ssrEffect.render(this,i),this._renderToScreen(n,i),this._previousViewProjection.copyFrom(this._camera.viewProjectionMatrix),HX.setBlendState(),HX.setDepthMask(!0),HX._renderTargetStack.length>r)throw new Error("Unpopped render targets!");if(HX._renderTargetStack.length<r)throw new Error("Overpopped render targets!")},_renderShadowCasters:function(){for(var t=this._renderCollector._shadowCasters,e=t.length,i=0;e>i;++i)t[i].render(this._camera,this._scene)},_renderToGBuffer:function(){HX.setClearColor(HX.Color.ZERO),HX.EXT_DRAW_BUFFERS?this._renderToGBufferMRT():this._renderToGBufferMultiPass()},_renderScanlines:function(){HX.setDepthMask(!1),HX_GL.colorMask(!1,!1,!1,!1),HX.pushStencilState(this._markScanlinesStencilState),this._markScanlinesShader.execute(this._scanLineMesh),HX.popStencilState(),HX_GL.colorMask(!0,!0,!0,!0),HX.setDepthMask(!0)},_renderToGBufferMRT:function(){HX.pushRenderTarget(this._gbufferFBO),HX.clear(),this._renderPass(HX.MaterialPass.GEOMETRY_PASS);var t=this._renderCollector.getTransparentRenderList(HX.MaterialPass.GEOMETRY_PASS);t.length>0&&(this._renderScanlines(),HX.pushStencilState(this._applyScanlinesStencilState),this._renderPass(HX.MaterialPass.GEOMETRY_PASS,t),HX.popStencilState()),HX.popRenderTarget()},_renderToGBufferMultiPass:function(){for(var t=this._gbufferSingleFBOs.length,e=0;t>e;++e){HX.pushRenderTarget(this._gbufferSingleFBOs[e]),HX.clear(),this._renderPass(e);var i=this._renderCollector.getTransparentRenderList(e);i.length>0&&(this._renderScanlines(),HX.pushStencilState(this._applyScanlinesStencilState),this._renderPass(e,i),HX.popStencilState()),HX.popRenderTarget()}},_linearizeDepth:function(){HX.pushRenderTarget(this._linearDepthFBO),HX.clear(),this._linearizeDepthShader.execute(HX.RectMesh.DEFAULT,this._depthBuffer,this._camera),HX.popRenderTarget()},_renderEffect:function(t,e){this._gammaApplied=this._gammaApplied||t._outputsGamma,t.render(this,e)},_renderToScreen:function(t,e){HX.setBlendState(),this._debugMode===HX.DebugRenderMode.DEBUG_NONE?this._composite(t,e):this._renderDebug(t)},_renderDebug:function(t){switch(HX.pushRenderTarget(t),t&&HX.clear(),this._debugMode){case HX.DebugRenderMode.DEBUG_COLOR:this._copyTexture.execute(HX.RectMesh.DEFAULT,this._gbuffer[0]);break;case HX.DebugRenderMode.DEBUG_NORMALS:this._debugNormals.execute(HX.RectMesh.DEFAULT,this._gbuffer[1]);break;case HX.DebugRenderMode.DEBUG_METALLICNESS:this._copyZChannel.execute(HX.RectMesh.DEFAULT,this._gbuffer[2]);break;case HX.DebugRenderMode.DEBUG_SPECULAR_NORMAL_REFLECTION:this._copyYChannel.execute(HX.RectMesh.DEFAULT,this._gbuffer[2]);break;case HX.DebugRenderMode.DEBUG_ROUGHNESS:this._copyXChannel.execute(HX.RectMesh.DEFAULT,this._gbuffer[2]);break;case HX.DebugRenderMode.DEBUG_DEPTH:this._debugDepth.execute(HX.RectMesh.DEFAULT,this._gbuffer[3]);break;case HX.DebugRenderMode.DEBUG_LIGHT_ACCUM:this._applyGamma.execute(HX.RectMesh.DEFAULT,this._hdrFront.texture);break;case HX.DebugRenderMode.DEBUG_TRANSPARENCY_MODE:this._debugTransparencyMode.execute(HX.RectMesh.DEFAULT,this._gbuffer[1]);break;case HX.DebugRenderMode.DEBUG_AO:this._aoEffect&&this._applyGamma.execute(HX.RectMesh.DEFAULT,this._aoEffect.getAOTexture());break;case HX.DebugRenderMode.DEBUG_SSR:this._ssrEffect&&this._applyGamma.execute(HX.RectMesh.DEFAULT,this._ssrTexture)}HX.popRenderTarget()},_composite:function(t,e){var i=this._renderCollector._effects;i&&i.length>0&&(HX.pushRenderTarget(this._hdrFront.fbo),this._renderEffects(e,i),HX.popRenderTarget()),HX.pushRenderTarget(t),HX.clear(),this._gammaApplied?this._copyTextureToScreen.execute(HX.RectMesh.DEFAULT,this._hdrFront.texture):this._applyGamma.execute(HX.RectMesh.DEFAULT,this._hdrFront.texture),HX.popRenderTarget()},_renderLightAccumulation:function(){HX.pushRenderTarget(this._hdrFront.fbo),HX.clear(),this._renderGlobalIllumination(),this._renderDirectLights(),HX.popRenderTarget()},_applyBlending:function(){this._swapHDRFrontAndBack(),HX.pushRenderTarget(this._hdrFront.fbo),HX.clear(),this._applyBlendingShader.execute(HX.RectMesh.DEFAULT,this._gbuffer,this._hdrBack.texture),HX.popRenderTarget()},_renderDirectLights:function(){for(var t=this._renderCollector.getLights(),e=t.length,i=0;e>i;)i=t[i].renderBatch(t,i,this)},_renderGlobalIllumination:function(){this._renderCollector._globalSpecularProbe&&this._renderCollector._globalSpecularProbe.render(this),this._ssrTexture&&(HX.setBlendState(HX.BlendState.ALPHA),this._reproject.execute(HX.RectMesh.DEFAULT,this._ssrTexture,this._gbuffer[3],this._camera,this._previousViewProjection)),HX.setBlendState(HX.BlendState.ADD),this._copyAmbient.execute(HX.RectMesh.DEFAULT,this._gbuffer[0],this._renderCollector.ambientColor),this._renderCollector._globalIrradianceProbe&&this._renderCollector._globalIrradianceProbe.render(this),this._aoTexture&&(HX.setBlendState(HX.BlendState.MULTIPLY),this._copyTexture.execute(HX.RectMesh.DEFAULT,this._aoTexture),HX.setBlendState(HX.BlendState.ADD))},_renderPass:function(t,e){e=e||this._renderCollector.getOpaqueRenderList(t),HX.RenderUtils.renderPass(this,t,e);

},_renderEffects:function(t,e){for(var i=e.length,n=0;i>n;++n){var r=e[n];r.isSupported()&&this._renderEffect(r,t)}},_createGBuffer:function(){HX.EXT_DEPTH_TEXTURE?(this._depthBuffer=new HX.Texture2D,this._depthBuffer.filter=HX.TextureFilter.BILINEAR_NOMIP,this._depthBuffer.wrapMode=HX.TextureWrapMode.CLAMP):this._depthBuffer=new HX.WriteOnlyDepthBuffer,this._gbuffer=[];for(var t=0;4>t;++t)this._gbuffer[t]=new HX.Texture2D,this._gbuffer[t].filter=HX.TextureFilter.BILINEAR_NOMIP,this._gbuffer[t].wrapMode=HX.TextureWrapMode.CLAMP;this._gbufferSingleFBOs=[],this._createGBufferFBO(),HX.EXT_DEPTH_TEXTURE&&(this._linearDepthFBO=new HX.FrameBuffer(this._gbuffer[3],null))},_createGBufferFBO:function(){if(HX.EXT_DRAW_BUFFERS){var t=[this._gbuffer[0],this._gbuffer[1],this._gbuffer[2]];HX.EXT_DEPTH_TEXTURE||(t[3]=this._gbuffer[3]),this._gbufferFBO=new HX.FrameBuffer(t,this._depthBuffer)}else for(var e=HX.EXT_DEPTH_TEXTURE?3:4,i=0;e>i;++i)this._gbufferSingleFBOs[i]=new HX.FrameBuffer([this._gbuffer[i]],this._depthBuffer)},_updateGBuffer:function(t,e){HX.EXT_DEPTH_TEXTURE?this._depthBuffer.initEmpty(t,e,HX_GL.DEPTH_STENCIL,HX.EXT_DEPTH_TEXTURE.UNSIGNED_INT_24_8_WEBGL):this._depthBuffer.init(t,e,!0);for(var i=0;i<this._gbuffer.length;++i)this._gbuffer[i].initEmpty(t,e,HX_GL.RGBA,HX_GL.UNSIGNED_BYTE);this._updateGBufferFBO(),this._linearDepthFBO&&this._linearDepthFBO.init()},_updateGBufferFBO:function(){if(HX.EXT_DRAW_BUFFERS)this._gbufferFBO.init();else for(var t=0;t<this._gbufferSingleFBOs.length;++t)this._gbufferSingleFBOs[t].init()},dispose:function(){this._applyGamma.dispose(),this._copyTexture.dispose(),this._copyXChannel.dispose(),this._copyYChannel.dispose(),this._copyZChannel.dispose(),this._copyWChannel.dispose(),this._hdrBack.dispose(),this._hdrFront.dispose();for(var t=0;t<this._gbuffer.length;++t)this._gbuffer[t].dispose();for(var t=0;t<this._gbufferSingleFBOs.length;++t)this._gbufferSingleFBOs[t].dispose();this._gbufferFBO&&this._gbufferFBO.dispose()},_swapHDRFrontAndBack:function(){var t=this._hdrBack;this._hdrBack=this._hdrFront,this._hdrFront=t,HX.popRenderTarget(),HX.pushRenderTarget(this._hdrFront.fbo)},_updateSize:function(t){var e,i;t?(e=t.width,i=t.height):(e=Math.floor(HX.TARGET_CANVAS.width*this._scale),i=Math.floor(HX.TARGET_CANVAS.height*this._scale)),(this._width!==e||this._height!==i)&&(this._width=e,this._height=i,this._updateGBuffer(this._width,this._height),this._hdrBack.resize(this._width,this._height),this._hdrFront.resize(this._width,this._height),this._scanLineMesh&&this._scanLineMesh.dispose(),this._scanLineMesh=HX.ScanlineMesh.create(i))}},HX.RenderUtils={renderPass:function(t,e,i){for(var n=i.length,r=null,o=null,a=0;n>a;++a){var s=i[a],h=s.meshInstance,l=s.pass,_=l._shader;_.updateRenderState(s.camera,s),l!==r&&(l.updateRenderState(t),r=l,o=null),o!=h._mesh&&(h.updateRenderState(e),o=h._mesh),HX.drawElements(l._elementType,h._mesh.numIndices,0)}return HX.setBlendState(null),n}},HX.StencilState=function(t,e,i,n,r,o,a){this.enabled=!0,this.reference=t||0,this.comparison=e||HX.Comparison.ALWAYS,this.onStencilFail=i||HX.StencilOp.KEEP,this.onDepthFail=n||HX.StencilOp.KEEP,this.onPass=r||HX.StencilOp.KEEP,this.readMask=void 0===o||null===o?4294967295:o,this.writeMask=void 0===a||null===a?4294967295:a},HX.NullShader=function(){HX.Shader.call(this),this.init(HX.ShaderLibrary.get("null_vertex.glsl"),HX.ShaderLibrary.get("null_fragment.glsl")),this._positionAttributeLocation=HX_GL.getAttribLocation(this._program,"hx_position")},HX.NullShader.prototype=Object.create(HX.Shader.prototype),HX.NullShader.prototype.execute=function(t){HX.setDepthTest(HX.Comparison.DISABLED),HX.setCullMode(HX.CullMode.NONE),t._vertexBuffers[0].bind(),t._indexBuffer.bind(),this.updateRenderState(),HX_GL.vertexAttribPointer(this._positionAttributeLocation,2,HX_GL.FLOAT,!1,8,0),HX.enableAttributes(1),HX.drawElements(HX_GL.TRIANGLES,t.numIndices,0)},HX.CustomCopyShader=function(t){HX.Shader.call(this),this.init(HX.ShaderLibrary.get("copy_vertex.glsl"),t);var e=HX_GL.getUniformLocation(this._program,"sampler");this._positionAttributeLocation=HX_GL.getAttribLocation(this._program,"hx_position"),this._texCoordAttributeLocation=HX_GL.getAttribLocation(this._program,"hx_texCoord"),HX_GL.useProgram(this._program),HX_GL.uniform1i(e,0)},HX.CustomCopyShader.prototype=Object.create(HX.Shader.prototype),HX.CustomCopyShader.prototype.execute=function(t,e){HX.setDepthTest(HX.Comparison.DISABLED),HX.setCullMode(HX.CullMode.NONE),t._vertexBuffers[0].bind(),t._indexBuffer.bind(),this.updateRenderState(),e.bind(0),HX_GL.vertexAttribPointer(this._positionAttributeLocation,2,HX_GL.FLOAT,!1,16,0),HX_GL.vertexAttribPointer(this._texCoordAttributeLocation,2,HX_GL.FLOAT,!1,16,8),HX.enableAttributes(2),HX.drawElements(HX_GL.TRIANGLES,6,0)},HX.CopyChannelsShader=function(t,e){t=t||"xyzw",e=void 0===e?!0:e;var i="#define extractChannels(src) ((src)."+t+")\n";e&&(i+="#define COPY_ALPHA\n"),HX.CustomCopyShader.call(this,i+HX.ShaderLibrary.get("copy_fragment.glsl"))},HX.CopyChannelsShader.prototype=Object.create(HX.CustomCopyShader.prototype),HX.MultiplyColorCopyShader=function(){HX.CustomCopyShader.call(this,HX.ShaderLibrary.get("multiply_color_fragment.glsl")),HX_GL.useProgram(this._program),this._colorLocation=HX_GL.getUniformLocation(this._program,"color")},HX.MultiplyColorCopyShader.prototype=Object.create(HX.CustomCopyShader.prototype),HX.MultiplyColorCopyShader.prototype.execute=function(t,e,i){HX.setDepthTest(HX.Comparison.DISABLED),HX.setCullMode(HX.CullMode.NONE),t._vertexBuffers[0].bind(),t._indexBuffer.bind(),this.updateRenderState(),e.bind(0),HX_GL.uniform4f(this._colorLocation,i.r,i.g,i.b,i.a),HX_GL.vertexAttribPointer(this._positionAttributeLocation,2,HX_GL.FLOAT,!1,16,0),HX_GL.vertexAttribPointer(this._texCoordAttributeLocation,2,HX_GL.FLOAT,!1,16,8),HX.enableAttributes(2),HX.drawElements(HX_GL.TRIANGLES,6,0)},HX.CopyWithSeparateAlpha=function(){HX.Shader.call(this),this.init(HX.ShaderLibrary.get("copy_vertex.glsl"),HX.ShaderLibrary.get("copy_with_separate_alpha_fragment.glsl"));var t=HX_GL.getUniformLocation(this._program,"sampler"),e=HX_GL.getUniformLocation(this._program,"alphaSource");this._positionAttributeLocation=HX_GL.getAttribLocation(this._program,"hx_position"),this._texCoordAttributeLocation=HX_GL.getAttribLocation(this._program,"hx_texCoord"),HX_GL.useProgram(this._program),HX_GL.uniform1i(t,0),HX_GL.uniform1i(e,1)},HX.CopyWithSeparateAlpha.prototype=Object.create(HX.Shader.prototype),HX.CopyWithSeparateAlpha.prototype.execute=function(t,e,i){HX.setDepthTest(HX.Comparison.DISABLED),HX.setCullMode(HX.CullMode.NONE),t._vertexBuffers[0].bind(),t._indexBuffer.bind(),this.updateRenderState(),e.bind(0),i.bind(1),HX_GL.vertexAttribPointer(this._positionAttributeLocation,2,HX_GL.FLOAT,!1,16,0),HX_GL.vertexAttribPointer(this._texCoordAttributeLocation,2,HX_GL.FLOAT,!1,16,8),HX.enableAttributes(2),HX.drawElements(HX_GL.TRIANGLES,6,0)},HX.ApplyBlendingShader=function(){HX.Shader.call(this),this.init(HX.ShaderLibrary.get("apply_blending_vertex.glsl"),HX.ShaderLibrary.get("apply_blending_fragment.glsl"));var t=HX_GL.getUniformLocation(this._program,"hx_gbufferColor"),e=HX_GL.getUniformLocation(this._program,"hx_gbufferNormals"),i=HX_GL.getUniformLocation(this._program,"hx_backbuffer");this._positionAttributeLocation=HX_GL.getAttribLocation(this._program,"hx_position"),this._texCoordAttributeLocation=HX_GL.getAttribLocation(this._program,"hx_texCoord"),this._pixelHeightLocation=HX_GL.getUniformLocation(this._program,"pixelHeight"),HX_GL.useProgram(this._program),HX_GL.uniform1i(t,0),HX_GL.uniform1i(e,1),HX_GL.uniform1i(i,2)},HX.ApplyBlendingShader.prototype=Object.create(HX.Shader.prototype),HX.ApplyBlendingShader.prototype.execute=function(t,e,i){HX.setDepthTest(HX.Comparison.DISABLED),HX.setCullMode(HX.CullMode.NONE),t._vertexBuffers[0].bind(),t._indexBuffer.bind(),this.updateRenderState(),e[0].bind(0),e[1].bind(1),i.bind(2),HX_GL.uniform1f(this._pixelHeightLocation,1/i.height),HX_GL.vertexAttribPointer(this._positionAttributeLocation,2,HX_GL.FLOAT,!1,16,0),HX_GL.vertexAttribPointer(this._texCoordAttributeLocation,2,HX_GL.FLOAT,!1,16,8),HX.enableAttributes(2),HX.drawElements(HX_GL.TRIANGLES,6,0)},HX.DebugDepthShader=function(){HX.CustomCopyShader.call(this,HX.ShaderLibrary.get("debug_depth_fragment.glsl"))},HX.DebugDepthShader.prototype=Object.create(HX.CustomCopyShader.prototype),HX.DebugTransparencyModeShader=function(){HX.CustomCopyShader.call(this,HX.ShaderLibrary.get("debug_transparency_fragment.glsl"))},HX.DebugTransparencyModeShader.prototype=Object.create(HX.CustomCopyShader.prototype),HX.ApplyGammaShader=function(){HX.CustomCopyShader.call(this,HX.ShaderLibrary.get("copy_to_gamma_fragment.glsl"))},HX.ApplyGammaShader.prototype=Object.create(HX.CustomCopyShader.prototype),HX.DebugNormalsShader=function(){HX.CustomCopyShader.call(this,HX.ShaderLibrary.get("debug_normals_fragment.glsl"))},HX.DebugNormalsShader.prototype=Object.create(HX.CustomCopyShader.prototype),HX.LinearizeDepthShader=function(){HX.Shader.call(this),this.init(HX.ShaderLibrary.get("linearize_depth_vertex.glsl"),HX.ShaderLibrary.get("linearize_depth_fragment.glsl")),HX_GL.useProgram(this._program);var t=HX_GL.getUniformLocation(this._program,"sampler");HX_GL.uniform1i(t,0),this._rcpFrustumRangeLocation=HX_GL.getUniformLocation(this._program,"hx_rcpCameraFrustumRange"),this._projectionLocation=HX_GL.getUniformLocation(this._program,"hx_projectionMatrix"),this._positionAttributeLocation=HX_GL.getAttribLocation(this._program,"hx_position"),this._texCoordAttributeLocation=HX_GL.getAttribLocation(this._program,"hx_texCoord")},HX.LinearizeDepthShader.prototype=Object.create(HX.Shader.prototype),HX.LinearizeDepthShader.prototype.execute=function(t,e,i){HX.setDepthTest(HX.Comparison.DISABLED),HX.setCullMode(HX.CullMode.NONE),HX.setDepthMask(!1),HX.setBlendState(null),t._vertexBuffers[0].bind(),t._indexBuffer.bind(),this.updateRenderState(i),e.bind(0),HX_GL.vertexAttribPointer(this._positionAttributeLocation,2,HX_GL.FLOAT,!1,16,0),HX_GL.vertexAttribPointer(this._texCoordAttributeLocation,2,HX_GL.FLOAT,!1,16,8),HX_GL.uniform1f(this._rcpFrustumRangeLocation,1/(i.nearDistance-i.farDistance)),HX_GL.uniformMatrix4fv(this._projectionLocation,!1,i.projectionMatrix._m),HX.enableAttributes(2),HX.drawElements(HX_GL.TRIANGLES,6,0)},HX.ReprojectShader=function(){HX.Shader.call(this),this.init(HX.ShaderLibrary.get("copy_vertex.glsl"),HX.ShaderLibrary.get("reproject_fragment.glsl")),this._reprojectionMatrix=new HX.Matrix4x4;var t=HX_GL.getUniformLocation(this._program,"source"),e=HX_GL.getUniformLocation(this._program,"depth");this._reprojectionMatrixLocation=HX_GL.getUniformLocation(this._program,"reprojectionMatrix"),this._positionAttributeLocation=HX_GL.getAttribLocation(this._program,"hx_position"),this._texCoordAttributeLocation=HX_GL.getAttribLocation(this._program,"hx_texCoord"),HX_GL.useProgram(this._program),HX_GL.uniform1i(t,0),HX_GL.uniform1i(e,1)},HX.ReprojectShader.prototype=Object.create(HX.Shader.prototype),HX.ReprojectShader.prototype.execute=function(t,e,i,n,r){HX.setDepthTest(HX.Comparison.DISABLED),HX.setCullMode(HX.CullMode.NONE),t._vertexBuffers[0].bind(),t._indexBuffer.bind(),this.updateRenderState(n),e.bind(0),i.bind(1),this._reprojectionMatrix.multiply(r,n.inverseViewProjectionMatrix),HX_GL.uniformMatrix4fv(this._reprojectionMatrixLocation,!1,this._reprojectionMatrix._m),HX_GL.vertexAttribPointer(this._positionAttributeLocation,2,HX_GL.FLOAT,!1,16,0),HX_GL.vertexAttribPointer(this._texCoordAttributeLocation,2,HX_GL.FLOAT,!1,16,8),HX.enableAttributes(2),HX.drawElements(HX_GL.TRIANGLES,6,0)},HX.BloomBlurPass=function(t,e,i,n,r){this._initWeights(t);var o={SOURCE_RES:"vec2(float("+n+"), float("+r+"))",RADIUS:"float("+Math.ceil(.5*t)+")",DIRECTION:"vec2("+e+", "+i+")",NUM_SAMPLES:Math.ceil(t)},a=HX.ShaderLibrary.get("bloom_blur_vertex.glsl",o),s=HX.ShaderLibrary.get("bloom_blur_fragment.glsl",o);HX.EffectPass.call(this,a,s),this.setUniformArray("gaussianWeights",new Float32Array(this._weights))},HX.BloomBlurPass.prototype=Object.create(HX.EffectPass.prototype),HX.BloomBlurPass.prototype._initWeights=function(t){this._weights=[];for(var e=2*Math.ceil(.5*t),i=.5*e,n=HX.CenteredGaussianCurve.fromRadius(i,.005),r=0,o=0;t>o;++o)this._weights[o]=n.getValueAt(o-i),r+=this._weights[o];for(var o=0;t>o;++o)this._weights[o]*=r},HX.BloomEffect=function(t,e,i,n){HX.Effect.call(this),this._downScale=i||4,this._targetWidth=-1,this._targetHeight=-1,this._thresholdPass=new HX.EffectPass(null,HX.ShaderLibrary.get("bloom_threshold_fragment.glsl")),this._compositePass=new HX.EffectPass(HX.ShaderLibrary.get("bloom_composite_vertex.glsl"),HX.ShaderLibrary.get("bloom_composite_fragment.glsl")),this._compositePass.blendState=HX.BlendState.ADD,this._thresholdMaps=[],this._smallFBOs=[];for(var r=0;2>r;++r)this._thresholdMaps[r]=new HX.Texture2D,this._thresholdMaps[r].filter=HX.TextureFilter.BILINEAR_NOMIP,this._thresholdMaps[r].wrapMode=HX.TextureWrapMode.CLAMP,this._smallFBOs[r]=new HX.FrameBuffer([this._thresholdMaps[r]]);this._size=t||512,this._anisotropy=n||1,this._strength=void 0===e?1:e,this.thresholdLuminance=HX.EXT_HALF_FLOAT_TEXTURES_LINEAR&&HX.EXT_HALF_FLOAT_TEXTURES?1:.9,this._compositePass.setTexture("bloomTexture",this._thresholdMaps[0]),this.strength=this._strength},HX.BloomEffect.prototype=Object.create(HX.Effect.prototype,{strength:{get:function(){return this._strength},set:function(t){this._strength=t,this._compositePass.setUniform("strength",this._strength)}}}),HX.BloomEffect.prototype._initTextures=function(){for(var t=0;2>t;++t)this._thresholdMaps[t].initEmpty(Math.ceil(this._targetWidth/this._downScale),Math.ceil(this._targetHeight/this._downScale),HX_GL.RGB,HX.HDR_FORMAT),this._smallFBOs[t].init()},HX.BloomEffect.prototype._initBlurPass=function(){var t=this._size/this._downScale,e=this._targetWidth/this._downScale,i=this._targetHeight/this._downScale;this._blurXPass=new HX.BloomBlurPass(t,1,0,e,i),this._blurYPass=new HX.BloomBlurPass(t*this._anisotropy,0,1,e,i),this._blurXPass.setTexture("sourceTexture",this._thresholdMaps[0]),this._blurYPass.setTexture("sourceTexture",this._thresholdMaps[1])},HX.BloomEffect.prototype.draw=function(t){(this._renderer._width!=this._targetWidth||this._renderer._height!=this._targetHeight)&&(this._targetWidth=this._renderer._width,this._targetHeight=this._renderer._height,this._initTextures(),this._initBlurPass()),HX.pushRenderTarget(this._smallFBOs[0]),this._drawPass(this._thresholdPass),HX.pushRenderTarget(this._smallFBOs[1]),this._drawPass(this._blurXPass),HX.popRenderTarget(),this._drawPass(this._blurYPass),HX.popRenderTarget(),this._drawPass(this._compositePass)},HX.BloomEffect.prototype.dispose=function(){for(var t=0;2>t;++t)this._smallFBOs[t].dispose(),this._thresholdMaps[t].dispose();this._smallFBOs=null,this._thresholdMaps=null},Object.defineProperty(HX.BloomEffect.prototype,"thresholdLuminance",{get:function(){return this._thresholdLuminance},set:function(t){this._thresholdLuminance=t,this._thresholdPass.setUniform("threshold",t)}}),HX.CopyTexturePass=function(){HX.EffectPass.call(this,null,HX.ShaderLibrary.get("copy_fragment.glsl"))},HX.CopyTexturePass.prototype=Object.create(HX.EffectPass.prototype),HX.CopyTexturePass.prototype.setSourceTexture=function(t){this.setTexture("sampler",t)},HX.FogEffect=function(t,e,i){HX.Effect.call(this),this._fogPass=new HX.EffectPass(null,HX.ShaderLibrary.get("fog_fragment.glsl")),this._fogPass.blendState=HX.BlendState.INV_ALPHA,this.density=void 0===t?.001:t,this.tint=void 0===e?new HX.Color(1,1,1,1):e,this.startDistance=void 0===i?0:i},HX.FogEffect.prototype=Object.create(HX.Effect.prototype),Object.defineProperty(HX.FogEffect.prototype,"density",{get:function(){return this._density},set:function(t){this._density=t,this._fogPass.setUniform("density",t)}}),Object.defineProperty(HX.FogEffect.prototype,"tint",{get:function(){return this._tint},set:function(t){this._tint=t,this._fogPass.setUniform("tint",{x:t.r,y:t.g,z:t.b})}}),Object.defineProperty(HX.FogEffect.prototype,"startDistance",{get:function(){return this._startDistance},set:function(t){this._startDistance=t,this._fogPass.setUniform("startDistance",t)}}),HX.FogEffect.prototype.draw=function(t){this._drawPass(this._fogPass)},HX.FXAA=function(){HX.Effect.call(this),this._pass=new HX.EffectPass(null,HX.ShaderLibrary.get("fxaa_fragment.glsl")),this._pass.setUniform("edgeThreshold",1/8),this._pass.setUniform("edgeThresholdMin",1/16),this._pass.setUniform("edgeSharpness",4)},HX.FXAA.prototype=Object.create(HX.Effect.prototype),HX.FXAA.prototype.draw=function(t){this._swapHDRBuffers(),this._drawPass(this._pass)},HX.HBAO=function(t,e){t=t||4,e=e||4,t>32&&(t=32),e>32&&(e=32),this._numRays=t,this._strength=1,this._bias=.01,this._fallOffDistance=1,this._radius=.5,this._scale=.5,this._sampleDirTexture=null,this._ditherTexture=null,HX.Effect.call(this),this._aoPass=new HX.EffectPass(HX.ShaderLibrary.get("hbao_vertex.glsl"),HX.ShaderLibrary.get("hbao_fragment.glsl",{NUM_RAYS:t,NUM_SAMPLES_PER_RAY:e})),this._blurPass=new HX.EffectPass(null,HX.ShaderLibrary.get("ao_blur_fragment.glsl")),this._initSampleDirTexture(),this._initDitherTexture(),this._aoPass.setUniform("strengthPerRay",this._strength/this._numRays),this._aoPass.setUniform("rcpFallOffDistance",1/this._fallOffDistance),this._aoPass.setUniform("halfSampleRadius",.5*this._radius),this._aoPass.setUniform("bias",this._bias),this._aoPass.setTexture("ditherTexture",this._ditherTexture),this._aoPass.setTexture("sampleDirTexture",this._sampleDirTexture),this._sourceTextureSlot=this._blurPass.getTextureSlot("source"),this._aoTexture=new HX.Texture2D,this._aoTexture.filter=HX.TextureFilter.BILINEAR_NOMIP,this._aoTexture.wrapMode=HX.TextureWrapMode.CLAMP,this._backTexture=new HX.Texture2D,this._backTexture.filter=HX.TextureFilter.BILINEAR_NOMIP,this._backTexture.wrapMode=HX.TextureWrapMode.CLAMP,this._fbo1=new HX.FrameBuffer(this._aoTexture),this._fbo2=new HX.FrameBuffer(this._backTexture)},HX.HBAO.prototype=Object.create(HX.Effect.prototype),HX.HBAO.prototype.getAOTexture=function(){return this._aoTexture},Object.defineProperties(HX.HBAO.prototype,{sampleRadius:{get:function(){return this._radius},set:function(t){this._radius=t,this._aoPass.setUniform("halfSampleRadius",.5*this._radius)}},fallOffDistance:{get:function(){this._fallOffDistance=value},set:function(t){this._fallOffDistance=t,this._aoPass.setUniform("rcpFallOffDistance",1/this._fallOffDistance)}},strength:{get:function(){return this._strength},set:function(t){this._strength=t,this._aoPass.setUniform("strengthPerRay",this._strength/this._numRays)}},bias:{get:function(){return this._bias},set:function(t){this._bias=t,this._aoPass.setUniform("bias",this._bias)}},scale:{get:function(){return this._scale},set:function(t){this._scale=t}}}),HX.HBAO.prototype.draw=function(t){var e=this._renderer._width*this._scale,i=this._renderer._height*this._scale;HX.TextureUtils.assureSize(e,i,this._aoTexture,this._fbo1)&&(HX.TextureUtils.assureSize(e,i,this._backTexture,this._fbo2),this._aoPass.setUniform("ditherScale",{x:.25*e,y:.25*i})),HX.pushRenderTarget(this._fbo1),HX.clear(HX_GL.COLOR_BUFFER_BIT),this._drawPass(this._aoPass),HX.pushRenderTarget(this._fbo2),HX.clear(HX_GL.COLOR_BUFFER_BIT),this._blurPass.setUniform("halfTexelOffset",{x:.5/e,y:0}),this._sourceTextureSlot.texture=this._aoTexture,this._drawPass(this._blurPass),HX.popRenderTarget(),HX.clear(HX_GL.COLOR_BUFFER_BIT),this._blurPass.setUniform("halfTexelOffset",{x:0,y:.5/i}),this._sourceTextureSlot.texture=this._backTexture,this._drawPass(this._blurPass),HX.popRenderTarget()},HX.HBAO.prototype._initSampleDirTexture=function(){this._sampleDirTexture=new HX.Texture2D;for(var t=[],e=0,i=0;256>i;++i){var n=i/256*2*Math.PI,r=.5*Math.cos(n)+.5,o=.5*Math.sin(n)+.5;t[e]=Math.round(255*r),t[e+1]=Math.round(255*o),t[e+2]=0,t[e+3]=255,e+=4}this._sampleDirTexture.uploadData(new Uint8Array(t),256,1,!1),this._sampleDirTexture.filter=HX.TextureFilter.NEAREST_NOMIP,this._sampleDirTexture.wrapMode=HX.TextureWrapMode.REPEAT},HX.HBAO.prototype._initDitherTexture=function(){this._ditherTexture=new HX.Texture2D;var t,e=[],i=0,n=[],r=[];for(t=0;16>t;++t)n.push(t/16),r.push(t/15);HX.shuffle(n),HX.shuffle(r),t=0;for(var o=0;4>o;++o)for(var a=0;4>a;++a){var s=n[t],h=r[t];++t,e[i]=Math.round(255*s),e[i+1]=Math.round(255*h),e[i+2]=0,e[i+3]=255,i+=4}this._ditherTexture.uploadData(new Uint8Array(e),4,4,!1),this._ditherTexture.filter=HX.TextureFilter.NEAREST_NOMIP,this._ditherTexture.wrapMode=HX.TextureWrapMode.REPEAT},HX.ScreenSpaceReflections=function(t){HX.Effect.call(this),t=t||5,this._numSamples=t;var e={NUM_SAMPLES:t};this._isSupported=!!HX.EXT_STANDARD_DERIVATIVES,this._stencilWriteState=new HX.StencilState(1,HX.Comparison.ALWAYS,HX.StencilOp.REPLACE,HX.StencilOp.REPLACE,HX.StencilOp.REPLACE),this._stencilReadState=new HX.StencilState(1,HX.Comparison.EQUAL,HX.StencilOp.KEEP,HX.StencilOp.KEEP,HX.StencilOp.KEEP),this._stencilPass=new HX.EffectPass(null,HX.ShaderLibrary.get("ssr_stencil_fragment.glsl")),this._pass=new HX.EffectPass(HX.ShaderLibrary.get("ssr_vertex.glsl",e),HX.ShaderLibrary.get("ssr_fragment.glsl",e)),this._scale=.5,this.stepSize=Math.max(500/t,1),this.maxDistance=500,this.maxRoughness=.4,this._depthBuffer=new HX.WriteOnlyDepthBuffer,this._ssrTexture=new HX.Texture2D,this._ssrTexture.filter=HX.TextureFilter.BILINEAR_NOMIP,this._ssrTexture.wrapMode=HX.TextureWrapMode.CLAMP,this._fbo=new HX.FrameBuffer(this._ssrTexture,this._depthBuffer)},HX.ScreenSpaceReflections.prototype=Object.create(HX.Effect.prototype),Object.defineProperties(HX.ScreenSpaceReflections.prototype,{stepSize:{get:function(){return this._stepSize},set:function(t){this._stepSize=t,this._pass.setUniform("stepSize",t)}},maxDistance:{get:function(){return this._stepSize},set:function(t){this._stepSize=t,this._pass.setUniform("maxDistance",t)}},maxRoughness:{get:function(){return this._stepSize},set:function(t){this._stepSize=t,this._pass.setUniform("maxRoughness",t),this._stencilPass.setUniform("maxRoughness",t)}},scale:{get:function(){return this._scale},set:function(t){this._scale=t,this._scale>1&&(this._scale=1)}}}),HX.ScreenSpaceReflections.prototype.getSSRTexture=function(){return this._ssrTexture},HX.ScreenSpaceReflections.prototype.draw=function(t){var e=this._renderer._width*this._scale,i=this._renderer._height*this._scale;HX.TextureUtils.assureSize(e,i,this._ssrTexture,null,HX_GL.RGBA,HX.HDR_FORMAT)&&(this._depthBuffer.init(e,i),this._fbo.init(),this._pass.setUniform("ditherTextureScale",{x:e/HX.DEFAULT_2D_DITHER_TEXTURE.width,y:i/HX.DEFAULT_2D_DITHER_TEXTURE.height})),HX.pushRenderTarget(this._fbo),HX.setClearColor(HX.Color.ZERO),HX.clear(),HX_GL.colorMask(!1,!1,!1,!1),HX.pushStencilState(this._stencilWriteState),this._drawPass(this._stencilPass),HX.popStencilState(),HX_GL.colorMask(!0,!0,!0,!0),HX.pushStencilState(this._stencilReadState),this._drawPass(this._pass),HX.popStencilState(),HX.popRenderTarget()},HX.SSAO=function(t){t=t||8,t>64&&(t=64),this._numSamples=t,this._strength=1,this._fallOffDistance=1,this._radius=.5,this._scale=.5,this._ditherTexture=null,HX.Effect.call(this),this._ssaoPass=new HX.EffectPass(null,HX.ShaderLibrary.get("ssao_fragment.glsl",{NUM_SAMPLES:t})),this._blurPass=new HX.EffectPass(null,HX.ShaderLibrary.get("ao_blur_fragment.glsl")),this._initSamples(),this._initDitherTexture(),this._ssaoPass.setUniform("strengthPerSample",2*this._strength/this._numSamples),this._ssaoPass.setUniform("rcpFallOffDistance",1/this._fallOffDistance),this._ssaoPass.setUniform("sampleRadius",this._radius),this._ssaoPass.setTexture("ditherTexture",this._ditherTexture),this._sourceTextureSlot=this._blurPass.getTextureSlot("source"),this._ssaoTexture=new HX.Texture2D,this._ssaoTexture.filter=HX.TextureFilter.BILINEAR_NOMIP,this._ssaoTexture.wrapMode=HX.TextureWrapMode.CLAMP,this._backTexture=new HX.Texture2D,this._backTexture.filter=HX.TextureFilter.BILINEAR_NOMIP,this._backTexture.wrapMode=HX.TextureWrapMode.CLAMP,this._fbo1=new HX.FrameBuffer(this._ssaoTexture),this._fbo2=new HX.FrameBuffer(this._backTexture)},HX.SSAO.prototype=Object.create(HX.Effect.prototype),HX.SSAO.prototype.getAOTexture=function(){return this._ssaoTexture},Object.defineProperties(HX.SSAO.prototype,{sampleRadius:{get:function(){return this._radius},set:function(t){this._radius=t,this._ssaoPass.setUniform("sampleRadius",this._radius)}},fallOffDistance:{get:function(){this._fallOffDistance=value},set:function(t){this._fallOffDistance=t,this._ssaoPass.setUniform("rcpFallOffDistance",1/this._fallOffDistance)}},strength:{get:function(){return this._strength},set:function(t){this._strength=t,this._ssaoPass.setUniform("strengthPerSample",2*this._strength/this._numSamples)}},scale:{get:function(){return this._scale},set:function(t){this._scale=t}}}),HX.SSAO.prototype._initSamples=function(){for(var t=[],e=0,i=HX.PoissonSphere.DEFAULT.getPoints(),n=0;n<this._numSamples;++n){var r=i[n];t[e++]=Math.pow(r.x,2),t[e++]=Math.pow(r.y,2),t[e++]=Math.pow(r.z,2)}this._ssaoPass.setUniformArray("samples",new Float32Array(t))},HX.SSAO.prototype.draw=function(t){var e=this._renderer._width*this._scale,i=this._renderer._height*this._scale;HX.TextureUtils.assureSize(e,i,this._ssaoTexture,this._fbo1)&&(HX.TextureUtils.assureSize(e,i,this._backTexture,this._fbo2),this._ssaoPass.setUniform("ditherScale",{x:.25*e,y:.25*i})),HX.pushRenderTarget(this._fbo1),HX.clear(),this._drawPass(this._ssaoPass),HX.pushRenderTarget(this._fbo2),HX.clear(),this._blurPass.setUniform("halfTexelOffset",{x:.5/e,y:0}),this._sourceTextureSlot.texture=this._ssaoTexture,this._drawPass(this._blurPass),HX.popRenderTarget(),HX.clear(),this._blurPass.setUniform("halfTexelOffset",{x:0,y:.5/i}),this._sourceTextureSlot.texture=this._backTexture,this._drawPass(this._blurPass),HX.popRenderTarget()},HX.SSAO.prototype._initDitherTexture=function(){var t=[126,255,126,255,135,253,105,255,116,51,26,255,137,57,233,255,139,254,121,255,56,61,210,255,227,185,73,255,191,179,30,255,107,245,173,255,205,89,34,255,191,238,138,255,56,233,125,255,198,228,161,255,85,13,164,255,140,248,168,255,147,237,65,255];this._ditherTexture=new HX.Texture2D,this._ditherTexture.uploadData(new Uint8Array(t),4,4,!1),this._ditherTexture.filter=HX.TextureFilter.NEAREST_NOMIP,this._ditherTexture.wrapMode=HX.TextureWrapMode.REPEAT},HX.ToneMapEffect=function(t){return this._adaptive=void 0===t?!1:t,!this._adaptive||HX.EXT_SHADER_TEXTURE_LOD&&HX.EXT_HALF_FLOAT_TEXTURES?(HX.Effect.call(this),this._toneMapPass=this._createToneMapPass(),this._adaptive&&(this._extractLuminancePass=new HX.EffectPass(null,HX.ShaderLibrary.get("tonemap_reference_fragment.glsl")),this._extractLuminancePass.blendState=new HX.BlendState(HX.BlendFactor.CONSTANT_ALPHA,HX.BlendFactor.ONE_MINUS_CONSTANT_ALPHA,HX.BlendOperation.ADD,new HX.Color(1,1,1,1)),this._luminanceMap=new HX.Texture2D,this._luminanceMap.initEmpty(256,256,HX_GL.RGBA,HX.EXT_HALF_FLOAT_TEXTURES.HALF_FLOAT_OES),this._luminanceFBO=new HX.FrameBuffer(this._luminanceMap),this._luminanceFBO.init(),this._adaptationRate=2e3,this._toneMapPass.setTexture("hx_luminanceMap",this._luminanceMap),this._toneMapPass.setUniform("hx_luminanceMipLevel",HX.log2(this._luminanceMap._width))),void(this.exposure=0)):(console.log("Warning: adaptive tone mapping not supported, using non-adaptive"),void(this._adaptive=!1))},HX.ToneMapEffect.prototype=Object.create(HX.Effect.prototype),HX.ToneMapEffect.prototype._createToneMapPass=function(){throw new Error("Abstract method called!")},HX.ToneMapEffect.prototype.dispose=function(){HX.Effect.prototype.dispose.call(this),this._luminanceFBO.dispose(),this._luminanceMap.dispose()},HX.ToneMapEffect.prototype.draw=function(t){if(this._adaptive){if(!this._isSupported)return;var e=this._adaptationRate>0?t/this._adaptationRate:1;e>1&&(e=1),this._extractLuminancePass.blendState.color.a=e,HX.pushRenderTarget(this._luminanceFBO),this._drawPass(this._extractLuminancePass),this._luminanceMap.generateMipmap(),HX.popRenderTarget()}this._swapHDRBuffers(),this._drawPass(this._toneMapPass)},Object.defineProperties(HX.ToneMapEffect.prototype,{exposure:{get:function(){return this._exposure},set:function(t){this._exposure=t,this._isSupported&&this._toneMapPass.setUniform("hx_exposure",Math.pow(2,t))}},adaptationRate:{get:function(){return this._adaptationRate},set:function(t){this._adaptationRate=t}}}),HX.ReinhardToneMapEffect=function(t){HX.ToneMapEffect.call(this,t)},HX.ReinhardToneMapEffect.prototype=Object.create(HX.ToneMapEffect.prototype),HX.ReinhardToneMapEffect.prototype._createToneMapPass=function(){var t={},e=[];return this._adaptive&&(t.ADAPTIVE=1,e.push("GL_EXT_shader_texture_lod")),new HX.EffectPass(null,HX.ShaderLibrary.get("snippets_tonemap.glsl",t,e)+"\n"+HX.ShaderLibrary.get("tonemap_reinhard_fragment.glsl"))},HX.FilmicToneMapEffect=function(t){HX.ToneMapEffect.call(this,t),this._outputsGamma=!0},HX.FilmicToneMapEffect.prototype=Object.create(HX.ToneMapEffect.prototype),HX.FilmicToneMapEffect.prototype._createToneMapPass=function(){var t={},e=[];return this._adaptive&&(t.ADAPTIVE=1,e.push("GL_EXT_shader_texture_lod")),new HX.EffectPass(null,HX.ShaderLibrary.get("snippets_tonemap.glsl",t,e)+"\n"+HX.ShaderLibrary.get("tonemap_filmic_fragment.glsl"))},HX.SkeletonJoint=function(){this.name=null,this.parentIndex=-1,this.inverseBindPose=new HX.Matrix4x4},HX.SkeletonJoint.prototype={toString:function(){return"[SkeletonJoint]"}},HX.SkeletonJointPose=function(){this.rotation=new HX.Quaternion,this.position=new HX.Float4,this.scale=1},HX.SkeletonJointPose.prototype={copyFrom:function(t){this.rotation.copyFrom(t.rotation),this.position.copyFrom(t.position),this.scale=t.scale},toString:function(){return"[SkeletonJointPose]"}},HX.SkeletonPose=function(){this.jointPoses=[]},HX.SkeletonPose.prototype={interpolate:function(t,e,i){t=t.jointPoses,e=e.jointPoses;var n=t.length;if(this.jointPoses.length!==n){this._numJoints=n,this.jointPoses=[];for(var r=0;n>r;++r)this.jointPoses[r]=new HX.SkeletonJointPose}for(var o=this.jointPoses,r=0;n>r;++r)o[r].rotation.slerp(t[r].rotation,e[r].rotation,i),o[r].position.lerp(t[r].position,e[r].position,i),o[r].scale=HX.lerp(t[r].scale,e[r].scale,i)},copyFrom:function(t){t=t.jointPoses;for(var e=this.jointPoses,i=e.length,n=0;i>n;++n)e[n].copyFrom(t[n])}},HX.Skeleton=function(){this._joints=[],this._name=""},HX.Skeleton.prototype={get numJoints(){return this._joints.length},addJoint:function(t){this._joints.push(t)},getJoint:function(t){return this._joints[t]},get name(){return this._name},set name(t){this._name=t},toString:function(){return"[Skeleton(name="+this.name+")"}},HX.SkeletonAnimation=function(t){HX.Component.call(this),t instanceof HX.SkeletonClip&&(t=new HX.SkeletonClipNode(t)),this._blendTree=new HX.SkeletonBlendTree(t)},HX.SkeletonAnimation.prototype=Object.create(HX.Component.prototype,{animationNode:{get:function(){return this._blendTree.rootNode},set function(t){this._blendTree.rootNode=t,this._entity&&(this._blendTree.skeleton=this._entity.skeleton)}}}),HX.SkeletonAnimation.prototype.onAdded=function(){this._blendTree.skeleton=this._entity.skeleton},HX.SkeletonAnimation.prototype.onUpdate=function(t){if(this._blendTree.update(t)){var e=this._entity.matrix,i=this._blendTree.rootJointDeltaPosition;e.prependTranslation(i),this._entity.matrix=e}this._entity.skeletonMatrices=this._blendTree.matrices},HX.SkeletonBinaryLerpNode=function(){HX.SkeletonBlendNode.call(this),this._value=0,this._child1=null,this._child2=null,this._minValue=0,this._maxValue=1,this._numJoints=0},HX.SkeletonBinaryLerpNode.prototype={get minValue(){return this._minValue},set minValue(t){this._minValue=t},get maxValue(){return this._maxValue},set maxValue(t){this._maxValue=t},get value(){return this._value},set value(t){t=HX.clamp(t,this._minValue,this._maxValue),this._value!==t&&(this._valueChanged=!0),this._value=t,this._t=(this._value-this._minValue)/(this._maxValue-this._minValue);

},get child1(){return this._child1},set child1(t){if(this._child1=t,this._child2&&t.numJoints!==this._child2.numJoints)throw new Error("Incompatible child nodes (numJoints mismatch)!");this._numJoints=t.numJoints},get child2(){return this._child2},set child2(t){if(this._child2=t,this._child1&&t.numJoints!==this._child1.numJoints)throw new Error("Incompatible child nodes (numJoints mismatch)!")},update:function(t){var e=this._child1.update(t);e=e||this._child2.update(t);var i=this._t;(e||this._valueChanged)&&(i>.999?this._pose.copyFrom(this._child1._pose):.001>i?this._pose.copyFrom(this._child2._pose):this._pose.interpolate(this._child1,this._child2,this._t),this._valueChanged=!1)},_applyValue:function(t){this.value=t},setValue:function(t,e){HX.SkeletonBlendNode.prototype.setValue.call(this,t,e),this._child1.setValue(t,e),this._child2.setValue(t,e)},get numJoints(){return this._numJoints}},HX.SkeletonBlendTree=function(t,e){this._skeleton=e,this._rootNode=t,this._matrices=null,this._globalPose=new HX.SkeletonPose,e&&(this.skeleton=e)},HX.SkeletonBlendTree.prototype={get skeleton(){return this._skeleton},set skeleton(t){this._skeleton=t,this._matrices=[];for(var e=0;e<t.numJoints;++e)this._matrices[e]=new HX.Matrix4x4,this._globalPose.jointPoses[e]=new HX.SkeletonJointPose},get rootJointDeltaPosition(){return this._rootNode.rootJointDeltaPosition},get rootNode(){return this._rootNode},set rootNode(t){this._rootNode=t},get matrices(){return this._matrices},update:function(t){return this._rootNode.update(t)?(this._updateGlobalPose(),this._updateMatrices(),!0):!1},_updateGlobalPose:function(){for(var t=this._skeleton,e=t.numJoints,i=this._rootNode._pose.jointPoses,n=this._globalPose.jointPoses,r=(new HX.Matrix4x4,new HX.Matrix4x4,new HX.Transform,new HX.Transform,new HX.Float4,0);e>r;++r){var o=i[r],a=n[r],s=t.getJoint(r);if(s.parentIndex<0)a.copyFrom(o);else{var h=n[s.parentIndex],l=a.position,_=h.position,c=h.rotation;c.rotate(o.position,l),l.x+=_.x,l.y+=_.y,l.z+=_.z,a.rotation.multiply(c,o.rotation),a.scale=h.scale*o.scale}}},_updateMatrices:function(){for(var t=this._skeleton.numJoints,e=this._matrices,i=this._globalPose.jointPoses,n=this._skeleton,r=0;t>r;++r){var o=i[r],a=e[r];a.copyFrom(n.getJoint(r).inverseBindPose);var s=o.scale;a.appendScale(s,s,s),a.appendQuaternion(o.rotation),a.appendTranslation(o.position)}}},HX.SkeletonClip=function(){this._name=null,this._frameRate=24,this._frames=[],this._transferRootJoint=!1},HX.SkeletonClip.prototype={get name(){return this._name},set name(t){this._name=t},get frameRate(){return this._frameRate},set frameRate(t){this._frameRate=t},addFrame:function(t){this._frames.push(t)},get numFrames(){return this._frames.length},getFrame:function(t){return this._frames[t]},get numJoints(){return this._frames[0].jointPoses.length},get duration(){return this._frames.length/this._frameRate},get transferRootJoint(){return this._transferRootJoint},set transferRootJoint(t){this._transferRootJoint=t},toString:function(){return"[SkeletonClip(name="+this.name+")"}},HX.SkeletonClipNode=function(t){HX.SkeletonBlendNode.call(this),this._clip=t,this._interpolate=!0,this._timeScale=1,this._isPlaying=!0,this._time=0},HX.SkeletonClipNode.prototype=Object.create(HX.SkeletonBlendNode.prototype,{numJoints:{get:function(){return this._clip.numJoints}},interpolate:{get:function(){return this._interpolate},set:function(t){this._interpolate=t}},timeScale:{get:function(){return this._timeScale},set:function(t){this._timeScale=t}},time:{get:function(){return this._time},set:function(t){this._time=t,this._timeChanged=!0}}}),HX.SkeletonClipNode.prototype.play=function(){this._isPlaying=!0},HX.SkeletonClipNode.prototype.stop=function(){this._isPlaying=!1},HX.SkeletonClipNode.prototype.update=function(t){if(!(this._isPlaying&&0!==t||this._timeChanged))return!1;this._timeChanged=!1,this._isPlaying&&(t*=this._timeScale,this._time+=t/1e3);for(var e=this._clip,i=e._transferRootJoint?e.numFrames-1:e.numFrames,n=i/e.frameRate,r=0;this._time>=n;)this._time-=n,++r;for(;this._time<0;)this._time+=n,++r;var o=this._time*e.frameRate,a=Math.floor(o),s=e.getFrame(a);if(this._interpolate){var h=a===e.numFrames-1?0:a+1,l=e.getFrame(h);this._pose.interpolate(s,l,o-a)}else this._pose.copyFrom(s);return e._transferRootJoint&&this._transferRootJointTransform(r),!0},HX.SkeletonClipNode.prototype._transferRootJointTransform=function(t){var e=this._clip,i=e.getFrame(e.numFrames-1).jointPoses[0].position,n=e.getFrame(0).jointPoses[0].position,r=this._pose.jointPoses[0].position,o=this._rootPosition,a=this._rootJointDeltaPosition;this._timeScale>0&&t>0?(a.x=i.x-o.x+r.x-n.x+(i.x-n.x)*(t-1),a.y=i.y-o.y+r.y-n.y+(i.y-n.y)*(t-1),a.z=i.z-o.z+r.z-n.z+(i.z-n.z)*(t-1)):t>0?(a.x=n.x-o.x+r.x-i.x+(n.x-i.x)*(t-1),a.y=n.y-o.y+r.y-i.y+(n.y-i.y)*(t-1),a.z=n.z-o.z+r.z-i.z+(n.z-i.z)*(t-1)):(a.x=r.x-o.x,a.y=r.y-o.y,a.z=r.z-o.z),this._rootPosition.copyFrom(r),r.set(0,0,0)},HX.SkeletonClipNode.prototype._applyValue=function(t){this.time=t*this._clip.duration},HX.BulkAssetLoader=function(){this._assets=null,this._files=null,this._abortOnFail=!1,this.onComplete=new HX.Signal,this.onFail=new HX.Signal},HX.BulkAssetLoader.prototype={get abortOnFail(){return this._abortOnFail},set abortOnFail(t){this._abortOnFail=t},getAsset:function(t){return this._assets[t]},load:function(t,e){if(this._files=t,this._assets={},this._index=0,e)for(var i=0;i<this._files.length;++i)this._files[i]={file:this._files[i],importer:e,target:null};this._loadQueued()},_loadQueued:function(){if(this._index===this._files.length)return void this._notifyComplete();var t=this._files[this._index],e=new HX.AssetLoader(t.importer),i=this;e.onComplete=function(e){var n=t.file;i._assets[n]=e,++i._index,i._loadQueued()},e.onFail=function(t){i._notifyFailure(t),i._abortOnFail||e.onComplete()},e.load(t.file,t.target)},_notifyComplete:function(){this.onComplete&&(this.onComplete instanceof HX.Signal?this.onComplete.dispatch():this.onComplete())},_notifyFailure:function(t){return this.onFail?void(this.onFail instanceof HX.Signal?this.onFail.dispatch(t):this.onFail(t)):void console.warn("Importer error: "+t)}},HX.HCM=function(){HX.Importer.call(this,HX.TextureCube)},HX.HCM.prototype=Object.create(HX.Importer.prototype),HX.HCM.prototype.parse=function(t,e){var t=JSON.parse(t),i=[t.files.posX,t.files.negX,t.files.posY,t.files.negY,t.files.posZ,t.files.negZ];t.loadMips?this._loadMipChain(i,e):this._loadFaces(i,e)},HX.HCM.prototype._loadFaces=function(t,e){for(var i=void 0===this.options.generateMipmaps?!0:this.options.generateMipmaps,n=[],r=this,o=0;6>o;++o){var a=new Image;a.nextID=o+1,a.onload=5>o?function(){n[this.nextID].src=r.path+t[this.nextID]}:function(){e.uploadImages(n,i),r._notifyComplete(e)},a.onError=function(){r._notifyFailure("Failed loading texture '"+url+"'")},n[o]=a}n[0].src=r.path+t[0]},HX.HCM.prototype._loadMipChain=function(t,e){function i(){for(var i=6*n,a=1;n>a;++a)for(var h=0;6>h;++h)s.push(t[h].replace("%m",a.toString()));for(var a=1;i>a;++a){var l=new Image;l.nextID=a+1,l.onload=i-1>a?function(){r[this.nextID].src=o.path+s[this.nextID]}:function(){for(var t=0;n>t;++t)e.uploadImagesToMipLevel(r.slice(6*t,6*t+6),t);e._isReady=!0,o._notifyComplete(e)},l.onError=function(){o._notifyFailure("Failed loading texture")},r[a]=l}r[1].src=o.path+s[1]}for(var n,r=[],o=this,a=new Image,s=[],h=0;6>h;++h)s[h]=t[h].replace("%m","0");a.onload=function(){a.naturalWidth==a.naturalHeight&&HX.TextureUtils.isPowerOfTwo(a.naturalWidth)?(n=HX.log2(a.naturalWidth)+1,i(),r[0]=a):o._notifyFailure("Failed loading mipchain: incorrect dimensions")},a.onerror=function(){o._notifyFailure("Failed loading texture")},a.src=o.path+s[0]},HX.HMT=function(){HX.Importer.call(this,HX.Material),HX.HMT._initPropertyMap()},HX.HMT.prototype=Object.create(HX.Importer.prototype),HX.HMT.prototype.parse=function(t,e){t=JSON.parse(t),this._loadShaders(t,e)},HX.HMT.prototype._gatherShaderFiles=function(t){var e=t.passes,i=[];for(var n in e)if(e.hasOwnProperty(n)){var r=e[n].vertexShader,o=e[n].fragmentShader;i.indexOf(r)<0&&i.push(this._correctURL(r)),i.indexOf(o)<0&&i.push(this._correctURL(o))}return i},HX.HMT.prototype._loadShaders=function(t,e){var i={},n=this._gatherShaderFiles(t),r=new HX.BulkURLLoader,o=this;r.onComplete=function(){for(var a=0;a<n.length;++a)i[n[a]]=r.getData(n[a]);o._processMaterial(t,i,e),o._loadTextures(t,e)},r.onFail=function(t){o._notifyFailure("Error loading shaders: "+t)},r.load(n)},HX.HMT.prototype._processMaterial=function(t,e,i){var n="";if(this.options.defines)for(var r in this.options.defines)this.options.defines.hasOwnProperty(r)&&(n+="#define "+r+" "+this.options.defines[r]+"\n");var o=t.passes;void 0!==o.geometry&&this._processPass(i,o.geometry,HX.MaterialPass.GEOMETRY_PASS,e,n),this._applyUniforms(t,i),i.setTexture("hx_dither2D",HX.DEFAULT_2D_DITHER_TEXTURE)},HX.HMT.prototype._processPass=function(t,e,i,n,r){var o=n[this._correctURL(e.vertexShader)],a=n[this._correctURL(e.fragmentShader)];i===HX.MaterialPass.GEOMETRY_PASS?(HX.EXT_DRAW_BUFFERS?this._addPass(o,a,e,t,i,r):(this._addPass(o,a,e,t,HX.MaterialPass.GEOMETRY_COLOR_PASS,r,"HX_NO_MRT_GBUFFER_COLOR"),this._addPass(o,a,e,t,HX.MaterialPass.GEOMETRY_NORMAL_PASS,r,"HX_NO_MRT_GBUFFER_NORMALS"),this._addPass(o,a,e,t,HX.MaterialPass.GEOMETRY_SPECULAR_PASS,r,"HX_NO_MRT_GBUFFER_SPECULAR"),HX.EXT_DEPTH_TEXTURE||this._addPass(o,a,e,t,HX.MaterialPass.GEOMETRY_LINEAR_DEPTH_PASS,r,"HX_NO_MRT_GBUFFER_LINEAR_DEPTH")),this._addPass(o,a,e,t,HX.MaterialPass.SHADOW_DEPTH_PASS,r,"HX_SHADOW_DEPTH_PASS")):this._addPass(o,a,e,t,i,r)},HX.HMT.prototype._addPass=function(t,e,i,n,r,o,a){if(e=HX.GLSLIncludeGeometryPass+e,a){var s=o+"#define "+a+"\n";t=s+t,e=s+e}var h=new HX.Shader(o+t,o+e),l=new HX.MaterialPass(h);if(i.hasOwnProperty("elementType")&&(l.elementType=HX.HMT._PROPERTY_MAP[i.elementType]),i.hasOwnProperty("cullMode")&&(l.cullMode=HX.HMT._PROPERTY_MAP[i.cullMode]),i.hasOwnProperty("depthTest")&&(l.depthTest=HX.HMT._PROPERTY_MAP[i.depthTest]),i.hasOwnProperty("writeDepth")&&(l.writeDepth=i.writeDepth),i.hasOwnProperty("blend")){var _=new HX.BlendState,c=i.blend;c.hasOwnProperty("source")&&(_.srcFactor=HX.HMT._PROPERTY_MAP[c.source]),c.hasOwnProperty("destination")&&(_.dstFactor=HX.HMT._PROPERTY_MAP[c.destination]),c.hasOwnProperty("operator")&&(_.operator=HX.HMT._PROPERTY_MAP[c.operator]),l.blendState=_}n.setPass(r,l)},HX.HMT.prototype._applyUniforms=function(t,e){if(t.uniforms)for(var i in t.uniforms)if(t.uniforms.hasOwnProperty(i)){var n=t.uniforms[i];isNaN(n)?e.setUniform(i,{x:n[0],y:n[1],z:n[2],w:n[3]},!1):e.setUniform(i,n,!1)}},HX.HMT.prototype._loadTextures=function(t,e){var i=[];for(var n in t.textures)t.textures.hasOwnProperty(n)&&i.push(this._correctURL(t.textures[n]));var r=new HX.BulkAssetLoader,o=this;r.onComplete=function(){for(var i in t.textures)t.textures.hasOwnProperty(i)&&e.setTexture(i,r.getAsset(o._correctURL(t.textures[i])));o._notifyComplete(e)},r.onFail=function(t){o._notifyFailure(t)},r.load(i,HX.JPG)},HX.HMT._PROPERTY_MAP=null,HX.HMT._initPropertyMap=function(){HX.HMT._PROPERTY_MAP=HX.HMT._PROPERTY_MAP||{back:HX_GL.BACK,front:HX.CullMode.FRONT,both:HX.CullMode.ALL,none:null,lines:HX.ElementType.LINES,points:HX.ElementType.POINTS,triangles:HX.ElementType.TRIANGLES,one:HX.BlendFactor.ONE,zero:HX.BlendFactor.ZERO,sourceColor:HX.BlendFactor.SOURCE_COLOR,oneMinusSourceColor:HX.BlendFactor.ONE_MINUS_SOURCE_COLOR,sourceAlpha:HX.BlendFactor.SOURCE_ALPHA,oneMinusSourceAlpha:HX.BlendFactor.ONE_MINUS_SOURCE_ALPHA,destinationAlpha:HX.BlendFactor.DST_ALPHA,oneMinusDestinationAlpha:HX.BlendFactor.ONE_MINUS_DESTINATION_ALPHA,destinationColor:HX.BlendFactor.DESTINATION_COLOR,sourceAlphaSaturate:HX.BlendFactor.SOURCE_ALPHA_SATURATE,add:HX.BlendOperation.ADD,subtract:HX.BlendOperation.SUBTRACT,reverseSubtract:HX.BlendOperation.REVERSE_SUBTRACT,additive:HX.TransparencyMode.ADDITIVE,alpha:HX.TransparencyMode.ALPHA,opaque:HX.TransparencyMode.OPAQUE,always:HX.Comparison.ALWAYS,disabled:HX.Comparison.DISABLED,equal:HX.Comparison.EQUAL,greater:HX.Comparison.GREATER,greaterEqual:HX.Comparison.GREATER_EQUAL,less:HX.Comparison.LESS,lessEqual:HX.Comparison.LESS_EQUAL,never:HX.Comparison.NEVER,notEqual:HX.Comparison.NOT_EQUAL}},HX.HSC=function(){HX.Importer.call(this,HX.Scene)},HX.HSC.prototype=Object.create(HX.Importer.prototype),HX.HSC.prototype.parse=function(t,e){var t=JSON.parse(t);if("0.1"!==t.version)throw"Incompatible file format version!";var i=this._processObjects(t.objects,e);this._processConnections(t.connections,i),this._notifyComplete(e)},HX.HSC.prototype._processObjects=function(t,e){for(var i=[],n=t.length,r=0;n>r;++r){var o,a=t[r];switch(a.type){case"scene":o=e;break;case"mesh":o=this._processMesh(a);break;case"model":o=new HX.ModelData;break;case"modelinstance":o=this._processModelInstance(a);break;case"material":o=this._processMaterial(a);break;case"dirlight":o=this._processDirLight(a);break;case"ptlight":o=this._processPointLight(a);break;case"amblight":o=this._processAmbientLight(a);break;default:console.warn("Unsupported object of type "+a.type),o=null}o&&(o.name=a.name,i[a.id]=o),i.push(o)}return i},HX.HSC.prototype._processMesh=function(t){var e=new HX.MeshData,i=t.numVertices,n=t.vertexData,r=[];for(var o in n)if(n.hasOwnProperty(o)){var a=n[o];e.addVertexAttribute(o,a.length/i,0),r.push(a)}var s=0,h=!n.hasOwnProperty("hx_normal"),l=!n.hasOwnProperty("hx_tangent");h&&(e.addVertexAttribute("hx_normal",3),s|=HX.NormalTangentGenerator.MODE_NORMALS),l&&(e.addVertexAttribute("hx_tangent",4),s|=HX.NormalTangentGenerator.MODE_TANGENTS);for(var _=[],c=0,u=0;i>u;++u){for(var f=0;f<r.length;++f)for(var d=r[f],p=d.length/i,m=0;p>m;++m)_[c++]=d[u*p+m];var X=h?3:0;X+=l?4:0;for(var f=0;X>f;++f)_[c++]=0}if(e.setIndexData(t.indexData),e.setVertexData(_,0),s){var H=new HX.NormalTangentGenerator;H.generate(e,s)}return e},HX.HSC.prototype._processMaterial=function(t){var e=new HX.PBRMaterial;return t.hasOwnProperty("color")&&(e.color=new HX.Color(t.color[0],t.color[1],t.color[2])),t.hasOwnProperty("metallicness")&&(e.metallicness=t.metallicness),t.hasOwnProperty("specularNormalReflection")&&(e.specularNormalReflection=t.specularNormalReflection),t.hasOwnProperty("refractiveRatio")&&(e.refractiveRatio=t.refractiveRatio,e.refract=1!==t.refractiveRatio),t.hasOwnProperty("transparent")&&(e.transparent=t.transparent),t.hasOwnProperty("alpha")&&(e.alpha=t.alpha),t.hasOwnProperty("alphaThreshold")&&(e.alphaThreshold=t.alphaThreshold),t.hasOwnProperty("roughness")&&e.setRoughness(t.roughness),t.hasOwnProperty("minRoughness")&&(e.minRoughness=t.minRoughness),t.hasOwnProperty("maxRoughness")&&(e.maxRoughness=t.maxRoughness),t.hasOwnProperty("specularMapMode")&&(e.specularMapMode=t.specularMapMode),e},HX.HSC.prototype._processDirLight=function(t){var e=new HX.DirectionalLight;return this._processLight(t,e),t.hasOwnProperty("direction")&&(e.direction=new HX.Float4(t.direction[0],t.direction[1],t.direction[2])),t.hasOwnProperty("shadows")&&(e.castShadows=t.shadows),e},HX.HSC.prototype._processPointLight=function(t){var e=new HX.PointLight;return this._processLight(t,e),t.hasOwnProperty("radius")&&(e.radius=t.radius),e},HX.HSC.prototype._processAmbientLight=function(t){var e=new HX.AmbientLight;return this._processLight(t,e),e},HX.HSC.prototype._processLight=function(t,e){this._processSceneNode(t,e),t.hasOwnProperty("color")&&(e.color=new HX.Color(t.color[0],t.color[1],t.color[2])),t.hasOwnProperty("intensity")&&(e.intensity=t.intensity)},HX.HSC.prototype._processModelInstance=function(t){var e=new HX.ModelInstance;return this._processSceneNode(t,e),e},HX.HSC.prototype._processSceneNode=function(t,e){t.hasOwnProperty("matrix")?e.transform=new HX.Matrix4x4(t.matrix):(t.hasOwnProperty("position")&&(e.position.x=t.position[0],e.position.y=t.position[1],e.position.z=t.position[2]),t.hasOwnProperty("rotation")&&(e.rotation.x=t.rotation[0],e.rotation.y=t.rotation[1],e.rotation.z=t.rotation[2],e.rotation.w=t.rotation[3]),t.hasOwnProperty("scale")&&(e.scale.x=t.scale[0],e.scale.y=t.scale[1],e.scale.z=t.scale[2]))},HX.HSC.prototype._processConnections=function(t,e){for(var i=[],n=[],r=t.length,o=0;r>o;++o){var a=t[o].p,s=t[o].c,h=e[a],l=e[s];l instanceof HX.MeshData?h.addMeshData(l):l instanceof HX.ModelData?i.push({c:s,p:t[o].p}):l instanceof HX.SceneNode?h.attach(l):l instanceof HX.Material&&(n[a]=n[a]||[],n[a].push(l))}r=i.length;for(var o=0;r>o;++o){var _=e[i[o].p],c=e[i[o].c],u=new HX.Model(c);_.init(u,n[i[o].p])}},HX.JPG_EQUIRECTANGULAR=function(){HX.Importer.call(this,HX.TextureCube,HX.Importer.TYPE_IMAGE)},HX.JPG_EQUIRECTANGULAR.prototype=Object.create(HX.Importer.prototype),HX.JPG_EQUIRECTANGULAR.prototype.parse=function(t,e){var i=new HX.Texture2D;i.wrapMode=HX.TextureWrapMode.REPEAT,i.uploadImage(t,t.naturalWidth,t.naturalHeight,!0);var n=void 0===this.options.generateMipmaps?!0:this.options.generateMipmaps;HX.TextureUtils.equirectangularToCube(i,this.options.size,n,e),i.dispose(),this._notifyComplete(e)},HX.PNG_EQUIRECTANGULAR=HX.JPG_EQUIRECTANGULAR,HX.JPG=function(){HX.Importer.call(this,HX.Texture2D,HX.Importer.TYPE_IMAGE)},HX.JPG.prototype=Object.create(HX.Importer.prototype),HX.JPG.prototype.parse=function(t,e){var i=void 0===this.options.generateMipmaps?!0:this.options.generateMipmaps;e.uploadImage(t,t.naturalWidth,t.naturalHeight,i),this._notifyComplete(e)},HX.PNG=HX.JPG,HX.FPSCounter=function(t){this._numFrames=t||1,this._frames=[],this._maxFPS=void 0,this._minFPS=void 0,this._currentFPS=0,this._averageFPS=0,this._runningSum=0;for(var e=0;e<this._numFrames;++e)this._frames[e]=0;this._index=0},HX.FPSCounter.prototype={update:function(t){this._currentFPS=1e3/t,this._runningSum-=this._frames[this._index],this._runningSum+=this._currentFPS,this._averageFPS=this._runningSum/this._numFrames,this._frames[this._index++]=this._currentFPS,this._index==this._numFrames&&(this._index=0),(void 0===this._maxFPS||this._currentFPS>this._maxFPS)&&(this._maxFPS=this._currentFPS),(void 0===this._minFPS||this._currentFPS<this._minFPS)&&(this._minFPS=this._currentFPS)},get lastFrameFPS(){return Math.round(this._currentFPS)},get averageFPS(){return Math.round(this._averageFPS)},get maxFPS(){return Math.round(this._maxFPS)},get minFPS(){return Math.round(this._minFPS)},reset:function(){this._maxFPS=void 0,this._minFPS=void 0}},function(){for(var t=0,e=["ms","moz","webkit","o"],i=0;i<e.length&&!window.requestAnimationFrame;++i)window.requestAnimationFrame=window[e[i]+"RequestAnimationFrame"],window.cancelAnimationFrame=window[e[i]+"CancelAnimationFrame"]||window[e[i]+"CancelRequestAnimationFrame"];window.requestAnimationFrame||(window.requestAnimationFrame=function(e,i){var n=(new Date).getTime(),r=Math.max(0,16-(n-t)),o=window.setTimeout(function(){e(n+r)},r);return t=n+r,o}),window.cancelAnimationFrame||(window.cancelAnimationFrame=function(t){clearTimeout(t)})}(),HX.FrameTicker=function(){this._isRunning=!1,this._callback=void 0,this._dt=0,this._currentTime=0,this.onTick=new HX.Signal},HX.FrameTicker.prototype={constructor:HX.FrameTicker,start:function(t){this._isRunning||(this._callback=t,this._currentTime=this._getTime(),this._isRunning=!0,this._tick(),this._tick._this=this)},stop:function(){this._isRunning=!1},get dt(){return this._dt},get time(){return this._currentTime},_tick:function(){if(this._isRunning){self.requestAnimationFrame(this._tick.bind(this));var t=this._getTime();this._dt=t-this._currentTime,this._dt!==this._dt&&(this._dt=0),this._currentTime=t,this._callback&&this._callback(this._dt),this.onTick.dispatch(this._dt)}},_getTime:function(){return void 0===self.performance||void 0==self.performance.now?Date.now():self.performance.now()}},HX.MultiViewProject=function(){this._initialized=!1},HX.MultiViewProject.prototype={onInit:function(){},onUpdate:function(t){},init:function(t,e){if(this._initialized)throw new Error("Already initialized project!");HX.init(t,e),this._resizeCanvas(),this._renderer=new HX.MultiRenderer;var i=this;window.addEventListener("resize",function(){i._resizeCanvas.call(i)}),this.onInit(),this._initialized=!0,this.start()},addView:function(t){this._renderer.addView(t)},removeView:function(t){this._renderer.removeView(t)},start:function(){HX.onFrame.bind(this._update,this)},stop:function(){HX.onFrame.unbind(this._update)},get renderer(){return this._renderer},_update:function(t){HX._clearGLStats(),this.onUpdate(t),this._renderer.render(t)},_resizeCanvas:function(){this._canvas=document.getElementById("webglContainer"),this._canvas.width=this._canvas.clientWidth,this._canvas.height=this._canvas.clientHeight}},HX.NormalTangentGenerator=function(){this._meshData=null,this._mode=0,this._faceNormals=null,this._faceTangents=null,this._faceBitangents=null},HX.NormalTangentGenerator.MODE_NORMALS=1,HX.NormalTangentGenerator.MODE_TANGENTS=2,HX.NormalTangentGenerator.prototype={generate:function(t,e,i){void 0===i&&(i=!0),this._mode=void 0===e?HX.NormalTangentGenerator.MODE_NORMALS|HX.NormalTangentGenerator.MODE_TANGENTS:e,this._meshData=t,this._positionAttrib=t.getVertexAttribute("hx_position"),this._normalAttrib=t.getVertexAttribute("hx_normal"),this._tangentAttrib=t.getVertexAttribute("hx_tangent"),this._uvAttrib=t.getVertexAttribute("hx_texCoord"),this._positionStride=t.getVertexStride(this._positionAttrib.streamIndex),this._normalStride=t.getVertexStride(this._normalAttrib.streamIndex),this._tangentStride=t.getVertexStride(this._tangentAttrib.streamIndex),this._uvStride=t.getVertexStride(this._uvAttrib.streamIndex),this._calculateFaceVectors(i),this._calculateVertexVectors()},_calculateFaceVectors:function(t){var e=this._meshData._indexData.length;0!=(this._mode&HX.NormalTangentGenerator.MODE_NORMALS)&&(this._faceNormals=new Array(e)),0!=(this._mode&HX.NormalTangentGenerator.MODE_TANGENTS)&&(this._faceTangents=new Array(e),this._faceBitangents=new Array(e));for(var i=new HX.Float4,n=new HX.Float4,r=new HX.Float4,o=new HX.Float4,a=new HX.Float4,s=new HX.Float4,h=new HX.Float2,l=new HX.Float2,_=new HX.Float2,c=new HX.Float2,u=new HX.Float2,f=this._positionAttrib.offset,d=this._uvAttrib.offset,p=this._meshData.getVertexData(this._positionAttrib.streamIndex),m=this._meshData.getVertexData(this._uvAttrib.streamIndex),X=0;e>X;X+=3)this._getFloat3At(X,f,this._positionStride,o,p),this._getFloat3At(X+1,f,this._positionStride,a,p),this._getFloat3At(X+2,f,this._positionStride,s,p),this._getFloat2At(X,d,this._uvStride,h,m),this._getFloat2At(X+1,d,this._uvStride,l,m),this._getFloat2At(X+2,d,this._uvStride,_,m),a.subtract(o),s.subtract(o),this._faceNormals&&(i.cross(a,s),t||i.normalize(),this._faceNormals[X]=i.x,this._faceNormals[X+1]=i.y,this._faceNormals[X+2]=i.z),this._faceTangents&&(HX.Float2.subtract(l,h,c),HX.Float2.subtract(_,h,u),HX.Float4.scale(a,u.y,n),HX.Float4.scale(s,c.y,r),HX.Float4.subtract(n,r,i),i.lengthSqr>.001&&i.normalize(),this._faceTangents[X]=i.x,this._faceTangents[X+1]=i.y,this._faceTangents[X+2]=i.z,HX.Float4.scale(a,u.x,n),HX.Float4.scale(s,c.x,n),HX.Float4.subtract(r,n,i),this._faceBitangents[X]=i.x,this._faceBitangents[X+1]=i.y,this._faceBitangents[X+2]=i.z)},_calculateVertexVectors:function(){this._zeroVectors();for(var t=this._faceTangents?[]:null,e=this._meshData._indexData,i=this._normalAttrib.offset,n=this._tangentAttrib.offset,r=this._meshData.getVertexData(this._normalAttrib.streamIndex),o=this._meshData.getVertexData(this._tangentAttrib.streamIndex),a=e.length,s=0;a>s;++s){var h=e[s],l=i+h*this._normalStride,_=n+h*this._tangentStride,c=3*h,u=3*Math.floor(s/3);this._faceNormals&&(r[l]+=this._faceNormals[u],r[l+1]+=this._faceNormals[u+1],r[l+2]+=this._faceNormals[u+2]),this._faceTangents&&(o[_]+=this._faceTangents[u],o[_+1]+=this._faceTangents[u+1],o[_+2]+=this._faceTangents[u+2],t[c]+=this._faceBitangents[u],t[c+1]+=this._faceBitangents[u+1],t[c+2]+=this._faceBitangents[u+2])}this._normalize(t)},_zeroVectors:function(){for(var t=this._meshData.getVertexData(this._normalAttrib.streamIndex),e=this._meshData.getVertexData(this._tangentAttrib.streamIndex),i=this._meshData.getVertexStride(this._normalAttrib.streamIndex),n=this._meshData.getVertexStride(this._tangentAttrib.streamIndex),r=t.length/i,o=this._normalAttrib.offset,a=this._tangentAttrib.offset,s=0;r>s;++s)this._mode&HX.NormalTangentGenerator.MODE_NORMALS&&(t[o]=0,t[o+1]=0,t[o+2]=0),this._mode&HX.NormalTangentGenerator.MODE_TANGENTS&&(e[a]=0,e[a+1]=0,e[a+2]=0),o+=i,a+=n},_normalize:function(t){for(var e=this._meshData.getVertexData(this._normalAttrib.streamIndex),i=this._meshData.getVertexData(this._tangentAttrib.streamIndex),n=e.length/this._normalStride,r=this._normalAttrib.offset,o=this._tangentAttrib.offset,a=0,s=new HX.Float4,h=new HX.Float4,l=new HX.Float4,_=new HX.Float4,c=0;n>c;++c)s.x=e[r],s.y=e[r+1],s.z=e[r+2],this._mode&HX.NormalTangentGenerator.MODE_NORMALS&&(s.normalize(),e[r]=s.x,e[r+1]=s.y,e[r+2]=s.z),this._mode&HX.NormalTangentGenerator.MODE_TANGENTS&&(h.x=i[o],h.y=i[o+1],h.z=i[o+2],h.lengthSqr<1e-4?h.set(1,1,1,1):h.normalize(),l.x=t[a],l.y=t[a+1],l.z=t[a+2],_.cross(h,s),i[o]=h.x,i[o+1]=h.y,i[o+2]=h.z,i[o+3]=HX.dot3(l,_)>0?1:-1),r+=this._normalStride,o+=this._tangentStride},_getFloat3At:function(t,e,i,n,r){var o=this._meshData._indexData,a=e+o[t]*i;n.x=r[a],n.y=r[a+1],n.z=r[a+2]},_getFloat2At:function(t,e,i,n,r){var o=this._meshData._indexData,a=e+o[t]*i;n.x=r[a],n.y=r[a+1]}},HX.SimpleProject=function(){this._initialized=!1},HX.SimpleProject.prototype={onInit:function(){},onUpdate:function(t){},init:function(t,e){if(this._initialized)throw new Error("Already initialized project!");HX.init(t,e),this._canvas=t,this._resizeCanvas(),this._scene=new HX.Scene,this._camera=new HX.PerspectiveCamera,this._scene.attach(this._camera),this._renderer=new HX.Renderer;var i=this;window.addEventListener("resize",function(){i._resizeCanvas()}),this.onInit(),this._initialized=!0,this.start()},start:function(){HX.onFrame.bind(this._update,this)},stop:function(){HX.onFrame.unbind(this._update)},get renderer(){return this._renderer},get scene(){return this._scene},set scene(t){this._scene.detach(this._camera),this._scene=t,this._scene.attach(this._camera)},get camera(){return this._camera},set camera(t){if(this._scene.detach(this._camera),this._camera=t,this._camera._parent){if(this._camera._scene!==this._scene)throw new Error("Camera attached to a different scene!")}else this._scene.attach(this._camera)},_update:function(t){HX._clearGLStats(),this.onUpdate(t),this._renderer.render(this._camera,this._scene,t)},_resizeCanvas:function(){var t=window.devicePixelRatio||1;this._canvas.width=this._canvas.clientWidth*t,this._canvas.height=this._canvas.clientHeight*t}},HX.StatsDisplay=function(t){this._fpsCounter=new HX.FPSCounter(30),this._div=document.createElement("div"),this._div.style.position="absolute",this._div.style.left="5px",this._div.style.top="5px",this._div.style.width="100px",this._div.style.background="rgba(0, 0, 0, .5)",this._div.style.padding="10px 15px 10px 15px",this._div.style.color="#ffffff",this._div.style.fontFamily='"Lucida Console", Monaco, monospace',this._div.style.fontSize="small",t=t||document.getElementsByTagName("body")[0],t.appendChild(this._div),HX.onPreFrame.bind(this._update,this)},HX.StatsDisplay.prototype={remove:function(){this._div.parentNode.removeChild(this._div)},_update:function(t){this._fpsCounter.update(t),this._div.innerHTML="FPS: "+this._fpsCounter.averageFPS+"<br/>Draws: "+HX._glStats.numDrawCalls+"<br/>Tris: "+HX._glStats.numTriangles+"<br/>Clears: "+HX._glStats.numClears+"<br/><br/><div style='font-size:x-small; width:100%; text-align:right;'>Helix "+HX.VERSION+"<br/>Hash 0x"+HX.BUILD_HASH.toString(16)+"<br/></div>"}},FloatController=function(){HX.Component.call(this),this._speed=1,this._speedMultiplier=2,this._torquePitch=0,this._torqueYaw=0,this._localVelocity=new HX.Float4(0,0,0,0),this._localAcceleration=new HX.Float4(0,0,0,0),this._pitch=0,this._yaw=0,this._mouseX=0,this._mouseY=0,this._torque=1,this._friction=5,this._maxAcceleration=this._speed,this._maxVelocity=this._speed,this._onKeyDown=null,this._onKeyUp=null},FloatController.prototype=Object.create(HX.Component.prototype,{speed:{get:function(){return this._speed},set:function(t){this._speed=t,this._maxAcceleration=t,this._maxVelocity=t}},shiftMultiplier:{get:function(){return this._speedMultiplier},set:function(t){this._speedMultiplier=t}},pitch:{get:function(){return this._pitch},set:function(t){this._pitch=t}},yaw:{get:function(){return this._yaw},set:function(t){this._yaw=t}},roll:{get:function(){return this._roll},set:function(t){this._roll=t}},torque:{get:function(){return this._torque},set:function(t){this._torque=t}},friction:{get:function(){return this._friction},set:function(t){this._friction=t}}}),FloatController.prototype.onAdded=function(t){var e=this;this._onKeyDown=function(t){var i="which"in t?t.which:t.keyCode;switch(i){case 16:e._maxVelocity=e._speed*e._speedMultiplier,e._maxAcceleration=e._speed*e._speedMultiplier;break;case 87:e._setForwardForce(-1);break;case 83:e._setForwardForce(1);break;case 65:e._setStrideForce(-1);break;case 68:e._setStrideForce(1)}},this._onKeyUp=function(t){var i="which"in t?t.which:t.keyCode;switch(i){case 16:e._maxVelocity=e._speed,e._maxAcceleration=e._speed;break;case 87:case 83:e._setForwardForce(0);break;case 65:case 68:e._setStrideForce(0)}},this._onMouseMove=function(t){t=t||window.event,e._addPitch(-(e._mouseY-t.clientY)/100),e._addYaw((e._mouseX-t.clientX)/100),e._mouseX=t.clientX,e._mouseY=t.clientY},this._onMouseDown=function(t){e._mouseX=t.clientX,e._mouseY=t.clientY,document.addEventListener("mousemove",e._onMouseMove)},this._onMouseUp=function(t){document.removeEventListener("mousemove",e._onMouseMove)},document.addEventListener("keydown",this._onKeyDown),document.addEventListener("keyup",this._onKeyUp),document.addEventListener("mousedown",this._onMouseDown),document.addEventListener("mouseup",this._onMouseUp)},FloatController.prototype.onRemoved=function(t){document.removeEventListener("keydown",this._onKeyDown),document.removeEventListener("keyup",this._onKeyUp),document.removeEventListener("mousemove",this._onMouseMove),document.removeEventListener("mousedown",this._onMouseDown),document.removeEventListener("mouseup",this._onMouseUp)},FloatController.prototype.onUpdate=function(t){var e=.001*t,i=HX.Float4.scale(this._localVelocity,this._friction*e);this._localVelocity.subtract(i);var n=HX.Float4.scale(this._localAcceleration,this._maxAcceleration*e);this._localVelocity.add(n);var r=this._localVelocity.length;r>this._maxVelocity&&this._localVelocity.scale(this._maxVelocity/r),this._pitch+=this._torquePitch,this._yaw+=this._torqueYaw,this._pitch<.5*-Math.PI?this._pitch=.5*-Math.PI:this._pitch>.5*Math.PI&&(this._pitch=.5*Math.PI);var o=this.entity.matrix,a=o.getColumn(3),s=HX.Float4.scale(this._localVelocity,e);o.fromRotationPitchYawRoll(this._pitch,this._yaw,0),o.prependTranslation(s),o.appendTranslation(a),this.entity.matrix=o},FloatController.prototype._setForwardForce=function(t){this._localAcceleration.z=t*this._maxAcceleration},FloatController.prototype._setStrideForce=function(t){this._localAcceleration.x=t*this._maxAcceleration},FloatController.prototype._setTorquePitch=function(t){this._torquePitch=t*this._torque},FloatController.prototype._setTorqueYaw=function(t){this._torqueYaw=t*this._torque},FloatController.prototype._addPitch=function(t){this._pitch+=t},FloatController.prototype._addYaw=function(t){this._yaw+=t},OrbitController=function(t){HX.Component.call(this),this._coords=new HX.Float4(.75*-Math.PI,.4*Math.PI,1,0),this._localAcceleration=new HX.Float4(0,0,0,0),this._localVelocity=new HX.Float4(0,0,0,0),this.maxRadius=4,this.minRadius=.1,this.dampen=.9,this.lookAtTarget=t||new HX.Float4(0,0,0,1),this._oldMouseX=0,this._oldMouseY=0,this._onMouseWheel=null,this._onMouseMove=null},OrbitController.prototype=Object.create(HX.Component.prototype,{radius:{get:function(){return this._coords.z},set:function(t){this._coords.z=t}},azimuth:{get:function(){return this._coords.x;

},set:function(t){this._coords.x=t}},polar:{get:function(){return this._coords.y},set:function(t){this._coords.y=t}}}),OrbitController.prototype.onAdded=function(){var t=this;this._onMouseWheel=function(e){t.setZoomImpulse(1e-4*-e.wheelDelta)},this._onMouseMove=function(e){var i=1&e.buttons;if(i){var n=e.screenX-this._oldMouseX,r=e.screenY-this._oldMouseY;t.setAzimuthImpulse(.005*n),t.setPolarImpulse(.005*-r)}this._oldMouseX=e.screenX,this._oldMouseY=e.screenY},document.addEventListener("mousewheel",this._onMouseWheel),document.addEventListener("mousemove",this._onMouseMove)},OrbitController.prototype.onRemoved=function(){document.removeEventListener("mousewheel",this._onMouseWheel),document.removeEventListener("mousemove",this._onMouseMove)},OrbitController.prototype.onUpdate=function(t){this._localVelocity.x*=this.dampen,this._localVelocity.y*=this.dampen,this._localVelocity.z*=this.dampen,this._localVelocity.x+=this._localAcceleration.x,this._localVelocity.y+=this._localAcceleration.y,this._localVelocity.z+=this._localAcceleration.z,this._localAcceleration.x=0,this._localAcceleration.y=0,this._localAcceleration.z=0,this._coords.add(this._localVelocity),this._coords.y=HX.clamp(this._coords.y,.1,Math.PI-.1),this._coords.z=HX.clamp(this._coords.z,this.minRadius,this.maxRadius);var e=this.entity.matrix,i=new HX.Float4;i.fromSphericalCoordinates(this._coords.z,this._coords.x,this._coords.y),i.add(this.lookAtTarget),e.lookAt(this.lookAtTarget,i,HX.Float4.Y_AXIS),this.entity.matrix=e},OrbitController.prototype.setAzimuthImpulse=function(t){this._localAcceleration.x=t},OrbitController.prototype.setPolarImpulse=function(t){this._localAcceleration.y=t},OrbitController.prototype.setZoomImpulse=function(t){this._localAcceleration.z=t},HX.Debug={printShaderCode:function(t){for(var e=t.split("\n"),i="",n=0;n<e.length;++n)i+=n+1+":	"+e[n]+"\n";console.log(i)}},HX.BUILD_HASH=3495;